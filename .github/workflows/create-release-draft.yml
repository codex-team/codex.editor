name: Create release draft

on:
  pull_request:
    branches:
      - next
    types: [closed]

jobs:
  release-draft:
    if: github.event.pull_request.merged == true &&
      | github.event.label.name == 'release' &&
      | github.event.label.name == 'pre-release'
    runs-on: ubuntu-latest
    steps:
      # Checkout to target branch
      - uses: actions/checkout@v2
        with:
          # Pull submodules
          submodules: 'recursive'

      # Setup node environment
      - uses: actions/setup-node@v1
        with:
          node-version: 15
          registry-url: https://registry.npmjs.org/

      # Prepare, build and publish project
      - name: Install dependencies
        run: yarn

      - name: Build output files
        run: yarn build

      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package.outputs.version }}
          release_name: v${{ steps.package.outputs.version }}
          body: "${{ github.event.pull_request.title }} #${{ github.event.pull_request.number }}"
          draft: true
          prerelease: ${{ github.event.label.name != 'release' }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/editor.js
          asset_name: editor.js
          asset_content_type: application/javascript

#  notify:
#    needs: publish
#    runs-on: ubuntu-latest
#    steps:
#      # Checkout to target branch
#      - uses: actions/checkout@v2
#
#      - name: Get package info
#        id: package
#        uses: codex-team/action-nodejs-package-info@v1
#
#      - name: Send a message
#        uses: codex-team/action-codexbot-notify@v1
#        with:
#          webhook: ${{ secrets.CODEX_BOT_NOTIFY_EDITORJS_PUBLIC_CHAT }}
#          message: 'ðŸ“¦ [${{ steps.package.outputs.name }}](${{ steps.package.outputs.npmjs-link }}) ${{ steps.package.outputs.version }} was published'
#          parse_mode: 'markdown'
#          disable_web_page_preview: true
