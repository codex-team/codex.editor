{"version":3,"sources":["webpack:///webpack/bootstrap b0d9b144b41a8e5bb0ba","webpack:///./index.js","webpack:///./editor.js","webpack:///./modules/core.js","webpack:///./modules/ui.js","webpack:///./modules/transport.js","webpack:///./modules/renderer.js","webpack:///./modules/saver.js","webpack:///./modules/content.js","webpack:///./modules/toolbar/toolbar.js","webpack:///./modules/toolbar/settings.js","webpack:///./modules/toolbar/inline.js","webpack:///./modules/toolbar/toolbox.js","webpack:///./modules/tools.js","webpack:///./modules/callbacks.js","webpack:///./modules/draw.js","webpack:///./modules/caret.js","webpack:///./modules/notifications.js","webpack:///./modules/parser.js"],"names":["editor","require","module","exports","codex","init","core","ui","transport","renderer","saver","content","toolbar","tools","callback","draw","caret","notifications","parser","settings","textareaId","uploadImagesUrl","initialBlockPlugin","nodes","textarea","wrapper","inlineToolbar","buttons","actions","toolbox","plusButton","showSettingsButton","showTrashButton","blockSettings","pluginSettings","defaultSettings","toolbarButtons","redactor","state","jsonOutput","blocks","inputs","start","userSettings","prepare","then","make","addTools","bindEvents","preparePlugins","makeBlocksFromData","saveInputs","catch","error","log","Promise","resolve","reject","data","document","getElementById","undefined","Error","msg","type","arg","window","console","e","insertAfter","target","element","parentNode","insertBefore","nextSibling","nodeTypes","TAG","TEXT","COMMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","el","nodeType","ajax","url","XMLHTTP","XMLHttpRequest","ActiveXObject","success_function","params","obj","async","success","test","encodeURIComponent","withCredentials","beforeSend","call","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","importScript","scriptPath","instanceName","script","createElement","src","defer","id","head","appendChild","className","BLOCK_CLASSNAME","BLOCK_CONTENT","BLOCK_STRETCHED","BLOCK_HIGHLIGHTED","BLOCK_IN_FEED_MODE","SETTINGS_ITEM","toolbarContent","ceBlock","blockButtons","alertsHolder","body","settingsButton","makeRemoveBlockButton","pluginsSettings","makeInlineToolbar","addDefaultSettings","container","inlineToolbarButtons","inlineToolbarActions","tool","tool_button","name","displayInToolbox","iconClassname","toolbarButton","addInlineToolbarTools","bold","icon","command","italic","underline","link","toolButton","toolbarButtonInline","setInlineToolbarButtonBehaviour","addEventListener","errorMsg","lineNumber","errorThrown","event","globalKeydown","globalKeyup","redactorClicked","plusButtonClicked","showSettingsButtonClicked","redactorInputEvent","button","toolbarButtonClicked","addBlockHandlers","block","blockKeydown","blockPaste","inline","show","elements","querySelectorAll","addInitialBlock","initialBlockType","initialBlock","render","setAttribute","insertBlock","workingNodeChanged","toolClicked","input","arguments","fileSelected","clearInput","files","filesLength","length","formdData","FormData","file","i","append","selectAndUpload","args","click","xhr","onload","items","appendBlocks","nodeSequence","index","appendNodeAtIndex","getNodeAsync","createBlockFromData","blockData","blocksList","pluginName","cover","stretched","isStretched","saveBlocks","html","innerHTML","childNodes","makeQueue","queue","getBlockData","makeFormDataFromBlocks","dataset","save","blockContent","pluginsContent","savedData","output","classList","contains","push","currentNode","sync","getNodeFocused","selection","getSelection","focused","anchorNode","focusNode","parentElement","isFirstLevelBlock","parent","markBlock","add","clearMark","remove","getFirstLevelBlock","node","targetNode","replaceBlock","function_name","targetBlock","newBlock","replaceChild","needPlaceCaret","workingBlock","newBlockContent","blockType","composeNewBlock","currentInputIndex","getCurrentInputIndex","editableElement","querySelector","emptyText","createTextNode","set","move","showPlusButton","setTimeout","setToNextBlock","switchBlock","blockToReplace","newBlockComposed","getDeepestTextNodeFromPosition","position","blockChilds","text","textContent","trim","removeChild","looking_from_start","getRange","getRangeAt","splitBlock","inputIndex","anchorNodeText","caretOffset","anchorOffset","textBeforeCaret","textNodeBeforeCaret","textAfterCaret","textNodeAfterCaret","currentBlock","substring","previousChilds","nextChilds","reachedCurrent","child","previousChildsLength","nextChildsLength","newNode","NEW_BLOCK_TYPE","mergeBlocks","targetInputIndex","targetInput","currentInputContent","paste","mutation","workingNode","allowedToPaste","sanitize","addedNodes","pasteTextContent","textNode","dfs","clearStyles","href","blockTags","allowedTags","needReplace","includes","tagName","isDisplayedAsBlock","replace","getAttribute","attributes","removeAttribute","sanitized","defaultToolbarHeight","defaultOffset","opened","current","close","toggle","hidePlusButton","toolbarHeight","clientHeight","newYCoordinate","offsetTop","style","transform","Math","floor","hideRemoveActions","setting","toolType","feedModeToggler","makeFeedModeToggler","isFeedModeActivated","updateFeedMode","removeBlockWrapper","settingButton","actionWrapper","confirmAction","cancelAction","removeButtonClicked","confirmRemovingRequest","cancelRemovingRequest","action","showRemoveActions","firstLevelBlocksCount","buttonsOpened","actionsOpened","wrappersOffset","storedSelection","selectedText","getSelectionText","showButtons","getWrappersOffset","coords","getSelectionCoords","newCoordinateX","newCoordinateY","offsetHeight","x","left","y","scrollY","top","closeButtons","closeAction","createLinkAction","defaultToolAction","forEach","hightlight","offset","getOffset","_x","_y","isNaN","offsetLeft","clientLeft","clientTop","offsetParent","sel","range","createRange","collapse","boundingLeft","boundingTop","rangeCount","cloneRange","getClientRects","rect","toString","showActions","isActive","isLinkActive","editable","saveSelection","restoreSelection","inputForLink","focus","preventDefault","keyCode","setAnchor","value","stopImmediatePropagation","clearRange","dataType","execCommand","containerEl","preSelectionRange","selectNodeContents","setEnd","startContainer","startOffset","end","savedSel","charIndex","setStart","nodeStack","foundStart","stop","nextCharIndex","pop","removeAllRanges","addRange","queryCommandState","setButtonHighlighted","removeButtonsHighLight","tag","leaf","currentTool","Object","barButtons","nextToolIndex","hiddenToolsAmount","toolToSelect","indexOf","toolIsLastInToolbox","UNREPLACEBLE_TOOLS","appendCallback","setToBlock","callbacks","redactorSyncTimeout","tabKeyPressed","enterKeyPressed","escapeKeyPressed","defaultKeyPressed","arrowKeyPressed","firstLevelBlocksArea","clickedOnFirstLevelBlockArea","enterPressedOnBlock","contentEditable","saveCurrentInputIndex","isEnterPressedOnToolbar","enableLineBreaks","shiftKey","isLastTextNode","currentSelection","currentSelectedNode","caretAtTheEndOfText","atTheEnd","isTextNodeHasParentBetweenContenteditable","indexOfLastInput","firstLevelBlock","inputIsEmpty","currentNodeType","flag","clearTimeout","blockRightOrDownArrowPressed","backspacePressed","blockLeftOrUpArrowPressed","focusedNode","focusedNodeHolder","editableElementIndex","caretInLastChild","lastChild","deepestTextnode","caretInFirstChild","caretAtTheBeginning","firstChild","setToPreviousBlock","selectionLength","endOffset","atStart","_blockPaste","observer","MutationObserver","handlePasteEvents","config","childList","characterData","observe","mutations","currentToolType","bar","placeholder","div","toggler","classname","tool_icon","tool_title","properties","pluginsRender","cEditor","focusedNodeIndex","childs","nodeToSet","nextInput","emptyTextElement","assert","previousInput","lastChildNode","lengthOfLastChildNode","isFirstNode","isOffsetZero","message","notification","getSeparatedTextFromContent","split","insertPastedContent","parsedTextContent","parseTextareaContent","initialContent","getNodesFromString","appendNodesToRedactor","inputString","contentHolder","createBlockByDomNode","nodeList","item","storeBlockType","parentBlock","nodeContent","isPlainTextNode"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;;;AAIA;;AAEA,KAAIA,SAAS,mBAAAC,CAAQ,CAAR,CAAb;AACAC,QAAOC,OAAP,GAAiBH,MAAjB,C;;;;;;;;ACPA;;;;;AAKA,KAAII,QAAS,UAASA,KAAT,EAAe;;AAExB,SAAIC,OAAO,SAAPA,IAAO,GAAW;;AAElBD,eAAME,IAAN,GAAsB,mBAAAL,CAAQ,CAAR,CAAtB;AACAG,eAAMG,EAAN,GAAsB,mBAAAN,CAAQ,CAAR,CAAtB;AACAG,eAAMI,SAAN,GAAsB,mBAAAP,CAAQ,CAAR,CAAtB;AACAG,eAAMK,QAAN,GAAsB,mBAAAR,CAAQ,CAAR,CAAtB;AACAG,eAAMM,KAAN,GAAsB,mBAAAT,CAAQ,CAAR,CAAtB;AACAG,eAAMO,OAAN,GAAsB,mBAAAV,CAAQ,CAAR,CAAtB;AACAG,eAAMQ,OAAN,GAAsB,mBAAAX,CAAQ,CAAR,CAAtB;AACAG,eAAMS,KAAN,GAAsB,mBAAAZ,CAAQ,EAAR,CAAtB;AACAG,eAAMU,QAAN,GAAsB,mBAAAb,CAAQ,EAAR,CAAtB;AACAG,eAAMW,IAAN,GAAsB,mBAAAd,CAAQ,EAAR,CAAtB;AACAG,eAAMY,KAAN,GAAsB,mBAAAf,CAAQ,EAAR,CAAtB;AACAG,eAAMa,aAAN,GAAsB,mBAAAhB,CAAQ,EAAR,CAAtB;AACAG,eAAMc,MAAN,GAAsB,mBAAAjB,CAAQ,EAAR,CAAtB;AACH,MAfD;;AAiBA;;;;;AAKAG,WAAMe,QAAN,GAAiB;AACbN,gBAAY,CAAC,WAAD,EAAc,QAAd,EAAwB,SAAxB,EAAmC,MAAnC,EAA2C,OAA3C,EAAoD,MAApD,EAA4D,SAA5D,EAAuE,WAAvE,EAAoF,OAApF,CADC;AAEbO,qBAAY,cAFC;AAGbC,0BAAiB,oBAHJ;;AAKb;AACAC,6BAAoB;AANP,MAAjB;;AASA;;;;;AAKAlB,WAAMmB,KAAN,GAAc;AACVC,mBAAoB,IADV;AAEVC,kBAAoB,IAFV;AAGVb,kBAAoB,IAHV;AAIVc,wBAAoB;AAChBD,sBAAU,IADM;AAEhBE,sBAAU,IAFM;AAGhBC,sBAAU;AAHM,UAJV;AASVC,kBAAoB,IATV;AAUVZ,wBAAoB,IAVV;AAWVa,qBAAoB,IAXV;AAYVC,6BAAoB,IAZV;AAaVC,0BAAoB,IAbV;AAcVC,wBAAoB,IAdV;AAeVC,yBAAoB,IAfV;AAgBVC,0BAAoB,IAhBV;AAiBVC,yBAAoB,EAjBV,EAiBc;AACxBC,mBAAoB;AAlBV,MAAd;;AAqBA;;;;;AAKAjC,WAAMkC,KAAN,GAAc;AACVC,qBAAY,EADF;AAEVC,iBAAY,EAFF;AAGVC,iBAAY;AAHF,MAAd;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BArC,WAAMsC,KAAN,GAAc,UAAUC,YAAV,EAAwB;;AAElCtC;;AAEA,cAAKC,IAAL,CAAUsC,OAAV,CAAkBD,YAAlB;;AAEA;AAFA,UAGKE,IAHL,CAGU,KAAKtC,EAAL,CAAQuC,IAHlB,EAIKD,IAJL,CAIU,KAAKtC,EAAL,CAAQwC,QAJlB,EAKKF,IALL,CAKU,KAAKtC,EAAL,CAAQyC,UALlB,EAMKH,IANL,CAMU,KAAKtC,EAAL,CAAQ0C,cANlB,EAOKJ,IAPL,CAOU,KAAKrC,SAAL,CAAeoC,OAPzB,EAQKC,IARL,CAQU,KAAKpC,QAAL,CAAcyC,kBARxB,EASKL,IATL,CASU,KAAKtC,EAAL,CAAQ4C,UATlB,EAUKC,KAVL,CAUW,UAAUC,KAAV,EAAiB;AACpBjD,mBAAME,IAAN,CAAWgD,GAAX,CAAe,sCAAf,EAAuD,MAAvD,EAA+DD,KAA/D;AACH,UAZL;AAcH,MAlBD;;AAoBA,YAAOjD,KAAP;AAEH,EA3HW,CA2HT,EA3HS,CAAZ;;AA6HAF,QAAOC,OAAP,GAAiBC,KAAjB,C;;;;;;;;;;AClIA,KAAIE,OAAQ,UAASA,IAAT,EAAe;;AAEvB;;;;;;AAMAA,UAAKsC,OAAL,GAAe,UAAUD,YAAV,EAAwB;;AAEnC,gBAAO,IAAIY,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;;AAEzC,iBAAKd,YAAL,EAAmB;;AAEfvC,uBAAMe,QAAN,CAAeN,KAAf,GAAuB8B,aAAa9B,KAAb,IAAsBT,MAAMe,QAAN,CAAeN,KAA5D;AAEH;;AAED,iBAAI8B,aAAae,IAAjB,EAAuB;AACnBtD,uBAAMkC,KAAN,CAAYE,MAAZ,GAAqBG,aAAae,IAAlC;AACH;;AAEDtD,mBAAMmB,KAAN,CAAYC,QAAZ,GAAuBmC,SAASC,cAAT,CAAwBjB,aAAavB,UAAb,IAA2BhB,MAAMe,QAAN,CAAeC,UAAlE,CAAvB;;AAEA,iBAAI,QAAOhB,MAAMmB,KAAN,CAAYC,QAAnB,MAAgCqC,SAAhC,IAA6CzD,MAAMmB,KAAN,CAAYC,QAAZ,KAAyB,IAA1E,EAAgF;AAC5EiC,wBAAOK,MAAM,mCAAmCnB,aAAavB,UAAtD,CAAP;AACH,cAFD,MAEO;AACHoC;AACH;AAEJ,UApBM,CAAP;AAsBH,MAxBD;;AA0BA;;;;AAIAlD,UAAKgD,GAAL,GAAW,UAAUS,GAAV,EAAeC,IAAf,EAAqBC,GAArB,EAA0B;;AAEjCD,gBAAOA,QAAQ,KAAf;;AAEA,aAAI,CAACC,GAAL,EAAU;AACNA,mBAAOF,OAAO,WAAd;AACAA,mBAAO,yBAAP;AACH,UAHD,MAGO;AACHA,mBAAO,0BAA0BA,GAAjC;AACH;;AAED,aAAG;AACC,iBAAK,aAAaG,MAAb,IAAuBC,QAASH,IAAT,CAA5B,EAA6C;AACzC,qBAAKC,GAAL,EAAWE,QAASH,IAAT,EAAiBD,GAAjB,EAAuBE,GAAvB,EAAX,KACKE,QAASH,IAAT,EAAiBD,GAAjB;AACR;AAEJ,UAND,CAMC,OAAMK,CAAN,EAAQ,CAAE;AAEd,MAnBD;;AAqBA;;;;;AAKA9D,UAAK+D,WAAL,GAAmB,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AAC1CD,gBAAOE,UAAP,CAAkBC,YAAlB,CAA+BF,OAA/B,EAAwCD,OAAOI,WAA/C;AACH,MAFD;;AAIA;;;;;AAKApE,UAAKqE,SAAL,GAAiB;AACbC,cAAU,CADG;AAEbC,eAAU,CAFG;AAGbC,kBAAU;AAHG,MAAjB;;AAMA;;;;AAIAxE,UAAKyE,IAAL,GAAY,EAAEC,WAAW,CAAb,EAAgBC,KAAK,CAArB,EAAwBC,OAAO,EAA/B,EAAmCC,OAAO,EAA1C,EAA8CC,MAAM,EAApD,EAAwDC,KAAK,EAA7D,EAAiEC,KAAK,EAAtE,EAA0EC,OAAO,EAAjF,EAAqFC,MAAM,EAA3F,EAA+FC,IAAI,EAAnG,EAAuGC,MAAM,EAA7G,EAAiHC,OAAO,EAAxH,EAA4HC,QAAQ,EAApI,EAAwIC,MAAM,EAA9I,EAAZ;;AAEA;;;;;AAKAvF,UAAKwF,SAAL,GAAiB,UAAUC,EAAV,EAAc;AAC3B,gBAAOA,MAAM,QAAOA,EAAP,yCAAOA,EAAP,OAAc,QAApB,IAAgCA,GAAGC,QAAnC,IAA+CD,GAAGC,QAAH,IAAe,KAAKrB,SAAL,CAAeC,GAApF;AACH,MAFD;;AAIA;;;AAGAtE,UAAK2F,IAAL,GAAY,UAAUvC,IAAV,EAAgB;;AAExB,aAAI,CAACA,IAAD,IAAS,CAACA,KAAKwC,GAAnB,EAAuB;AACnB;AACH;;AAED,aAAIC,UAAmBjC,OAAOkC,cAAP,GAAwB,IAAIA,cAAJ,EAAxB,GAA+C,IAAIC,aAAJ,CAAkB,mBAAlB,CAAtE;AAAA,aACIC,mBAAmB,4BAAU,CAAE,CADnC;AAAA,aAEIC,SAAS,EAFb;AAAA,aAGIC,GAHJ;;AAKA9C,cAAK+C,KAAL,GAAuB,IAAvB;AACA/C,cAAKM,IAAL,GAAuBN,KAAKM,IAAL,IAAa,KAApC;AACAN,cAAKA,IAAL,GAAuBA,KAAKA,IAAL,IAAa,EAApC;AACAA,cAAK,cAAL,IAAuBA,KAAK,cAAL,KAAwB,iCAA/C;AACA4C,4BAAuB5C,KAAKgD,OAAL,IAAgBJ,gBAAvC;;AAEA,aAAI5C,KAAKM,IAAL,IAAa,KAAb,IAAsBN,KAAKA,IAA/B,EAAqC;;AAEjCA,kBAAKwC,GAAL,GAAW,KAAKS,IAAL,CAAUjD,KAAKwC,GAAf,IAAsBxC,KAAKwC,GAAL,GAAW,GAAX,GAAiBxC,KAAKA,IAA5C,GAAmDA,KAAKwC,GAAL,GAAW,GAAX,GAAiBxC,KAAKA,IAApF;AAEH,UAJD,MAIO;;AAEH,kBAAI8C,GAAJ,IAAW9C,KAAKA,IAAhB,EAAsB;AAClB6C,2BAAWC,MAAM,GAAN,GAAYI,mBAAmBlD,KAAKA,IAAL,CAAU8C,GAAV,CAAnB,CAAZ,GAAiD,GAA5D;AACH;AACJ;;AAED,aAAI9C,KAAKmD,eAAT,EAA0B;AACtBV,qBAAQU,eAAR,GAA0B,IAA1B;AACH;;AAED,aAAInD,KAAKoD,UAAL,IAAmB,OAAOpD,KAAKoD,UAAZ,IAA0B,UAAjD,EAA6D;AACzDpD,kBAAKoD,UAAL,CAAgBC,IAAhB;AACH;;AAEDZ,iBAAQa,IAAR,CAActD,KAAKM,IAAnB,EAAyBN,KAAKwC,GAA9B,EAAmCxC,KAAK+C,KAAxC;AACAN,iBAAQc,gBAAR,CAAyB,kBAAzB,EAA6C,gBAA7C;AACAd,iBAAQc,gBAAR,CAAyB,cAAzB,EAAyC,mCAAzC;;AAEAd,iBAAQe,kBAAR,GAA6B,YAAW;AACpC,iBAAIf,QAAQgB,UAAR,IAAsB,CAAtB,IAA2BhB,QAAQiB,MAAR,IAAkB,GAAjD,EAAsD;AAClDd,kCAAiBH,QAAQkB,YAAzB;AACH;AACJ,UAJD;;AAMAlB,iBAAQmB,IAAR,CAAaf,MAAb;AACH,MA/CD;;AAiDA;AACAjG,UAAKiH,YAAL,GAAoB,UAASC,UAAT,EAAqBC,YAArB,EAAmC;;AAEnD;AACA,aAAK,CAACA,YAAD,IAAkBA,gBAAgB9D,SAASC,cAAT,CAAwB,eAAe6D,YAAvC,CAAvC,EAA+F;AAC3FrH,mBAAME,IAAN,CAAWgD,GAAX,CAAe,+DAAf,EAAgF,MAAhF;AACA;AACH;;AAGD,aAAIoE,SAAW/D,SAASgE,aAAT,CAAuB,QAAvB,CAAf;AACAD,gBAAO1D,IAAP,GAAc,iBAAd;AACA0D,gBAAOE,GAAP,GAAaJ,UAAb;AACAE,gBAAOjB,KAAP,GAAe,IAAf;AACAiB,gBAAOG,KAAP,GAAe,IAAf;;AAEA,aAAIJ,YAAJ,EAAkB;AACdC,oBAAOI,EAAP,GAAY,eAAeL,YAA3B;AACH;;AAED9D,kBAASoE,IAAT,CAAcC,WAAd,CAA0BN,MAA1B;AACA,gBAAOA,MAAP;AACH,MArBD;;AAuBA,YAAOpH,IAAP;AAEH,EA5KU,CA4KR,EA5KQ,CAAX;;AA8KAJ,QAAOC,OAAP,GAAiBG,IAAjB,C;;;;;;;;AC9KA,KAAIC,KAAM,UAASA,EAAT,EAAY;;AAElB;;;AAGAA,QAAG0H,SAAH,GAAe;;AAEX;;;AAGAC,0BAAkB,UALP;;AAOP;;;AAGAC,wBAAgB,mBAVT;;AAYP;;;AAGAC,0BAAkB,qBAfX;;AAiBP;;;AAGAC,4BAAoB,mBApBb;;AAsBP;;;AAGAC,6BAAqB,qBAzBd;;AA2BP;;;AAGAC,wBAAgB;;AA9BT,MAAf;;AAkCA;;;;;AAKAhI,QAAGuC,IAAH,GAAU,YAAY;;AAElB,aAAIrB,OAAJ,EACIb,OADJ,EAEI4H,cAFJ,EAGI9G,aAHJ,EAIIW,QAJJ,EAKIoG,OALJ,EAMIxH,aANJ,EAOIyH,YAPJ,EAQIzG,aARJ,EASIF,kBATJ,EAUIC,eAVJ,EAWIH,OAXJ,EAYIC,UAZJ;;AAcA;AACAL,mBAAUrB,MAAMW,IAAN,CAAWU,OAAX,EAAV;;AAEA;AACArB,eAAME,IAAN,CAAW+D,WAAX,CAAuBjE,MAAMmB,KAAN,CAAYC,QAAnC,EAA6CC,OAA7C;;AAEA;AACAR,yBAAgBb,MAAMW,IAAN,CAAW4H,YAAX,EAAhB;AACAvI,eAAMmB,KAAN,CAAYN,aAAZ,GAA4B0C,SAASiF,IAAT,CAAcZ,WAAd,CAA0B/G,aAA1B,CAA5B;;AAEA;AACAL,mBAAwBR,MAAMW,IAAN,CAAWH,OAAX,EAAxB;AACA4H,0BAAwBpI,MAAMW,IAAN,CAAWyH,cAAX,EAAxB;AACA9G,yBAAwBtB,MAAMW,IAAN,CAAWW,aAAX,EAAxB;AACAI,sBAAwB1B,MAAMW,IAAN,CAAWe,UAAX,EAAxB;AACAC,8BAAwB3B,MAAMW,IAAN,CAAW8H,cAAX,EAAxB;AACA7G,2BAAwB5B,MAAMQ,OAAN,CAAcO,QAAd,CAAuB2H,qBAAvB,EAAxB;AACA7G,yBAAwB7B,MAAMW,IAAN,CAAWkB,aAAX,EAAxB;AACAyG,wBAAwBtI,MAAMW,IAAN,CAAW2H,YAAX,EAAxB;AACA7G,mBAAwBzB,MAAMW,IAAN,CAAWc,OAAX,EAAxB;AACAQ,oBAAwBjC,MAAMW,IAAN,CAAWsB,QAAX,EAAxB;;AAEA;AACA,aAAIF,kBAAkB/B,MAAMW,IAAN,CAAWoB,eAAX,EAAtB;AAAA,aACID,iBAAkB9B,MAAMW,IAAN,CAAWgI,eAAX,EADtB;;AAGA;AACA9G,uBAAc+F,WAAd,CAA0B9F,cAA1B;AACAD,uBAAc+F,WAAd,CAA0B7F,eAA1B;;AAEA;;;AAGAuG,sBAAaV,WAAb,CAAyBjG,kBAAzB;AACA2G,sBAAaV,WAAb,CAAyBhG,eAAzB;AACA0G,sBAAaV,WAAb,CAAyB/F,aAAzB;;AAEA;AACAuG,wBAAeR,WAAf,CAA2BlG,UAA3B;;AAEA;AACA0G,wBAAeR,WAAf,CAA2BnG,OAA3B;;AAEA;AACAjB,iBAAQoH,WAAR,CAAoBU,YAApB;;AAEA;AACA9H,iBAAQoH,WAAR,CAAoBQ,cAApB;;AAEA/G,iBAAQuG,WAAR,CAAoBpH,OAApB;;AAEAa,iBAAQuG,WAAR,CAAoB3F,QAApB;;AAEA;AACAjC,eAAMmB,KAAN,CAAYE,OAAZ,GAAiCA,OAAjC;AACArB,eAAMmB,KAAN,CAAYX,OAAZ,GAAiCA,OAAjC;AACAR,eAAMmB,KAAN,CAAYO,UAAZ,GAAiCA,UAAjC;AACA1B,eAAMmB,KAAN,CAAYM,OAAZ,GAAiCA,OAAjC;AACAzB,eAAMmB,KAAN,CAAYU,aAAZ,GAAiCA,aAAjC;AACA7B,eAAMmB,KAAN,CAAYW,cAAZ,GAAiCA,cAAjC;AACA9B,eAAMmB,KAAN,CAAYY,eAAZ,GAAiCA,eAAjC;AACA/B,eAAMmB,KAAN,CAAYQ,kBAAZ,GAAiCA,kBAAjC;AACA3B,eAAMmB,KAAN,CAAYS,eAAZ,GAAiCA,eAAjC;;AAEA5B,eAAMmB,KAAN,CAAYc,QAAZ,GAAuBA,QAAvB;;AAEAjC,eAAMG,EAAN,CAASyI,iBAAT,CAA2BtH,aAA3B;;AAEA;AACAtB,eAAMQ,OAAN,CAAcO,QAAd,CAAuB8H,kBAAvB;AACH,MAtFD;;AAwFA1I,QAAGyI,iBAAH,GAAuB,UAASE,SAAT,EAAoB;;AAEvC;AACA9I,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BD,OAA1B,GAAoCyH,SAApC;;AAEA;AACA9I,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAA1B,GAAoCvB,MAAMW,IAAN,CAAWoI,oBAAX,EAApC;;AAEA;AACA/I,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BE,OAA1B,GAAoCxB,MAAMW,IAAN,CAAWqI,oBAAX,EAApC;;AAEA;AACAhJ,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BD,OAA1B,CAAkCuG,WAAlC,CAA8C5H,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAAxE;AACAvB,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BD,OAA1B,CAAkCuG,WAAlC,CAA8C5H,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BE,OAAxE;;AAEAxB,eAAMmB,KAAN,CAAYE,OAAZ,CAAoBuG,WAApB,CAAgC5H,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BD,OAA1D;AACH,MAhBD;;AAkBA;;;;AAIAlB,QAAGwC,QAAH,GAAc,YAAY;;AAEtB,aAAIsG,IAAJ,EACIC,WADJ;;AAGA,cAAI,IAAIC,IAAR,IAAgBnJ,MAAMe,QAAN,CAAeN,KAA/B,EAAsC;AAClCwI,oBAAOjJ,MAAMe,QAAN,CAAeN,KAAf,CAAqB0I,IAArB,CAAP;AACAnJ,mBAAMS,KAAN,CAAY0I,IAAZ,IAAoBF,IAApB,CAAyB;AAC5B;;AAED;AACA,cAAK,IAAIE,IAAT,IAAiBnJ,MAAMS,KAAvB,EAA6B;;AAEzBwI,oBAAOjJ,MAAMS,KAAN,CAAY0I,IAAZ,CAAP;;AAEA,iBAAI,CAACF,KAAKG,gBAAV,EAA4B;AACxB;AACH;;AAED,iBAAI,CAACH,KAAKI,aAAV,EAAyB;AACrBrJ,uBAAME,IAAN,CAAWgD,GAAX,CAAe,gDAAf,EAAiE,MAAjE,EAAyEiG,IAAzE;AACA;AACH;;AAED,iBAAI,OAAOF,KAAKvG,IAAZ,IAAoB,UAAxB,EAAoC;AAChC1C,uBAAME,IAAN,CAAWgD,GAAX,CAAe,qCAAf,EAAsD,MAAtD,EAA8DiG,IAA9D;AACA;AACH;;AAED;;;AAGAD,2BAAclJ,MAAMW,IAAN,CAAW2I,aAAX,CAAyBH,IAAzB,EAA+BF,KAAKI,aAApC,CAAd;;AAEArJ,mBAAMmB,KAAN,CAAYM,OAAZ,CAAoBmG,WAApB,CAAgCsB,WAAhC;;AAEA;AACAlJ,mBAAMmB,KAAN,CAAYa,cAAZ,CAA2BmH,IAA3B,IAAmCD,WAAnC;AACH;;AAGD;;;AAGAlJ,eAAMG,EAAN,CAASoJ,qBAAT;AAGH,MA/CD;;AAiDApJ,QAAGoJ,qBAAH,GAA2B,YAAW;;AAElC,aAAI9I,QAAQ;;AAER+I,mBAAM;AACFC,uBAAU,cADR;AAEFC,0BAAU;AAFR,cAFE;;AAORC,qBAAQ;AACJF,uBAAU,gBADN;AAEJC,0BAAU;AAFN,cAPA;;AAYRE,wBAAW;AACPH,uBAAU,mBADH;AAEPC,0BAAU;AAFH,cAZH;;AAiBRG,mBAAM;AACFJ,uBAAU,cADR;AAEFC,0BAAU;AAFR;AAjBE,UAAZ;;AAuBA,aAAII,UAAJ,EACIb,IADJ;;AAGA,cAAI,IAAIE,IAAR,IAAgB1I,KAAhB,EAAuB;;AAEnBwI,oBAAOxI,MAAM0I,IAAN,CAAP;;AAEAW,0BAAa9J,MAAMW,IAAN,CAAWoJ,mBAAX,CAA+BZ,IAA/B,EAAqCF,KAAKQ,IAA1C,CAAb;;AAEAzJ,mBAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAA1B,CAAkCqG,WAAlC,CAA8CkC,UAA9C;AACA;;;AAGA9J,mBAAMG,EAAN,CAAS6J,+BAAT,CAAyCF,UAAzC,EAAqDb,KAAKS,OAA1D;AACH;AAEJ,MAzCD;;AA2CA;;;;AAIAvJ,QAAGyC,UAAH,GAAgB,YAAY;;AAExB5C,eAAME,IAAN,CAAWgD,GAAX,CAAe,qBAAf,EAAsC,MAAtC;;AAEAY,gBAAOmG,gBAAP,CAAwB,OAAxB,EAAiC,UAAUC,QAAV,EAAoBpE,GAApB,EAAyBqE,UAAzB,EAAqC;AAClEnK,mBAAMa,aAAN,CAAoBuJ,WAApB,CAAgCF,QAAhC,EAA0CG,KAA1C;AACH,UAFD,EAEG,KAFH;;AAIA;AACArK,eAAMmB,KAAN,CAAYc,QAAZ,CAAqBgI,gBAArB,CAAsC,SAAtC,EAAiDjK,MAAMU,QAAN,CAAe4J,aAAhE,EAA+E,KAA/E;;AAEA;AACA/G,kBAAS0G,gBAAT,CAA0B,OAA1B,EAAmCjK,MAAMU,QAAN,CAAe6J,WAAlD,EAA+D,KAA/D;;AAEA;;;AAGAvK,eAAMmB,KAAN,CAAYc,QAAZ,CAAqBgI,gBAArB,CAAsC,OAAtC,EAA+CjK,MAAMU,QAAN,CAAe8J,eAA9D,EAA+E,KAA/E;;AAEA;;;AAGAxK,eAAMmB,KAAN,CAAYO,UAAZ,CAAuBuI,gBAAvB,CAAwC,OAAxC,EAAiDjK,MAAMU,QAAN,CAAe+J,iBAAhE,EAAmF,KAAnF;;AAEA;;;AAGAzK,eAAMmB,KAAN,CAAYQ,kBAAZ,CAA+BsI,gBAA/B,CAAgD,OAAhD,EAAyDjK,MAAMU,QAAN,CAAegK,yBAAxE,EAAmG,KAAnG;AACA;;;;AAIA1K,eAAMmB,KAAN,CAAYc,QAAZ,CAAqBgI,gBAArB,CAAsC,OAAtC,EAA+CjK,MAAMU,QAAN,CAAeiK,kBAA9D,EAAkF,KAAlF;;AAEA;AACA,cAAK,IAAIC,MAAT,IAAmB5K,MAAMmB,KAAN,CAAYa,cAA/B,EAA8C;AAC1ChC,mBAAMmB,KAAN,CAAYa,cAAZ,CAA2B4I,MAA3B,EAAmCX,gBAAnC,CAAoD,OAApD,EAA6DjK,MAAMU,QAAN,CAAemK,oBAA5E,EAAkG,KAAlG;AACH;AAEJ,MAvCD;;AAyCA;;;;AAIA1K,QAAG0C,cAAH,GAAoB,YAAW;;AAE3B,cAAI,IAAIoG,IAAR,IAAgBjJ,MAAMS,KAAtB,EAA6B;;AAEzB,iBAAI,OAAOT,MAAMS,KAAN,CAAYwI,IAAZ,EAAkBzG,OAAzB,IAAoC,UAAxC,EACI;;AAEJxC,mBAAMS,KAAN,CAAYwI,IAAZ,EAAkBzG,OAAlB;AACH;AACJ,MATD,EAWArC,GAAG2K,gBAAH,GAAsB,UAASC,KAAT,EAAgB;;AAElC,aAAI,CAACA,KAAL,EAAY;;AAEZ;;;AAGAA,eAAMd,gBAAN,CAAuB,SAAvB,EAAkC,UAASI,KAAT,EAAgB;AAC9CrK,mBAAMU,QAAN,CAAesK,YAAf,CAA4BX,KAA5B,EAAmCU,KAAnC;AACH,UAFD,EAEG,KAFH;;AAIA;;;AAGAA,eAAMd,gBAAN,CAAuB,OAAvB,EAAgC,UAAUI,KAAV,EAAiB;AAC7CrK,mBAAMU,QAAN,CAAeuK,UAAf,CAA0BZ,KAA1B;AACH,UAFD,EAEG,KAFH;;AAIAU,eAAMd,gBAAN,CAAuB,SAAvB,EAAkC,YAAU;AACxCjK,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqBC,IAArB;AACH,UAFD,EAEG,KAFH;AAIH,MAjCD;;AAmCA;AACAhL,QAAG4C,UAAH,GAAgB,YAAW;;AAEvB,aAAId,WAAWjC,MAAMmB,KAAN,CAAYc,QAA3B;AAAA,aACImJ,WAAW,EADf;;AAGA;AACApL,eAAMkC,KAAN,CAAYG,MAAZ,GAAqBJ,SAASoJ,gBAAT,CAA0B,0BAA1B,CAArB;AACH,MAPD;;AASA;;;AAGAlL,QAAGmL,eAAH,GAAqB,YAAU;;AAE3B,aAAIC,mBAAmBvL,MAAMe,QAAN,CAAeG,kBAAtC;AAAA,aACIsK,YADJ;;AAGA,aAAK,CAACxL,MAAMS,KAAN,CAAY8K,gBAAZ,CAAN,EAAqC;AACjCvL,mBAAME,IAAN,CAAWgD,GAAX,CAAe,mEAAf,EAAoF,MAApF,EAA4FqI,gBAA5F;AACA;AACH;;AAEDC,wBAAexL,MAAMS,KAAN,CAAY8K,gBAAZ,EAA8BE,MAA9B,EAAf;;AAEAD,sBAAaE,YAAb,CAA0B,kBAA1B,EAA8C,qBAA9C;;AAEA1L,eAAMO,OAAN,CAAcoL,WAAd,CAA0B;AACtB/H,mBAAQ2H,gBADc;AAEtBR,oBAAQS;AAFc,UAA1B;;AAKAxL,eAAMO,OAAN,CAAcqL,kBAAd,CAAiCJ,YAAjC;AAEH,MArBD;;AAuBArL,QAAG6J,+BAAH,GAAqC,UAASY,MAAT,EAAiBhH,IAAjB,EAAuB;;AAExDgH,gBAAOX,gBAAP,CAAwB,WAAxB,EAAqC,UAASI,KAAT,EAAgB;;AAEjDrK,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqBW,WAArB,CAAiCxB,KAAjC,EAAwCzG,IAAxC;AAEH,UAJD,EAIG,KAJH;AAKH,MAPD;;AASA,YAAOzD,EAAP;AAEH,EAzXQ,CAyXN,EAzXM,CAAT;;AA2XAL,QAAOC,OAAP,GAAiBI,EAAjB,C;;;;;;;;AC3XA;;;;;;;;AAQA,KAAIC,YAAa,UAASA,SAAT,EAAmB;;AAEhCA,eAAU0L,KAAV,GAAkB,IAAlB;;AAEA;;;AAGA1L,eAAU2L,SAAV,GAAsB,IAAtB;;AAEA3L,eAAUoC,OAAV,GAAoB,YAAU;;AAE1B,aAAIsJ,QAAQvI,SAASgE,aAAT,CAAuB,OAAvB,CAAZ;;AAEAuE,eAAMlI,IAAN,GAAa,MAAb;AACAkI,eAAM7B,gBAAN,CAAuB,QAAvB,EAAiCjK,MAAMI,SAAN,CAAgB4L,YAAjD;;AAEAhM,eAAMI,SAAN,CAAgB0L,KAAhB,GAAwBA,KAAxB;AAEH,MATD;;AAWA;AACA1L,eAAU6L,UAAV,GAAuB,YAAW;;AAE9B;AACA,cAAKH,KAAL,GAAa,IAAb;;AAEA;AACA,cAAKtJ,OAAL;AACH,MAPD;;AASA;;;AAGApC,eAAU4L,YAAV,GAAyB,UAAS3B,KAAT,EAAe;;AAEpC,aAAIyB,QAAc,IAAlB;AAAA,aACII,QAAcJ,MAAMI,KADxB;AAAA,aAEIC,cAAcD,MAAME,MAFxB;AAAA,aAGIC,YAAc,IAAIC,QAAJ,EAHlB;AAAA,aAIIC,IAJJ;AAAA,aAKIC,CALJ;;AAOAH,mBAAUI,MAAV,CAAiB,OAAjB,EAA0BP,MAAM,CAAN,CAA1B,EAAoCA,MAAM,CAAN,EAAS/C,IAA7C;;AAEAnJ,eAAMI,SAAN,CAAgByF,IAAhB,CAAqB;AACjBvC,mBAAO+I,SADU;AAEjB3F,yBAAa1G,MAAMI,SAAN,CAAgB2L,SAAhB,CAA0BrF,UAFtB;AAGjBJ,sBAAatG,MAAMI,SAAN,CAAgB2L,SAAhB,CAA0BzF,OAHtB;AAIjBrD,oBAAajD,MAAMI,SAAN,CAAgB2L,SAAhB,CAA0B9I;AAJtB,UAArB;AAMH,MAjBD;;AAmBA;;;;AAIA7C,eAAUsM,eAAV,GAA4B,UAAUC,IAAV,EAAgB;;AAExC,cAAKZ,SAAL,GAAiBY,IAAjB;AACA,cAAKb,KAAL,CAAWc,KAAX;AAEH,MALD;;AAOA;;;AAGAxM,eAAUyF,IAAV,GAAiB,UAASM,MAAT,EAAgB;;AAE7B,aAAI0G,MAAM,IAAI7G,cAAJ,EAAV;AAAA,aACIU,aAAa,OAAOP,OAAOO,UAAd,IAA4B,UAA5B,GAAyCP,OAAOO,UAAhD,GAA6D,YAAU,CAAE,CAD1F;AAAA,aAEIJ,UAAa,OAAOH,OAAOG,OAAd,IAA4B,UAA5B,GAAyCH,OAAOG,OAAhD,GAA0D,YAAU,CAAE,CAFvF;AAAA,aAGIrD,QAAa,OAAOkD,OAAOlD,KAAd,IAA4B,UAA5B,GAAyCkD,OAAOlD,KAAhD,GAA0D,YAAU,CAAE,CAHvF;;AAKAyD;;AAEAmG,aAAIjG,IAAJ,CAAS,MAAT,EAAiB5G,MAAMe,QAAN,CAAeE,eAAhC,EAAiD,IAAjD;;AAEA4L,aAAIhG,gBAAJ,CAAqB,kBAArB,EAAyC,gBAAzC;;AAEAgG,aAAIC,MAAJ,GAAa,YAAY;AACrB,iBAAID,IAAI7F,MAAJ,KAAe,GAAnB,EAAwB;AACpBV,yBAAQuG,IAAI5F,YAAZ;AACH,cAFD,MAEO;AACHlD,yBAAQb,GAAR,CAAY,mBAAZ,EAAiC2J,GAAjC;AACA5J;AACH;AACJ,UAPD;;AASA4J,aAAI3F,IAAJ,CAASf,OAAO7C,IAAhB;AACA,cAAK2I,UAAL;AAEH,MAzBD;;AA2BA,YAAO7L,SAAP;AAEH,EA/Fe,CA+Fb,EA/Fa,CAAhB;;AAiGAN,QAAOC,OAAP,GAAkBK,SAAlB,C;;;;;;;;ACzGA,KAAIC,WAAY,UAASA,QAAT,EAAmB;;AAE/B;;;AAGAA,cAASyC,kBAAT,GAA8B,YAAY;;AAEtC;;;AAGA,aAAI,CAAC9C,MAAMkC,KAAN,CAAYE,MAAZ,CAAmB2K,KAAnB,CAAyBX,MAA9B,EAAsC;;AAElCpM,mBAAMG,EAAN,CAASmL,eAAT;AACA;AAEH;;AAEDnI,iBAAQC,OAAR;;AAEA;AAFA,UAGKX,IAHL,CAGU,YAAW;AACb,oBAAOzC,MAAMkC,KAAN,CAAYE,MAAnB;AACH,UALL;;AAOI;AAPJ,UAQKK,IARL,CAQUzC,MAAMK,QAAN,CAAe2M,YARzB;;AAUI;AAVJ,UAWKhK,KAXL,CAWW,UAASC,KAAT,EAAgB;AACnBjD,mBAAME,IAAN,CAAWgD,GAAX,CAAe,8BAAf,EAA+C,OAA/C,EAAwDD,KAAxD;AACH,UAbL;AAeH,MA3BD;;AA6BA;;;;;AAKA5C,cAAS2M,YAAT,GAAwB,UAAU1J,IAAV,EAAgB;;AAEpC,aAAIlB,SAASkB,KAAKyJ,KAAlB;;AAEA;;;;AAIA,aAAIE,eAAe9J,QAAQC,OAAR,EAAnB;;AAEA,cAAK,IAAI8J,QAAQ,CAAjB,EAAoBA,QAAQ9K,OAAOgK,MAAnC,EAA4Cc,OAA5C,EAAsD;;AAElD;AACAlN,mBAAMK,QAAN,CAAe8M,iBAAf,CAAiCF,YAAjC,EAA+C7K,MAA/C,EAAuD8K,KAAvD;AAEH;AAEJ,MAjBD;;AAmBA;;;AAGA7M,cAAS8M,iBAAT,GAA6B,UAAUF,YAAV,EAAwB7K,MAAxB,EAAgC8K,KAAhC,EAAuC;;AAEhE;AACAD;;AAEA;AAFA,UAGKxK,IAHL,CAGU,YAAW;;AAEb,oBAAOzC,MAAMK,QAAN,CAAe+M,YAAf,CAA4BhL,MAA5B,EAAqC8K,KAArC,CAAP;AAEH,UAPL;;AASI;;;AATJ,UAYKzK,IAZL,CAYUzC,MAAMK,QAAN,CAAegN,mBAZzB;;AAcI;;;AAdJ,UAiBK5K,IAjBL,CAiBU,UAAS6K,SAAT,EAAmB;;AAErB;;;AAGAtN,mBAAMO,OAAN,CAAcoL,WAAd,CAA0B2B,SAA1B;;AAEA;AACA,oBAAOA,UAAUvC,KAAjB;AAEH,UA3BL;;AA6BI;AA7BJ,UA8BK/H,KA9BL,CA8BW,UAASC,KAAT,EAAgB;AACnBjD,mBAAME,IAAN,CAAWgD,GAAX,CAAe,uCAAf,EAAwD,OAAxD,EAAiED,KAAjE;AACH,UAhCL;AAkCH,MArCD;;AAuCA;;;;AAIA5C,cAAS+M,YAAT,GAAwB,UAAUG,UAAV,EAAsBL,KAAtB,EAA6B;;AAEjD,gBAAO/J,QAAQC,OAAR,GAAkBX,IAAlB,CAAuB,YAAW;;AAErC,oBAAO8K,WAAWL,KAAX,CAAP;AAEH,UAJM,CAAP;AAKH,MAPD;;AASA;;;;;;;;;;;;;AAaA7M,cAASgN,mBAAT,GAA+B,UAAUC,SAAV,EAAqB;;AAEhD;AACA,aAAIE,aAAaF,UAAU1J,IAA3B;AAAA,aACI6J,QAAaH,UAAUG,KAD3B;;AAGA;AACA;;AAEA;AACA,aAAI,CAACzN,MAAMS,KAAN,CAAY+M,UAAZ,CAAL,EAA8B;AAC1B,mBAAM9J,sBAAiB8J,UAAjB,oBAAN;AACH;;AAED;AACA,aAAI,OAAOxN,MAAMS,KAAN,CAAY+M,UAAZ,EAAwB/B,MAA/B,IAAyC,UAA7C,EAAyD;;AAErD,mBAAM/H,sBAAiB8J,UAAjB,0CAAN;AACH;;AAED;AACA,aAAIzC,QAAQ/K,MAAMS,KAAN,CAAY+M,UAAZ,EAAwB/B,MAAxB,CAA+B6B,UAAUhK,IAAzC,CAAZ;;AAEA;AACA,aAAIoK,YAAY1N,MAAMS,KAAN,CAAY+M,UAAZ,EAAwBG,WAAxB,IAAuC,KAAvD;;AAEA;AACA,gBAAO;AACH/J,mBAAY4J,UADT;AAEHzC,oBAAYA,KAFT;AAGH2C,wBAAYA,SAHT;AAIHD,oBAAYA;AAJT,UAAP;AAOH,MAlCD;;AAoCA,YAAOpN,QAAP;AAEH,EApKc,CAoKZ,EApKY,CAAf;;AAsKAP,QAAOC,OAAP,GAAiBM,QAAjB,C;;;;;;;;ACtKA,KAAIC,QAAS,UAASA,KAAT,EAAgB;;AAEzB;;;;AAIAA,WAAMsN,UAAN,GAAmB,YAAY;;AAE3B;AACA5N,eAAMkC,KAAN,CAAY2L,IAAZ,GAAmB7N,MAAMmB,KAAN,CAAYc,QAAZ,CAAqB6L,SAAxC;;AAEA;AACA9N,eAAMkC,KAAN,CAAYC,UAAZ,GAAyB,EAAzB;;AAEAgB,iBAAQC,OAAR,GAEKX,IAFL,CAEU,YAAW;AACb,oBAAOzC,MAAMmB,KAAN,CAAYc,QAAZ,CAAqB8L,UAA5B;AACH,UAJL;AAKI;AALJ,UAMKtL,IANL,CAMUzC,MAAMM,KAAN,CAAY0N,SANtB,EAQKvL,IARL,CAQU,YAAW;AACb;AACH,UAVL,EAYKO,KAZL,CAYY,UAASC,KAAT,EAAgB;AACpBc,qBAAQb,GAAR,CAAY,mBAAZ;AACH,UAdL;AAgBH,MAxBD;;AA0BA5C,WAAM0N,SAAN,GAAkB,UAAS5L,MAAT,EAAiB;;AAE/B,aAAI6L,QAAQ9K,QAAQC,OAAR,EAAZ;;AAEA,cAAI,IAAI8J,QAAQ,CAAhB,EAAmBA,QAAQ9K,OAAOgK,MAAlC,EAA0Cc,OAA1C,EAAmD;;AAE/C;AACAlN,mBAAMM,KAAN,CAAY4N,YAAZ,CAAyBD,KAAzB,EAAgC7L,MAAhC,EAAwC8K,KAAxC;AAEH;AAEJ,MAXD;;AAaA;AACA5M,WAAM4N,YAAN,GAAqB,UAASD,KAAT,EAAgB7L,MAAhB,EAAwB8K,KAAxB,EAA+B;;AAEhDe,eAAMxL,IAAN,CAAW,YAAW;AAClB,oBAAOzC,MAAMM,KAAN,CAAY8M,YAAZ,CAAyBhL,MAAzB,EAAiC8K,KAAjC,CAAP;AACH,UAFD,EAIKzK,IAJL,CAIUzC,MAAMM,KAAN,CAAY6N,sBAJtB;AAMH,MARD;;AAWA;;;;AAIA7N,WAAM8M,YAAN,GAAqB,UAAUG,UAAV,EAAsBL,KAAtB,EAA6B;;AAE9C,gBAAO/J,QAAQC,OAAR,GAAkBX,IAAlB,CAAuB,YAAW;;AAErC,oBAAO8K,WAAWL,KAAX,CAAP;AAEH,UAJM,CAAP;AAKH,MAPD;;AASA5M,WAAM6N,sBAAN,GAA+B,UAASpD,KAAT,EAAgB;;AAE3C,aAAIyC,aAAazC,MAAMqD,OAAN,CAAcnF,IAA/B;;AAEA;AACA,aAAI,CAACjJ,MAAMS,KAAN,CAAY+M,UAAZ,CAAL,EAA8B;AAC1B,mBAAM9J,sBAAiB8J,UAAjB,oBAAN;AACH;;AAED;AACA,aAAI,OAAOxN,MAAMS,KAAN,CAAY+M,UAAZ,EAAwBa,IAA/B,IAAuC,UAA3C,EAAuD;;AAEnD,mBAAM3K,sBAAiB8J,UAAjB,gCAAN;AACH;;AAED;AACA,aAAIc,eAAiBvD,MAAMgD,UAAN,CAAiB,CAAjB,CAArB;AAAA,aACIQ,iBAAiBD,aAAaP,UAAb,CAAwB,CAAxB,CADrB;AAAA,aAEIS,YAAiBxO,MAAMS,KAAN,CAAY+M,UAAZ,EAAwBa,IAAxB,CAA6BE,cAA7B,CAFrB;AAAA,aAGIE,MAHJ;;AAMAA,kBAAS;AACL7K,mBAAM4J,UADD;AAELlK,mBAAMkL;AAFD,UAAT;;AAKA;AACAC,gBAAOhB,KAAP,GAAe1C,MAAM2D,SAAN,CAAgBC,QAAhB,CAAyB3O,MAAMG,EAAN,CAAS0H,SAAT,CAAmBK,kBAA5C,CAAf;;AAEAlI,eAAMkC,KAAN,CAAYC,UAAZ,CAAuByM,IAAvB,CAA4BH,MAA5B;AACH,MA/BD;;AAiCA,YAAOnO,KAAP;AAEH,EAzGW,CAyGT,EAzGS,CAAZ;;AA2GAR,QAAOC,OAAP,GAAiBO,KAAjB,C;;;;;;;;AC3GA,KAAIC,UAAW,UAASA,OAAT,EAAkB;;AAE7BA,aAAQsO,WAAR,GAAsB,IAAtB;;AAEA;;;AAGAtO,aAAQuO,IAAR,GAAe,YAAY;;AAEvB9O,eAAME,IAAN,CAAWgD,GAAX,CAAe,YAAf;;AAEA;;;AAGAlD,eAAMkC,KAAN,CAAY2L,IAAZ,GAAmB7N,MAAMmB,KAAN,CAAYc,QAAZ,CAAqB6L,SAAxC;AAEH,MATD;;AAWA;;;AAGAvN,aAAQwO,cAAR,GAAyB,YAAW;;AAEhC,aAAIC,YAAYlL,OAAOmL,YAAP,EAAhB;AAAA,aACIC,OADJ;;AAGA,aAAIF,UAAUG,UAAV,KAAyB,IAA7B,EAAmC;AAC/B,oBAAO,IAAP;AACH;;AAED,aAAKH,UAAUG,UAAV,CAAqBvJ,QAArB,IAAiC5F,MAAME,IAAN,CAAWqE,SAAX,CAAqBC,GAA3D,EAAiE;AAC7D0K,uBAAUF,UAAUG,UAApB;AACH,UAFD,MAEO;AACHD,uBAAUF,UAAUI,SAAV,CAAoBC,aAA9B;AACH;;AAED,aAAK,CAACrP,MAAMc,MAAN,CAAawO,iBAAb,CAA+BJ,OAA/B,CAAN,EAAgD;;AAE5C;AACA,iBAAIK,SAASL,QAAQ9K,UAArB;;AAEA,oBAAOmL,UAAU,CAACvP,MAAMc,MAAN,CAAawO,iBAAb,CAA+BC,MAA/B,CAAlB,EAAyD;AACrDA,0BAASA,OAAOnL,UAAhB;AACH;;AAED8K,uBAAUK,MAAV;AACH;;AAED,aAAIL,WAAWlP,MAAMmB,KAAN,CAAYc,QAA3B,EAAoC;AAChC,oBAAOiN,OAAP;AACH;;AAED,gBAAO,IAAP;AAEH,MAjCD;;AAmCA;;;AAGA3O,aAAQiP,SAAR,GAAoB,YAAW;;AAE3BxP,eAAMO,OAAN,CAAcsO,WAAd,CAA0BH,SAA1B,CAAoCe,GAApC,CAAwCzP,MAAMG,EAAN,CAAS0H,SAAT,CAAmBI,iBAA3D;AACH,MAHD;;AAKA;;;AAGA1H,aAAQmP,SAAR,GAAoB,YAAW;;AAE3B,aAAI1P,MAAMO,OAAN,CAAcsO,WAAlB,EAA+B;AAC3B7O,mBAAMO,OAAN,CAAcsO,WAAd,CAA0BH,SAA1B,CAAoCiB,MAApC,CAA2C3P,MAAMG,EAAN,CAAS0H,SAAT,CAAmBI,iBAA9D;AACH;AAEJ,MAND;;AAQA;;;;;;AAMA1H,aAAQqP,kBAAR,GAA6B,UAASC,IAAT,EAAe;;AAExC,aAAI,CAAC7P,MAAME,IAAN,CAAWwF,SAAX,CAAqBmK,IAArB,CAAL,EAAiC;AAC7BA,oBAAOA,KAAKzL,UAAZ;AACH;;AAED,aAAIyL,SAAS7P,MAAMmB,KAAN,CAAYc,QAArB,IAAiC4N,SAAStM,SAASiF,IAAvD,EAA6D;;AAEzD,oBAAO,IAAP;AAEH,UAJD,MAIO;;AAEH,oBAAM,CAACqH,KAAKnB,SAAL,CAAeC,QAAf,CAAwB3O,MAAMG,EAAN,CAAS0H,SAAT,CAAmBC,eAA3C,CAAP,EAAoE;AAChE+H,wBAAOA,KAAKzL,UAAZ;AACH;;AAED,oBAAOyL,IAAP;AACH;AAEJ,MAnBD;;AAqBA;;;;;AAKAtP,aAAQqL,kBAAR,GAA6B,UAAUkE,UAAV,EAAsB;;AAE/C;AACA9P,eAAMO,OAAN,CAAcmP,SAAd;;AAEA,aAAI,CAACI,UAAL,EAAiB;AACb;AACH;;AAED,cAAKjB,WAAL,GAAmB,KAAKe,kBAAL,CAAwBE,UAAxB,CAAnB;AAEH,MAXD;;AAaA;;;;;;;;;;AAUAvP,aAAQwP,YAAR,GAAuB,SAASC,aAAT,CAAuBC,WAAvB,EAAoCC,QAApC,EAA8C;;AAEjE,aAAI,CAACD,WAAD,IAAgB,CAACC,QAArB,EAA8B;AAC1BlQ,mBAAME,IAAN,CAAWgD,GAAX,CAAe,6BAAf;AACA;AACH;;AAED;AACA,gBAAM,CAAC+M,YAAYvB,SAAZ,CAAsBC,QAAtB,CAA+B3O,MAAMG,EAAN,CAAS0H,SAAT,CAAmBC,eAAlD,CAAP,EAA2E;AACvEmI,2BAAcA,YAAY7L,UAA1B;AACH;;AAED;AACApE,eAAMmB,KAAN,CAAYc,QAAZ,CAAqBkO,YAArB,CAAkCD,QAAlC,EAA4CD,WAA5C;;AAEA;;;AAGAjQ,eAAMO,OAAN,CAAcqL,kBAAd,CAAiCsE,QAAjC;;AAEA;;;AAGAlQ,eAAMG,EAAN,CAAS2K,gBAAT,CAA0BoF,QAA1B;;AAEA;;;AAGAlQ,eAAMG,EAAN,CAAS4C,UAAT;AAEH,MA9BD;;AAgCA;;;;;;;;;;;;AAYAxC,aAAQoL,WAAR,GAAsB,UAAU2B,SAAV,EAAqB8C,cAArB,EAAsC;;AAExD,aAAIC,eAAkBrQ,MAAMO,OAAN,CAAcsO,WAApC;AAAA,aACIyB,kBAAkBhD,UAAUvC,KADhC;AAAA,aAEIwF,YAAkBjD,UAAU1J,IAFhC;AAAA,aAGI6J,QAAkBH,UAAUG,KAHhC;AAAA,aAIIE,cAAkBL,UAAUI,SAJhC;;AAMA,aAAIwC,WAAWlQ,MAAMO,OAAN,CAAciQ,eAAd,CAA8BF,eAA9B,EAA+CC,SAA/C,EAA0D5C,WAA1D,CAAf;;AAEA,aAAIF,UAAU,IAAd,EAAoB;AAChByC,sBAASxB,SAAT,CAAmBe,GAAnB,CAAuBzP,MAAMG,EAAN,CAAS0H,SAAT,CAAmBK,kBAA1C;AACH;;AAED,aAAImI,YAAJ,EAAkB;;AAEdrQ,mBAAME,IAAN,CAAW+D,WAAX,CAAuBoM,YAAvB,EAAqCH,QAArC;AAEH,UAJD,MAIO;AACH;;;AAGAlQ,mBAAMmB,KAAN,CAAYc,QAAZ,CAAqB2F,WAArB,CAAiCsI,QAAjC;AAEH;;AAED;;;AAGAlQ,eAAMG,EAAN,CAAS2K,gBAAT,CAA0BoF,QAA1B;;AAEA;;;AAGAlQ,eAAMO,OAAN,CAAcqL,kBAAd,CAAiCsE,QAAjC;;AAEA;;;AAGAlQ,eAAMG,EAAN,CAAS4C,UAAT;;AAGA,aAAKqN,cAAL,EAAsB;;AAElB;;;AAGA,iBAAIK,oBAAoBzQ,MAAMY,KAAN,CAAY8P,oBAAZ,MAAsC,CAAC,CAA/D;;AAGA,iBAAID,qBAAqB,CAAC,CAA1B,EAA6B;;AAGzB,qBAAIE,kBAAkBT,SAASU,aAAT,CAAuB,mBAAvB,CAAtB;AAAA,qBACIC,YAAkBtN,SAASuN,cAAT,CAAwB,EAAxB,CADtB;;AAGAH,iCAAgB/I,WAAhB,CAA4BiJ,SAA5B;AACA7Q,uBAAMY,KAAN,CAAYmQ,GAAZ,CAAgBJ,eAAhB,EAAiC,CAAjC,EAAoC,CAApC;;AAEA3Q,uBAAMQ,OAAN,CAAcwQ,IAAd;AACAhR,uBAAMQ,OAAN,CAAcyQ,cAAd;AAGH,cAbD,MAaO;;AAEH;AACAC,4BAAW,YAAY;;AAEnB;AACAlR,2BAAMY,KAAN,CAAYuQ,cAAZ,CAA2BV,iBAA3B;AACAzQ,2BAAMQ,OAAN,CAAcwQ,IAAd;AACAhR,2BAAMQ,OAAN,CAAcoG,IAAd;AAEH,kBAPD,EAOG,EAPH;AASH;AAEJ;AAEJ,MA/ED;;AAiFA;;;;;;;AAOArG,aAAQ6Q,WAAR,GAAsB,UAASC,cAAT,EAAyBnB,QAAzB,EAAmCjH,IAAnC,EAAwC;;AAE1D,aAAIqI,mBAAmBtR,MAAMO,OAAN,CAAciQ,eAAd,CAA8BN,QAA9B,EAAwCjH,IAAxC,CAAvB;;AAEA;AACAjJ,eAAMO,OAAN,CAAcwP,YAAd,CAA2BsB,cAA3B,EAA2CC,gBAA3C;;AAEA;AACAtR,eAAMG,EAAN,CAAS4C,UAAT;AACH,MATD;;AAWA;;;;;;;;;;AAUAxC,aAAQgR,8BAAR,GAAyC,UAAUxG,KAAV,EAAiByG,QAAjB,EAA2B;;AAEhE;;;;AAIA,aAAIC,cAAc1G,MAAMgD,UAAxB;AAAA,aACIb,KADJ;AAAA,aAEI2C,IAFJ;AAAA,aAGI6B,IAHJ;;AAKA,cAAIxE,QAAQ,CAAZ,EAAeA,QAAQuE,YAAYrF,MAAnC,EAA2Cc,OAA3C,EACA;AACI2C,oBAAO4B,YAAYvE,KAAZ,CAAP;;AAEA,iBAAI2C,KAAKjK,QAAL,IAAiB5F,MAAME,IAAN,CAAWqE,SAAX,CAAqBE,IAA1C,EAAgD;;AAE5CiN,wBAAO7B,KAAK8B,WAAL,CAAiBC,IAAjB,EAAP;;AAEA;;;AAGA,qBAAIF,SAAS,EAAb,EAAiB;;AAEb3G,2BAAM8G,WAAN,CAAkBhC,IAAlB;AACA2B;AACH;AACJ;AACJ;;AAED,aAAIzG,MAAMgD,UAAN,CAAiB3B,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,oBAAO7I,SAASuN,cAAT,CAAwB,EAAxB,CAAP;AACH;;AAED;AACA,aAAKU,WAAW,CAAhB,EACIA,WAAW,CAAX;;AAEJ,aAAIM,qBAAqB,KAAzB;;AAEA;AACA,aAAIN,aAAa,CAAjB,EAAoB;AAChBM,kCAAqB,IAArB;AACAN,wBAAW,CAAX;AACH;;AAED,gBAAQA,QAAR,EAAmB;;AAEf;AACA,iBAAKM,kBAAL,EAA0B;AACtB/G,yBAAQA,MAAMgD,UAAN,CAAiB,CAAjB,CAAR;AACH,cAFD,MAEO;AACHhD,yBAAQA,MAAMgD,UAAN,CAAiByD,WAAW,CAA5B,CAAR;AACH;;AAED,iBAAKzG,MAAMnF,QAAN,IAAkB5F,MAAME,IAAN,CAAWqE,SAAX,CAAqBC,GAA5C,EAAiD;;AAE7CgN,4BAAWzG,MAAMgD,UAAN,CAAiB3B,MAA5B;AAEH,cAJD,MAIO,IAAIrB,MAAMnF,QAAN,IAAkB5F,MAAME,IAAN,CAAWqE,SAAX,CAAqBE,IAA3C,EAAiD;;AAEpD+M,4BAAW,CAAX;AACH;AAEJ;;AAED,gBAAOzG,KAAP;AACH,MAnED;;AAqEA;;;AAGAxK,aAAQiQ,eAAR,GAA0B,UAAUzF,KAAV,EAAiB9B,IAAjB,EAAuB0E,WAAvB,EAAoC;;AAE1D,aAAIuC,WAAelQ,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,KAAhB,EAAuB7P,MAAMG,EAAN,CAAS0H,SAAT,CAAmBC,eAA1C,EAA2D,EAA3D,CAAnB;AAAA,aACIwG,eAAetO,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,KAAhB,EAAuB7P,MAAMG,EAAN,CAAS0H,SAAT,CAAmBE,aAA1C,EAAyD,EAAzD,CADnB;;AAGAuG,sBAAa1G,WAAb,CAAyBmD,KAAzB;AACAmF,kBAAStI,WAAT,CAAqB0G,YAArB;;AAEA,aAAIX,WAAJ,EAAiB;AACbW,0BAAaI,SAAb,CAAuBe,GAAvB,CAA2BzP,MAAMG,EAAN,CAAS0H,SAAT,CAAmBG,eAA9C;AACH;;AAEDkI,kBAAS9B,OAAT,CAAiBnF,IAAjB,GAAwBA,IAAxB;AACA,gBAAOiH,QAAP;AACH,MAdD;;AAgBA;;;AAGA3P,aAAQwR,QAAR,GAAmB,YAAW;;AAE1B,aAAI/C,YAAYlL,OAAOmL,YAAP,GAAsB+C,UAAtB,CAAiC,CAAjC,CAAhB;;AAEA,gBAAOhD,SAAP;AACH,MALD;;AAOA;;;;;AAKAzO,aAAQ0R,UAAR,GAAqB,UAASC,UAAT,EAAqB;;AAEtC,aAAIlD,YAAiBlL,OAAOmL,YAAP,EAArB;AAAA,aACIE,aAAiBH,UAAUG,UAD/B;AAAA,aAEIgD,iBAAiBhD,WAAWwC,WAFhC;AAAA,aAGIS,cAAiBpD,UAAUqD,YAH/B;AAAA,aAIIC,eAJJ;AAAA,aAKIC,mBALJ;AAAA,aAMIC,cANJ;AAAA,aAOIC,kBAPJ;;AASA,aAAIC,eAAe1S,MAAMO,OAAN,CAAcsO,WAAd,CAA0B+B,aAA1B,CAAwC,mBAAxC,CAAnB;;AAGA0B,2BAAsBH,eAAeQ,SAAf,CAAyB,CAAzB,EAA4BP,WAA5B,CAAtB;AACAI,0BAAsBL,eAAeQ,SAAf,CAAyBP,WAAzB,CAAtB;;AAEAG,+BAAsBhP,SAASuN,cAAT,CAAwBwB,eAAxB,CAAtB;;AAEA,aAAIE,cAAJ,EAAoB;AAChBC,kCAAsBlP,SAASuN,cAAT,CAAwB0B,cAAxB,CAAtB;AACH;;AAED,aAAII,iBAAiB,EAArB;AAAA,aACIC,aAAiB,EADrB;AAAA,aAEIC,iBAAiB,KAFrB;;AAIA,aAAIL,kBAAJ,EAAwB;AACpBI,wBAAWjE,IAAX,CAAgB6D,kBAAhB;AACH;;AAED,cAAM,IAAIjG,IAAI,CAAR,EAAWuG,KAAjB,EAAwB,CAAC,EAAEA,QAAQL,aAAa3E,UAAb,CAAwBvB,CAAxB,CAAV,CAAzB,EAAgEA,GAAhE,EAAqE;;AAEjE,iBAAKuG,SAAS5D,UAAd,EAA2B;AACvB,qBAAK,CAAC2D,cAAN,EAAsB;AAClBF,oCAAehE,IAAf,CAAoBmE,KAApB;AACH,kBAFD,MAEO;AACHF,gCAAWjE,IAAX,CAAgBmE,KAAhB;AACH;AACJ,cAND,MAMO;AACHD,kCAAiB,IAAjB;AACH;AAEJ;;AAED;AACA9S,eAAMkC,KAAN,CAAYG,MAAZ,CAAmB6P,UAAnB,EAA+BpE,SAA/B,GAA2C,EAA3C;;AAEA;;;AAGA,aAAIkF,uBAAuBJ,eAAexG,MAA1C;;AAEA,cAAII,IAAI,CAAR,EAAWA,IAAIwG,oBAAf,EAAqCxG,GAArC,EAA0C;AACtCxM,mBAAMkC,KAAN,CAAYG,MAAZ,CAAmB6P,UAAnB,EAA+BtK,WAA/B,CAA2CgL,eAAepG,CAAf,CAA3C;AACH;;AAEDxM,eAAMkC,KAAN,CAAYG,MAAZ,CAAmB6P,UAAnB,EAA+BtK,WAA/B,CAA2C2K,mBAA3C;;AAEA;;;AAGA,aAAIU,mBAAmBJ,WAAWzG,MAAlC;AAAA,aACI8G,UAAmB3P,SAASgE,aAAT,CAAuB,KAAvB,CADvB;;AAGA,cAAIiF,IAAI,CAAR,EAAWA,IAAIyG,gBAAf,EAAiCzG,GAAjC,EAAsC;AAClC0G,qBAAQtL,WAAR,CAAoBiL,WAAWrG,CAAX,CAApB;AACH;;AAED0G,mBAAUA,QAAQpF,SAAlB;;AAEA;AACA,aAAIqF,iBAAiB,WAArB;;AAEA;;;AAGAnT,eAAMO,OAAN,CAAcoL,WAAd,CAA0B;AACtB/H,mBAAQuP,cADc;AAEtBpI,oBAAQ/K,MAAMS,KAAN,CAAY0S,cAAZ,EAA4B1H,MAA5B,CAAmC;AACvCiG,uBAAOwB;AADgC,cAAnC;AAFc,UAA1B,EAKG,IALH;AAOH,MApFD;;AAsFA;;;;AAIA3S,aAAQ6S,WAAR,GAAsB,UAAS3C,iBAAT,EAA4B4C,gBAA5B,EAA8C;;AAEhE;AACA,aAAI5C,sBAAsB,CAA1B,EAA6B;AACzB;AACH;;AAED,aAAI6C,WAAJ;AAAA,aACIC,sBAAsBvT,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBoO,iBAAnB,EAAsC3C,SADhE;;AAGA,aAAI,CAACuF,gBAAL,EAAuB;;AAEnBC,2BAActT,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBoO,oBAAoB,CAAvC,CAAd;AAEH,UAJD,MAIO;;AAEH6C,2BAActT,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBgR,gBAAnB,CAAd;AAEH;;AAEDC,qBAAYxF,SAAZ,IAAyByF,mBAAzB;AACH,MArBD;;AAuBA;;;;;;AAMAhT,aAAQiT,KAAR,GAAgB,UAASC,QAAT,EAAmB;;AAE/B,aAAIC,cAAc1T,MAAMO,OAAN,CAAcsO,WAAhC;AAAA,aACI5F,OAAcyK,YAAYtF,OAAZ,CAAoBnF,IADtC;;AAGA,aAAIjJ,MAAMS,KAAN,CAAYwI,IAAZ,EAAkB0K,cAAtB,EAAsC;AAClC3T,mBAAMO,OAAN,CAAcqT,QAAd,CAAuBH,SAASI,UAAhC;AACH,UAFD,MAEO;AACH7T,mBAAMO,OAAN,CAAcuT,gBAAd,CAA+BL,SAASI,UAAxC;AACH;AAEJ,MAXD;;AAaA;;;;;;AAMAtT,aAAQuT,gBAAR,GAA2B,UAAS3S,KAAT,EAAgB;;AAEvC,aAAI0O,OAAW1O,MAAM,CAAN,CAAf;AAAA,aACI4S,WAAWxQ,SAASuN,cAAT,CAAwBjB,KAAK8B,WAA7B,CADf;;AAGA,aAAI3R,MAAME,IAAN,CAAWwF,SAAX,CAAqBmK,IAArB,CAAJ,EAAgC;AAC5BA,kBAAKzL,UAAL,CAAgB+L,YAAhB,CAA6B4D,QAA7B,EAAuClE,IAAvC;AACH;AACJ,MARD;;AAUA;;;;;;;AAOAtP,aAAQqT,QAAR,GAAmB,UAAS1P,MAAT,EAAiB;;AAEhC,aAAI,CAACA,MAAL,EAAa;AACT;AACH;;AAED,cAAK,IAAIsI,IAAI,CAAb,EAAgBA,IAAItI,OAAO6J,UAAP,CAAkB3B,MAAtC,EAA8CI,GAA9C,EAAmD;AAC/C,kBAAKwH,GAAL,CAAS9P,OAAO6J,UAAP,CAAkBvB,CAAlB,CAAT;AACH;AACJ,MATD;;AAWA;;;;AAIAjM,aAAQ0T,WAAR,GAAsB,UAAS/P,MAAT,EAAiB;;AAEnC,aAAIgQ,IAAJ;AAAA,aACIhB,UAAU,IADd;AAAA,aAEIiB,YAAc,CAAC,GAAD,EAAM,YAAN,EAAoB,IAApB,EAA0B,MAA1B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,EAA0D,IAA1D,EAAgE,IAAhE,EAAsE,IAAtE,EAA4E,IAA5E,EAAkF,KAAlF,EAAyF,KAAzF,EAAgG,QAAhG,EAA0G,SAA1G,CAFlB;AAAA,aAGIC,cAAc,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,IAA1B,CAHlB;AAAA,aAIIC,cAAc,CAACD,YAAYE,QAAZ,CAAqBpQ,OAAOqQ,OAA5B,CAJnB;AAAA,aAKIC,qBAAqBL,UAAUG,QAAV,CAAmBpQ,OAAOqQ,OAA1B,CALzB;;AAOA,aAAI,CAACvU,MAAME,IAAN,CAAWwF,SAAX,CAAqBxB,MAArB,CAAL,EAAkC;AAC9B,oBAAOA,MAAP;AACH;;AAED,aAAI,CAACA,OAAOE,UAAZ,EAAuB;AACnB,oBAAOF,MAAP;AACH;;AAED,aAAImQ,WAAJ,EAAiB;;AAEb,iBAAIG,kBAAJ,EAAwB;;AAEpBtB,2BAAU3P,SAASgE,aAAT,CAAuB,GAAvB,CAAV;AACA2L,yBAAQpF,SAAR,GAAoB5J,OAAO4J,SAA3B;AACA5J,wBAAOE,UAAP,CAAkB+L,YAAlB,CAA+B+C,OAA/B,EAAwChP,MAAxC;AACAA,0BAASgP,OAAT;AAEH,cAPD,MAOO;;AAEHA,2BAAU3P,SAASuN,cAAT,OAA4B5M,OAAOyN,WAAnC,OAAV;AACAuB,yBAAQvB,WAAR,GAAsBuB,QAAQvB,WAAR,CAAoB8C,OAApB,CAA4B,SAA5B,EAAuC,GAAvC,CAAtB;AACAvQ,wBAAOE,UAAP,CAAkB+L,YAAlB,CAA+B+C,OAA/B,EAAwChP,MAAxC;AAEH;AACJ;;AAED;AACA,aAAIA,OAAOqQ,OAAP,IAAkB,GAAtB,EAA2B;AACvBL,oBAAOhQ,OAAOwQ,YAAP,CAAoB,MAApB,CAAP;AACH;;AAED;AACA,gBAAMxQ,OAAOyQ,UAAP,CAAkBvI,MAAlB,GAA2B,CAAjC,EAAoC;AAChClI,oBAAO0Q,eAAP,CAAuB1Q,OAAOyQ,UAAP,CAAkB,CAAlB,EAAqBxL,IAA5C;AACH;;AAED;AACA,aAAI+K,IAAJ,EAAU;AACNhQ,oBAAOwH,YAAP,CAAoB,MAApB,EAA4BwI,IAA5B;AACH;;AAED,gBAAOhQ,MAAP;AAEH,MApDD;;AAsDA;;;;;AAKA3D,aAAQyT,GAAR,GAAc,UAASrO,EAAT,EAAa;;AAEvB,aAAI,CAAC3F,MAAME,IAAN,CAAWwF,SAAX,CAAqBC,EAArB,CAAL,EACI;;AAEJ,aAAIkP,YAAY,KAAKZ,WAAL,CAAiBtO,EAAjB,CAAhB;;AAEA,cAAI,IAAI6G,IAAI,CAAZ,EAAeA,IAAIqI,UAAU9G,UAAV,CAAqB3B,MAAxC,EAAgDI,GAAhD,EAAqD;AACjD,kBAAKwH,GAAL,CAASa,UAAU9G,UAAV,CAAqBvB,CAArB,CAAT;AACH;AAEJ,MAXD;;AAaA,YAAOjM,OAAP;AAEH,EAtnBa,CAsnBX,EAtnBW,CAAd;;AAwnBAT,QAAOC,OAAP,GAAiBQ,OAAjB,C;;;;;;;;ACxnBA,KAAIC,UAAW,UAASA,OAAT,EAAkB;;AAE7BA,aAAQP,IAAR,GAAe,YAAW;AACtBO,iBAAQO,QAAR,GAAmB,mBAAAlB,CAAQ,CAAR,CAAnB;AACAW,iBAAQ0K,MAAR,GAAmB,mBAAArL,CAAQ,EAAR,CAAnB;AACAW,iBAAQiB,OAAR,GAAmB,mBAAA5B,CAAQ,EAAR,CAAnB;AACH,MAJD;;AAMA;;;AAGAW,aAAQsU,oBAAR,GAA+B,EAA/B;;AAEAtU,aAAQuU,aAAR,GAAwB,EAAxB;;AAEAvU,aAAQwU,MAAR,GAAiB,KAAjB;;AAEAxU,aAAQyU,OAAR,GAAkB,IAAlB;;AAEA;;;AAGAzU,aAAQoG,IAAR,GAAe,YAAW;;AAEtB5G,eAAMmB,KAAN,CAAYX,OAAZ,CAAoBkO,SAApB,CAA8Be,GAA9B,CAAkC,QAAlC;AACA,cAAKuF,MAAL,GAAc,IAAd;AAEH,MALD;;AAOA;;;AAGAxU,aAAQ0U,KAAR,GAAgB,YAAU;;AAEtBlV,eAAMmB,KAAN,CAAYX,OAAZ,CAAoBkO,SAApB,CAA8BiB,MAA9B,CAAqC,QAArC;;AAEAnP,iBAAQwU,MAAR,GAAkB,KAAlB;AACAxU,iBAAQyU,OAAR,GAAkB,IAAlB;;AAEA,cAAK,IAAIrK,MAAT,IAAmB5K,MAAMmB,KAAN,CAAYa,cAA/B,EAA8C;AAC1ChC,mBAAMmB,KAAN,CAAYa,cAAZ,CAA2B4I,MAA3B,EAAmC8D,SAAnC,CAA6CiB,MAA7C,CAAoD,UAApD;AACH;;AAED;AACA3P,eAAMQ,OAAN,CAAciB,OAAd,CAAsByT,KAAtB;AACAlV,eAAMQ,OAAN,CAAcO,QAAd,CAAuBmU,KAAvB;AAEH,MAfD;;AAiBA1U,aAAQ2U,MAAR,GAAiB,YAAU;;AAEvB,aAAK,CAAC,KAAKH,MAAX,EAAmB;;AAEf,kBAAKpO,IAAL;AAEH,UAJD,MAIO;;AAEH,kBAAKsO,KAAL;AAEH;AAEJ,MAZD;;AAcA1U,aAAQ4U,cAAR,GAAyB,YAAW;AAChCpV,eAAMmB,KAAN,CAAYO,UAAZ,CAAuBgN,SAAvB,CAAiCe,GAAjC,CAAqC,MAArC;AACH,MAFD;;AAIAjP,aAAQyQ,cAAR,GAAyB,YAAW;AAChCjR,eAAMmB,KAAN,CAAYO,UAAZ,CAAuBgN,SAAvB,CAAiCiB,MAAjC,CAAwC,MAAxC;AACH,MAFD;;AAIA;;;AAGAnP,aAAQwQ,IAAR,GAAe,YAAW;;AAEtB;AACAhR,eAAMQ,OAAN,CAAciB,OAAd,CAAsByT,KAAtB;;AAEA,aAAI,CAAClV,MAAMO,OAAN,CAAcsO,WAAnB,EAAgC;AAC5B;AACH;;AAED,aAAIwG,gBAAgBrV,MAAMmB,KAAN,CAAYX,OAAZ,CAAoB8U,YAApB,IAAoCtV,MAAMQ,OAAN,CAAcsU,oBAAtE;AAAA,aACIS,iBAAiBvV,MAAMO,OAAN,CAAcsO,WAAd,CAA0B2G,SAA1B,GAAuCxV,MAAMQ,OAAN,CAAcsU,oBAAd,GAAqC,CAA5E,GAAiF9U,MAAMQ,OAAN,CAAcuU,aADpH;;AAGA/U,eAAMmB,KAAN,CAAYX,OAAZ,CAAoBiV,KAApB,CAA0BC,SAA1B,uBAAwDC,KAAKC,KAAL,CAAWL,cAAX,CAAxD;;AAEA;AACAvV,eAAMQ,OAAN,CAAcO,QAAd,CAAuB8U,iBAAvB;AAEH,MAjBD;;AAmBA,YAAOrV,OAAP;AAEH,EA/Fa,CA+FX,EA/FW,CAAd;;AAiGAA,SAAQP,IAAR;;AAEAH,QAAOC,OAAP,GAAiBS,OAAjB,C;;;;;;;;ACnGA,KAAIO,WAAY,UAASA,QAAT,EAAmB;;AAE/BA,cAASd,IAAT,GAAgB,YAAW;AACvBJ,SAAA,mBAAAA,CAAQ,CAAR;AACH,MAFD;;AAIAkB,cAASiU,MAAT,GAAkB,KAAlB;;AAEAjU,cAAS+U,OAAT,GAAmB,IAAnB;AACA/U,cAASS,OAAT,GAAmB,IAAnB;;AAEAT,cAAS0M,KAAT,GAAiB,IAAjB;;AAEA;;;AAGA1M,cAAS6F,IAAT,GAAgB,UAASmP,QAAT,EAAkB;;AAE9B;;;;AAIA,aAAI,CAAC/V,MAAMS,KAAN,CAAYsV,QAAZ,CAAD,IAA0B,CAAC/V,MAAME,IAAN,CAAWwF,SAAX,CAAqB1F,MAAMS,KAAN,CAAYsV,QAAZ,EAAsBhV,QAA3C,CAA/B,EAAsF;;AAElFf,mBAAME,IAAN,CAAWgD,GAAX,iBAA0B6S,QAA1B,2BAAuD,MAAvD;AACA;AAEH,UALD,MAKO;;AAEH/V,mBAAMmB,KAAN,CAAYW,cAAZ,CAA2B8F,WAA3B,CAAuC5H,MAAMS,KAAN,CAAYsV,QAAZ,EAAsBhV,QAA7D;AAEH;;AAED,aAAI2R,eAAe1S,MAAMO,OAAN,CAAcsO,WAAjC;;AAEA;AACA7O,eAAMmB,KAAN,CAAYU,aAAZ,CAA0B6M,SAA1B,CAAoCe,GAApC,CAAwC,QAAxC;AACAzP,eAAMQ,OAAN,CAAcO,QAAd,CAAuB8H,kBAAvB;AACA,cAAKmM,MAAL,GAAc,IAAd;AACH,MAvBD;;AAyBA;;;AAGAjU,cAASmU,KAAT,GAAiB,YAAU;;AAEvBlV,eAAMmB,KAAN,CAAYU,aAAZ,CAA0B6M,SAA1B,CAAoCiB,MAApC,CAA2C,QAA3C;AACA3P,eAAMmB,KAAN,CAAYW,cAAZ,CAA2BgM,SAA3B,GAAuC,EAAvC;;AAEA,cAAKkH,MAAL,GAAc,KAAd;AAEH,MAPD;;AASA;;;AAGAjU,cAASoU,MAAT,GAAkB,UAAUY,QAAV,EAAoB;;AAElC,aAAK,CAAC,KAAKf,MAAX,EAAmB;;AAEf,kBAAKpO,IAAL,CAAUmP,QAAV;AAEH,UAJD,MAIO;;AAEH,kBAAKb,KAAL;AAEH;AAEJ,MAZD;;AAcA;;;AAGAnU,cAAS8H,kBAAT,GAA8B,YAAW;;AAErC;AACA,aAAImN,eAAJ;;AAEA;AACAhW,eAAMmB,KAAN,CAAYY,eAAZ,CAA4B+L,SAA5B,GAAwC,EAAxC;;AAGA;AACAkI,2BAAkBhW,MAAMQ,OAAN,CAAcO,QAAd,CAAuBkV,mBAAvB,EAAlB;;AAEA;;;;AAIA;;;;AAIAjW,eAAMmB,KAAN,CAAYY,eAAZ,CAA4B6F,WAA5B,CAAwCoO,eAAxC;AAEH,MAtBD;;AAwBA;;;;;;;;;AASAjV,cAASkV,mBAAT,GAA+B,YAAW;;AAEtC,aAAIC,sBAAsBlW,MAAMQ,OAAN,CAAcO,QAAd,CAAuBmV,mBAAvB,EAA1B;AAAA,aACIJ,OADJ;AAAA,aAEIxS,IAFJ;;AAIA,aAAI,CAAC4S,mBAAL,EAA0B;;AAEtB5S,oBAAO;AACHwK,4BAAY;AADT,cAAP;AAIH,UAND,MAMO;;AAEHxK,oBAAO;AACHwK,4BAAY;AADT,cAAP;AAIH;;AAEDgI,mBAAU9V,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,KAAhB,EAAuB7P,MAAMG,EAAN,CAAS0H,SAAT,CAAmBM,aAA1C,EAAyD7E,IAAzD,CAAV;AACAwS,iBAAQ7L,gBAAR,CAAyB,OAAzB,EAAkCjK,MAAMQ,OAAN,CAAcO,QAAd,CAAuBoV,cAAzD,EAAyE,KAAzE;;AAEA,gBAAOL,OAAP;AACH,MAxBD;;AA0BA;;;AAGA/U,cAASoV,cAAT,GAA0B,YAAW;;AAEjC,aAAItH,cAAc7O,MAAMO,OAAN,CAAcsO,WAAhC;;AAEAA,qBAAYH,SAAZ,CAAsByG,MAAtB,CAA6BnV,MAAMG,EAAN,CAAS0H,SAAT,CAAmBK,kBAAhD;;AAEAlI,eAAMQ,OAAN,CAAcO,QAAd,CAAuBmU,KAAvB;AACH,MAPD;;AASAnU,cAASmV,mBAAT,GAA+B,YAAW;;AAEtC,aAAIxD,eAAe1S,MAAMO,OAAN,CAAcsO,WAAjC;;AAEA,aAAI6D,YAAJ,EAAkB;AACd,oBAAOA,aAAahE,SAAb,CAAuBC,QAAvB,CAAgC3O,MAAMG,EAAN,CAAS0H,SAAT,CAAmBK,kBAAnD,CAAP;AACH,UAFD,MAEO;AACH,oBAAO,KAAP;AACH;AACJ,MATD;;AAWA;;;AAGAnH,cAAS2H,qBAAT,GAAiC,YAAW;;AAExC,aAAI0N,qBAAsBpW,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,MAAhB,EAAwB,wBAAxB,EAAkD,EAAlD,CAA1B;AAAA,aACIwG,gBAAgBrW,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,MAAhB,EAAwB,4BAAxB,EAAsD,EAAE/B,WAAY,+BAAd,EAAtD,CADpB;AAAA,aAEIwI,gBAAgBtW,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,KAAhB,EAAuB,iCAAvB,EAA0D,EAA1D,CAFpB;AAAA,aAGI0G,gBAAgBvW,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,KAAhB,EAAuB,4BAAvB,EAAqD,EAAE8B,aAAc,cAAhB,EAArD,CAHpB;AAAA,aAII6E,eAAgBxW,MAAMW,IAAN,CAAWkP,IAAX,CAAgB,KAAhB,EAAuB,2BAAvB,EAAoD,EAAE8B,aAAc,mBAAhB,EAApD,CAJpB;;AAMA0E,uBAAcpM,gBAAd,CAA+B,OAA/B,EAAwCjK,MAAMQ,OAAN,CAAcO,QAAd,CAAuB0V,mBAA/D,EAAoF,KAApF;;AAEAF,uBAActM,gBAAd,CAA+B,OAA/B,EAAwCjK,MAAMQ,OAAN,CAAcO,QAAd,CAAuB2V,sBAA/D,EAAuF,KAAvF;;AAEAF,sBAAavM,gBAAb,CAA8B,OAA9B,EAAuCjK,MAAMQ,OAAN,CAAcO,QAAd,CAAuB4V,qBAA9D,EAAqF,KAArF;;AAEAL,uBAAc1O,WAAd,CAA0B2O,aAA1B;AACAD,uBAAc1O,WAAd,CAA0B4O,YAA1B;;AAEAJ,4BAAmBxO,WAAnB,CAA+ByO,aAA/B;AACAD,4BAAmBxO,WAAnB,CAA+B0O,aAA/B;;AAEA;AACAtW,eAAMQ,OAAN,CAAcO,QAAd,CAAuB+U,OAAvB,GAAiCO,aAAjC;AACArW,eAAMQ,OAAN,CAAcO,QAAd,CAAuBS,OAAvB,GAAiC8U,aAAjC;;AAEA,gBAAOF,kBAAP;AAEH,MA1BD;;AA4BArV,cAAS0V,mBAAT,GAA+B,YAAW;;AAEtC,aAAIG,SAAS5W,MAAMQ,OAAN,CAAcO,QAAd,CAAuBS,OAApC;;AAEA,aAAIoV,OAAOlI,SAAP,CAAiBC,QAAjB,CAA0B,QAA1B,CAAJ,EAAyC;AACrC3O,mBAAMQ,OAAN,CAAcO,QAAd,CAAuB8U,iBAAvB;AACH,UAFD,MAEO;AACH7V,mBAAMQ,OAAN,CAAcO,QAAd,CAAuB8V,iBAAvB;AACH;;AAED7W,eAAMQ,OAAN,CAAciB,OAAd,CAAsByT,KAAtB;AACAlV,eAAMQ,OAAN,CAAcO,QAAd,CAAuBmU,KAAvB;AAEH,MAbD;;AAeAnU,cAAS4V,qBAAT,GAAiC,YAAW;;AAExC3W,eAAMQ,OAAN,CAAcO,QAAd,CAAuBS,OAAvB,CAA+BkN,SAA/B,CAAyCiB,MAAzC,CAAgD,QAAhD;AACH,MAHD;;AAKA5O,cAAS2V,sBAAT,GAAkC,YAAW;;AAEzC,aAAIhE,eAAe1S,MAAMO,OAAN,CAAcsO,WAAjC;AAAA,aACIiI,qBADJ;;AAGApE,sBAAa/C,MAAb;;AAEAmH,iCAAwB9W,MAAMmB,KAAN,CAAYc,QAAZ,CAAqB8L,UAArB,CAAgC3B,MAAxD;;AAEA;;;AAGA,aAAI0K,0BAA0B,CAA9B,EAAiC;;AAE7B;AACA9W,mBAAMO,OAAN,CAAcsO,WAAd,GAA4B,IAA5B;;AAEA;AACA7O,mBAAMG,EAAN,CAASmL,eAAT;AACH;;AAEDtL,eAAMG,EAAN,CAAS4C,UAAT;;AAEA/C,eAAMQ,OAAN,CAAc0U,KAAd;AACH,MAxBD;;AA0BAnU,cAAS8V,iBAAT,GAA6B,YAAW;AACpC7W,eAAMQ,OAAN,CAAcO,QAAd,CAAuBS,OAAvB,CAA+BkN,SAA/B,CAAyCe,GAAzC,CAA6C,QAA7C;AACH,MAFD;;AAIA1O,cAAS8U,iBAAT,GAA6B,YAAW;AACpC7V,eAAMQ,OAAN,CAAcO,QAAd,CAAuBS,OAAvB,CAA+BkN,SAA/B,CAAyCiB,MAAzC,CAAgD,QAAhD;AACH,MAFD;;AAIA,YAAO5O,QAAP;AAEH,EAlPc,CAkPZ,EAlPY,CAAf;;AAoPAA,UAASd,IAAT;;AAEAH,QAAOC,OAAP,GAAiBgB,QAAjB,C;;;;;;;;ACtPA,KAAImK,SAAU,UAASA,MAAT,EAAiB;;AAE3BA,YAAOjL,IAAP,GAAc,YAAW,CAExB,CAFD;;AAIAiL,YAAO6L,aAAP,GAAuB,IAAvB;AACA7L,YAAO8L,aAAP,GAAuB,IAAvB;AACA9L,YAAO+L,cAAP,GAAwB,IAAxB;;AAEA;;;;AAIA/L,YAAOgM,eAAP,GAAyB,IAAzB;;AAEA;;;;;AAKAhM,YAAOC,IAAP,GAAc,YAAW;;AAErB,aAAIgM,eAAe,KAAKC,gBAAL,EAAnB;AAAA,aACI5W,UAAeR,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BD,OAD7C;AAAA,aAEIE,UAAevB,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAF7C;;AAIA,aAAI4V,aAAa/K,MAAb,GAAsB,CAA1B,EAA6B;;AAEzB;AACApM,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqB8F,IAArB;;AAEA;AACAxQ,qBAAQkO,SAAR,CAAkBe,GAAlB,CAAsB,QAAtB;;AAEA;AACAzP,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqBmM,WAArB;AACH;AAEJ,MAzBD;;AA2BA;;;;;AAKAnM,YAAOgK,KAAP,GAAe,YAAW;AACtB,aAAI1U,UAAUR,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BD,OAAxC;AACAb,iBAAQkO,SAAR,CAAkBiB,MAAlB,CAAyB,QAAzB;AACH,MAHD;;AAKA;;;;;AAKAzE,YAAO8F,IAAP,GAAc,YAAW;;AAErB,aAAI,CAAC,KAAKiG,cAAV,EAA0B;AACtB,kBAAKA,cAAL,GAAsB,KAAKK,iBAAL,EAAtB;AACH;;AAED,aAAIC,SAAkB,KAAKC,kBAAL,EAAtB;AAAA,aACIzC,gBAAkB,CADtB;AAAA,aAEIvU,UAAkBR,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BD,OAFhD;AAAA,aAGIoW,cAHJ;AAAA,aAIIC,cAJJ;;AAMA,aAAIlX,QAAQmX,YAAR,KAAyB,CAA7B,EAAgC;AAC5B5C,6BAAgB,EAAhB;AACH;;AAED0C,0BAAiBF,OAAOK,CAAP,GAAW,KAAKX,cAAL,CAAoBY,IAAhD;AACAH,0BAAiBH,OAAOO,CAAP,GAAWhU,OAAOiU,OAAlB,GAA4B,KAAKd,cAAL,CAAoBe,GAAhD,GAAsDjD,aAAtD,GAAsEvU,QAAQmX,YAA/F;;AAEAnX,iBAAQiV,KAAR,CAAcC,SAAd,oBAAyCC,KAAKC,KAAL,CAAW6B,cAAX,CAAzC,YAA0E9B,KAAKC,KAAL,CAAW8B,cAAX,CAA1E;;AAEA;AACA1X,eAAMQ,OAAN,CAAc0K,MAAd,CAAqB+M,YAArB;AACAjY,eAAMQ,OAAN,CAAc0K,MAAd,CAAqBgN,WAArB;AAEH,MAzBD;;AA2BA;;;;;;AAMAhN,YAAOW,WAAP,GAAqB,UAASxB,KAAT,EAAgBzG,IAAhB,EAAsB;;AAEvC;;;;AAIA,iBAAQA,IAAR;AACI,kBAAK,YAAL;AAAoB5D,uBAAMQ,OAAN,CAAc0K,MAAd,CAAqBiN,gBAArB,CAAsC9N,KAAtC,EAA6CzG,IAA7C,EAAoD;AACxE;AAAoB5D,uBAAMQ,OAAN,CAAc0K,MAAd,CAAqBkN,iBAArB,CAAuCxU,IAAvC,EAA8C;AAFtE;;AAKA;;;;AAIA5D,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAA1B,CAAkCwM,UAAlC,CAA6CsK,OAA7C,CAAqDrY,MAAMQ,OAAN,CAAc0K,MAAd,CAAqBoN,UAA1E;AACH,MAhBD;;AAkBA;;;;;AAKApN,YAAOoM,iBAAP,GAA2B,YAAW;;AAElC,aAAIjW,UAAUrB,MAAMmB,KAAN,CAAYE,OAA1B;AAAA,aACIkX,SAAU,KAAKC,SAAL,CAAenX,OAAf,CADd;;AAGA,cAAK4V,cAAL,GAAsBsB,MAAtB;AACA,gBAAOA,MAAP;AAEH,MARD;;AAUA;;;;;;;;AAQArN,YAAOsN,SAAP,GAAmB,UAAW7S,EAAX,EAAgB;;AAE/B,aAAI8S,KAAK,CAAT;AACA,aAAIC,KAAK,CAAT;;AAEA,gBAAO/S,MAAM,CAACgT,MAAOhT,GAAGiT,UAAV,CAAP,IAAiC,CAACD,MAAOhT,GAAG6P,SAAV,CAAzC,EAAiE;AAC7DiD,mBAAO9S,GAAGiT,UAAH,GAAgBjT,GAAGkT,UAA1B;AACAH,mBAAO/S,GAAG6P,SAAH,GAAe7P,GAAGmT,SAAzB;AACAnT,kBAAKA,GAAGoT,YAAR;AACH;AACD,gBAAO,EAAEf,KAAKU,EAAP,EAAWb,MAAMY,EAAjB,EAAP;AACH,MAXD;;AAaA;;;;;;AAMAvN,YAAOsM,kBAAP,GAA4B,YAAW;;AAEnC,aAAIwB,MAAMzV,SAASyL,SAAnB;AAAA,aAA8BiK,KAA9B;AACA,aAAIrB,IAAI,CAAR;AAAA,aAAWE,IAAI,CAAf;;AAEA,aAAIkB,GAAJ,EAAS;;AAEL,iBAAIA,IAAIpV,IAAJ,IAAY,SAAhB,EAA2B;AACvBqV,yBAAQD,IAAIE,WAAJ,EAAR;AACAD,uBAAME,QAAN,CAAe,IAAf;AACAvB,qBAAIqB,MAAMG,YAAV;AACAtB,qBAAImB,MAAMI,WAAV;AACH;AAEJ,UATD,MASO,IAAIvV,OAAOmL,YAAX,EAAyB;;AAE5B+J,mBAAMlV,OAAOmL,YAAP,EAAN;;AAEA,iBAAI+J,IAAIM,UAAR,EAAoB;;AAEhBL,yBAAQD,IAAIhH,UAAJ,CAAe,CAAf,EAAkBuH,UAAlB,EAAR;AACA,qBAAIN,MAAMO,cAAV,EAA0B;AACtBP,2BAAME,QAAN,CAAe,IAAf;AACA,yBAAIM,OAAOR,MAAMO,cAAN,GAAuB,CAAvB,CAAX;AACA5B,yBAAI6B,KAAK5B,IAAT;AACAC,yBAAI2B,KAAKzB,GAAT;AACH;AAEJ;AACJ;AACD,gBAAO,EAAEJ,GAAGA,CAAL,EAAQE,GAAGA,CAAX,EAAP;AACH,MA/BD;;AAiCA;;;;;;AAMA5M,YAAOkM,gBAAP,GAA0B,SAASA,gBAAT,GAA2B;;AAEjD,aAAID,eAAe,EAAnB;;AAEA,aAAIrT,OAAOmL,YAAX,EAAwB;AAAE;AACtBkI,4BAAerT,OAAOmL,YAAP,GAAsByK,QAAtB,EAAf;AACH;;AAED,gBAAOvC,YAAP;AACH,MATD;;AAWA;AACAjM,YAAOmM,WAAP,GAAqB,YAAW;;AAE5B,aAAI9V,UAAUvB,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAAxC;AACAA,iBAAQmN,SAAR,CAAkBe,GAAlB,CAAsB,QAAtB;;AAEAzP,eAAMQ,OAAN,CAAc0K,MAAd,CAAqB6L,aAArB,GAAqC,IAArC;;AAEA;AACA/W,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAA1B,CAAkCwM,UAAlC,CAA6CsK,OAA7C,CAAqDrY,MAAMQ,OAAN,CAAc0K,MAAd,CAAqBoN,UAA1E;AAEH,MAVD;;AAYA;AACApN,YAAO+M,YAAP,GAAsB,YAAW;AAC7B,aAAI1W,UAAUvB,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAAxC;AACAA,iBAAQmN,SAAR,CAAkBiB,MAAlB,CAAyB,QAAzB;;AAEA3P,eAAMQ,OAAN,CAAc0K,MAAd,CAAqB6L,aAArB,GAAqC,KAArC;AACH,MALD;;AAOA;AACA7L,YAAOyO,WAAP,GAAqB,YAAW;AAC5B,aAAI/C,SAAS5W,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BE,OAAvC;AACAoV,gBAAOlI,SAAP,CAAiBe,GAAjB,CAAqB,QAArB;;AAEAzP,eAAMQ,OAAN,CAAc0K,MAAd,CAAqB8L,aAArB,GAAqC,IAArC;AACH,MALD;;AAOA;AACA9L,YAAOgN,WAAP,GAAqB,YAAW;AAC5B,aAAItB,SAAS5W,MAAMmB,KAAN,CAAYG,aAAZ,CAA0BE,OAAvC;AACAoV,gBAAO9I,SAAP,GAAmB,EAAnB;AACA8I,gBAAOlI,SAAP,CAAiBiB,MAAjB,CAAwB,QAAxB;AACA3P,eAAMQ,OAAN,CAAc0K,MAAd,CAAqB8L,aAArB,GAAqC,KAArC;AACH,MALD;;AAOA;AACA9L,YAAOiN,gBAAP,GAA0B,UAAS9N,KAAT,EAAgBzG,IAAhB,EAAsB;;AAE5C,aAAIgW,WAAW,KAAKC,YAAL,EAAf;;AAEA,aAAIC,WAAkB9Z,MAAMO,OAAN,CAAcsO,WAApC;AAAA,aACIqI,kBAAkBlX,MAAMQ,OAAN,CAAc0K,MAAd,CAAqBgM,eAD3C;;AAGA,aAAI0C,QAAJ,EAAc;;AAEV,iBAAI5K,YAAclL,OAAOmL,YAAP,EAAlB;AAAA,iBACIE,aAAcH,UAAUG,UAD5B;;AAGA+H,+BAAkBlX,MAAMQ,OAAN,CAAc0K,MAAd,CAAqB6O,aAArB,CAAmCD,QAAnC,CAAlB;;AAEA;;;;;;AAMA9Z,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqB8O,gBAArB,CAAsCF,QAAtC,EAAgD5C,eAAhD;;AAEAlX,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqBkN,iBAArB,CAAuC,QAAvC;AAEH,UAjBD,MAiBO;;AAEH;AACA,iBAAIxB,SAAS5W,MAAMW,IAAN,CAAWsZ,YAAX,EAAb;AACAja,mBAAMmB,KAAN,CAAYG,aAAZ,CAA0BE,OAA1B,CAAkCoG,WAAlC,CAA8CgP,MAA9C;;AAEA5W,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqB+M,YAArB;AACAjY,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqByO,WAArB;;AAEAzC,+BAAkBlX,MAAMQ,OAAN,CAAc0K,MAAd,CAAqB6O,aAArB,CAAmCD,QAAnC,CAAlB;;AAEA;;;;;AAKAlD,oBAAOsD,KAAP;AACA7P,mBAAM8P,cAAN;;AAEA;AACAvD,oBAAO3M,gBAAP,CAAwB,SAAxB,EAAmC,UAASI,KAAT,EAAe;;AAE9C,qBAAIA,MAAM+P,OAAN,IAAiBpa,MAAME,IAAN,CAAWyE,IAAX,CAAgBG,KAArC,EAA4C;;AAExC9E,2BAAMQ,OAAN,CAAc0K,MAAd,CAAqB8O,gBAArB,CAAsCF,QAAtC,EAAgD5C,eAAhD;AACAlX,2BAAMQ,OAAN,CAAc0K,MAAd,CAAqBmP,SAArB,CAA+BzD,OAAO0D,KAAtC;;AAEA;;;AAGAjQ,2BAAM8P,cAAN;AACA9P,2BAAMkQ,wBAAN;;AAEAva,2BAAMQ,OAAN,CAAc0K,MAAd,CAAqBsP,UAArB;AACH;AAEJ,cAhBD,EAgBG,KAhBH;AAiBH;AACJ,MA9DD;;AAgEAtP,YAAO2O,YAAP,GAAsB,YAAW;;AAE7B,aAAID,WAAW,KAAf;;AAEA5Z,eAAMmB,KAAN,CAAYG,aAAZ,CAA0BC,OAA1B,CAAkCwM,UAAlC,CAA6CsK,OAA7C,CAAqD,UAASpP,IAAT,EAAe;AAChE,iBAAIwR,WAAWxR,KAAKmF,OAAL,CAAaxK,IAA5B;;AAEA,iBAAI6W,YAAY,MAAZ,IAAsBxR,KAAKyF,SAAL,CAAeC,QAAf,CAAwB,cAAxB,CAA1B,EAAmE;AAC/DiL,4BAAW,IAAX;AACH;AACJ,UAND;;AAQA,gBAAOA,QAAP;AACH,MAbD;;AAeA;AACA1O,YAAOkN,iBAAP,GAA2B,UAASxU,IAAT,EAAe;AACtCL,kBAASmX,WAAT,CAAqB9W,IAArB,EAA2B,KAA3B,EAAkC,IAAlC;AACH,MAFD;;AAIA;;;;;;;AAOAsH,YAAOmP,SAAP,GAAmB,UAASvU,GAAT,EAAc;;AAE7BvC,kBAASmX,WAAT,CAAqB,YAArB,EAAmC,KAAnC,EAA0C5U,GAA1C;;AAEA;AACA9F,eAAMQ,OAAN,CAAc0K,MAAd,CAAqBgN,WAArB;AACH,MAND;;AAQA;;;;;AAKAhN,YAAO6O,aAAP,GAAuB,UAASY,WAAT,EAAsB;;AAEzC,aAAI1B,QAAQnV,OAAOmL,YAAP,GAAsB+C,UAAtB,CAAiC,CAAjC,CAAZ;AAAA,aACI4I,oBAAoB3B,MAAMM,UAAN,EADxB;AAAA,aAEIjX,KAFJ;;AAIAsY,2BAAkBC,kBAAlB,CAAqCF,WAArC;AACAC,2BAAkBE,MAAlB,CAAyB7B,MAAM8B,cAA/B,EAA+C9B,MAAM+B,WAArD;;AAEA1Y,iBAAQsY,kBAAkBlB,QAAlB,GAA6BtN,MAArC;;AAEA,gBAAO;AACH9J,oBAAOA,KADJ;AAEH2Y,kBAAK3Y,QAAQ2W,MAAMS,QAAN,GAAiBtN;AAF3B,UAAP;AAIH,MAfD;;AAiBA;;;;;;;;AAQAlB,YAAO8O,gBAAP,GAA0B,UAASW,WAAT,EAAsBO,QAAtB,EAAgC;;AAEtD,aAAIjC,QAAY1V,SAAS2V,WAAT,EAAhB;AAAA,aACIiC,YAAY,CADhB;;AAGAlC,eAAMmC,QAAN,CAAeT,WAAf,EAA4B,CAA5B;AACA1B,eAAME,QAAN,CAAe,IAAf;;AAEA,aAAIkC,YAAY,CAACV,WAAD,CAAhB;AAAA,aACI9K,IADJ;AAAA,aAEIyL,aAAa,KAFjB;AAAA,aAGIC,OAAO,KAHX;AAAA,aAIIC,aAJJ;;AAMA,gBAAO,CAACD,IAAD,KAAU1L,OAAOwL,UAAUI,GAAV,EAAjB,CAAP,EAA0C;;AAEtC,iBAAI5L,KAAKjK,QAAL,IAAiB,CAArB,EAAwB;;AAEpB4V,iCAAgBL,YAAYtL,KAAKzD,MAAjC;;AAEA,qBAAI,CAACkP,UAAD,IAAeJ,SAAS5Y,KAAT,IAAkB6Y,SAAjC,IAA8CD,SAAS5Y,KAAT,IAAkBkZ,aAApE,EAAmF;AAC/EvC,2BAAMmC,QAAN,CAAevL,IAAf,EAAqBqL,SAAS5Y,KAAT,GAAiB6Y,SAAtC;AACAG,kCAAa,IAAb;AACH;AACD,qBAAIA,cAAcJ,SAASD,GAAT,IAAgBE,SAA9B,IAA2CD,SAASD,GAAT,IAAgBO,aAA/D,EAA8E;AAC1EvC,2BAAM6B,MAAN,CAAajL,IAAb,EAAmBqL,SAASD,GAAT,GAAeE,SAAlC;AACAI,4BAAO,IAAP;AACH;AACDJ,6BAAYK,aAAZ;AACH,cAbD,MAaO;AACH,qBAAIhP,IAAIqD,KAAK9B,UAAL,CAAgB3B,MAAxB;AACA,wBAAOI,GAAP,EAAY;AACR6O,+BAAUzM,IAAV,CAAeiB,KAAK9B,UAAL,CAAgBvB,CAAhB,CAAf;AACH;AACJ;AACJ;;AAED,aAAIwM,MAAMlV,OAAOmL,YAAP,EAAV;AACA+J,aAAI0C,eAAJ;AACA1C,aAAI2C,QAAJ,CAAa1C,KAAb;AACH,MAxCD;;AA0CA;;;;;AAKA/N,YAAOsP,UAAP,GAAoB,YAAW;AAC3B,aAAIxL,YAAYlL,OAAOmL,YAAP,EAAhB;AACAD,mBAAU0M,eAAV;AACH,MAHD;;AAKA;;;;;AAKAxQ,YAAOoN,UAAP,GAAoB,UAASrP,IAAT,EAAe;AAC/B,aAAIwR,WAAWxR,KAAKmF,OAAL,CAAaxK,IAA5B;;AAEA,aAAIL,SAASqY,iBAAT,CAA2BnB,QAA3B,CAAJ,EAA0C;AACtCza,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqB2Q,oBAArB,CAA0C5S,IAA1C;AACH,UAFD,MAEO;AACHjJ,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqB4Q,sBAArB,CAA4C7S,IAA5C;AACH;;AAED;;;;AAIA,aAAI+F,YAAYlL,OAAOmL,YAAP,EAAhB;AAAA,aACI8M,MAAM/M,UAAUG,UAAV,CAAqB/K,UAD/B;;AAGA,aAAI2X,IAAIxH,OAAJ,IAAe,GAAf,IAAsBkG,YAAY,MAAtC,EAA8C;AAC1Cza,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqB2Q,oBAArB,CAA0C5S,IAA1C;AACH;AACJ,MAnBD;;AAqBA;;;;;AAKAiC,YAAO2Q,oBAAP,GAA8B,UAASjR,MAAT,EAAiB;AAC3CA,gBAAO8D,SAAP,CAAiBe,GAAjB,CAAqB,cAArB;;AAEA;AACA,aAAI7E,OAAOwD,OAAP,CAAexK,IAAf,IAAuB,MAA3B,EAAmC;AAC/B,iBAAI6F,OAAOmB,OAAOmD,UAAP,CAAkB,CAAlB,CAAX;AACAtE,kBAAKiF,SAAL,CAAeiB,MAAf,CAAsB,cAAtB;AACAlG,kBAAKiF,SAAL,CAAee,GAAf,CAAmB,gBAAnB;AACH;AACJ,MATD;;AAWA;;;;;AAKAvE,YAAO4Q,sBAAP,GAAgC,UAASlR,MAAT,EAAiB;AAC7CA,gBAAO8D,SAAP,CAAiBiB,MAAjB,CAAwB,cAAxB;;AAEA;AACA,aAAI/E,OAAOwD,OAAP,CAAexK,IAAf,IAAuB,MAA3B,EAAmC;AAC/B,iBAAI6F,OAAOmB,OAAOmD,UAAP,CAAkB,CAAlB,CAAX;AACAtE,kBAAKiF,SAAL,CAAeiB,MAAf,CAAsB,gBAAtB;AACAlG,kBAAKiF,SAAL,CAAee,GAAf,CAAmB,cAAnB;AACH;AACJ,MATD;;AAYA,YAAOvE,MAAP;AACH,EA9dY,CA8dV,EA9dU,CAAb;;AAgeAA,QAAOjL,IAAP;;AAEAH,QAAOC,OAAP,GAAiBmL,MAAjB,C;;;;;;;;ACleA,KAAIzJ,UAAW,UAASA,OAAT,EAAkB;;AAE7BA,aAAQxB,IAAR,GAAe,YAAW;AACtBJ,SAAA,mBAAAA,CAAQ,CAAR;AACH,MAFD;;AAIA4B,aAAQuT,MAAR,GAAiB,KAAjB;;AAEA;AACAvT,aAAQmF,IAAR,GAAe,YAAW;;AAEtB;AACA,aAAI5G,MAAMQ,OAAN,CAAcO,QAAd,CAAuBiU,MAA3B,EAAmC;AAC/BhV,mBAAMQ,OAAN,CAAcO,QAAd,CAAuBmU,KAAvB;AACH;;AAED;AACAlV,eAAMmB,KAAN,CAAYM,OAAZ,CAAoBiN,SAApB,CAA8Be,GAA9B,CAAkC,QAAlC;;AAEA;AACAzP,eAAMmB,KAAN,CAAYO,UAAZ,CAAuBgN,SAAvB,CAAiCe,GAAjC,CAAqC,SAArC;;AAEA;AACAzP,eAAMQ,OAAN,CAAciB,OAAd,CAAsBuT,MAAtB,GAA+B,IAA/B;AAEH,MAhBD;;AAkBA;AACAvT,aAAQyT,KAAR,GAAgB,YAAW;;AAEvB;AACAlV,eAAMmB,KAAN,CAAYM,OAAZ,CAAoBiN,SAApB,CAA8BiB,MAA9B,CAAqC,QAArC;;AAEA;AACA3P,eAAMmB,KAAN,CAAYO,UAAZ,CAAuBgN,SAAvB,CAAiCiB,MAAjC,CAAwC,SAAxC;;AAEA;AACA3P,eAAMQ,OAAN,CAAciB,OAAd,CAAsBuT,MAAtB,GAA+B,KAA/B;AAEH,MAXD;;AAaAvT,aAAQua,IAAR,GAAe,YAAU;;AAErB,aAAIC,cAAcjc,MAAMQ,OAAN,CAAcyU,OAAhC;AAAA,aACIxU,QAAcyb,OAAOvX,IAAP,CAAY3E,MAAMS,KAAlB,CADlB;AAAA,aAEI0b,aAAcnc,MAAMmB,KAAN,CAAYa,cAF9B;AAAA,aAGIoa,aAHJ;AAAA,aAIIC,oBAAoB,CAJxB;AAAA,aAKIC,YALJ;;AAOA;AACA,cAAK,IAAIrT,IAAT,IAAiBjJ,MAAMS,KAAvB,EAA+B;AAC3B,iBAAI,CAACT,MAAMS,KAAN,CAAYwI,IAAZ,EAAkBG,gBAAvB,EACIiT;AACP;;AAED,aAAK,CAACJ,WAAN,EAAoB;;AAEhB;AACA,kBAAKK,YAAL,IAAqBH,UAArB;AAAiC;AAAjC;AAEH,UALD,MAKO;;AAEHC,6BAAgB3b,MAAM8b,OAAN,CAAcN,WAAd,IAA6B,CAA7C;;AAEA,iBAAIO,sBAAsBJ,iBAAiB3b,MAAM2L,MAAN,IAAgBiQ,oBAAoB,CAApC,CAA3C;;AAEA,iBAAKG,mBAAL,EAA2B;;AAEvBJ,iCAAgB,CAAhB;;AAEA;AACA,sBAAK,IAAInT,IAAT,IAAiBjJ,MAAMS,KAAvB,EAA+B;;AAE3B,yBAAIT,MAAMS,KAAN,CAAYwI,IAAZ,EAAkBG,gBAAtB,EAAuC;AACnC;AACH;;AAEDgT;AACH;AAEJ;;AAEDE,4BAAe7b,MAAM2b,aAAN,CAAf;AAEH;;AAED,cAAK,IAAIxR,MAAT,IAAmBuR,UAAnB;AAA+BA,wBAAWvR,MAAX,EAAmB8D,SAAnB,CAA6BiB,MAA7B,CAAoC,UAApC;AAA/B,UACAwM,WAAWG,YAAX,EAAyB5N,SAAzB,CAAmCe,GAAnC,CAAuC,UAAvC;AACAzP,eAAMQ,OAAN,CAAcyU,OAAd,GAAwBqH,YAAxB;AAEH,MAlDD;;AAoDA;;;;AAIA7a,aAAQoK,WAAR,GAAsB,YAAW;;AAE7B;;;AAGA,aAAI4Q,qBAAqB,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,WAA1B,EAAuC,SAAvC,CAAzB;AAAA,aACIxT,OAAqBjJ,MAAMS,KAAN,CAAYT,MAAMQ,OAAN,CAAcyU,OAA1B,CADzB;AAAA,aAEIvB,cAAqB1T,MAAMO,OAAN,CAAcsO,WAFvC;AAAA,aAGI4B,oBAAqBzQ,MAAMY,KAAN,CAAYsR,UAHrC;AAAA,aAII5B,eAJJ;AAAA,aAKIoM,cALJ;AAAA,aAMIpP,SANJ;;AAQA;AACAgD,2BAAkBrH,KAAKvG,IAAL,EAAlB;;AAEA;AACA4K,qBAAY;AACRvC,oBAAYuF,eADJ;AAER1M,mBAAYqF,KAAKrF,IAFT;AAGR8J,wBAAY;AAHJ,UAAZ;;AAMA,aACIgG,eACA+I,mBAAmBF,OAAnB,CAA2B7I,YAAYtF,OAAZ,CAAoBnF,IAA/C,MAAyD,CAAC,CAD1D,IAEAyK,YAAY/B,WAAZ,CAAwBC,IAAxB,OAAmC,EAHvC,EAIC;AACG;AACA5R,mBAAMO,OAAN,CAAc6Q,WAAd,CAA0BsC,WAA1B,EAAuCpD,eAAvC,EAAwDrH,KAAKrF,IAA7D;AAEH,UARD,MAQO;;AAEH;AACA5D,mBAAMO,OAAN,CAAcoL,WAAd,CAA0B2B,SAA1B;;AAEA;AACAmD;AAEH;;AAED;AACAiM,0BAAiBzT,KAAKyT,cAAtB;;AAEA,aAAIA,kBAAkB,OAAOA,cAAP,IAAyB,UAA/C,EAA2D;AACvDA,4BAAe/V,IAAf,CAAoB0D,KAApB;AACH;;AAED6G,oBAAW,YAAW;;AAElB;AACAlR,mBAAMY,KAAN,CAAY+b,UAAZ,CAAuBlM,iBAAvB;AAEH,UALD,EAKG,EALH;;AAQA;;;AAGAzQ,eAAMO,OAAN,CAAcqL,kBAAd;;AAEA;;;AAGA5L,eAAMQ,OAAN,CAAcwQ,IAAd;AACH,MAjED;;AAmEA,YAAOvP,OAAP;AAEH,EAtKa,CAsKX,EAtKW,CAAd;;AAwKAA,SAAQxB,IAAR;;AAEAH,QAAOC,OAAP,GAAiB0B,OAAjB,C;;;;;;;;AC1KA,KAAIhB,QAAS,UAASA,KAAT,EAAgB;;AAEzB,YAAOA,KAAP;AAEH,EAJW,CAIT,EAJS,CAAZ;;AAMAX,QAAOC,OAAP,GAAiBU,KAAjB,C;;;;;;;;ACNA,KAAImc,YAAa,UAASA,SAAT,EAAoB;;AAEjCA,eAAUC,mBAAV,GAAgC,IAAhC;;AAEAD,eAAUtS,aAAV,GAA0B,UAASD,KAAT,EAAe;AACrC,iBAAQA,MAAM+P,OAAd;AACI,kBAAKpa,MAAME,IAAN,CAAWyE,IAAX,CAAgBE,GAArB;AAA6B7E,uBAAMU,QAAN,CAAeoc,aAAf,CAA6BzS,KAA7B,EAA2C;AACxE,kBAAKrK,MAAME,IAAN,CAAWyE,IAAX,CAAgBG,KAArB;AAA6B9E,uBAAMU,QAAN,CAAeqc,eAAf,CAA+B1S,KAA/B,EAA2C;AACxE,kBAAKrK,MAAME,IAAN,CAAWyE,IAAX,CAAgBO,GAArB;AAA6BlF,uBAAMU,QAAN,CAAesc,gBAAf,CAAgC3S,KAAhC,EAA2C;AACxE;AAA+BrK,uBAAMU,QAAN,CAAeuc,iBAAf,CAAiC5S,KAAjC,EAA4C;AAJ/E;AAMH,MAPD;;AASAuS,eAAUrS,WAAV,GAAwB,UAASF,KAAT,EAAe;AACnC,iBAAQA,MAAM+P,OAAd;AACI,kBAAKpa,MAAME,IAAN,CAAWyE,IAAX,CAAgBU,EAArB;AACA,kBAAKrF,MAAME,IAAN,CAAWyE,IAAX,CAAgBS,IAArB;AACA,kBAAKpF,MAAME,IAAN,CAAWyE,IAAX,CAAgBY,KAArB;AACA,kBAAKvF,MAAME,IAAN,CAAWyE,IAAX,CAAgBW,IAArB;AAA6BtF,uBAAMU,QAAN,CAAewc,eAAf,CAA+B7S,KAA/B,EAAuC;AAJxE;AAMH,MAPD;;AASAuS,eAAUE,aAAV,GAA0B,UAASzS,KAAT,EAAe;;AAErC,aAAK,CAACrK,MAAMQ,OAAN,CAAcwU,MAApB,EAA6B;AACzBhV,mBAAMQ,OAAN,CAAcoG,IAAd;AACH;;AAED,aAAI5G,MAAMQ,OAAN,CAAcwU,MAAd,IAAwB,CAAChV,MAAMQ,OAAN,CAAciB,OAAd,CAAsBuT,MAAnD,EAA2D;AACvDhV,mBAAMQ,OAAN,CAAciB,OAAd,CAAsBmF,IAAtB;AACH,UAFD,MAEO;AACH5G,mBAAMQ,OAAN,CAAciB,OAAd,CAAsBua,IAAtB;AACH;;AAED3R,eAAM8P,cAAN;AACH,MAbD;;AAeA;;;;AAIAyC,eAAUG,eAAV,GAA4B,UAAS1S,KAAT,EAAe;;AAEvC;AACA,aAAI8S,uBAAuBnd,MAAMU,QAAN,CAAe0c,4BAAf,EAA3B;;AAEA,aAAID,oBAAJ,EAA0B;AACtB9S,mBAAM8P,cAAN;;AAEA;;;;AAIAna,mBAAMY,KAAN,CAAYsR,UAAZ,GAAyB,CAAC,CAA1B;;AAEAlS,mBAAMU,QAAN,CAAe2c,mBAAf;AACA;AACH;;AAED,aAAIhT,MAAMnG,MAAN,CAAaoZ,eAAb,IAAgC,MAApC,EAA4C;;AAExC;AACAtd,mBAAMY,KAAN,CAAY2c,qBAAZ;AACH;;AAED,aAAI,CAACvd,MAAMO,OAAN,CAAcsO,WAAnB,EAAgC;AAC5B;;;AAGA7O,mBAAMU,QAAN,CAAe2c,mBAAf,CAAmChT,KAAnC;AACA;AACH;;AAGD,aAAIoG,oBAA0BzQ,MAAMY,KAAN,CAAY8P,oBAAZ,MAAsC,CAApE;AAAA,aACIgD,cAA0B1T,MAAMO,OAAN,CAAcsO,WAD5C;AAAA,aAEI5F,OAA0ByK,YAAYtF,OAAZ,CAAoBnF,IAFlD;AAAA,aAGIuU,0BAA0Bxd,MAAMQ,OAAN,CAAcwU,MAAd,IACtBhV,MAAMQ,OAAN,CAAcyU,OADQ,IAEtB5K,MAAMnG,MAAN,IAAgBlE,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBoO,iBAAnB,CALxB;;AAOA;AACA,aAAIgN,mBAAmBzd,MAAMS,KAAN,CAAYwI,IAAZ,EAAkBwU,gBAAzC;;AAEA;AACA,aAAItK,iBAAiB,WAArB;;AAEA;;;AAGA,aAAKqK,uBAAL,EAA+B;;AAE3BnT,mBAAM8P,cAAN;;AAEAna,mBAAMQ,OAAN,CAAciB,OAAd,CAAsBoK,WAAtB,CAAkCxB,KAAlC;;AAEArK,mBAAMQ,OAAN,CAAc0U,KAAd;;AAEA;AAEH;;AAED;;;AAGA,aAAK7K,MAAMqT,QAAN,IAAkB,CAACD,gBAAxB,EAA0C;AACtCzd,mBAAMU,QAAN,CAAe2c,mBAAf,CAAmCrd,MAAMO,OAAN,CAAcmS,YAAjD,EAA+DrI,KAA/D;AACAA,mBAAM8P,cAAN;AAEH,UAJD,MAIO,IAAM9P,MAAMqT,QAAN,IAAkB,CAACD,gBAApB,IAA0C,CAACpT,MAAMqT,QAAP,IAAmBD,gBAAlE,EAAqF;AACxF;AACA;AACH;;AAED,aAAIE,iBAAiB,KAArB;AAAA,aACIC,mBAAmB9Z,OAAOmL,YAAP,EADvB;AAAA,aAEI4O,sBAAsBD,iBAAiBzO,UAF3C;AAAA,aAGI2O,sBAAsB9d,MAAMY,KAAN,CAAY4Q,QAAZ,CAAqBuM,QAArB,EAH1B;AAAA,aAIIC,4CAA4C,KAJhD;;AAMA;;;;;AAKAA,qDAA4CH,uBAAuBA,oBAAoBzZ,UAApB,CAA+BkZ,eAA/B,IAAkD,MAArH;;AAEA;;;AAGA,aACIO,oBAAoBjY,QAApB,IAAgC5F,MAAME,IAAN,CAAWqE,SAAX,CAAqBE,IAArD,IACA,CAACuZ,yCADD,IAEA,CAACF,mBAHL,EAIC;;AAEGzT,mBAAM8P,cAAN;;AAEAna,mBAAME,IAAN,CAAWgD,GAAX,CAAe,wBAAf;;AAEAlD,mBAAMO,OAAN,CAAc0R,UAAd,CAAyBxB,iBAAzB;;AAEA;AACA,iBAAI,CAACzQ,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBoO,oBAAoB,CAAvC,EAA0CkB,WAA1C,CAAsDC,IAAtD,EAAL,EAAmE;AAC/D5R,uBAAMQ,OAAN,CAAcyQ,cAAd;AACH;AAEJ,UAjBD,MAiBO;;AAEH,iBAAK4M,uBAAuBA,oBAAoBzZ,UAAhD,EAA4D;;AAExDuZ,kCAAiB,CAACE,oBAAoBzZ,UAApB,CAA+BE,WAAjD;AAEH;;AAED,iBAAKqZ,kBAAkBG,mBAAvB,EAA6C;;AAEzCzT,uBAAM8P,cAAN;;AAEAna,uBAAME,IAAN,CAAWgD,GAAX,CAAe,kDAAf;;AAEAlD,uBAAMO,OAAN,CAAcoL,WAAd,CAA0B;AACtB/H,2BAAQuP,cADc;AAEtBpI,4BAAQ/K,MAAMS,KAAN,CAAY0S,cAAZ,EAA4B1H,MAA5B;AAFc,kBAA1B,EAGG,IAHH;;AAKAzL,uBAAMQ,OAAN,CAAcwQ,IAAd;AACAhR,uBAAMQ,OAAN,CAAcoG,IAAd;;AAEA;AACA5G,uBAAMQ,OAAN,CAAcyQ,cAAd;AAEH,cAjBD,MAiBO;;AAEHjR,uBAAME,IAAN,CAAWgD,GAAX,CAAe,yBAAf;AAEH;AAEJ;;AAED;AACAlD,eAAMG,EAAN,CAAS4C,UAAT;AAEH,MA9ID;;AAgJA6Z,eAAUI,gBAAV,GAA6B,UAAS3S,KAAT,EAAe;;AAExC;AACArK,eAAMQ,OAAN,CAAc0U,KAAd;;AAEA;AACAlV,eAAMQ,OAAN,CAAciB,OAAd,CAAsByT,KAAtB;;AAEA7K,eAAM8P,cAAN;AAEH,MAVD;;AAYAyC,eAAUM,eAAV,GAA4B,UAAS7S,KAAT,EAAe;;AAEvCrK,eAAMO,OAAN,CAAcqL,kBAAd;;AAEA;AACA5L,eAAMQ,OAAN,CAAc0U,KAAd;AACAlV,eAAMQ,OAAN,CAAcwQ,IAAd;AAEH,MARD;;AAUA4L,eAAUK,iBAAV,GAA8B,UAAS5S,KAAT,EAAgB;;AAE1CrK,eAAMQ,OAAN,CAAc0U,KAAd;;AAEA,aAAI,CAAClV,MAAMQ,OAAN,CAAc0K,MAAd,CAAqB8L,aAA1B,EAAyC;AACrChX,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqBgK,KAArB;AACAlV,mBAAMO,OAAN,CAAcmP,SAAd;AACH;AACJ,MARD;;AAUAkN,eAAUpS,eAAV,GAA4B,UAAUH,KAAV,EAAiB;;AAEzCrK,eAAMO,OAAN,CAAcqL,kBAAd,CAAiCvB,MAAMnG,MAAvC;;AAEAlE,eAAMG,EAAN,CAAS4C,UAAT;;AAEA,aAAIoU,eAAenX,MAAMQ,OAAN,CAAc0K,MAAd,CAAqBkM,gBAArB,EAAnB;;AAEA;;;AAGA,aAAID,aAAa/K,MAAb,KAAwB,CAA5B,EAA+B;AAC3BpM,mBAAMQ,OAAN,CAAc0K,MAAd,CAAqBgK,KAArB;AACH;;AAED;AACA,aAAI7K,MAAMnG,MAAN,CAAaoZ,eAAb,IAAgC,MAApC,EAA4C;;AAExCtd,mBAAMY,KAAN,CAAY2c,qBAAZ;AAEH;;AAED,aAAIvd,MAAMO,OAAN,CAAcsO,WAAd,KAA8B,IAAlC,EAAwC;;AAEpC;;;AAGA,iBAAIoP,mBAAmBje,MAAMkC,KAAN,CAAYG,MAAZ,CAAmB+J,MAAnB,GAA4B,CAA5B,GAAgCpM,MAAMkC,KAAN,CAAYG,MAAZ,CAAmB+J,MAAnB,GAA4B,CAA5D,GAAgE,CAAvF;;AAEA;AACA,iBAAIpM,MAAMkC,KAAN,CAAYG,MAAZ,CAAmB+J,MAAvB,EAA+B;;AAE3B;AACA,qBAAI8R,kBAAmBle,MAAMO,OAAN,CAAcqP,kBAAd,CAAiC5P,MAAMkC,KAAN,CAAYG,MAAZ,CAAmB4b,gBAAnB,CAAjC,CAAvB;AACH;;AAED;AACA,iBAAIje,MAAMkC,KAAN,CAAYG,MAAZ,CAAmB+J,MAAnB,IAA6BpM,MAAMkC,KAAN,CAAYG,MAAZ,CAAmB4b,gBAAnB,EAAqCtM,WAArC,KAAqD,EAAlF,IAAwFuM,gBAAgB9P,OAAhB,CAAwBnF,IAAxB,IAAgC,WAA5H,EAAyI;;AAErIjJ,uBAAMY,KAAN,CAAY+b,UAAZ,CAAuBsB,gBAAvB;AAEH,cAJD,MAIO;;AAEH;AACA,qBAAI9K,iBAAiB,WAArB;;AAEAnT,uBAAMO,OAAN,CAAcoL,WAAd,CAA0B;AACtB/H,2BAAQuP,cADc;AAEtBpI,4BAAQ/K,MAAMS,KAAN,CAAY0S,cAAZ,EAA4B1H,MAA5B;AAFc,kBAA1B;;AAKA;AACA,qBAAIzL,MAAMkC,KAAN,CAAYG,MAAZ,CAAmB+J,MAAnB,KAA8B,CAAlC,EAAqC;;AAEjCpM,2BAAMY,KAAN,CAAY+b,UAAZ,CAAuBsB,gBAAvB;AAEH,kBAJD,MAIO;;AAEH;AACAje,2BAAMY,KAAN,CAAYuQ,cAAZ,CAA2B8M,gBAA3B;AACH;AACJ;;AAED;;;AAGAje,mBAAMQ,OAAN,CAAcwQ,IAAd;;AAGAhR,mBAAMQ,OAAN,CAAcoG,IAAd;AAEH,UAjDD,MAiDO;;AAEH;;;AAGA5G,mBAAMQ,OAAN,CAAcwQ,IAAd;;AAEAhR,mBAAMQ,OAAN,CAAcoG,IAAd;;AAEA;AACA5G,mBAAMQ,OAAN,CAAcO,QAAd,CAAuBmU,KAAvB;AACAlV,mBAAMQ,OAAN,CAAciB,OAAd,CAAsByT,KAAtB;AACH;;AAGD,aAAIiJ,eAAe,CAACne,MAAMO,OAAN,CAAcsO,WAAd,CAA0B8C,WAA1B,CAAsCC,IAAtC,EAApB;;AAEA,aAAIuM,YAAJ,EAAkB;;AAEd;AACAne,mBAAMQ,OAAN,CAAcyQ,cAAd;AAEH,UALD,MAKO;;AAEH;AACAjR,mBAAMQ,OAAN,CAAc4U,cAAd;AAEH;;AAED,aAAIgJ,kBAAkBpe,MAAMO,OAAN,CAAcsO,WAAd,CAA0BT,OAA1B,CAAkCnF,IAAxD;;AAEA;AACA,aAAImV,mBAAmB,WAAnB,IAAkC,CAACD,YAAvC,EAAqD;;AAEjDne,mBAAMO,OAAN,CAAciP,SAAd;AAEH;AAEJ,MA7GD;;AA+GA;;;;;;;AAOAoN,eAAUQ,4BAAV,GAAyC,YAAW;;AAEhD,aAAIpO,YAAalL,OAAOmL,YAAP,EAAjB;AAAA,aACIE,aAAaH,UAAUG,UAD3B;AAAA,aAEIkP,OAAO,KAFX;;AAKA,aAAIrP,UAAUsK,UAAV,IAAwB,CAA5B,EAA+B;;AAE3B,oBAAO,IAAP;AAEH,UAJD,MAIO;;AAEH,iBAAI,CAACtZ,MAAME,IAAN,CAAWwF,SAAX,CAAqByJ,UAArB,CAAL,EAAuC;AACnCA,8BAAaA,WAAW/K,UAAxB;AACH;;AAED;AACA,iBAAI+K,WAAWmO,eAAX,IAA8B,MAAlC,EAA0C;AACtCe,wBAAO,IAAP;AACH;;AAED,oBAAOlP,WAAWmO,eAAX,IAA8B,MAArC,EAA6C;AACzCnO,8BAAaA,WAAW/K,UAAxB;;AAEA,qBAAI+K,WAAWmO,eAAX,IAA8B,MAAlC,EAA0C;AACtCe,4BAAO,IAAP;AACH;;AAED,qBAAIlP,cAAc5L,SAASiF,IAA3B,EAAiC;AAC7B;AACH;AACJ;;AAED;AACA,oBAAO6V,OAAO,KAAP,GAAe,IAAtB;AACH;AAEJ,MAtCD;;AAwCA;;;;AAIAzB,eAAU/R,oBAAV,GAAiC,UAAUR,KAAV,EAAiB;;AAE9C,aAAIO,SAAS,IAAb;;AAEA5K,eAAMQ,OAAN,CAAcyU,OAAd,GAAwBrK,OAAOwD,OAAP,CAAexK,IAAvC;;AAEA5D,eAAMQ,OAAN,CAAciB,OAAd,CAAsBoK,WAAtB,CAAkCxB,KAAlC;AACArK,eAAMQ,OAAN,CAAc0U,KAAd;AAEH,MATD;;AAWA0H,eAAUjS,kBAAV,GAA+B,UAAUN,KAAV,EAAiB;;AAE5C;;;AAGA,aAAI,KAAKwS,mBAAT,EAA6B;AACzByB,0BAAa,KAAKzB,mBAAlB;AACH;;AAED;;;AAGA,cAAKA,mBAAL,GAA2B3L,WAAW,YAAW;;AAE7ClR,mBAAMO,OAAN,CAAcuO,IAAd;AAEH,UAJ0B,EAIxB,GAJwB,CAA3B;AAMH,MAlBD;;AAoBA;AACA8N,eAAUnS,iBAAV,GAA8B,YAAW;;AAErC,aAAI,CAACzK,MAAMmB,KAAN,CAAYM,OAAZ,CAAoBiN,SAApB,CAA8BC,QAA9B,CAAuC,QAAvC,CAAL,EAAuD;;AAEnD3O,mBAAMQ,OAAN,CAAciB,OAAd,CAAsBmF,IAAtB;AAEH,UAJD,MAIO;;AAEH5G,mBAAMQ,OAAN,CAAciB,OAAd,CAAsByT,KAAtB;AAEH;AACJ,MAXD;;AAaA;;;AAGA0H,eAAU5R,YAAV,GAAyB,UAASX,KAAT,EAAgBU,KAAhB,EAAuB;;AAE5C,iBAAQV,MAAM+P,OAAd;;AAEI,kBAAKpa,MAAME,IAAN,CAAWyE,IAAX,CAAgBW,IAArB;AACA,kBAAKtF,MAAME,IAAN,CAAWyE,IAAX,CAAgBY,KAArB;AACIvF,uBAAMU,QAAN,CAAe6d,4BAAf,CAA4CxT,KAA5C;AACA;;AAEJ,kBAAK/K,MAAME,IAAN,CAAWyE,IAAX,CAAgBC,SAArB;AACI5E,uBAAMU,QAAN,CAAe8d,gBAAf,CAAgCzT,KAAhC;AACA;;AAEJ,kBAAK/K,MAAME,IAAN,CAAWyE,IAAX,CAAgBU,EAArB;AACA,kBAAKrF,MAAME,IAAN,CAAWyE,IAAX,CAAgBS,IAArB;AACIpF,uBAAMU,QAAN,CAAe+d,yBAAf,CAAyC1T,KAAzC;AACA;;AAdR;AAiBH,MAnBD;;AAqBA;;;AAGA6R,eAAU2B,4BAAV,GAAyC,UAAUxT,KAAV,EAAiB;;AAEtD,aAAIiE,YAAclL,OAAOmL,YAAP,EAAlB;AAAA,aACI5M,SAAcrC,MAAMkC,KAAN,CAAYG,MAD9B;AAAA,aAEIqc,cAAc1P,UAAUG,UAF5B;AAAA,aAGIwP,iBAHJ;;AAKA;AACA,aAAI,CAACD,WAAL,EAAiB;AACb,oBAAO,KAAP;AACH;;AAED;AACA,gBAAOA,YAAYpB,eAAZ,IAA+B,MAAtC,EAA8C;;AAE1CqB,iCAAoBD,YAAYta,UAAhC;AACAsa,2BAAoBC,iBAApB;AACH;;AAED;AACA,aAAIC,uBAAuB,CAA3B;AACA,gBAAOF,eAAerc,OAAOuc,oBAAP,CAAtB,EAAoD;AAChDA;AACH;;AAED;;;;AAIA,aAAI,CAACF,YAAY/M,WAAjB,EACA;AACI3R,mBAAMY,KAAN,CAAYuQ,cAAZ,CAA2ByN,oBAA3B;AACA;AACH;;AAED;;;AAGA,aAAIC,mBAAsB,KAA1B;AAAA,aACIf,sBAAsB,KAD1B;;AAGA,aAAIgB,SAAJ,EACIC,eADJ;;AAGAD,qBAAYJ,YAAY3Q,UAAZ,CAAuB2Q,YAAY3Q,UAAZ,CAAuB3B,MAAvB,GAAgC,CAAvD,CAAZ;;AAEA,aAAIpM,MAAME,IAAN,CAAWwF,SAAX,CAAqBoZ,SAArB,CAAJ,EAAqC;;AAEjCC,+BAAkB/e,MAAMO,OAAN,CAAcgR,8BAAd,CAA6CuN,SAA7C,EAAwDA,UAAU/Q,UAAV,CAAqB3B,MAA7E,CAAlB;AAEH,UAJD,MAIO;;AAEH2S,+BAAkBD,SAAlB;AAEH;;AAEDD,4BAAmB7P,UAAUG,UAAV,IAAwB4P,eAA3C;AACAjB,+BAAsBiB,gBAAgB3S,MAAhB,IAA0B4C,UAAUqD,YAA1D;;AAEA,aAAK,CAACwM,gBAAD,IAAsB,CAACf,mBAA5B,EAAkD;AAC9C9d,mBAAME,IAAN,CAAWgD,GAAX,CAAe,qDAAf;AACA,oBAAO,KAAP;AACH;;AAEDlD,eAAMY,KAAN,CAAYuQ,cAAZ,CAA2ByN,oBAA3B;AAEH,MAlED;;AAoEA;;;AAGAhC,eAAU6B,yBAAV,GAAsC,UAAU1T,KAAV,EAAiB;;AAEnD,aAAIiE,YAAclL,OAAOmL,YAAP,EAAlB;AAAA,aACI5M,SAAcrC,MAAMkC,KAAN,CAAYG,MAD9B;AAAA,aAEIqc,cAAc1P,UAAUG,UAF5B;AAAA,aAGIwP,iBAHJ;;AAKA;AACA,aAAI,CAACD,WAAL,EAAiB;AACb,oBAAO,KAAP;AACH;;AAED;;;AAGA,aAAK1P,UAAUqD,YAAV,KAA2B,CAAhC,EAAmC;AAC/B,oBAAO,KAAP;AACH;;AAED;AACA,gBAAOqM,YAAYpB,eAAZ,IAA+B,MAAtC,EAA8C;AAC1CqB,iCAAoBD,YAAYta,UAAhC;AACAsa,2BAAoBC,iBAApB;AACH;;AAED;AACA,aAAIC,uBAAuB,CAA3B;AACA,gBAAOF,eAAerc,OAAOuc,oBAAP,CAAtB,EAAoD;AAChDA;AACH;;AAED;;;AAGA,aAAII,oBAAsB,KAA1B;AAAA,aACIC,sBAAsB,KAD1B;;AAGA,aAAIC,UAAJ,EACIH,eADJ;;AAGA;;;;AAIA,aAAI,CAACL,YAAY/M,WAAjB,EAA8B;AAC1B3R,mBAAMY,KAAN,CAAYue,kBAAZ,CAA+BP,oBAA/B;AACA;AACH;;AAEDM,sBAAaR,YAAY3Q,UAAZ,CAAuB,CAAvB,CAAb;;AAEA,aAAI/N,MAAME,IAAN,CAAWwF,SAAX,CAAqBwZ,UAArB,CAAJ,EAAsC;;AAElCH,+BAAkB/e,MAAMO,OAAN,CAAcgR,8BAAd,CAA6C2N,UAA7C,EAAyD,CAAzD,CAAlB;AAEH,UAJD,MAIO;;AAEHH,+BAAkBG,UAAlB;AAEH;;AAEDF,6BAAsBhQ,UAAUG,UAAV,IAAwB4P,eAA9C;AACAE,+BAAsBjQ,UAAUqD,YAAV,KAA2B,CAAjD;;AAEA,aAAK2M,qBAAqBC,mBAA1B,EAAgD;;AAE5Cjf,mBAAMY,KAAN,CAAYue,kBAAZ,CAA+BP,oBAA/B;AAEH;AAEJ,MAtED;;AAwEA;;;AAGAhC,eAAUS,mBAAV,GAAgC,UAAUhT,KAAV,EAAiB;;AAE7C,aAAI8I,iBAAkB,WAAtB;;AAEAnT,eAAMO,OAAN,CAAcoL,WAAd,CAA0B;AACtB/H,mBAAQuP,cADc;AAEtBpI,oBAAQ/K,MAAMS,KAAN,CAAY0S,cAAZ,EAA4B1H,MAA5B;AAFc,UAA1B,EAGG,IAHH;;AAKAzL,eAAMQ,OAAN,CAAcwQ,IAAd;AACAhR,eAAMQ,OAAN,CAAcoG,IAAd;AAEH,MAZD;;AAcAgW,eAAU4B,gBAAV,GAA6B,UAAUzT,KAAV,EAAiB;;AAE1C,aAAI0F,oBAAoBzQ,MAAMY,KAAN,CAAY8P,oBAAZ,EAAxB;AAAA,aACIuI,KADJ;AAAA,aAEImG,eAFJ;AAAA,aAGItI,qBAHJ;;AAKA,aAAI/L,MAAM4G,WAAN,CAAkBC,IAAlB,EAAJ,EAA8B;;AAE1BqH,qBAAkBjZ,MAAMO,OAAN,CAAcwR,QAAd,EAAlB;AACAqN,+BAAkBnG,MAAMoG,SAAN,GAAkBpG,MAAM+B,WAA1C;;AAGA,iBAAIhb,MAAMY,KAAN,CAAY4Q,QAAZ,CAAqB8N,OAArB,MAAkC,CAACF,eAAnC,IAAsDpf,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBoO,oBAAoB,CAAvC,CAA1D,EAAqG;;AAEjGzQ,uBAAMO,OAAN,CAAc6S,WAAd,CAA0B3C,iBAA1B;AAEH,cAJD,MAIO;;AAEH;AAEH;AACJ;;AAED,aAAI,CAAC2O,eAAL,EAAsB;AAClBrU,mBAAM4E,MAAN;AACH;;AAGDmH,iCAAwB9W,MAAMmB,KAAN,CAAYc,QAAZ,CAAqB8L,UAArB,CAAgC3B,MAAxD;;AAEA;;;AAGA,aAAI0K,0BAA0B,CAA9B,EAAiC;;AAE7B;AACA9W,mBAAMO,OAAN,CAAcsO,WAAd,GAA4B,IAA5B;;AAEA;AACA7O,mBAAMG,EAAN,CAASmL,eAAT;;AAEA;AACAtL,mBAAMG,EAAN,CAAS4C,UAAT;;AAEA;AACAmO,wBAAW,YAAY;;AAEnBlR,uBAAMY,KAAN,CAAYue,kBAAZ,CAA+B,CAA/B;AAEH,cAJD,EAIG,EAJH;AAMH,UAlBD,MAkBO;;AAEH,iBAAInf,MAAMY,KAAN,CAAYsR,UAAZ,KAA2B,CAA/B,EAAkC;;AAE9B;AACAlS,uBAAMY,KAAN,CAAYue,kBAAZ,CAA+Bnf,MAAMY,KAAN,CAAYsR,UAA3C;AAEH,cALD,MAKO;;AAEH;AACAlS,uBAAMY,KAAN,CAAYuQ,cAAZ,CAA2BnR,MAAMY,KAAN,CAAYsR,UAAvC;AAEH;AACJ;;AAEDlS,eAAMQ,OAAN,CAAcwQ,IAAd;;AAEA,aAAI,CAAChR,MAAMQ,OAAN,CAAcwU,MAAnB,EAA2B;AACvBhV,mBAAMQ,OAAN,CAAcoG,IAAd;AACH;;AAED;AACA5G,eAAMG,EAAN,CAAS4C,UAAT;;AAEA;AACAsH,eAAM8P,cAAN;AAEH,MA/ED;;AAiFAyC,eAAU3R,UAAV,GAAuB,UAASZ,KAAT,EAAgB;;AAEnC,aAAIoG,oBAAoBzQ,MAAMY,KAAN,CAAY8P,oBAAZ,EAAxB;AAAA,aACIb,OAAO7P,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBoO,iBAAnB,CADX;;AAGAS,oBAAW,YAAW;;AAElBlR,mBAAMO,OAAN,CAAcqT,QAAd,CAAuB/D,IAAvB;AAEH,UAJD,EAIG,EAJH;AAMH,MAXD;;AAaA+M,eAAU2C,WAAV,GAAwB,UAASlV,KAAT,EAAgB;;AAEpC,aAAIoG,oBAAoBzQ,MAAMY,KAAN,CAAY8P,oBAAZ,EAAxB;;AAEA;;;AAGA,aAAI8O,WAAW,IAAIC,gBAAJ,CAAqBzf,MAAMU,QAAN,CAAegf,iBAApC,CAAf;;AAEA;;;AAGA,aAAIC,SAAS,EAAEhL,YAAY,IAAd,EAAoBiL,WAAW,IAA/B,EAAqCC,eAAe,KAApD,EAAb;;AAEA;AACAL,kBAASM,OAAT,CAAiB9f,MAAMkC,KAAN,CAAYG,MAAZ,CAAmBoO,iBAAnB,CAAjB,EAAwDkP,MAAxD;AACH,MAhBD;;AAkBA;;;AAGA/C,eAAU8C,iBAAV,GAA8B,UAASK,SAAT,EAAoB;AAC9CA,mBAAU1H,OAAV,CAAkBrY,MAAMO,OAAN,CAAciT,KAAhC;AACH,MAFD;;AAIA;;;AAGAoJ,eAAUlS,yBAAV,GAAsC,YAAU;;AAE5C;;;;;;AAMA,aAAIsV,kBAAkBhgB,MAAMO,OAAN,CAAcsO,WAAd,CAA0BT,OAA1B,CAAkCnF,IAAxD;;AAEAjJ,eAAMQ,OAAN,CAAcO,QAAd,CAAuBoU,MAAvB,CAA8B6K,eAA9B;;AAEA;AACAhgB,eAAMQ,OAAN,CAAciB,OAAd,CAAsByT,KAAtB;AACAlV,eAAMQ,OAAN,CAAcO,QAAd,CAAuB8U,iBAAvB;AAEH,MAhBD;;AAkBA,YAAO+G,SAAP;AAEH,EAjvBe,CAivBb,EAjvBa,CAAhB;;AAmvBA9c,QAAOC,OAAP,GAAkB6c,SAAlB,C;;;;;;;;ACnvBA,KAAIjc,OAAQ,UAASA,IAAT,EAAe;;AAEvB;;;AAGAA,UAAKU,OAAL,GAAe,YAAY;;AAEvB,aAAIA,UAAUkC,SAASgE,aAAT,CAAuB,KAAvB,CAAd;;AAEAlG,iBAAQwG,SAAR,IAAqB,cAArB;;AAEA,gBAAOxG,OAAP;AAEH,MARD;;AAUA;;;AAGAV,UAAKsB,QAAL,GAAgB,YAAY;;AAExB,aAAIA,WAAWsB,SAASgE,aAAT,CAAuB,KAAvB,CAAf;;AAEAtF,kBAAS4F,SAAT,IAAsB,aAAtB;;AAEA,gBAAO5F,QAAP;AAEH,MARD;;AAUAtB,UAAK0H,OAAL,GAAe,YAAW;;AAEtB,aAAI0C,QAAQxH,SAASgE,aAAT,CAAuB,KAAvB,CAAZ;;AAEAwD,eAAMlD,SAAN,IAAmB,UAAnB;;AAEA,gBAAOkD,KAAP;AAEH,MARD;;AAUA;;;AAGApK,UAAKH,OAAL,GAAe,YAAY;;AAEvB,aAAIyf,MAAM1c,SAASgE,aAAT,CAAuB,KAAvB,CAAV;;AAEA0Y,aAAIpY,SAAJ,IAAiB,YAAjB;;AAEA,gBAAOoY,GAAP;AACH,MAPD;;AASAtf,UAAKyH,cAAL,GAAsB,YAAW;;AAE7B,aAAI/G,UAAUkC,SAASgE,aAAT,CAAuB,KAAvB,CAAd;AACAlG,iBAAQqN,SAAR,CAAkBe,GAAlB,CAAsB,qBAAtB;;AAEA,gBAAOpO,OAAP;AACH,MAND;;AAQA;;;AAGAV,UAAKW,aAAL,GAAqB,YAAW;;AAE5B,aAAI2e,MAAM1c,SAASgE,aAAT,CAAuB,KAAvB,CAAV;;AAEA0Y,aAAIpY,SAAJ,IAAiB,mBAAjB;;AAEA,gBAAOoY,GAAP;AAEH,MARD;;AAUA;;;AAGAtf,UAAKoI,oBAAL,GAA4B,YAAW;;AAEnC,aAAI1H,UAAUkC,SAASgE,aAAT,CAAuB,KAAvB,CAAd;;AAEAlG,iBAAQwG,SAAR,IAAqB,4BAArB;;AAEA,gBAAOxG,OAAP;AACH,MAPD;;AASA;;;AAGAV,UAAKqI,oBAAL,GAA4B,YAAW;;AAEnC,aAAI3H,UAAUkC,SAASgE,aAAT,CAAuB,KAAvB,CAAd;;AAEAlG,iBAAQwG,SAAR,IAAqB,4BAArB;;AAEA,gBAAOxG,OAAP;AAEH,MARD;;AAUAV,UAAKsZ,YAAL,GAAoB,YAAW;;AAE3B,aAAInO,QAAQvI,SAASgE,aAAT,CAAuB,OAAvB,CAAZ;;AAEAuE,eAAMlI,IAAN,GAAoB,OAApB;AACAkI,eAAMjE,SAAN,IAAoB,cAApB;AACAiE,eAAMoU,WAAN,GAAoB,cAApB;AACApU,eAAMJ,YAAN,CAAmB,MAAnB,EAA2B,aAA3B;;AAEAI,eAAMJ,YAAN,CAAmB,WAAnB,EAAgC,WAAhC;;AAEA,gBAAOI,KAAP;AAEH,MAbD;;AAeA;;;AAGAnL,UAAK4H,YAAL,GAAoB,YAAW;;AAE3B,aAAIwC,QAAQxH,SAASgE,aAAT,CAAuB,KAAvB,CAAZ;;AAEAwD,eAAM2D,SAAN,CAAgBe,GAAhB,CAAoB,wBAApB;;AAEA,gBAAO1E,KAAP;AAEH,MARD;;AAUA;;;AAGApK,UAAK2H,YAAL,GAAoB,YAAW;;AAE3B,aAAIyC,QAAQxH,SAASgE,aAAT,CAAuB,KAAvB,CAAZ;;AAEAwD,eAAMlD,SAAN,IAAmB,qBAAnB;;AAEA,gBAAOkD,KAAP;AACH,MAPD;;AASA;;;AAGApK,UAAKkB,aAAL,GAAqB,YAAY;;AAE7B,aAAId,WAAWwC,SAASgE,aAAT,CAAuB,KAAvB,CAAf;;AAEAxG,kBAAS8G,SAAT,IAAsB,aAAtB;;AAEA,gBAAO9G,QAAP;AACH,MAPD;;AASAJ,UAAKoB,eAAL,GAAuB,YAAW;;AAE9B,aAAIoe,MAAM5c,SAASgE,aAAT,CAAuB,KAAvB,CAAV;;AAEA4Y,aAAIzR,SAAJ,CAAce,GAAd,CAAkB,qBAAlB;;AAEA,gBAAO0Q,GAAP;AACH,MAPD,EASAxf,KAAKgI,eAAL,GAAuB,YAAW;;AAE9B,aAAIwX,MAAM5c,SAASgE,aAAT,CAAuB,KAAvB,CAAV;;AAEA4Y,aAAIzR,SAAJ,CAAce,GAAd,CAAkB,oBAAlB;;AAEA,gBAAO0Q,GAAP;AAEH,MAjBD;;AAmBAxf,UAAKe,UAAL,GAAkB,YAAW;;AAEzB,aAAIkJ,SAASrH,SAASgE,aAAT,CAAuB,MAAvB,CAAb;;AAEAqD,gBAAO/C,SAAP,GAAmB,kBAAnB;AACA;;AAEA,gBAAO+C,MAAP;AACH,MARD;;AAUA;;;AAGAjK,UAAK8H,cAAL,GAAsB,YAAY;;AAE9B,aAAI2X,UAAU7c,SAASgE,aAAT,CAAuB,MAAvB,CAAd;;AAEA6Y,iBAAQvY,SAAR,GAAoB,0BAApB;;AAEA;AACAuY,iBAAQtS,SAAR,GAAoB,6BAApB;;AAEA,gBAAOsS,OAAP;AACH,MAVD;;AAYA;;;;AAIAzf,UAAKc,OAAL,GAAe,YAAW;;AAEtB,aAAIJ,UAAUkC,SAASgE,aAAT,CAAuB,KAAvB,CAAd;;AAEAlG,iBAAQwG,SAAR,GAAoB,mBAApB;;AAEA,gBAAOxG,OAAP;AACH,MAPD;;AASA;;;;;;;;;AASAV,UAAK2I,aAAL,GAAqB,UAAU1F,IAAV,EAAgByc,SAAhB,EAA2B;;AAE5C,aAAIzV,SAAarH,SAASgE,aAAT,CAAuB,IAAvB,CAAjB;AAAA,aACI+Y,YAAa/c,SAASgE,aAAT,CAAuB,GAAvB,CADjB;AAAA,aAEIgZ,aAAahd,SAASgE,aAAT,CAAuB,MAAvB,CAFjB;;AAIAqD,gBAAOwD,OAAP,CAAexK,IAAf,GAAsBA,IAAtB;AACAgH,gBAAOc,YAAP,CAAoB,OAApB,EAA6B9H,IAA7B;;AAEA0c,mBAAU5R,SAAV,CAAoBe,GAApB,CAAwB4Q,SAAxB;AACAE,oBAAW7R,SAAX,CAAqBe,GAArB,CAAyB,yBAAzB;;AAGA7E,gBAAOhD,WAAP,CAAmB0Y,SAAnB;AACA1V,gBAAOhD,WAAP,CAAmB2Y,UAAnB;;AAEA,gBAAO3V,MAAP;AAEH,MAlBD;;AAoBA;;;;;;;;AAQAjK,UAAKoJ,mBAAL,GAA2B,UAASnG,IAAT,EAAeyc,SAAf,EAA0B;AACjD,aAAIzV,SAAarH,SAASgE,aAAT,CAAuB,QAAvB,CAAjB;AAAA,aACI+Y,YAAa/c,SAASgE,aAAT,CAAuB,GAAvB,CADjB;;AAGAqD,gBAAOhH,IAAP,GAAc,QAAd;AACAgH,gBAAOwD,OAAP,CAAexK,IAAf,GAAsBA,IAAtB;AACA0c,mBAAU5R,SAAV,CAAoBe,GAApB,CAAwB4Q,SAAxB;;AAEAzV,gBAAOhD,WAAP,CAAmB0Y,SAAnB;;AAEA,gBAAO1V,MAAP;AACH,MAXD;;AAaA;;;AAGAjK,UAAKoK,KAAL,GAAa,UAAUwJ,OAAV,EAAmBhU,OAAnB,EAA4B;;AAErC,aAAIsP,OAAOtM,SAASgE,aAAT,CAAuBgN,OAAvB,CAAX;;AAEA1E,cAAK/B,SAAL,GAAiBvN,WAAW,EAA5B;;AAEA,gBAAOsP,IAAP;AAEH,MARD;;AAUA;;;;;;AAMAlP,UAAKkP,IAAL,GAAY,UAAU0E,OAAV,EAAoB1M,SAApB,EAAgC2Y,UAAhC,EAA4C;;AAEpD,aAAI7a,KAAKpC,SAASgE,aAAT,CAAwBgN,OAAxB,CAAT;;AAEA,aAAK1M,SAAL,EAAiBlC,GAAGkC,SAAH,GAAeA,SAAf;;AAEjB,aAAK2Y,UAAL,EAAkB;;AAEd,kBAAK,IAAIrX,IAAT,IAAiBqX,UAAjB,EAA4B;AACxB7a,oBAAGwD,IAAH,IAAWqX,WAAWrX,IAAX,CAAX;AACH;AACJ;;AAED,gBAAOxD,EAAP;AACH,MAdD;;AAgBAhF,UAAK8f,aAAL,GAAqB,UAAS7c,IAAT,EAAerD,OAAf,EAAwB;;AAEzC,gBAAO;AACHqD,mBAAQA,IADL;AAEHmH,oBAAQ2V,QAAQjgB,KAAR,CAAcmD,IAAd,EAAoB6H,MAApB,CAA2B;AAC/BiG,uBAAOnR;AADwB,cAA3B;AAFL,UAAP;AAMH,MARD;;AAUA,YAAOI,IAAP;AAEH,EA9SU,CA8SR,EA9SQ,CAAX;;AAgTAb,QAAOC,OAAP,GAAiBY,IAAjB,C;;;;;;;;AChTA,KAAIC,QAAS,UAASA,KAAT,EAAgB;;AAEzB;;;AAGAA,WAAMsR,UAAN,GAAmB,IAAnB;;AAEA;;;AAGAtR,WAAM2X,MAAN,GAAe,IAAf;;AAEA;;;AAGA3X,WAAM+f,gBAAN,GAAyB,IAAzB;;AAEA;;;;;;AAMA/f,WAAMmQ,GAAN,GAAY,UAAUpL,EAAV,EAAeuH,KAAf,EAAsBqL,MAAtB,EAA8B;;AAEtCA,kBAASA,UAAU,KAAKA,MAAf,IAAyB,CAAlC;AACArL,iBAASA,SAAU,KAAKyT,gBAAf,IAAmC,CAA5C;;AAEA,aAAIC,SAASjb,GAAGoI,UAAhB;AAAA,aACI8S,SADJ;;AAGA,aAAKD,OAAOxU,MAAP,KAAkB,CAAvB,EAA2B;;AAEvByU,yBAAYlb,EAAZ;AAEH,UAJD,MAIO;;AAEHkb,yBAAYD,OAAO1T,KAAP,CAAZ;AAEH;;AAED;AACA,aAAIvH,GAAG4O,OAAH,IAAc,OAAlB,EAA2B;AACvB5O,gBAAGuU,KAAH;AACA;AACH;;AAED,aAAIla,MAAME,IAAN,CAAWwF,SAAX,CAAqBmb,SAArB,CAAJ,EAAqC;;AAEjCA,yBAAY7gB,MAAMO,OAAN,CAAcgR,8BAAd,CAA6CsP,SAA7C,EAAwDA,UAAU9S,UAAV,CAAqB3B,MAA7E,CAAZ;AACH;;AAED,aAAI6M,QAAY1V,SAAS2V,WAAT,EAAhB;AAAA,aACIlK,YAAYlL,OAAOmL,YAAP,EADhB;;AAGAiC,oBAAW,YAAW;;AAElB+H,mBAAMmC,QAAN,CAAeyF,SAAf,EAA0BtI,MAA1B;AACAU,mBAAM6B,MAAN,CAAa+F,SAAb,EAAwBtI,MAAxB;;AAEAvJ,uBAAU0M,eAAV;AACA1M,uBAAU2M,QAAV,CAAmB1C,KAAnB;;AAEAjZ,mBAAMY,KAAN,CAAY2c,qBAAZ;AAEH,UAVD,EAUG,EAVH;AAWH,MA3CD;;AA6CA;;;;AAIA3c,WAAM2c,qBAAN,GAA8B,YAAY;;AAEtC;AACA,aAAIvO,YAAclL,OAAOmL,YAAP,EAAlB;AAAA,aACI5M,SAAcrC,MAAMkC,KAAN,CAAYG,MAD9B;AAAA,aAEIqc,cAAc1P,UAAUG,UAF5B;AAAA,aAGIwP,iBAHJ;;AAKA,aAAI,CAACD,WAAL,EAAiB;AACb;AACH;;AAED;AACA,gBAAOA,YAAYpB,eAAZ,IAA+B,MAAtC,EAA8C;AAC1CqB,iCAAoBD,YAAYta,UAAhC;AACAsa,2BAAoBC,iBAApB;AACH;;AAED;AACA,aAAIC,uBAAuB,CAA3B;;AAEA,gBAAOF,eAAerc,OAAOuc,oBAAP,CAAtB,EAAoD;AAChDA;AACH;;AAED,cAAK1M,UAAL,GAAkB0M,oBAAlB;AACH,MA1BD;;AA4BA;;;AAGAhe,WAAM8P,oBAAN,GAA6B,YAAW;AACpC,gBAAO,KAAKwB,UAAZ;AACH,MAFD;;AAIA;;;AAGAtR,WAAMuQ,cAAN,GAAuB,UAASjE,KAAT,EAAgB;;AAEnC,aAAI7K,SAASrC,MAAMkC,KAAN,CAAYG,MAAzB;AAAA,aACIye,YAAYze,OAAO6K,QAAQ,CAAf,CADhB;;AAGA,aAAI,CAAC4T,SAAL,EAAgB;AACZ9gB,mBAAME,IAAN,CAAWgD,GAAX,CAAe,wBAAf;AACA;AACH;;AAED;;;;AAIA,aAAI,CAAC4d,UAAU/S,UAAV,CAAqB3B,MAA1B,EAAkC;AAC9B,iBAAI2U,mBAAmBxd,SAASuN,cAAT,CAAwB,EAAxB,CAAvB;AACAgQ,uBAAUlZ,WAAV,CAAsBmZ,gBAAtB;AACH;;AAED/gB,eAAMY,KAAN,CAAYsR,UAAZ,GAAyBhF,QAAQ,CAAjC;AACAlN,eAAMY,KAAN,CAAYmQ,GAAZ,CAAgB+P,SAAhB,EAA2B,CAA3B,EAA8B,CAA9B;AACA9gB,eAAMO,OAAN,CAAcqL,kBAAd,CAAiCkV,SAAjC;AAEH,MAvBD;;AAyBA;;;;AAIAlgB,WAAM+b,UAAN,GAAmB,UAASzP,KAAT,EAAgB;;AAE/B,aAAI7K,SAASrC,MAAMkC,KAAN,CAAYG,MAAzB;AAAA,aACIiR,cAAcjR,OAAO6K,KAAP,CADlB;;AAGAnJ,iBAAQid,MAAR,CAAgB1N,WAAhB,EAA8B,gDAA9B;;AAEA,aAAK,CAACA,WAAN,EAAoB;AAChB;AACH;;AAED;;;;AAIA,aAAI,CAACA,YAAYvF,UAAZ,CAAuB3B,MAA5B,EAAoC;AAChC,iBAAI2U,mBAAmBxd,SAASuN,cAAT,CAAwB,EAAxB,CAAvB;AACAwC,yBAAY1L,WAAZ,CAAwBmZ,gBAAxB;AACH;;AAED/gB,eAAMY,KAAN,CAAYsR,UAAZ,GAAyBhF,KAAzB;AACAlN,eAAMY,KAAN,CAAYmQ,GAAZ,CAAgBuC,WAAhB,EAA6B,CAA7B,EAAgC,CAAhC;AACAtT,eAAMO,OAAN,CAAcqL,kBAAd,CAAiC0H,WAAjC;AAEH,MAxBD;;AA0BA;;;AAGA1S,WAAMue,kBAAN,GAA2B,UAASjS,KAAT,EAAgB;;AAEvCA,iBAAQA,SAAS,CAAjB;;AAEA,aAAI7K,SAASrC,MAAMkC,KAAN,CAAYG,MAAzB;AAAA,aACI4e,gBAAgB5e,OAAO6K,QAAQ,CAAf,CADpB;AAAA,aAEIgU,aAFJ;AAAA,aAGIC,qBAHJ;AAAA,aAIIJ,gBAJJ;;AAOA,aAAI,CAACE,aAAL,EAAoB;AAChBjhB,mBAAME,IAAN,CAAWgD,GAAX,CAAe,2BAAf;AACA;AACH;;AAEDge,yBAAgBlhB,MAAMO,OAAN,CAAcgR,8BAAd,CAA6C0P,aAA7C,EAA4DA,cAAclT,UAAd,CAAyB3B,MAArF,CAAhB;AACA+U,iCAAwBD,cAAc9U,MAAtC;;AAEA;;;;AAIA,aAAI,CAAC6U,cAAclT,UAAd,CAAyB3B,MAA9B,EAAsC;;AAElC2U,gCAAmBxd,SAASuN,cAAT,CAAwB,EAAxB,CAAnB;AACAmQ,2BAAcrZ,WAAd,CAA0BmZ,gBAA1B;AACH;AACD/gB,eAAMY,KAAN,CAAYsR,UAAZ,GAAyBhF,QAAQ,CAAjC;AACAlN,eAAMY,KAAN,CAAYmQ,GAAZ,CAAgBkQ,aAAhB,EAA+BA,cAAclT,UAAd,CAAyB3B,MAAzB,GAAkC,CAAjE,EAAoE+U,qBAApE;AACAnhB,eAAMO,OAAN,CAAcqL,kBAAd,CAAiCvJ,OAAO6K,QAAQ,CAAf,CAAjC;AACH,MA/BD;;AAiCAtM,WAAM4Q,QAAN,GAAiB;;AAEb8N,kBAAU,mBAAW;;AAEjB,iBAAItQ,YAAkBlL,OAAOmL,YAAP,EAAtB;AAAA,iBACIoD,eAAkBrD,UAAUqD,YADhC;AAAA,iBAEIlD,aAAkBH,UAAUG,UAFhC;AAAA,iBAGI+O,kBAAkBle,MAAMO,OAAN,CAAcqP,kBAAd,CAAiCT,UAAjC,CAHtB;AAAA,iBAIIsR,gBAAkBvC,gBAAgBnQ,UAAhB,CAA2B,CAA3B,CAJtB;;AAMA,iBAAI,CAAC/N,MAAME,IAAN,CAAWwF,SAAX,CAAqByJ,UAArB,CAAL,EAAuC;AACnCA,8BAAaA,WAAW/K,UAAxB;AACH;;AAED,iBAAIgd,cAAejS,eAAesR,cAAc1S,UAAd,CAAyB,CAAzB,CAAlC;AAAA,iBACIsT,eAAehP,iBAAiB,CADpC;;AAGA,oBAAO+O,eAAeC,YAAtB;AAEH,UAnBY;;AAqBbtD,mBAAW,oBAAW;;AAElB,iBAAI/O,YAAelL,OAAOmL,YAAP,EAAnB;AAAA,iBACIoD,eAAerD,UAAUqD,YAD7B;AAAA,iBAEIlD,aAAeH,UAAUG,UAF7B;;AAIA;AACA,oBAAO,CAACA,UAAD,IAAe,CAACA,WAAW/C,MAA3B,IAAqCiG,iBAAiBlD,WAAW/C,MAAxE;AACH;AA7BY,MAAjB;;AAgCA,YAAOxL,KAAP;AAEH,EA3OW,CA2OT,EA3OS,CAAZ;;AA6OAd,QAAOC,OAAP,GAAiBa,KAAjB,C;;;;;;;;AC7OA,KAAIC,gBAAiB,UAASA,aAAT,EAAwB;;AAEzC;;;;AAIAA,mBAAcuJ,WAAd,GAA4B,UAASF,QAAT,EAAmBG,KAAnB,EAA0B;;AAElDrK,eAAMa,aAAN,CAAoBqG,IAApB,CAAyB,wCAAzB,EAAmEmD,MAAMzG,IAAzE,EAA+E,KAA/E;AAEH,MAJD;;AAMA;;;;;;AAMA/C,mBAAcqG,IAAd,GAAqB,UAASoa,OAAT,EAAkB1d,IAAlB,EAAwB6I,MAAxB,EAAgC;;AAEjD,aAAI8U,eAAevhB,MAAMW,IAAN,CAAWoK,KAAX,CAAiB,KAAjB,CAAnB;;AAEAwW,sBAAa5P,WAAb,GAA2B2P,OAA3B;AACAC,sBAAa7S,SAAb,CAAuBe,GAAvB,CAA2B,sBAA3B,EAAmD,qBAAqB7L,IAAxE,EAA8E,SAA9E;;AAEA,aAAI,CAAC6I,MAAL,EAAa;AACTzM,mBAAMmB,KAAN,CAAYN,aAAZ,CAA0BiN,SAA1B,GAAsC,EAAtC;AACH;;AAED9N,eAAMmB,KAAN,CAAYN,aAAZ,CAA0B+G,WAA1B,CAAsC2Z,YAAtC;;AAEArQ,oBAAW,YAAY;AACnBqQ,0BAAa5R,MAAb;AACH,UAFD,EAEG,IAFH;AAIH,MAjBD;;AAmBA,YAAO9O,aAAP;AAEH,EAvCmB,CAuCjB,EAvCiB,CAApB;;AAyCAf,QAAOC,OAAP,GAAiBc,aAAjB,C;;;;;;;;ACzCA,KAAIC,SAAU,UAASA,MAAT,EAAiB;;AAE3B;;;AAGAA,YAAO0gB,2BAAP,GAAqC,UAASjhB,OAAT,EAAkB;AACnD,gBAAOA,QAAQkhB,KAAR,CAAc,IAAd,CAAP;AACH,MAFD;;AAIA;AACA3gB,YAAO4gB,mBAAP,GAA6B,UAASnhB,OAAT,EAAkB;;AAE3C,aAAI6B,SAAS,KAAKof,2BAAL,CAAiCjhB,OAAjC,CAAb;AAAA,aACIiM,CADJ;AAAA,aAEI0F,aAAawO,QAAQ9f,KAAR,CAAc8P,oBAAd,EAFjB;AAAA,aAGIqD,QAHJ;AAAA,aAII4N,iBAJJ;;AAMA,cAAInV,IAAI,CAAR,EAAWA,IAAIpK,OAAOgK,MAAtB,EAA8BI,GAA9B,EAAmC;;AAE/BpK,oBAAOoK,CAAP,EAAUoF,IAAV;;AAEA,iBAAIxP,OAAOoK,CAAP,CAAJ,EAAe;AACX,qBAAIlJ,OAAOod,QAAQ/f,IAAR,CAAa8f,aAAb,CAA2B,WAA3B,EAAwCre,OAAOoK,CAAP,CAAxC,CAAX;AACAkU,yBAAQngB,OAAR,CAAgBoL,WAAhB,CAA4BrI,IAA5B;AACH;AACJ;AAEJ,MAlBD;;AAoBA;;;AAGAxC,YAAO8gB,oBAAP,GAA8B,YAAY;;AAEtC,aAAIC,iBAAiBnB,QAAQvf,KAAR,CAAcC,QAAd,CAAuBkZ,KAA5C;;AAEA,aAAKuH,eAAejQ,IAAf,GAAsBxF,MAAtB,KAAiC,CAAtC,EAA0C,OAAO,IAAP;;AAG1CsU,iBAAQ5f;;AAER;AAFA,UAGKghB,kBAHL,CAGwBD,cAHxB;;AAKI;AALJ,UAMKpf,IANL,CAMUie,QAAQ5f,MAAR,CAAeihB,qBANzB;;AAQI;AARJ,UASK/e,KATL,CASW,UAASC,KAAT,EAAgB;AACnByd,qBAAQxgB,IAAR,CAAagD,GAAb,CAAiB,iCAAjB,EAAoD,MAApD,EAA4DD,KAA5D;AACH,UAXL;AAaH,MApBD;;AAsBA;;;;;AAKAnC,YAAOghB,kBAAP,GAA4B,UAAUE,WAAV,EAAuB;;AAE/C,gBAAO7e,QAAQC,OAAR,GAAkBX,IAAlB,CAAuB,YAAW;;AAErC,iBAAIwf,gBAAgB1e,SAASgE,aAAT,CAAuB,KAAvB,CAApB;;AAEA0a,2BAAcnU,SAAd,GAA0BkU,WAA1B;;AAEA;;;;;;AAMA,oBAAOC,cAAclU,UAArB;AAEH,UAdM,CAAP;AAeH,MAjBD;;AAmBA;;;;AAIAjN,YAAOihB,qBAAP,GAA+B,UAAS5gB,KAAT,EAAgB;;AAE3C;;;;AAIA,aAAI8L,eAAe9J,QAAQC,OAAR,EAAnB;;AAGA,cAAK,IAAI8J,QAAQ,CAAjB,EAAoBA,QAAQ/L,MAAMiL,MAAlC,EAA2Cc,OAA3C,EAAqD;;AAEjD;AACAwT,qBAAQ5f,MAAR,CAAeqM,iBAAf,CAAiCF,YAAjC,EAA+C9L,KAA/C,EAAsD+L,KAAtD;AAEH;AAEJ,MAhBD;;AAkBA;;;AAGApM,YAAOqM,iBAAP,GAA2B,UAAUF,YAAV,EAAwB9L,KAAxB,EAA+B+L,KAA/B,EAAsC;;AAE7D;AACAD;;AAEA;AAFA,UAGKxK,IAHL,CAGU,YAAW;;AAEb,oBAAOie,QAAQ5f,MAAR,CAAesM,YAAf,CAA4BjM,KAA5B,EAAoC+L,KAApC,CAAP;AAEH,UAPL;;AASI;;;;AATJ,UAaKzK,IAbL,CAaU,UAASoN,IAAT,EAAc;;AAEhB,iBAAI9E,QAAQ2V,QAAQ5f,MAAR,CAAeohB,oBAAf,CAAoCrS,IAApC,CAAZ;;AAEA,iBAAK6Q,QAAQxgB,IAAR,CAAawF,SAAb,CAAuBqF,KAAvB,CAAL,EAAqC;;AAEjCA,uBAAMuS,eAAN,GAAwB,MAAxB;;AAEA;AACAvS,uBAAM2D,SAAN,CAAgBe,GAAhB,CAAoB,UAApB;;AAEA;AACAiR,yBAAQvf,KAAR,CAAcc,QAAd,CAAuB2F,WAAvB,CAAmCmD,KAAnC;;AAEA;AACA2V,yBAAQxe,KAAR,CAAcE,MAAd,CAAqBwM,IAArB,CAA0B7D,KAA1B;;AAEA,wBAAOA,KAAP;AAEH;AACD,oBAAO,IAAP;AACH,UAlCL,EAoCKtI,IApCL,CAoCUie,QAAQvgB,EAAR,CAAW2K,gBApCrB;;AAsCI;AAtCJ,UAuCK9H,KAvCL,CAuCW,UAASC,KAAT,EAAgB;AACnByd,qBAAQxgB,IAAR,CAAagD,GAAb,CAAiB,uCAAjB,EAA0D,MAA1D,EAAkED,KAAlE;AACH,UAzCL;AA2CH,MA9CD;;AAgDA;;;;AAIAnC,YAAOsM,YAAP,GAAsB,UAAU+U,QAAV,EAAoBjV,KAApB,EAA2B;;AAE7C,gBAAO/J,QAAQC,OAAR,GAAkBX,IAAlB,CAAuB,YAAW;;AAErC,oBAAO0f,SAASC,IAAT,CAAclV,KAAd,CAAP;AAEH,UAJM,CAAP;AAKH,MAPD;;AASA;;;;;;;;;AASApM,YAAOohB,oBAAP,GAA8B,UAAUrS,IAAV,EAAgB;;AAE1C;AACA,aAAK6Q,QAAQ5f,MAAR,CAAewO,iBAAf,CAAiCO,IAAjC,CAAL,EAA6C;;AAEzC;AACAA,oBAAO,KAAKwS,cAAL,CAAoBxS,IAApB,CAAP;;AAEA,oBAAOA,IAAP;AACH;;AAED;AACA,aAAIyS,WAAJ;AAAA,aACIC,cAAkB1S,KAAK8B,WAAL,CAAiBC,IAAjB,EADtB;AAAA,aAEI4Q,kBAAkB3S,KAAKjK,QAAL,IAAiB8a,QAAQxgB,IAAR,CAAaqE,SAAb,CAAuBC,GAF9D;;AAKA;AACA,aAAIge,mBAAmB,CAACD,YAAYnW,MAApC,EAA4C,OAAO,IAAP;;AAE5C;AACAkW,uBAAc5B,QAAQ/f,IAAR,CAAaoK,KAAb,CAAmB,GAAnB,CAAd;;AAEA,aAAIyX,eAAJ,EAAoB;AAChBF,yBAAY3Q,WAAZ,GAA0B4Q,YAAY9N,OAAZ,CAAoB,UAApB,EAAgC,IAAhC,CAA1B,CADgB,CACiD;AACpE,UAFD,MAEO;AACH6N,yBAAY1a,WAAZ,CAAwBiI,IAAxB;AACH;;AAED;AACAyS,uBAAc,KAAKD,cAAL,CAAoBC,WAApB,CAAd;;AAEA,gBAAOA,WAAP;AAEH,MAlCD;;AAoCA;;;;;;;;;AASAxhB,YAAOuhB,cAAP,GAAwB,UAAUxS,IAAV,EAAgB;;AAEpC,iBAAQA,KAAK0E,OAAb;AACI,kBAAK,GAAL;AAAoB1E,sBAAKzB,OAAL,CAAanF,IAAb,GAAoB,WAApB,CAAiC;AACrD,kBAAK,IAAL;AACA,kBAAK,IAAL;AACA,kBAAK,IAAL;AACA,kBAAK,IAAL;AACA,kBAAK,IAAL;AACA,kBAAK,IAAL;AAAoB4G,sBAAKzB,OAAL,CAAanF,IAAb,GAAoB,QAApB,CAA8B;AAClD,kBAAK,YAAL;AAAoB4G,sBAAKzB,OAAL,CAAanF,IAAb,GAAoB,OAApB,CAA6B;AACjD,kBAAK,MAAL;AAAoB4G,sBAAKzB,OAAL,CAAanF,IAAb,GAAoB,MAApB,CAA4B;AATpD;;AAYA,gBAAO4G,IAAP;AAEH,MAhBD;;AAkBA;;;AAGA/O,YAAOwO,iBAAP,GAA2B,UAAUO,IAAV,EAAgB;;AAEvC,gBAAOA,KAAKjK,QAAL,IAAiB8a,QAAQxgB,IAAR,CAAaqE,SAAb,CAAuBC,GAAxC,IACHqL,KAAKnB,SAAL,CAAeC,QAAf,CAAwB+R,QAAQvgB,EAAR,CAAW0H,SAAX,CAAqBC,eAA7C,CADJ;AAGH,MALD;;AAOA,YAAOhH,MAAP;AAEH,EAzPY,CAyPV,EAzPU,CAAb;;AA2PAhB,QAAOC,OAAP,GAAiBe,MAAjB,C","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b0d9b144b41a8e5bb0ba","/**\n *\n */\n\n'use strict';\n\nvar editor = require('./editor');\nmodule.exports = editor;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/**\n * @author Codex Team\n * @version 1.0.6\n */\n\nvar codex = (function(codex){\n\n    var init = function() {\n\n        codex.core          = require('./modules/core');\n        codex.ui            = require('./modules/ui');\n        codex.transport     = require('./modules/transport');\n        codex.renderer      = require('./modules/renderer');\n        codex.saver         = require('./modules/saver');\n        codex.content       = require('./modules/content');\n        codex.toolbar       = require('./modules/toolbar/toolbar');\n        codex.tools         = require('./modules/tools');\n        codex.callback      = require('./modules/callbacks');\n        codex.draw          = require('./modules/draw');\n        codex.caret         = require('./modules/caret');\n        codex.notifications = require('./modules/notifications');\n        codex.parser        = require('./modules/parser');\n    };\n\n    /**\n     * @public\n     *\n     * holds initial settings\n     */\n    codex.settings = {\n        tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\n        textareaId: 'codex-editor',\n        uploadImagesUrl: '/editor/transport/',\n\n        // Type of block showing on empty editor\n        initialBlockPlugin: \"paragraph\"\n    };\n\n    /**\n     * public\n     *\n     * Static nodes\n     */\n    codex.nodes = {\n        textarea          : null,\n        wrapper           : null,\n        toolbar           : null,\n        inlineToolbar     : {\n            wrapper : null,\n            buttons : null,\n            actions : null\n        },\n        toolbox           : null,\n        notifications     : null,\n        plusButton        : null,\n        showSettingsButton: null,\n        showTrashButton   : null,\n        blockSettings     : null,\n        pluginSettings    : null,\n        defaultSettings   : null,\n        toolbarButtons    : {}, // { type : DomEl, ... }\n        redactor          : null\n    };\n\n    /**\n     * @public\n     *\n     * Output state\n     */\n    codex.state = {\n        jsonOutput: [],\n        blocks    : [],\n        inputs    : []\n    };\n\n    /**\n     * Initialization\n     * @uses Promise cEditor.core.prepare\n     * @param {} userSettings are :\n     *          - tools [],\n     *          - textareaId String\n     *          ...\n     *\n     * Load user defined tools\n     * Tools must contain this important objects :\n     *  @param {String} type - this is a type of plugin. It can be used as plugin name\n     *  @param {String} iconClassname - this a icon in toolbar\n     *  @param {Object} make - what should plugin do, when it is clicked\n     *  @param {Object} appendCallback - callback after clicking\n     *  @param {Element} settings - what settings does it have\n     *  @param {Object} render - plugin get JSON, and should return HTML\n     *  @param {Object} save - plugin gets HTML content, returns JSON\n     *  @param {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n     *  @param {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n     *\n     * @example\n     *   -  type             : 'header',\n     *   -  iconClassname    : 'ce-icon-header',\n     *   -  make             : headerTool.make,\n     *   -  appendCallback   : headerTool.appendCallback,\n     *   -  settings         : headerTool.makeSettings(),\n     *   -  render           : headerTool.render,\n     *   -  save             : headerTool.save,\n     *   -  displayInToolbox : true,\n     *   -  enableLineBreaks : false\n     */\n    codex.start = function (userSettings) {\n\n        init();\n\n        this.core.prepare(userSettings)\n\n        // If all ok, make UI, bind events and parse initial-content\n            .then(this.ui.make)\n            .then(this.ui.addTools)\n            .then(this.ui.bindEvents)\n            .then(this.ui.preparePlugins)\n            .then(this.transport.prepare)\n            .then(this.renderer.makeBlocksFromData)\n            .then(this.ui.saveInputs)\n            .catch(function (error) {\n                codex.core.log('Initialization failed with error: %o', 'warn', error);\n            });\n\n    };\n\n    return codex;\n\n})({});\n\nmodule.exports = codex;\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./editor.js","var core = (function(core) {\n\n    /**\n     * @public\n     *\n     * Editor preparing method\n     * @return Promise\n     */\n    core.prepare = function (userSettings) {\n\n        return new Promise(function(resolve, reject) {\n\n            if ( userSettings ){\n\n                codex.settings.tools = userSettings.tools || codex.settings.tools;\n\n            }\n\n            if (userSettings.data) {\n                codex.state.blocks = userSettings.data;\n            }\n\n            codex.nodes.textarea = document.getElementById(userSettings.textareaId || codex.settings.textareaId);\n\n            if (typeof codex.nodes.textarea === undefined || codex.nodes.textarea === null) {\n                reject(Error(\"Textarea wasn't found by ID: #\" + userSettings.textareaId));\n            } else {\n                resolve();\n            }\n\n        });\n\n    };\n\n    /**\n     * Logging method\n     * @param type = ['log', 'info', 'warn']\n     */\n    core.log = function (msg, type, arg) {\n\n        type = type || 'log';\n\n        if (!arg) {\n            arg  = msg || 'undefined';\n            msg  = '[codex-editor]:      %o';\n        } else {\n            msg  = '[codex-editor]:      ' + msg;\n        }\n\n        try{\n            if ( 'console' in window && console[ type ] ){\n                if ( arg ) console[ type ]( msg , arg );\n                else console[ type ]( msg );\n            }\n\n        }catch(e){}\n\n    };\n\n    /**\n     * @protected\n     *\n     * Helper for insert one element after another\n     */\n    core.insertAfter = function (target, element) {\n        target.parentNode.insertBefore(element, target.nextSibling);\n    };\n\n    /**\n     * @const\n     *\n     * Readable DOM-node types map\n     */\n    core.nodeTypes = {\n        TAG     : 1,\n        TEXT    : 3,\n        COMMENT : 8\n    };\n\n    /**\n     * @const\n     * Readable keys map\n     */\n    core.keys = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 };\n\n    /**\n     * @protected\n     *\n     * Check object for DOM node\n     */\n    core.isDomNode = function (el) {\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n    };\n\n    /**\n     * Native Ajax\n     */\n    core.ajax = function (data) {\n\n        if (!data || !data.url){\n            return;\n        }\n\n        var XMLHTTP          = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\"),\n            success_function = function(){},\n            params = '',\n            obj;\n\n        data.async           = true;\n        data.type            = data.type || 'GET';\n        data.data            = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        success_function     = data.success || success_function ;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\n        } else {\n\n            for(obj in data.data) {\n                params += (obj + '=' + encodeURIComponent(data.data[obj]) + '&');\n            }\n        }\n\n        if (data.withCredentials) {\n            XMLHTTP.withCredentials = true;\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n            data.beforeSend.call();\n        }\n\n        XMLHTTP.open( data.type, data.url, data.async );\n        XMLHTTP.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        XMLHTTP.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n        XMLHTTP.onreadystatechange = function() {\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n                success_function(XMLHTTP.responseText);\n            }\n        };\n\n        XMLHTTP.send(params);\n    };\n\n    /** Appends script to head of document */\n    core.importScript = function(scriptPath, instanceName) {\n\n        /** Script is already loaded */\n        if ( !instanceName || (instanceName && document.getElementById('ce-script-' + instanceName)) ) {\n            codex.core.log(\"Instance name of script is missed or script is already loaded\", \"warn\");\n            return;\n        }\n\n\n        var script   = document.createElement('SCRIPT');\n        script.type = \"text/javascript\";\n        script.src = scriptPath;\n        script.async = true;\n        script.defer = true;\n\n        if (instanceName) {\n            script.id = \"ce-script-\" + instanceName;\n        }\n\n        document.head.appendChild(script);\n        return script;\n    };\n\n    return core;\n\n})({});\n\nmodule.exports = core;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/core.js","var ui = (function(ui){\n\n    /**\n     * Basic editor classnames\n     */\n    ui.className = {\n\n        /**\n         * @const {string} BLOCK_CLASSNAME - redactor blocks name\n         */\n        BLOCK_CLASSNAME : 'ce-block',\n\n            /**\n             * @const {String} wrapper for plugins content\n             */\n            BLOCK_CONTENT : 'ce-block__content',\n\n            /**\n             * @const {String} BLOCK_STRETCHED - makes block stretched\n             */\n            BLOCK_STRETCHED : 'ce-block--stretched',\n\n            /**\n             * @const {String} BLOCK_HIGHLIGHTED - adds background\n             */\n            BLOCK_HIGHLIGHTED : 'ce-block--focused',\n\n            /**\n             * @const {String} - highlights covered blocks\n             */\n            BLOCK_IN_FEED_MODE : 'ce-block--feed-mode',\n\n            /**\n             * @const {String} - for all default settings\n             */\n            SETTINGS_ITEM : 'ce-settings__item'\n\n    };\n\n    /**\n     * @protected\n     *\n     * Making main interface\n     */\n    ui.make = function () {\n\n        var wrapper,\n            toolbar,\n            toolbarContent,\n            inlineToolbar,\n            redactor,\n            ceBlock,\n            notifications,\n            blockButtons,\n            blockSettings,\n            showSettingsButton,\n            showTrashButton,\n            toolbox,\n            plusButton;\n\n        /** Make editor wrapper */\n        wrapper = codex.draw.wrapper();\n\n        /** Append editor wrapper after initial textarea */\n        codex.core.insertAfter(codex.nodes.textarea, wrapper);\n\n        /** Append block with notifications to the document */\n        notifications = codex.draw.alertsHolder();\n        codex.nodes.notifications = document.body.appendChild(notifications);\n\n        /** Make toolbar and content-editable redactor */\n        toolbar               = codex.draw.toolbar();\n        toolbarContent        = codex.draw.toolbarContent();\n        inlineToolbar         = codex.draw.inlineToolbar();\n        plusButton            = codex.draw.plusButton();\n        showSettingsButton    = codex.draw.settingsButton();\n        showTrashButton       = codex.toolbar.settings.makeRemoveBlockButton();\n        blockSettings         = codex.draw.blockSettings();\n        blockButtons          = codex.draw.blockButtons();\n        toolbox               = codex.draw.toolbox();\n        redactor              = codex.draw.redactor();\n\n        /** settings */\n        var defaultSettings = codex.draw.defaultSettings(),\n            pluginSettings  = codex.draw.pluginsSettings();\n\n        /** Add default and plugins settings */\n        blockSettings.appendChild(pluginSettings);\n        blockSettings.appendChild(defaultSettings);\n\n        /** Make blocks buttons\n         * This block contains settings button and remove block button\n         */\n        blockButtons.appendChild(showSettingsButton);\n        blockButtons.appendChild(showTrashButton);\n        blockButtons.appendChild(blockSettings);\n\n        /** Append plus button */\n        toolbarContent.appendChild(plusButton);\n\n        /** Appending toolbar tools */\n        toolbarContent.appendChild(toolbox);\n\n        /** Appending first-level block buttons */\n        toolbar.appendChild(blockButtons);\n\n        /** Append toolbarContent to toolbar */\n        toolbar.appendChild(toolbarContent);\n\n        wrapper.appendChild(toolbar);\n\n        wrapper.appendChild(redactor);\n\n        /** Save created ui-elements to static nodes state */\n        codex.nodes.wrapper            = wrapper;\n        codex.nodes.toolbar            = toolbar;\n        codex.nodes.plusButton         = plusButton;\n        codex.nodes.toolbox            = toolbox;\n        codex.nodes.blockSettings      = blockSettings;\n        codex.nodes.pluginSettings     = pluginSettings;\n        codex.nodes.defaultSettings    = defaultSettings;\n        codex.nodes.showSettingsButton = showSettingsButton;\n        codex.nodes.showTrashButton    = showTrashButton;\n\n        codex.nodes.redactor = redactor;\n\n        codex.ui.makeInlineToolbar(inlineToolbar);\n\n        /** fill in default settings */\n        codex.toolbar.settings.addDefaultSettings();\n    };\n\n    ui.makeInlineToolbar = function(container) {\n\n        /** Append to redactor new inline block */\n        codex.nodes.inlineToolbar.wrapper = container;\n\n        /** Draw toolbar buttons */\n        codex.nodes.inlineToolbar.buttons = codex.draw.inlineToolbarButtons();\n\n        /** Buttons action or settings */\n        codex.nodes.inlineToolbar.actions = codex.draw.inlineToolbarActions();\n\n        /** Append to inline toolbar buttons as part of it */\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.buttons);\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.actions);\n\n        codex.nodes.wrapper.appendChild(codex.nodes.inlineToolbar.wrapper);\n    };\n\n    /**\n     * @private\n     * Append tools passed in codex.tools\n     */\n    ui.addTools = function () {\n\n        var tool,\n            tool_button;\n\n        for(var name in codex.settings.tools) {\n            tool = codex.settings.tools[name];\n            codex.tools[name] = tool;;\n        }\n\n        /** Make toolbar buttons */\n        for (var name in codex.tools){\n\n            tool = codex.tools[name];\n\n            if (!tool.displayInToolbox) {\n                continue;\n            }\n\n            if (!tool.iconClassname) {\n                codex.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', name);\n                continue;\n            }\n\n            if (typeof tool.make != 'function') {\n                codex.core.log('make method missed. Tool %o skipped', 'warn', name);\n                continue;\n            }\n\n            /**\n             * if tools is for toolbox\n             */\n            tool_button = codex.draw.toolbarButton(name, tool.iconClassname);\n\n            codex.nodes.toolbox.appendChild(tool_button);\n\n            /** Save tools to static nodes */\n            codex.nodes.toolbarButtons[name] = tool_button;\n        }\n\n\n        /**\n         * Add inline toolbar tools\n         */\n        codex.ui.addInlineToolbarTools();\n\n\n    };\n\n    ui.addInlineToolbarTools = function() {\n\n        var tools = {\n\n            bold: {\n                icon    : 'ce-icon-bold',\n                command : 'bold'\n            },\n\n            italic: {\n                icon    : 'ce-icon-italic',\n                command : 'italic'\n            },\n\n            underline: {\n                icon    : 'ce-icon-underline',\n                command : 'underline'\n            },\n\n            link: {\n                icon    : 'ce-icon-link',\n                command : 'createLink',\n            }\n        };\n\n        var toolButton,\n            tool;\n\n        for(var name in tools) {\n\n            tool = tools[name];\n\n            toolButton = codex.draw.toolbarButtonInline(name, tool.icon);\n\n            codex.nodes.inlineToolbar.buttons.appendChild(toolButton);\n            /**\n             * Add callbacks to this buttons\n             */\n            codex.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\n        }\n\n    };\n\n    /**\n     * @private\n     * Bind editor UI events\n     */\n    ui.bindEvents = function () {\n\n        codex.core.log('ui.bindEvents fired', 'info');\n\n        window.addEventListener('error', function (errorMsg, url, lineNumber) {\n            codex.notifications.errorThrown(errorMsg, event);\n        }, false );\n\n        /** All keydowns on Document */\n        codex.nodes.redactor.addEventListener('keydown', codex.callback.globalKeydown, false );\n\n        /** All keydowns on Document */\n        document.addEventListener('keyup', codex.callback.globalKeyup, false );\n\n        /**\n         * Mouse click to radactor\n         */\n        codex.nodes.redactor.addEventListener('click', codex.callback.redactorClicked, false );\n\n        /**\n         * Clicks to the Plus button\n         */\n        codex.nodes.plusButton.addEventListener('click', codex.callback.plusButtonClicked, false);\n\n        /**\n         * Clicks to SETTINGS button in toolbar\n         */\n        codex.nodes.showSettingsButton.addEventListener('click', codex.callback.showSettingsButtonClicked, false );\n        /**\n         *  @deprecated ( but now in use for syncronization );\n         *  Any redactor changes: keyboard input, mouse cut/paste, drag-n-drop text\n         */\n        codex.nodes.redactor.addEventListener('input', codex.callback.redactorInputEvent, false );\n\n        /** Bind click listeners on toolbar buttons */\n        for (var button in codex.nodes.toolbarButtons){\n            codex.nodes.toolbarButtons[button].addEventListener('click', codex.callback.toolbarButtonClicked, false);\n        }\n\n    };\n\n    /**\n     * Initialize plugins before using\n     * Ex. Load scripts or call some internal methods\n     */\n    ui.preparePlugins = function() {\n\n        for(var tool in codex.tools) {\n\n            if (typeof codex.tools[tool].prepare != 'function')\n                continue;\n\n            codex.tools[tool].prepare();\n        }\n    },\n\n    ui.addBlockHandlers = function(block) {\n\n        if (!block) return;\n\n        /**\n         * Block keydowns\n         */\n        block.addEventListener('keydown', function(event) {\n            codex.callback.blockKeydown(event, block);\n        }, false);\n\n        /**\n         * Pasting content from another source\n         */\n        block.addEventListener('paste', function (event) {\n            codex.callback.blockPaste(event);\n        }, false);\n\n        block.addEventListener('mouseup', function(){\n            codex.toolbar.inline.show();\n        }, false);\n\n    };\n\n    /** getting all contenteditable elements */\n    ui.saveInputs = function() {\n\n        var redactor = codex.nodes.redactor,\n            elements = [];\n\n        /** Save all inputs in global variable state */\n        codex.state.inputs = redactor.querySelectorAll('[contenteditable], input');\n    };\n\n    /**\n     * Adds first initial block on empty redactor\n     */\n    ui.addInitialBlock = function(){\n\n        var initialBlockType = codex.settings.initialBlockPlugin,\n            initialBlock;\n\n        if ( !codex.tools[initialBlockType] ){\n            codex.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\n            return;\n        }\n\n        initialBlock = codex.tools[initialBlockType].render();\n\n        initialBlock.setAttribute('data-placeholder', 'Write your story...');\n\n        codex.content.insertBlock({\n            type  : initialBlockType,\n            block : initialBlock\n        });\n\n        codex.content.workingNodeChanged(initialBlock);\n\n    };\n\n    ui.setInlineToolbarButtonBehaviour = function(button, type) {\n\n        button.addEventListener('mousedown', function(event) {\n\n            codex.toolbar.inline.toolClicked(event, type);\n\n        }, false);\n    };\n\n    return ui;\n\n})({});\n\nmodule.exports = ui;\n\n\n// WEBPACK FOOTER //\n// ./modules/ui.js","/**\n *\n * Codex.Editor Transport Module\n *\n * @author Codex Team\n * @version 1.0.0\n */\n\nvar transport = (function(transport){\n\n    transport.input = null;\n\n    /**\n     * @property {Object} arguments - keep plugin settings and defined callbacks\n     */\n    transport.arguments = null;\n\n    transport.prepare = function(){\n\n        var input = document.createElement('INPUT');\n\n        input.type = 'file';\n        input.addEventListener('change', codex.transport.fileSelected);\n\n        codex.transport.input = input;\n\n    };\n\n    /** Clear input when files is uploaded */\n    transport.clearInput = function() {\n\n        /** Remove old input */\n        this.input = null;\n\n        /** Prepare new one */\n        this.prepare();\n    };\n\n    /**\n     * Callback for file selection\n     */\n    transport.fileSelected = function(event){\n\n        var input       = this,\n            files       = input.files,\n            filesLength = files.length,\n            formdData   = new FormData(),\n            file,\n            i;\n\n        formdData.append('files', files[0], files[0].name);\n\n        codex.transport.ajax({\n            data : formdData,\n            beforeSend : codex.transport.arguments.beforeSend,\n            success    : codex.transport.arguments.success,\n            error      : codex.transport.arguments.error\n        });\n    };\n\n    /**\n     * Use plugin callbacks\n     * @protected\n     */\n    transport.selectAndUpload = function (args) {\n\n        this.arguments = args;\n        this.input.click();\n\n    };\n\n    /**\n     * Ajax requests module\n     */\n    transport.ajax = function(params){\n\n        var xhr = new XMLHttpRequest(),\n            beforeSend = typeof params.beforeSend == 'function' ? params.beforeSend : function(){},\n            success    = typeof params.success    == 'function' ? params.success : function(){},\n            error      = typeof params.error      == 'function' ? params.error   : function(){};\n\n        beforeSend();\n\n        xhr.open('POST', codex.settings.uploadImagesUrl, true);\n\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        xhr.onload = function () {\n            if (xhr.status === 200) {\n                success(xhr.responseText);\n            } else {\n                console.log(\"request error: %o\", xhr);\n                error();\n            }\n        };\n\n        xhr.send(params.data);\n        this.clearInput();\n\n    };\n\n    return transport;\n\n})({});\n\nmodule.exports  = transport;\n\n\n// WEBPACK FOOTER //\n// ./modules/transport.js","var renderer = (function(renderer) {\n\n    /**\n     * Asyncronously parses input JSON to redactor blocks\n     */\n    renderer.makeBlocksFromData = function () {\n\n        /**\n         * If redactor is empty, add first paragraph to start writing\n         */\n        if (!codex.state.blocks.items.length) {\n\n            codex.ui.addInitialBlock();\n            return;\n\n        }\n\n        Promise.resolve()\n\n        /** First, get JSON from state */\n            .then(function() {\n                return codex.state.blocks;\n            })\n\n            /** Then, start to iterate they */\n            .then(codex.renderer.appendBlocks)\n\n            /** Write log if something goes wrong */\n            .catch(function(error) {\n                codex.core.log('Error while parsing JSON: %o', 'error', error);\n            });\n\n    };\n\n    /**\n     * Parses JSON to blocks\n     * @param {object} data\n     * @return Primise -> nodeList\n     */\n    renderer.appendBlocks = function (data) {\n\n        var blocks = data.items;\n\n        /**\n         * Sequence of one-by-one blocks appending\n         * Uses to save blocks order after async-handler\n         */\n        var nodeSequence = Promise.resolve();\n\n        for (var index = 0; index < blocks.length ; index++ ) {\n\n            /** Add node to sequence at specified index */\n            codex.renderer.appendNodeAtIndex(nodeSequence, blocks, index);\n\n        }\n\n    };\n\n    /**\n     * Append node at specified index\n     */\n    renderer.appendNodeAtIndex = function (nodeSequence, blocks, index) {\n\n        /** We need to append node to sequence */\n        nodeSequence\n\n        /** first, get node async-aware */\n            .then(function() {\n\n                return codex.renderer.getNodeAsync(blocks , index);\n\n            })\n\n            /**\n             * second, compose editor-block from JSON object\n             */\n            .then(codex.renderer.createBlockFromData)\n\n            /**\n             * now insert block to redactor\n             */\n            .then(function(blockData){\n\n                /**\n                 * blockData has 'block', 'type' and 'stretched' information\n                 */\n                codex.content.insertBlock(blockData);\n\n                /** Pass created block to next step */\n                return blockData.block;\n\n            })\n\n            /** Log if something wrong with node */\n            .catch(function(error) {\n                codex.core.log('Node skipped while parsing because %o', 'error', error);\n            });\n\n    };\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    renderer.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function() {\n\n            return blocksList[index];\n\n        });\n    };\n\n    /**\n     * Creates editor block by JSON-data\n     *\n     * @uses render method of each plugin\n     *\n     * @param {object} blockData looks like\n     *                            { header : {\n     *                                            text: '',\n     *                                            type: 'H3', ...\n     *                                        }\n     *                            }\n     * @return {object} with type and Element\n     */\n    renderer.createBlockFromData = function (blockData) {\n\n        /** New parser */\n        var pluginName = blockData.type,\n            cover      = blockData.cover;\n\n        /** Get first key of object that stores plugin name */\n        // for (var pluginName in blockData) break;\n\n        /** Check for plugin existance */\n        if (!codex.tools[pluginName]) {\n            throw Error(`Plugin «${pluginName}» not found`);\n        }\n\n        /** Check for plugin having render method */\n        if (typeof codex.tools[pluginName].render != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have «render» method`);\n        }\n\n        /** New Parser */\n        var block = codex.tools[pluginName].render(blockData.data);\n\n        /** is first-level block stretched */\n        var stretched = codex.tools[pluginName].isStretched || false;\n\n        /** Retrun type and block */\n        return {\n            type      : pluginName,\n            block     : block,\n            stretched : stretched,\n            cover     : cover\n        };\n\n    };\n\n    return renderer;\n\n})({});\n\nmodule.exports = renderer;\n\n\n// WEBPACK FOOTER //\n// ./modules/renderer.js","var saver = (function(saver) {\n\n    /**\n     * Saves blocks\n     * @private\n     */\n    saver.saveBlocks = function () {\n\n        /** Save html content of redactor to memory */\n        codex.state.html = codex.nodes.redactor.innerHTML;\n\n        /** Empty jsonOutput state */\n        codex.state.jsonOutput = [];\n\n        Promise.resolve()\n\n            .then(function() {\n                return codex.nodes.redactor.childNodes;\n            })\n            /** Making a sequence from separate blocks */\n            .then(codex.saver.makeQueue)\n\n            .then(function() {\n                // codex.nodes.textarea.innerHTML = codex.state.html;\n            })\n\n            .catch( function(error) {\n                console.log('Something happend');\n            });\n\n    };\n\n    saver.makeQueue = function(blocks) {\n\n        var queue = Promise.resolve();\n\n        for(var index = 0; index < blocks.length; index++) {\n\n            /** Add node to sequence at specified index */\n            codex.saver.getBlockData(queue, blocks, index);\n\n        }\n\n    };\n\n    /** Gets every block and makes From Data */\n    saver.getBlockData = function(queue, blocks, index) {\n\n        queue.then(function() {\n            return codex.saver.getNodeAsync(blocks, index);\n        })\n\n            .then(codex.saver.makeFormDataFromBlocks);\n\n    };\n\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    saver.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function() {\n\n            return blocksList[index];\n\n        });\n    };\n\n    saver.makeFormDataFromBlocks = function(block) {\n\n        var pluginName = block.dataset.tool;\n\n        /** Check for plugin existance */\n        if (!codex.tools[pluginName]) {\n            throw Error(`Plugin «${pluginName}» not found`);\n        }\n\n        /** Check for plugin having render method */\n        if (typeof codex.tools[pluginName].save != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have save method`);\n        }\n\n        /** Result saver */\n        var blockContent   = block.childNodes[0],\n            pluginsContent = blockContent.childNodes[0],\n            savedData      = codex.tools[pluginName].save(pluginsContent),\n            output;\n\n\n        output = {\n            type: pluginName,\n            data: savedData\n        };\n\n        /** Marks Blocks that will be in main page */\n        output.cover = block.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE);\n\n        codex.state.jsonOutput.push(output);\n    };\n\n    return saver;\n\n})({});\n\nmodule.exports = saver;\n\n\n// WEBPACK FOOTER //\n// ./modules/saver.js","var content = (function(content) {\n\n    content.currentNode = null;\n\n    /**\n     * Synchronizes redactor with original textarea\n     */\n    content.sync = function () {\n\n        codex.core.log('syncing...');\n\n        /**\n         * Save redactor content to codex.state\n         */\n        codex.state.html = codex.nodes.redactor.innerHTML;\n\n    };\n\n    /**\n     * @deprecated\n     */\n    content.getNodeFocused = function() {\n\n        var selection = window.getSelection(),\n            focused;\n\n        if (selection.anchorNode === null) {\n            return null;\n        }\n\n        if ( selection.anchorNode.nodeType == codex.core.nodeTypes.TAG ) {\n            focused = selection.anchorNode;\n        } else {\n            focused = selection.focusNode.parentElement;\n        }\n\n        if ( !codex.parser.isFirstLevelBlock(focused) ) {\n\n            /** Iterate with parent nodes to find first-level*/\n            var parent = focused.parentNode;\n\n            while (parent && !codex.parser.isFirstLevelBlock(parent)){\n                parent = parent.parentNode;\n            }\n\n            focused = parent;\n        }\n\n        if (focused != codex.nodes.redactor){\n            return focused;\n        }\n\n        return null;\n\n    };\n\n    /**\n     * Appends background to the block\n     */\n    content.markBlock = function() {\n\n        codex.content.currentNode.classList.add(codex.ui.className.BLOCK_HIGHLIGHTED);\n    };\n\n    /**\n     * Clear background\n     */\n    content.clearMark = function() {\n\n        if (codex.content.currentNode) {\n            codex.content.currentNode.classList.remove(codex.ui.className.BLOCK_HIGHLIGHTED);\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Finds first-level block\n     * @param {Element} node - selected or clicked in redactors area node\n     */\n    content.getFirstLevelBlock = function(node) {\n\n        if (!codex.core.isDomNode(node)) {\n            node = node.parentNode;\n        }\n\n        if (node === codex.nodes.redactor || node === document.body) {\n\n            return null;\n\n        } else {\n\n            while(!node.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\n                node = node.parentNode;\n            }\n\n            return node;\n        }\n\n    };\n\n    /**\n     * Trigger this event when working node changed\n     * @param {Element} targetNode - first-level of this node will be current\n     * If targetNode is first-level then we set it as current else we look for parents to find first-level\n     */\n    content.workingNodeChanged = function (targetNode) {\n\n        /** Clear background from previous marked block before we change */\n        codex.content.clearMark();\n\n        if (!targetNode) {\n            return;\n        }\n\n        this.currentNode = this.getFirstLevelBlock(targetNode);\n\n    };\n\n    /**\n     * Replaces one redactor block with another\n     * @protected\n     * @param {Element} targetBlock - block to replace. Mostly currentNode.\n     * @param {Element} newBlock\n     * @param {string} newBlockType - type of new block; we need to store it to data-attribute\n     *\n     * [!] Function does not saves old block content.\n     *     You can get it manually and pass with newBlock.innerHTML\n     */\n    content.replaceBlock = function function_name(targetBlock, newBlock) {\n\n        if (!targetBlock || !newBlock){\n            codex.core.log('replaceBlock: missed params');\n            return;\n        }\n\n        /** If target-block is not a frist-level block, then we iterate parents to find it */\n        while(!targetBlock.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\n            targetBlock = targetBlock.parentNode;\n        }\n\n        /** Replacing */\n        codex.nodes.redactor.replaceChild(newBlock, targetBlock);\n\n        /**\n         * Set new node as current\n         */\n        codex.content.workingNodeChanged(newBlock);\n\n        /**\n         * Add block handlers\n         */\n        codex.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Save changes\n         */\n        codex.ui.saveInputs();\n\n    };\n\n    /**\n     * @private\n     *\n     * Inserts new block to redactor\n     * Wrapps block into a DIV with BLOCK_CLASSNAME class\n     *\n     * @param blockData          {object}\n     * @param blockData.block    {Element}   element with block content\n     * @param blockData.type     {string}    block plugin\n     * @param needPlaceCaret     {bool}      pass true to set caret in new block\n     *\n     */\n    content.insertBlock = function( blockData, needPlaceCaret ) {\n\n        var workingBlock    = codex.content.currentNode,\n            newBlockContent = blockData.block,\n            blockType       = blockData.type,\n            cover           = blockData.cover,\n            isStretched     = blockData.stretched;\n\n        var newBlock = codex.content.composeNewBlock(newBlockContent, blockType, isStretched);\n\n        if (cover === true) {\n            newBlock.classList.add(codex.ui.className.BLOCK_IN_FEED_MODE);\n        }\n\n        if (workingBlock) {\n\n            codex.core.insertAfter(workingBlock, newBlock);\n\n        } else {\n            /**\n             * If redactor is empty, append as first child\n             */\n            codex.nodes.redactor.appendChild(newBlock);\n\n        }\n\n        /**\n         * Block handler\n         */\n        codex.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Set new node as current\n         */\n        codex.content.workingNodeChanged(newBlock);\n\n        /**\n         * Save changes\n         */\n        codex.ui.saveInputs();\n\n\n        if ( needPlaceCaret ) {\n\n            /**\n             * If we don't know input index then we set default value -1\n             */\n            var currentInputIndex = codex.caret.getCurrentInputIndex() || -1;\n\n\n            if (currentInputIndex == -1) {\n\n\n                var editableElement = newBlock.querySelector('[contenteditable]'),\n                    emptyText       = document.createTextNode('');\n\n                editableElement.appendChild(emptyText);\n                codex.caret.set(editableElement, 0, 0);\n\n                codex.toolbar.move();\n                codex.toolbar.showPlusButton();\n\n\n            } else {\n\n                /** Timeout for browsers execution */\n                setTimeout(function () {\n\n                    /** Setting to the new input */\n                    codex.caret.setToNextBlock(currentInputIndex);\n                    codex.toolbar.move();\n                    codex.toolbar.open();\n\n                }, 10);\n\n            }\n\n        }\n\n    };\n\n    /**\n     * Replaces blocks with saving content\n     * @protected\n     * @param {Element} noteToReplace\n     * @param {Element} newNode\n     * @param {Element} blockType\n     */\n    content.switchBlock = function(blockToReplace, newBlock, tool){\n\n        var newBlockComposed = codex.content.composeNewBlock(newBlock, tool);\n\n        /** Replacing */\n        codex.content.replaceBlock(blockToReplace, newBlockComposed);\n\n        /** Save new Inputs when block is changed */\n        codex.ui.saveInputs();\n    };\n\n    /**\n     * Iterates between child noted and looking for #text node on deepest level\n     * @private\n     * @param {Element} block - node where find\n     * @param {int} postiton - starting postion\n     *      Example: childNodex.length to find from the end\n     *               or 0 to find from the start\n     * @return {Text} block\n     * @uses DFS\n     */\n    content.getDeepestTextNodeFromPosition = function (block, position) {\n\n        /**\n         * Clear Block from empty and useless spaces with trim.\n         * Such nodes we should remove\n         */\n        var blockChilds = block.childNodes,\n            index,\n            node,\n            text;\n\n        for(index = 0; index < blockChilds.length; index++)\n        {\n            node = blockChilds[index];\n\n            if (node.nodeType == codex.core.nodeTypes.TEXT) {\n\n                text = node.textContent.trim();\n\n                /** Text is empty. We should remove this child from node before we start DFS\n                 * decrease the quantity of childs.\n                 */\n                if (text === '') {\n\n                    block.removeChild(node);\n                    position--;\n                }\n            }\n        }\n\n        if (block.childNodes.length === 0) {\n            return document.createTextNode('');\n        }\n\n        /** Setting default position when we deleted all empty nodes */\n        if ( position < 0 )\n            position = 1;\n\n        var looking_from_start = false;\n\n        /** For looking from START */\n        if (position === 0) {\n            looking_from_start = true;\n            position = 1;\n        }\n\n        while ( position ) {\n\n            /** initial verticle of node. */\n            if ( looking_from_start ) {\n                block = block.childNodes[0];\n            } else {\n                block = block.childNodes[position - 1];\n            }\n\n            if ( block.nodeType == codex.core.nodeTypes.TAG ){\n\n                position = block.childNodes.length;\n\n            } else if (block.nodeType == codex.core.nodeTypes.TEXT ){\n\n                position = 0;\n            }\n\n        }\n\n        return block;\n    };\n\n    /**\n     * @private\n     */\n    content.composeNewBlock = function (block, tool, isStretched) {\n\n        var newBlock     = codex.draw.node('DIV', codex.ui.className.BLOCK_CLASSNAME, {}),\n            blockContent = codex.draw.node('DIV', codex.ui.className.BLOCK_CONTENT, {});\n\n        blockContent.appendChild(block);\n        newBlock.appendChild(blockContent);\n\n        if (isStretched) {\n            blockContent.classList.add(codex.ui.className.BLOCK_STRETCHED);\n        }\n\n        newBlock.dataset.tool = tool;\n        return newBlock;\n    };\n\n    /**\n     * Returns Range object of current selection\n     */\n    content.getRange = function() {\n\n        var selection = window.getSelection().getRangeAt(0);\n\n        return selection;\n    };\n\n    /**\n     * Divides block in two blocks (after and before caret)\n     * @private\n     * @param {Int} inputIndex - target input index\n     */\n    content.splitBlock = function(inputIndex) {\n\n        var selection      = window.getSelection(),\n            anchorNode     = selection.anchorNode,\n            anchorNodeText = anchorNode.textContent,\n            caretOffset    = selection.anchorOffset,\n            textBeforeCaret,\n            textNodeBeforeCaret,\n            textAfterCaret,\n            textNodeAfterCaret;\n\n        var currentBlock = codex.content.currentNode.querySelector('[contentEditable]');\n\n\n        textBeforeCaret     = anchorNodeText.substring(0, caretOffset);\n        textAfterCaret      = anchorNodeText.substring(caretOffset);\n\n        textNodeBeforeCaret = document.createTextNode(textBeforeCaret);\n\n        if (textAfterCaret) {\n            textNodeAfterCaret  = document.createTextNode(textAfterCaret);\n        }\n\n        var previousChilds = [],\n            nextChilds     = [],\n            reachedCurrent = false;\n\n        if (textNodeAfterCaret) {\n            nextChilds.push(textNodeAfterCaret);\n        }\n\n        for ( var i = 0, child; !!(child = currentBlock.childNodes[i]); i++) {\n\n            if ( child != anchorNode ) {\n                if ( !reachedCurrent ){\n                    previousChilds.push(child);\n                } else {\n                    nextChilds.push(child);\n                }\n            } else {\n                reachedCurrent = true;\n            }\n\n        }\n\n        /** Clear current input */\n        codex.state.inputs[inputIndex].innerHTML = '';\n\n        /**\n         * Append all childs founded before anchorNode\n         */\n        var previousChildsLength = previousChilds.length;\n\n        for(i = 0; i < previousChildsLength; i++) {\n            codex.state.inputs[inputIndex].appendChild(previousChilds[i]);\n        }\n\n        codex.state.inputs[inputIndex].appendChild(textNodeBeforeCaret);\n\n        /**\n         * Append text node which is after caret\n         */\n        var nextChildsLength = nextChilds.length,\n            newNode          = document.createElement('div');\n\n        for(i = 0; i < nextChildsLength; i++) {\n            newNode.appendChild(nextChilds[i]);\n        }\n\n        newNode = newNode.innerHTML;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = 'paragraph';\n\n        /**\n         * Make new paragraph with text after caret\n         */\n        codex.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : codex.tools[NEW_BLOCK_TYPE].render({\n                text : newNode\n            })\n        }, true );\n\n    };\n\n    /**\n     * Merges two blocks — current and target\n     * If target index is not exist, then previous will be as target\n     */\n    content.mergeBlocks = function(currentInputIndex, targetInputIndex) {\n\n        /** If current input index is zero, then prevent method execution */\n        if (currentInputIndex === 0) {\n            return;\n        }\n\n        var targetInput,\n            currentInputContent = codex.state.inputs[currentInputIndex].innerHTML;\n\n        if (!targetInputIndex) {\n\n            targetInput = codex.state.inputs[currentInputIndex - 1];\n\n        } else {\n\n            targetInput = codex.state.inputs[targetInputIndex];\n\n        }\n\n        targetInput.innerHTML += currentInputContent;\n    };\n\n    /**\n     * @private\n     *\n     * Callback for HTML Mutations\n     * @param {Array} mutation - Mutation Record\n     */\n    content.paste = function(mutation) {\n\n        var workingNode = codex.content.currentNode,\n            tool        = workingNode.dataset.tool;\n\n        if (codex.tools[tool].allowedToPaste) {\n            codex.content.sanitize(mutation.addedNodes);\n        } else {\n            codex.content.pasteTextContent(mutation.addedNodes);\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * gets only text/plain content of node\n     * @param {Element} target - HTML node\n     */\n    content.pasteTextContent = function(nodes) {\n\n        var node     = nodes[0],\n            textNode = document.createTextNode(node.textContent);\n\n        if (codex.core.isDomNode(node)) {\n            node.parentNode.replaceChild(textNode, node);\n        }\n    };\n\n    /**\n     * @private\n     *\n     * Sanitizes HTML content\n     * @param {Element} target - inserted element\n     * @uses DFS function for deep searching\n     */\n    content.sanitize = function(target) {\n\n        if (!target) {\n            return;\n        }\n\n        for (var i = 0; i < target.childNodes.length; i++) {\n            this.dfs(target.childNodes[i]);\n        }\n    };\n\n    /**\n     * Clears styles\n     * @param {Element|Text}\n     */\n    content.clearStyles = function(target) {\n\n        var href,\n            newNode = null,\n            blockTags   = ['P', 'BLOCKQUOTE', 'UL', 'CODE', 'OL', 'LI', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'DIV', 'PRE', 'HEADER', 'SECTION'],\n            allowedTags = ['P', 'B', 'I', 'A', 'U', 'BR'],\n            needReplace = !allowedTags.includes(target.tagName),\n            isDisplayedAsBlock = blockTags.includes(target.tagName);\n\n        if (!codex.core.isDomNode(target)){\n            return target;\n        }\n\n        if (!target.parentNode){\n            return target;\n        }\n\n        if (needReplace) {\n\n            if (isDisplayedAsBlock) {\n\n                newNode = document.createElement('P');\n                newNode.innerHTML = target.innerHTML;\n                target.parentNode.replaceChild(newNode, target);\n                target = newNode;\n\n            } else {\n\n                newNode = document.createTextNode(` ${target.textContent} `);\n                newNode.textContent = newNode.textContent.replace(/\\s{2,}/g, ' ');\n                target.parentNode.replaceChild(newNode, target);\n\n            }\n        }\n\n        /** keep href attributes of tag A */\n        if (target.tagName == 'A') {\n            href = target.getAttribute('href');\n        }\n\n        /** Remove all tags */\n        while(target.attributes.length > 0) {\n            target.removeAttribute(target.attributes[0].name);\n        }\n\n        /** return href */\n        if (href) {\n            target.setAttribute('href', href);\n        }\n\n        return target;\n\n    };\n\n    /**\n     * Depth-first search Algorithm\n     * returns all childs\n     * @param {Element}\n     */\n    content.dfs = function(el) {\n\n        if (!codex.core.isDomNode(el))\n            return;\n\n        var sanitized = this.clearStyles(el);\n\n        for(var i = 0; i < sanitized.childNodes.length; i++) {\n            this.dfs(sanitized.childNodes[i]);\n        }\n\n    };\n\n    return content;\n\n})({});\n\nmodule.exports = content;\n\n\n// WEBPACK FOOTER //\n// ./modules/content.js","var toolbar = (function(toolbar) {\n\n    toolbar.init = function() {\n        toolbar.settings = require('./settings');\n        toolbar.inline   = require('./inline');\n        toolbar.toolbox  = require('./toolbox');\n    };\n\n    /**\n     * Margin between focused node and toolbar\n     */\n    toolbar.defaultToolbarHeight = 49;\n\n    toolbar.defaultOffset = 34;\n\n    toolbar.opened = false;\n\n    toolbar.current = null;\n\n    /**\n     * @protected\n     */\n    toolbar.open = function (){\n\n        codex.nodes.toolbar.classList.add('opened');\n        this.opened = true;\n\n    };\n\n    /**\n     * @protected\n     */\n    toolbar.close = function(){\n\n        codex.nodes.toolbar.classList.remove('opened');\n\n        toolbar.opened  = false;\n        toolbar.current = null;\n\n        for (var button in codex.nodes.toolbarButtons){\n            codex.nodes.toolbarButtons[button].classList.remove('selected');\n        }\n\n        /** Close toolbox when toolbar is not displayed */\n        codex.toolbar.toolbox.close();\n        codex.toolbar.settings.close();\n\n    };\n\n    toolbar.toggle = function(){\n\n        if ( !this.opened ){\n\n            this.open();\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    toolbar.hidePlusButton = function() {\n        codex.nodes.plusButton.classList.add('hide');\n    };\n\n    toolbar.showPlusButton = function() {\n        codex.nodes.plusButton.classList.remove('hide');\n    };\n\n    /**\n     * Moving toolbar to the specified node\n     */\n    toolbar.move = function() {\n\n        /** Close Toolbox when we move toolbar */\n        codex.toolbar.toolbox.close();\n\n        if (!codex.content.currentNode) {\n            return;\n        }\n\n        var toolbarHeight = codex.nodes.toolbar.clientHeight || codex.toolbar.defaultToolbarHeight,\n            newYCoordinate = codex.content.currentNode.offsetTop - (codex.toolbar.defaultToolbarHeight / 2) + codex.toolbar.defaultOffset;\n\n        codex.nodes.toolbar.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\n\n        /** Close trash actions */\n        codex.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return toolbar;\n\n})({});\n\ntoolbar.init();\n\nmodule.exports = toolbar;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbar.js","var settings = (function(settings) {\n\n    settings.init = function() {\n        require('../content');\n    };\n\n    settings.opened = false;\n\n    settings.setting = null;\n    settings.actions = null;\n\n    settings.cover = null;\n\n    /**\n     * Append and open settings\n     */\n    settings.open = function(toolType){\n\n        /**\n         * Append settings content\n         * It's stored in tool.settings\n         */\n        if (!codex.tools[toolType] || !codex.core.isDomNode(codex.tools[toolType].settings) ) {\n\n            codex.core.log(`Plugin «${toolType}» has no settings`, 'warn');\n            // codex.nodes.pluginSettings.innerHTML = `Плагин «${toolType}» не имеет настроек`;\n\n        } else {\n\n            codex.nodes.pluginSettings.appendChild(codex.tools[toolType].settings);\n\n        }\n\n        var currentBlock = codex.content.currentNode;\n\n        /** Open settings block */\n        codex.nodes.blockSettings.classList.add('opened');\n        codex.toolbar.settings.addDefaultSettings();\n        this.opened = true;\n    };\n\n    /**\n     * Close and clear settings\n     */\n    settings.close = function(){\n\n        codex.nodes.blockSettings.classList.remove('opened');\n        codex.nodes.pluginSettings.innerHTML = '';\n\n        this.opened = false;\n\n    };\n\n    /**\n     * @param {string} toolType - plugin type\n     */\n    settings.toggle = function( toolType ){\n\n        if ( !this.opened ){\n\n            this.open(toolType);\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    /**\n     * This function adds default core settings\n     */\n    settings.addDefaultSettings = function() {\n\n        /** list of default settings */\n        var feedModeToggler;\n\n        /** Clear block and append initialized settings */\n        codex.nodes.defaultSettings.innerHTML = '';\n\n\n        /** Init all default setting buttons */\n        feedModeToggler = codex.toolbar.settings.makeFeedModeToggler();\n\n        /**\n         * Fill defaultSettings\n         */\n\n        /**\n         * Button that enables/disables Feed-mode\n         * Feed-mode means that block will be showed in articles-feed like cover\n         */\n        codex.nodes.defaultSettings.appendChild(feedModeToggler);\n\n    };\n\n    /**\n     * Cover setting.\n     * This tune highlights block, so that it may be used for showing target block on main page\n     * Draw different setting when block is marked for main page\n     * If TRUE, then we show button that removes this selection\n     * Also defined setting \"Click\" events will be listened and have separate callbacks\n     *\n     * @return {Element} node/button that we place in default settings block\n     */\n    settings.makeFeedModeToggler = function() {\n\n        var isFeedModeActivated = codex.toolbar.settings.isFeedModeActivated(),\n            setting,\n            data;\n\n        if (!isFeedModeActivated) {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Вывести в ленте'\n            };\n\n        } else {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Не выводить в ленте'\n            };\n\n        }\n\n        setting = codex.draw.node('DIV', codex.ui.className.SETTINGS_ITEM, data);\n        setting.addEventListener('click', codex.toolbar.settings.updateFeedMode, false);\n\n        return setting;\n    };\n\n    /**\n     * Updates Feed-mode\n     */\n    settings.updateFeedMode = function() {\n\n        var currentNode = codex.content.currentNode;\n\n        currentNode.classList.toggle(codex.ui.className.BLOCK_IN_FEED_MODE);\n\n        codex.toolbar.settings.close();\n    };\n\n    settings.isFeedModeActivated = function() {\n\n        var currentBlock = codex.content.currentNode;\n\n        if (currentBlock) {\n            return currentBlock.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE);\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Here we will draw buttons and add listeners to components\n     */\n    settings.makeRemoveBlockButton = function() {\n\n        var removeBlockWrapper  = codex.draw.node('SPAN', 'ce-toolbar__remove-btn', {}),\n            settingButton = codex.draw.node('SPAN', 'ce-toolbar__remove-setting', { innerHTML : '<i class=\"ce-icon-trash\"></i>' }),\n            actionWrapper = codex.draw.node('DIV', 'ce-toolbar__remove-confirmation', {}),\n            confirmAction = codex.draw.node('DIV', 'ce-toolbar__remove-confirm', { textContent : 'Удалить блок' }),\n            cancelAction  = codex.draw.node('DIV', 'ce-toolbar__remove-cancel', { textContent : 'Отменить удаление' });\n\n        settingButton.addEventListener('click', codex.toolbar.settings.removeButtonClicked, false);\n\n        confirmAction.addEventListener('click', codex.toolbar.settings.confirmRemovingRequest, false);\n\n        cancelAction.addEventListener('click', codex.toolbar.settings.cancelRemovingRequest, false);\n\n        actionWrapper.appendChild(confirmAction);\n        actionWrapper.appendChild(cancelAction);\n\n        removeBlockWrapper.appendChild(settingButton);\n        removeBlockWrapper.appendChild(actionWrapper);\n\n        /** Save setting */\n        codex.toolbar.settings.setting = settingButton;\n        codex.toolbar.settings.actions = actionWrapper;\n\n        return removeBlockWrapper;\n\n    };\n\n    settings.removeButtonClicked = function() {\n\n        var action = codex.toolbar.settings.actions;\n\n        if (action.classList.contains('opened')) {\n            codex.toolbar.settings.hideRemoveActions();\n        } else {\n            codex.toolbar.settings.showRemoveActions();\n        }\n\n        codex.toolbar.toolbox.close();\n        codex.toolbar.settings.close();\n\n    };\n\n    settings.cancelRemovingRequest = function() {\n\n        codex.toolbar.settings.actions.classList.remove('opened');\n    };\n\n    settings.confirmRemovingRequest = function() {\n\n        var currentBlock = codex.content.currentNode,\n            firstLevelBlocksCount;\n\n        currentBlock.remove();\n\n        firstLevelBlocksCount = codex.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            codex.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            codex.ui.addInitialBlock();\n        }\n\n        codex.ui.saveInputs();\n\n        codex.toolbar.close();\n    };\n\n    settings.showRemoveActions = function() {\n        codex.toolbar.settings.actions.classList.add('opened');\n    };\n\n    settings.hideRemoveActions = function() {\n        codex.toolbar.settings.actions.classList.remove('opened');\n    };\n\n    return settings;\n\n})({});\n\nsettings.init();\n\nmodule.exports = settings;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/settings.js","var inline = (function(inline) {\n\n    inline.init = function() {\n\n    };\n\n    inline.buttonsOpened = null;\n    inline.actionsOpened = null;\n    inline.wrappersOffset = null;\n\n    /**\n     * saving selection that need for execCommand for styling\n     *\n     */\n    inline.storedSelection = null,\n\n    /**\n     * @protected\n     *\n     * Open inline toobar\n     */\n    inline.show = function() {\n\n        var selectedText = this.getSelectionText(),\n            toolbar      = codex.nodes.inlineToolbar.wrapper,\n            buttons      = codex.nodes.inlineToolbar.buttons;\n\n        if (selectedText.length > 0) {\n\n            /** Move toolbar and open */\n            codex.toolbar.inline.move();\n\n            /** Open inline toolbar */\n            toolbar.classList.add('opened');\n\n            /** show buttons of inline toolbar */\n            codex.toolbar.inline.showButtons();\n        }\n\n    };\n\n    /**\n     * @protected\n     *\n     * Closes inline toolbar\n     */\n    inline.close = function() {\n        var toolbar = codex.nodes.inlineToolbar.wrapper;\n        toolbar.classList.remove('opened');\n    };\n\n    /**\n     * @private\n     *\n     * Moving toolbar\n     */\n    inline.move = function() {\n\n        if (!this.wrappersOffset) {\n            this.wrappersOffset = this.getWrappersOffset();\n        }\n\n        var coords          = this.getSelectionCoords(),\n            defaultOffset   = 0,\n            toolbar         = codex.nodes.inlineToolbar.wrapper,\n            newCoordinateX,\n            newCoordinateY;\n\n        if (toolbar.offsetHeight === 0) {\n            defaultOffset = 40;\n        }\n\n        newCoordinateX = coords.x - this.wrappersOffset.left;\n        newCoordinateY = coords.y + window.scrollY - this.wrappersOffset.top - defaultOffset - toolbar.offsetHeight;\n\n        toolbar.style.transform = `translate3D(${Math.floor(newCoordinateX)}px, ${Math.floor(newCoordinateY)}px, 0)`;\n\n        /** Close everything */\n        codex.toolbar.inline.closeButtons();\n        codex.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Tool Clicked\n     */\n\n    inline.toolClicked = function(event, type) {\n\n        /**\n         * For simple tools we use default browser function\n         * For more complicated tools, we should write our own behavior\n         */\n        switch (type) {\n            case 'createLink' : codex.toolbar.inline.createLinkAction(event, type); break;\n            default           : codex.toolbar.inline.defaultToolAction(type); break;\n        }\n\n        /**\n         * highlight buttons\n         * after making some action\n         */\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(codex.toolbar.inline.hightlight);\n    };\n\n    /**\n     * @private\n     *\n     * Saving wrappers offset in DOM\n     */\n    inline.getWrappersOffset = function() {\n\n        var wrapper = codex.nodes.wrapper,\n            offset  = this.getOffset(wrapper);\n\n        this.wrappersOffset = offset;\n        return offset;\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates offset of DOM element\n     *\n     * @param el\n     * @returns {{top: number, left: number}}\n     */\n    inline.getOffset = function ( el ) {\n\n        var _x = 0;\n        var _y = 0;\n\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\n            _x += (el.offsetLeft + el.clientLeft);\n            _y += (el.offsetTop + el.clientTop);\n            el = el.offsetParent;\n        }\n        return { top: _y, left: _x };\n    };\n\n    /**\n     * @private\n     *\n     * Calculates position of selected text\n     * @returns {{x: number, y: number}}\n     */\n    inline.getSelectionCoords = function() {\n\n        var sel = document.selection, range;\n        var x = 0, y = 0;\n\n        if (sel) {\n\n            if (sel.type != \"Control\") {\n                range = sel.createRange();\n                range.collapse(true);\n                x = range.boundingLeft;\n                y = range.boundingTop;\n            }\n\n        } else if (window.getSelection) {\n\n            sel = window.getSelection();\n\n            if (sel.rangeCount) {\n\n                range = sel.getRangeAt(0).cloneRange();\n                if (range.getClientRects) {\n                    range.collapse(true);\n                    var rect = range.getClientRects()[0];\n                    x = rect.left;\n                    y = rect.top;\n                }\n\n            }\n        }\n        return { x: x, y: y };\n    };\n\n    /**\n     * @private\n     *\n     * Returns selected text as String\n     * @returns {string}\n     */\n    inline.getSelectionText = function getSelectionText(){\n\n        var selectedText = \"\";\n\n        if (window.getSelection){ // all modern browsers and IE9+\n            selectedText = window.getSelection().toString();\n        }\n\n        return selectedText;\n    };\n\n    /** Opens buttons block */\n    inline.showButtons = function() {\n\n        var buttons = codex.nodes.inlineToolbar.buttons;\n        buttons.classList.add('opened');\n\n        codex.toolbar.inline.buttonsOpened = true;\n\n        /** highlight buttons */\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(codex.toolbar.inline.hightlight);\n\n    };\n\n    /** Makes buttons disappear */\n    inline.closeButtons = function() {\n        var buttons = codex.nodes.inlineToolbar.buttons;\n        buttons.classList.remove('opened');\n\n        codex.toolbar.inline.buttonsOpened = false;\n    };\n\n    /** Open buttons defined action if exist */\n    inline.showActions = function() {\n        var action = codex.nodes.inlineToolbar.actions;\n        action.classList.add('opened');\n\n        codex.toolbar.inline.actionsOpened = true;\n    };\n\n    /** Close actions block */\n    inline.closeAction = function() {\n        var action = codex.nodes.inlineToolbar.actions;\n        action.innerHTML = '';\n        action.classList.remove('opened');\n        codex.toolbar.inline.actionsOpened = false;\n    };\n\n    /** Action for link creation or for setting anchor */\n    inline.createLinkAction = function(event, type) {\n\n        var isActive = this.isLinkActive();\n\n        var editable        = codex.content.currentNode,\n            storedSelection = codex.toolbar.inline.storedSelection;\n\n        if (isActive) {\n\n            var selection   = window.getSelection(),\n                anchorNode  = selection.anchorNode;\n\n            storedSelection = codex.toolbar.inline.saveSelection(editable);\n\n            /**\n             * Changing stored selection. if we want to remove anchor from word\n             * we should remove anchor from whole word, not only selected part.\n             * The solution is than we get the length of current link\n             * Change start position to - end of selection minus length of anchor\n             */\n            codex.toolbar.inline.restoreSelection(editable, storedSelection);\n\n            codex.toolbar.inline.defaultToolAction('unlink');\n\n        } else {\n\n            /** Create input and close buttons */\n            var action = codex.draw.inputForLink();\n            codex.nodes.inlineToolbar.actions.appendChild(action);\n\n            codex.toolbar.inline.closeButtons();\n            codex.toolbar.inline.showActions();\n\n            storedSelection = codex.toolbar.inline.saveSelection(editable);\n\n            /**\n             * focus to input\n             * Solution: https://developer.mozilla.org/ru/docs/Web/API/HTMLElement/focus\n             * Prevents event after showing input and when we need to focus an input which is in unexisted form\n             */\n            action.focus();\n            event.preventDefault();\n\n            /** Callback to link action */\n            action.addEventListener('keydown', function(event){\n\n                if (event.keyCode == codex.core.keys.ENTER) {\n\n                    codex.toolbar.inline.restoreSelection(editable, storedSelection);\n                    codex.toolbar.inline.setAnchor(action.value);\n\n                    /**\n                     * Preventing events that will be able to happen\n                     */\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    codex.toolbar.inline.clearRange();\n                }\n\n            }, false);\n        }\n    };\n\n    inline.isLinkActive = function() {\n\n        var isActive = false;\n\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(function(tool) {\n            var dataType = tool.dataset.type;\n\n            if (dataType == 'link' && tool.classList.contains('hightlighted')) {\n                isActive = true;\n            }\n        });\n\n        return isActive;\n    };\n\n    /** default action behavior of tool */\n    inline.defaultToolAction = function(type) {\n        document.execCommand(type, false, null);\n    };\n\n    /**\n     * @private\n     *\n     * Sets URL\n     *\n     * @param {String} url - URL\n     */\n    inline.setAnchor = function(url) {\n\n        document.execCommand('createLink', false, url);\n\n        /** Close after URL inserting */\n        codex.toolbar.inline.closeAction();\n    };\n\n    /**\n     * @private\n     *\n     * Saves selection\n     */\n    inline.saveSelection = function(containerEl) {\n\n        var range = window.getSelection().getRangeAt(0),\n            preSelectionRange = range.cloneRange(),\n            start;\n\n        preSelectionRange.selectNodeContents(containerEl);\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\n\n        start = preSelectionRange.toString().length;\n\n        return {\n            start: start,\n            end: start + range.toString().length\n        };\n    };\n\n    /**\n     * @private\n     *\n     * Sets to previous selection (Range)\n     *\n     * @param {Element} containerEl - editable element where we restore range\n     * @param {Object} savedSel - range basic information to restore\n     */\n    inline.restoreSelection = function(containerEl, savedSel) {\n\n        var range     = document.createRange(),\n            charIndex = 0;\n\n        range.setStart(containerEl, 0);\n        range.collapse(true);\n\n        var nodeStack = [containerEl],\n            node,\n            foundStart = false,\n            stop = false,\n            nextCharIndex;\n\n        while (!stop && (node = nodeStack.pop())) {\n\n            if (node.nodeType == 3) {\n\n                nextCharIndex = charIndex + node.length;\n\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\n                    range.setStart(node, savedSel.start - charIndex);\n                    foundStart = true;\n                }\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\n                    range.setEnd(node, savedSel.end - charIndex);\n                    stop = true;\n                }\n                charIndex = nextCharIndex;\n            } else {\n                var i = node.childNodes.length;\n                while (i--) {\n                    nodeStack.push(node.childNodes[i]);\n                }\n            }\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    };\n\n    /**\n     * @private\n     *\n     * Removes all ranges from window selection\n     */\n    inline.clearRange = function() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n    };\n\n    /**\n     * @private\n     *\n     * sets or removes hightlight\n     */\n    inline.hightlight = function(tool) {\n        var dataType = tool.dataset.type;\n\n        if (document.queryCommandState(dataType)) {\n            codex.toolbar.inline.setButtonHighlighted(tool);\n        } else {\n            codex.toolbar.inline.removeButtonsHighLight(tool);\n        }\n\n        /**\n         *\n         * hightlight for anchors\n         */\n        var selection = window.getSelection(),\n            tag = selection.anchorNode.parentNode;\n\n        if (tag.tagName == 'A' && dataType == 'link') {\n            codex.toolbar.inline.setButtonHighlighted(tool);\n        }\n    };\n\n    /**\n     * @private\n     *\n     * Mark button if text is already executed\n     */\n    inline.setButtonHighlighted = function(button) {\n        button.classList.add('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n            var icon = button.childNodes[0];\n            icon.classList.remove('ce-icon-link');\n            icon.classList.add('ce-icon-unlink');\n        }\n    };\n\n    /**\n     * @private\n     *\n     * Removes hightlight\n     */\n    inline.removeButtonsHighLight = function(button) {\n        button.classList.remove('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n            var icon = button.childNodes[0];\n            icon.classList.remove('ce-icon-unlink');\n            icon.classList.add('ce-icon-link');\n        }\n    };\n\n\n    return inline;\n})({});\n\ninline.init();\n\nmodule.exports = inline;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/inline.js","var toolbox = (function(toolbox) {\n\n    toolbox.init = function() {\n        require('./toolbar');\n    };\n\n    toolbox.opened = false;\n\n    /** Shows toolbox */\n    toolbox.open = function() {\n\n        /** Close setting if toolbox is opened */\n        if (codex.toolbar.settings.opened) {\n            codex.toolbar.settings.close();\n        }\n\n        /** display toolbox */\n        codex.nodes.toolbox.classList.add('opened');\n\n        /** Animate plus button */\n        codex.nodes.plusButton.classList.add('clicked');\n\n        /** toolbox state */\n        codex.toolbar.toolbox.opened = true;\n\n    };\n\n    /** Closes toolbox */\n    toolbox.close = function() {\n\n        /** Makes toolbox disapear */\n        codex.nodes.toolbox.classList.remove('opened');\n\n        /** Rotate plus button */\n        codex.nodes.plusButton.classList.remove('clicked');\n\n        /** toolbox state */\n        codex.toolbar.toolbox.opened = false;\n\n    };\n\n    toolbox.leaf = function(){\n\n        var currentTool = codex.toolbar.current,\n            tools       = Object.keys(codex.tools),\n            barButtons  = codex.nodes.toolbarButtons,\n            nextToolIndex,\n            hiddenToolsAmount = 0,\n            toolToSelect;\n\n        /** Count toolbox hidden tools */\n        for( var tool in codex.tools ) {\n            if (!codex.tools[tool].displayInToolbox)\n                hiddenToolsAmount ++;\n        }\n\n        if ( !currentTool ) {\n\n            /** Get first tool from object*/\n            for (toolToSelect in barButtons) break;\n\n        } else {\n\n            nextToolIndex = tools.indexOf(currentTool) + 1;\n\n            var toolIsLastInToolbox = nextToolIndex == tools.length - (hiddenToolsAmount - 2);\n\n            if ( toolIsLastInToolbox ) {\n\n                nextToolIndex = 0;\n\n                /** getting first displayed tool */\n                for( var tool in codex.tools ) {\n\n                    if (codex.tools[tool].displayInToolbox){\n                        break;\n                    }\n\n                    nextToolIndex ++;\n                }\n\n            }\n\n            toolToSelect = tools[nextToolIndex];\n\n        }\n\n        for (var button in barButtons) barButtons[button].classList.remove('selected');\n        barButtons[toolToSelect].classList.add('selected');\n        codex.toolbar.current = toolToSelect;\n\n    };\n\n    /**\n     * Transforming selected node type into selected toolbar element type\n     * @param {event} event\n     */\n    toolbox.toolClicked = function() {\n\n        /**\n         * UNREPLACEBLE_TOOLS this types of tools are forbidden to replace even they are empty\n         */\n        var UNREPLACEBLE_TOOLS = ['image', 'link', 'list', 'instagram', 'twitter'],\n            tool               = codex.tools[codex.toolbar.current],\n            workingNode        = codex.content.currentNode,\n            currentInputIndex  = codex.caret.inputIndex,\n            newBlockContent,\n            appendCallback,\n            blockData;\n\n        /** Make block from plugin */\n        newBlockContent = tool.make();\n\n        /** information about block */\n        blockData = {\n            block     : newBlockContent,\n            type      : tool.type,\n            stretched : false\n        };\n\n        if (\n            workingNode &&\n            UNREPLACEBLE_TOOLS.indexOf(workingNode.dataset.tool) === -1 &&\n            workingNode.textContent.trim() === ''\n        ){\n            /** Replace current block */\n            codex.content.switchBlock(workingNode, newBlockContent, tool.type);\n\n        } else {\n\n            /** Insert new Block from plugin */\n            codex.content.insertBlock(blockData);\n\n            /** increase input index */\n            currentInputIndex++;\n\n        }\n\n        /** Fire tool append callback  */\n        appendCallback = tool.appendCallback;\n\n        if (appendCallback && typeof appendCallback == 'function') {\n            appendCallback.call(event);\n        }\n\n        setTimeout(function() {\n\n            /** Set caret to current block */\n            codex.caret.setToBlock(currentInputIndex);\n\n        }, 10);\n\n\n        /**\n         * Changing current Node\n         */\n        codex.content.workingNodeChanged();\n\n        /**\n         * Move toolbar when node is changed\n         */\n        codex.toolbar.move();\n    };\n\n    return toolbox;\n\n})({});\n\ntoolbox.init();\n\nmodule.exports = toolbox;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbox.js","var tools = (function(tools) {\n\n    return tools;\n\n})({});\n\nmodule.exports = tools;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/tools.js","var callbacks = (function(callbacks) {\n\n    callbacks.redactorSyncTimeout = null;\n\n    callbacks.globalKeydown = function(event){\n        switch (event.keyCode){\n            case codex.core.keys.TAB   : codex.callback.tabKeyPressed(event);       break;\n            case codex.core.keys.ENTER : codex.callback.enterKeyPressed(event);     break;\n            case codex.core.keys.ESC   : codex.callback.escapeKeyPressed(event);    break;\n            default                      : codex.callback.defaultKeyPressed(event);    break;\n        }\n    };\n\n    callbacks.globalKeyup = function(event){\n        switch (event.keyCode){\n            case codex.core.keys.UP    :\n            case codex.core.keys.LEFT  :\n            case codex.core.keys.RIGHT :\n            case codex.core.keys.DOWN  : codex.callback.arrowKeyPressed(event); break;\n        }\n    };\n\n    callbacks.tabKeyPressed = function(event){\n\n        if ( !codex.toolbar.opened ) {\n            codex.toolbar.open();\n        }\n\n        if (codex.toolbar.opened && !codex.toolbar.toolbox.opened) {\n            codex.toolbar.toolbox.open();\n        } else {\n            codex.toolbar.toolbox.leaf();\n        }\n\n        event.preventDefault();\n    };\n\n    /**\n     * ENTER key handler\n     * Makes new paragraph block\n     */\n    callbacks.enterKeyPressed = function(event){\n\n        /** Set current node */\n        var firstLevelBlocksArea = codex.callback.clickedOnFirstLevelBlockArea();\n\n        if (firstLevelBlocksArea) {\n            event.preventDefault();\n\n            /**\n             * it means that we lose input index, saved index before is not correct\n             * therefore we need to set caret when we insert new block\n             */\n            codex.caret.inputIndex = -1;\n\n            codex.callback.enterPressedOnBlock();\n            return;\n        }\n\n        if (event.target.contentEditable == 'true') {\n\n            /** Update input index */\n            codex.caret.saveCurrentInputIndex();\n        }\n\n        if (!codex.content.currentNode) {\n            /**\n             * Enter key pressed in first-level block area\n             */\n            codex.callback.enterPressedOnBlock(event);\n            return;\n        }\n\n\n        var currentInputIndex       = codex.caret.getCurrentInputIndex() || 0,\n            workingNode             = codex.content.currentNode,\n            tool                    = workingNode.dataset.tool,\n            isEnterPressedOnToolbar = codex.toolbar.opened &&\n                codex.toolbar.current &&\n                event.target == codex.state.inputs[currentInputIndex];\n\n        /** The list of tools which needs the default browser behaviour */\n        var enableLineBreaks = codex.tools[tool].enableLineBreaks;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = 'paragraph';\n\n        /**\n         * When toolbar is opened, select tool instead of making new paragraph\n         */\n        if ( isEnterPressedOnToolbar ) {\n\n            event.preventDefault();\n\n            codex.toolbar.toolbox.toolClicked(event);\n\n            codex.toolbar.close();\n\n            return;\n\n        }\n\n        /**\n         * Allow making new <p> in same block by SHIFT+ENTER and forbids to prevent default browser behaviour\n         */\n        if ( event.shiftKey && !enableLineBreaks) {\n            codex.callback.enterPressedOnBlock(codex.content.currentBlock, event);\n            event.preventDefault();\n\n        } else if ( (event.shiftKey && !enableLineBreaks) || (!event.shiftKey && enableLineBreaks) ){\n            /** XOR */\n            return;\n        }\n\n        var isLastTextNode = false,\n            currentSelection = window.getSelection(),\n            currentSelectedNode = currentSelection.anchorNode,\n            caretAtTheEndOfText = codex.caret.position.atTheEnd(),\n            isTextNodeHasParentBetweenContenteditable = false;\n\n        /**\n         * Workaround situation when caret at the Text node that has some wrapper Elements\n         * Split block cant handle this.\n         * We need to save default behavior\n         */\n        isTextNodeHasParentBetweenContenteditable = currentSelectedNode && currentSelectedNode.parentNode.contentEditable != \"true\";\n\n        /**\n         * Split blocks when input has several nodes and caret placed in textNode\n         */\n        if (\n            currentSelectedNode.nodeType == codex.core.nodeTypes.TEXT &&\n            !isTextNodeHasParentBetweenContenteditable &&\n            !caretAtTheEndOfText\n        ){\n\n            event.preventDefault();\n\n            codex.core.log('Splitting Text node...');\n\n            codex.content.splitBlock(currentInputIndex);\n\n            /** Show plus button when next input after split is empty*/\n            if (!codex.state.inputs[currentInputIndex + 1].textContent.trim()) {\n                codex.toolbar.showPlusButton();\n            }\n\n        } else {\n\n            if ( currentSelectedNode && currentSelectedNode.parentNode) {\n\n                isLastTextNode = !currentSelectedNode.parentNode.nextSibling;\n\n            }\n\n            if ( isLastTextNode && caretAtTheEndOfText ) {\n\n                event.preventDefault();\n\n                codex.core.log('ENTER clicked in last textNode. Create new BLOCK');\n\n                codex.content.insertBlock({\n                    type  : NEW_BLOCK_TYPE,\n                    block : codex.tools[NEW_BLOCK_TYPE].render()\n                }, true );\n\n                codex.toolbar.move();\n                codex.toolbar.open();\n\n                /** Show plus button with empty block */\n                codex.toolbar.showPlusButton();\n\n            } else {\n\n                codex.core.log('Default ENTER behavior.');\n\n            }\n\n        }\n\n        /** get all inputs after new appending block */\n        codex.ui.saveInputs();\n\n    };\n\n    callbacks.escapeKeyPressed = function(event){\n\n        /** Close all toolbar */\n        codex.toolbar.close();\n\n        /** Close toolbox */\n        codex.toolbar.toolbox.close();\n\n        event.preventDefault();\n\n    };\n\n    callbacks.arrowKeyPressed = function(event){\n\n        codex.content.workingNodeChanged();\n\n        /* Closing toolbar */\n        codex.toolbar.close();\n        codex.toolbar.move();\n\n    };\n\n    callbacks.defaultKeyPressed = function(event) {\n\n        codex.toolbar.close();\n\n        if (!codex.toolbar.inline.actionsOpened) {\n            codex.toolbar.inline.close();\n            codex.content.clearMark();\n        }\n    };\n\n    callbacks.redactorClicked = function (event) {\n\n        codex.content.workingNodeChanged(event.target);\n\n        codex.ui.saveInputs();\n\n        var selectedText = codex.toolbar.inline.getSelectionText();\n\n        /**\n         * If selection range took off, then we hide inline toolbar\n         */\n        if (selectedText.length === 0) {\n            codex.toolbar.inline.close();\n        }\n\n        /** Update current input index in memory when caret focused into existed input */\n        if (event.target.contentEditable == 'true') {\n\n            codex.caret.saveCurrentInputIndex();\n\n        }\n\n        if (codex.content.currentNode === null) {\n\n            /**\n             * If inputs in redactor does not exits, then we put input index 0 not -1\n             */\n            var indexOfLastInput = codex.state.inputs.length > 0 ? codex.state.inputs.length - 1 : 0;\n\n            /** If we have any inputs */\n            if (codex.state.inputs.length) {\n\n                /** getting firstlevel parent of input */\n                var firstLevelBlock  = codex.content.getFirstLevelBlock(codex.state.inputs[indexOfLastInput]);\n            }\n\n            /** If input is empty, then we set caret to the last input */\n            if (codex.state.inputs.length && codex.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == 'paragraph') {\n\n                codex.caret.setToBlock(indexOfLastInput);\n\n            } else {\n\n                /** Create new input when caret clicked in redactors area */\n                var NEW_BLOCK_TYPE = 'paragraph';\n\n                codex.content.insertBlock({\n                    type  : NEW_BLOCK_TYPE,\n                    block : codex.tools[NEW_BLOCK_TYPE].render()\n                });\n\n                /** If there is no inputs except inserted */\n                if (codex.state.inputs.length === 1) {\n\n                    codex.caret.setToBlock(indexOfLastInput);\n\n                } else {\n\n                    /** Set caret to this appended input */\n                    codex.caret.setToNextBlock(indexOfLastInput);\n                }\n            }\n\n            /**\n             * Move toolbar to the right position and open\n             */\n            codex.toolbar.move();\n\n\n            codex.toolbar.open();\n\n        } else {\n\n            /**\n             * Move toolbar to the new position and open\n             */\n            codex.toolbar.move();\n\n            codex.toolbar.open();\n\n            /** Close all panels */\n            codex.toolbar.settings.close();\n            codex.toolbar.toolbox.close();\n        }\n\n\n        var inputIsEmpty = !codex.content.currentNode.textContent.trim();\n\n        if (inputIsEmpty) {\n\n            /** Show plus button */\n            codex.toolbar.showPlusButton();\n\n        } else {\n\n            /** Hide plus buttons */\n            codex.toolbar.hidePlusButton();\n\n        }\n\n        var currentNodeType = codex.content.currentNode.dataset.tool;\n\n        /** Mark current block*/\n        if (currentNodeType != 'paragraph' || !inputIsEmpty) {\n\n            codex.content.markBlock();\n\n        }\n\n    };\n\n    /**\n     * This method allows to define, is caret in contenteditable element or not.\n     * Otherwise, if we get TEXT node from range container, that will means we have input index.\n     * In this case we use default browsers behaviour (if plugin allows that) or overwritten action.\n     * Therefore, to be sure that we've clicked first-level block area, we should have currentNode, which always\n     * specifies to the first-level block. Other cases we just ignore.\n     */\n    callbacks.clickedOnFirstLevelBlockArea = function() {\n\n        var selection  = window.getSelection(),\n            anchorNode = selection.anchorNode,\n            flag = false;\n\n\n        if (selection.rangeCount == 0) {\n\n            return true;\n\n        } else {\n\n            if (!codex.core.isDomNode(anchorNode)) {\n                anchorNode = anchorNode.parentNode;\n            }\n\n            /** Already founded, without loop */\n            if (anchorNode.contentEditable == 'true') {\n                flag = true;\n            }\n\n            while (anchorNode.contentEditable != 'true') {\n                anchorNode = anchorNode.parentNode;\n\n                if (anchorNode.contentEditable == 'true') {\n                    flag = true;\n                }\n\n                if (anchorNode == document.body) {\n                    break;\n                }\n            }\n\n            /** If editable element founded, flag is \"TRUE\", Therefore we return \"FALSE\" */\n            return flag ? false : true;\n        }\n\n    };\n\n    /**\n     * Toolbar button click handler\n     * @param this - cursor to the button\n     */\n    callbacks.toolbarButtonClicked = function (event) {\n\n        var button = this;\n\n        codex.toolbar.current = button.dataset.type;\n\n        codex.toolbar.toolbox.toolClicked(event);\n        codex.toolbar.close();\n\n    };\n\n    callbacks.redactorInputEvent = function (event) {\n\n        /**\n         * Clear previous sync-timeout\n         */\n        if (this.redactorSyncTimeout){\n            clearTimeout(this.redactorSyncTimeout);\n        }\n\n        /**\n         * Start waiting to input finish and sync redactor\n         */\n        this.redactorSyncTimeout = setTimeout(function() {\n\n            codex.content.sync();\n\n        }, 500);\n\n    };\n\n    /** Show or Hide toolbox when plus button is clicked */\n    callbacks.plusButtonClicked = function() {\n\n        if (!codex.nodes.toolbox.classList.contains('opened')) {\n\n            codex.toolbar.toolbox.open();\n\n        } else {\n\n            codex.toolbar.toolbox.close();\n\n        }\n    };\n\n    /**\n     * Block handlers for KeyDown events\n     */\n    callbacks.blockKeydown = function(event, block) {\n\n        switch (event.keyCode){\n\n            case codex.core.keys.DOWN:\n            case codex.core.keys.RIGHT:\n                codex.callback.blockRightOrDownArrowPressed(block);\n                break;\n\n            case codex.core.keys.BACKSPACE:\n                codex.callback.backspacePressed(block);\n                break;\n\n            case codex.core.keys.UP:\n            case codex.core.keys.LEFT:\n                codex.callback.blockLeftOrUpArrowPressed(block);\n                break;\n\n        }\n    };\n\n    /**\n     * RIGHT or DOWN keydowns on block\n     */\n    callbacks.blockRightOrDownArrowPressed = function (block) {\n\n        var selection   = window.getSelection(),\n            inputs      = codex.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode){\n            return false;\n        }\n\n        /** Looking for closest (parent) contentEditable element of focused node */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n        while (focusedNode != inputs[editableElementIndex]) {\n            editableElementIndex ++;\n        }\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent)\n        {\n            codex.caret.setToNextBlock(editableElementIndex);\n            return;\n        }\n\n        /**\n         * Do nothing when caret doesn not reaches the end of last child\n         */\n        var caretInLastChild    = false,\n            caretAtTheEndOfText = false;\n\n        var lastChild,\n            deepestTextnode;\n\n        lastChild = focusedNode.childNodes[focusedNode.childNodes.length - 1 ];\n\n        if (codex.core.isDomNode(lastChild)) {\n\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(lastChild, lastChild.childNodes.length);\n\n        } else {\n\n            deepestTextnode = lastChild;\n\n        }\n\n        caretInLastChild = selection.anchorNode == deepestTextnode;\n        caretAtTheEndOfText = deepestTextnode.length == selection.anchorOffset;\n\n        if ( !caretInLastChild  || !caretAtTheEndOfText ) {\n            codex.core.log('arrow [down|right] : caret does not reached the end');\n            return false;\n        }\n\n        codex.caret.setToNextBlock(editableElementIndex);\n\n    };\n\n    /**\n     * LEFT or UP keydowns on block\n     */\n    callbacks.blockLeftOrUpArrowPressed = function (block) {\n\n        var selection   = window.getSelection(),\n            inputs      = codex.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode){\n            return false;\n        }\n\n        /**\n         * LEFT or UP not at the beginning\n         */\n        if ( selection.anchorOffset !== 0) {\n            return false;\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n        while (focusedNode != inputs[editableElementIndex]) {\n            editableElementIndex ++;\n        }\n\n        /**\n         * Do nothing if caret is not at the beginning of first child\n         */\n        var caretInFirstChild   = false,\n            caretAtTheBeginning = false;\n\n        var firstChild,\n            deepestTextnode;\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n            codex.caret.setToPreviousBlock(editableElementIndex);\n            return;\n        }\n\n        firstChild = focusedNode.childNodes[0];\n\n        if (codex.core.isDomNode(firstChild)) {\n\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(firstChild, 0);\n\n        } else {\n\n            deepestTextnode = firstChild;\n\n        }\n\n        caretInFirstChild   = selection.anchorNode == deepestTextnode;\n        caretAtTheBeginning = selection.anchorOffset === 0;\n\n        if ( caretInFirstChild && caretAtTheBeginning ) {\n\n            codex.caret.setToPreviousBlock(editableElementIndex);\n\n        }\n\n    };\n\n    /**\n     * Callback for enter key pressing in first-level block area\n     */\n    callbacks.enterPressedOnBlock = function (event) {\n\n        var NEW_BLOCK_TYPE  = 'paragraph';\n\n        codex.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : codex.tools[NEW_BLOCK_TYPE].render()\n        }, true );\n\n        codex.toolbar.move();\n        codex.toolbar.open();\n\n    };\n\n    callbacks.backspacePressed = function (block) {\n\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\n            range,\n            selectionLength,\n            firstLevelBlocksCount;\n\n        if (block.textContent.trim()) {\n\n            range           = codex.content.getRange();\n            selectionLength = range.endOffset - range.startOffset;\n\n\n            if (codex.caret.position.atStart() && !selectionLength && codex.state.inputs[currentInputIndex - 1]) {\n\n                codex.content.mergeBlocks(currentInputIndex);\n\n            } else {\n\n                return;\n\n            }\n        }\n\n        if (!selectionLength) {\n            block.remove();\n        }\n\n\n        firstLevelBlocksCount = codex.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            codex.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            codex.ui.addInitialBlock();\n\n            /** Updating inputs state after deleting last block */\n            codex.ui.saveInputs();\n\n            /** Set to current appended block */\n            setTimeout(function () {\n\n                codex.caret.setToPreviousBlock(1);\n\n            }, 10);\n\n        } else {\n\n            if (codex.caret.inputIndex !== 0) {\n\n                /** Target block is not first */\n                codex.caret.setToPreviousBlock(codex.caret.inputIndex);\n\n            } else {\n\n                /** If we try to delete first block */\n                codex.caret.setToNextBlock(codex.caret.inputIndex);\n\n            }\n        }\n\n        codex.toolbar.move();\n\n        if (!codex.toolbar.opened) {\n            codex.toolbar.open();\n        }\n\n        /** Updating inputs state */\n        codex.ui.saveInputs();\n\n        /** Prevent default browser behaviour */\n        event.preventDefault();\n\n    };\n\n    callbacks.blockPaste = function(event) {\n\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\n            node = codex.state.inputs[currentInputIndex];\n\n        setTimeout(function() {\n\n            codex.content.sanitize(node);\n\n        }, 10);\n\n    };\n\n    callbacks._blockPaste = function(event) {\n\n        var currentInputIndex = codex.caret.getCurrentInputIndex();\n\n        /**\n         * create an observer instance\n         */\n        var observer = new MutationObserver(codex.callback.handlePasteEvents);\n\n        /**\n         * configuration of the observer:\n         */\n        var config = { attributes: true, childList: true, characterData: false };\n\n        // pass in the target node, as well as the observer options\n        observer.observe(codex.state.inputs[currentInputIndex], config);\n    };\n\n    /**\n     * Sends all mutations to paste handler\n     */\n    callbacks.handlePasteEvents = function(mutations) {\n        mutations.forEach(codex.content.paste);\n    };\n\n    /**\n     * Clicks on block settings button\n     */\n    callbacks.showSettingsButtonClicked = function(){\n\n        /**\n         * Get type of current block\n         * It uses to append settings from tool.settings property.\n         * ...\n         * Type is stored in data-type attribute on block\n         */\n        var currentToolType = codex.content.currentNode.dataset.tool;\n\n        codex.toolbar.settings.toggle(currentToolType);\n\n        /** Close toolbox when settings button is active */\n        codex.toolbar.toolbox.close();\n        codex.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return callbacks;\n\n})({});\n\nmodule.exports  = callbacks;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/callbacks.js","var draw = (function(draw) {\n\n    /**\n     * Base editor wrapper\n     */\n    draw.wrapper = function () {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className += 'codex-editor';\n\n        return wrapper;\n\n    };\n\n    /**\n     * Content-editable holder\n     */\n    draw.redactor = function () {\n\n        var redactor = document.createElement('div');\n\n        redactor.className += 'ce-redactor';\n\n        return redactor;\n\n    };\n\n    draw.ceBlock = function() {\n\n        var block = document.createElement('DIV');\n\n        block.className += 'ce_block';\n\n        return block;\n\n    };\n\n    /**\n     * Empty toolbar with toggler\n     */\n    draw.toolbar = function () {\n\n        var bar = document.createElement('div');\n\n        bar.className += 'ce-toolbar';\n\n        return bar;\n    };\n\n    draw.toolbarContent = function() {\n\n        var wrapper = document.createElement('DIV');\n        wrapper.classList.add('ce-toolbar__content');\n\n        return wrapper;\n    };\n\n    /**\n     * Inline toolbar\n     */\n    draw.inlineToolbar = function() {\n\n        var bar = document.createElement('DIV');\n\n        bar.className += 'ce-toolbar-inline';\n\n        return bar;\n\n    };\n\n    /**\n     * Wrapper for inline toobar buttons\n     */\n    draw.inlineToolbarButtons = function() {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__buttons';\n\n        return wrapper;\n    };\n\n    /**\n     * For some actions\n     */\n    draw.inlineToolbarActions = function() {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__actions';\n\n        return wrapper;\n\n    };\n\n    draw.inputForLink = function() {\n\n        var input = document.createElement('INPUT');\n\n        input.type        = 'input';\n        input.className  += 'inputForLink';\n        input.placeholder = 'Type URL ...';\n        input.setAttribute('form', 'defaultForm');\n\n        input.setAttribute('autofocus', 'autofocus');\n\n        return input;\n\n    };\n\n    /**\n     * Block with notifications\n     */\n    draw.alertsHolder = function() {\n\n        var block = document.createElement('div');\n\n        block.classList.add('ce_notifications-block');\n\n        return block;\n\n    };\n\n    /**\n     * @todo Desc\n     */\n    draw.blockButtons = function() {\n\n        var block = document.createElement('div');\n\n        block.className += 'ce-toolbar__actions';\n\n        return block;\n    };\n\n    /**\n     * Block settings panel\n     */\n    draw.blockSettings = function () {\n\n        var settings = document.createElement('div');\n\n        settings.className += 'ce-settings';\n\n        return settings;\n    };\n\n    draw.defaultSettings = function() {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_default');\n\n        return div;\n    },\n\n    draw.pluginsSettings = function() {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_plugin');\n\n        return div;\n\n    };\n\n    draw.plusButton = function() {\n\n        var button = document.createElement('span');\n\n        button.className = 'ce-toolbar__plus';\n        // button.innerHTML = '<i class=\"ce-icon-plus\"></i>';\n\n        return button;\n    };\n\n    /**\n     * Settings button in toolbar\n     */\n    draw.settingsButton = function () {\n\n        var toggler = document.createElement('span');\n\n        toggler.className = 'ce-toolbar__settings-btn';\n\n        /** Toggler button*/\n        toggler.innerHTML = '<i class=\"ce-icon-cog\"></i>';\n\n        return toggler;\n    };\n\n    /**\n     * Redactor tools wrapper\n     */\n\n    draw.toolbox = function() {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className = 'ce-toolbar__tools';\n\n        return wrapper;\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tool buttons for toolbox\n     *\n     * @param {String} type\n     * @param {String} classname\n     * @returns {Element}\n     */\n    draw.toolbarButton = function (type, classname) {\n\n        var button     = document.createElement(\"li\"),\n            tool_icon  = document.createElement(\"i\"),\n            tool_title = document.createElement(\"span\");\n\n        button.dataset.type = type;\n        button.setAttribute('title', type);\n\n        tool_icon.classList.add(classname);\n        tool_title.classList.add('ce_toolbar_tools--title');\n\n\n        button.appendChild(tool_icon);\n        button.appendChild(tool_title);\n\n        return button;\n\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tools for inline toolbar\n     *\n     * @param {String} type\n     * @param {String} classname\n     */\n    draw.toolbarButtonInline = function(type, classname) {\n        var button     = document.createElement(\"BUTTON\"),\n            tool_icon  = document.createElement(\"I\");\n\n        button.type = \"button\";\n        button.dataset.type = type;\n        tool_icon.classList.add(classname);\n\n        button.appendChild(tool_icon);\n\n        return button;\n    };\n\n    /**\n     * Redactor block\n     */\n    draw.block = function (tagName, content) {\n\n        var node = document.createElement(tagName);\n\n        node.innerHTML = content || '';\n\n        return node;\n\n    };\n\n    /**\n     * Creates Node with passed tagName and className\n     * @param {string}  tagName\n     * @param {string} className\n     * @param {object} properties - allow to assign properties\n     */\n    draw.node = function( tagName , className , properties ){\n\n        var el = document.createElement( tagName );\n\n        if ( className ) el.className = className;\n\n        if ( properties ) {\n\n            for (var name in properties){\n                el[name] = properties[name];\n            }\n        }\n\n        return el;\n    };\n\n    draw.pluginsRender = function(type, content) {\n\n        return {\n            type  : type,\n            block : cEditor.tools[type].render({\n                text : content\n            })\n        };\n    };\n\n    return draw;\n\n})({});\n\nmodule.exports = draw;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/draw.js","var caret = (function(caret) {\n\n    /**\n     * @var {int} InputIndex - editable element in DOM\n     */\n    caret.inputIndex = null;\n\n    /**\n     * @var {int} offset - caret position in a text node.\n     */\n    caret.offset = null;\n\n    /**\n     * @var {int} focusedNodeIndex - we get index of child node from first-level block\n     */\n    caret.focusedNodeIndex = null;\n\n    /**\n     * Creates Document Range and sets caret to the element.\n     * @protected\n     * @uses caret.save — if you need to save caret position\n     * @param {Element} el - Changed Node.\n     */\n    caret.set = function( el , index, offset) {\n\n        offset = offset || this.offset || 0;\n        index  = index  || this.focusedNodeIndex || 0;\n\n        var childs = el.childNodes,\n            nodeToSet;\n\n        if ( childs.length === 0 ) {\n\n            nodeToSet = el;\n\n        } else {\n\n            nodeToSet = childs[index];\n\n        }\n\n        /** If Element is INPUT */\n        if (el.tagName == 'INPUT') {\n            el.focus();\n            return;\n        }\n\n        if (codex.core.isDomNode(nodeToSet)) {\n\n            nodeToSet = codex.content.getDeepestTextNodeFromPosition(nodeToSet, nodeToSet.childNodes.length);\n        }\n\n        var range     = document.createRange(),\n            selection = window.getSelection();\n\n        setTimeout(function() {\n\n            range.setStart(nodeToSet, offset);\n            range.setEnd(nodeToSet, offset);\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            codex.caret.saveCurrentInputIndex();\n\n        }, 20);\n    };\n\n    /**\n     * @protected\n     * Updates index of input and saves it in caret object\n     */\n    caret.saveCurrentInputIndex = function () {\n\n        /** Index of Input that we paste sanitized content */\n        var selection   = window.getSelection(),\n            inputs      = codex.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        if (!focusedNode){\n            return;\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n            editableElementIndex ++;\n        }\n\n        this.inputIndex = editableElementIndex;\n    };\n\n    /**\n     * Returns current input index (caret object)\n     */\n    caret.getCurrentInputIndex = function() {\n        return this.inputIndex;\n    };\n\n    /**\n     * @param {int} index - index of first-level block after that we set caret into next input\n     */\n    caret.setToNextBlock = function(index) {\n\n        var inputs = codex.state.inputs,\n            nextInput = inputs[index + 1];\n\n        if (!nextInput) {\n            codex.core.log('We are reached the end');\n            return;\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!nextInput.childNodes.length) {\n            var emptyTextElement = document.createTextNode('');\n            nextInput.appendChild(emptyTextElement);\n        }\n\n        codex.caret.inputIndex = index + 1;\n        codex.caret.set(nextInput, 0, 0);\n        codex.content.workingNodeChanged(nextInput);\n\n    };\n\n    /**\n     * @param {int} index - index of target input.\n     * Sets caret to input with this index\n     */\n    caret.setToBlock = function(index) {\n\n        var inputs = codex.state.inputs,\n            targetInput = inputs[index];\n\n        console.assert( targetInput , 'caret.setToBlock: target input does not exists');\n\n        if ( !targetInput ) {\n            return;\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!targetInput.childNodes.length) {\n            var emptyTextElement = document.createTextNode('');\n            targetInput.appendChild(emptyTextElement);\n        }\n\n        codex.caret.inputIndex = index;\n        codex.caret.set(targetInput, 0, 0);\n        codex.content.workingNodeChanged(targetInput);\n\n    };\n\n    /**\n     * @param {int} index - index of input\n     */\n    caret.setToPreviousBlock = function(index) {\n\n        index = index || 0;\n\n        var inputs = codex.state.inputs,\n            previousInput = inputs[index - 1],\n            lastChildNode,\n            lengthOfLastChildNode,\n            emptyTextElement;\n\n\n        if (!previousInput) {\n            codex.core.log('We are reached first node');\n            return;\n        }\n\n        lastChildNode = codex.content.getDeepestTextNodeFromPosition(previousInput, previousInput.childNodes.length);\n        lengthOfLastChildNode = lastChildNode.length;\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!previousInput.childNodes.length) {\n\n            emptyTextElement = document.createTextNode('');\n            previousInput.appendChild(emptyTextElement);\n        }\n        codex.caret.inputIndex = index - 1;\n        codex.caret.set(previousInput, previousInput.childNodes.length - 1, lengthOfLastChildNode);\n        codex.content.workingNodeChanged(inputs[index - 1]);\n    };\n\n    caret.position = {\n\n        atStart : function() {\n\n            var selection       = window.getSelection(),\n                anchorOffset    = selection.anchorOffset,\n                anchorNode      = selection.anchorNode,\n                firstLevelBlock = codex.content.getFirstLevelBlock(anchorNode),\n                pluginsRender   = firstLevelBlock.childNodes[0];\n\n            if (!codex.core.isDomNode(anchorNode)) {\n                anchorNode = anchorNode.parentNode;\n            }\n\n            var isFirstNode  = anchorNode === pluginsRender.childNodes[0],\n                isOffsetZero = anchorOffset === 0;\n\n            return isFirstNode && isOffsetZero;\n\n        },\n\n        atTheEnd : function() {\n\n            var selection    = window.getSelection(),\n                anchorOffset = selection.anchorOffset,\n                anchorNode   = selection.anchorNode;\n\n            /** Caret is at the end of input */\n            return !anchorNode || !anchorNode.length || anchorOffset === anchorNode.length;\n        }\n    };\n\n    return caret;\n\n})({});\n\nmodule.exports = caret;\n\n\n// WEBPACK FOOTER //\n// ./modules/caret.js","var notifications = (function(notifications) {\n\n    /**\n     * Error notificator. Shows block with message\n     * @protected\n     */\n    notifications.errorThrown = function(errorMsg, event) {\n\n        codex.notifications.send('This action is not available currently', event.type, false);\n\n    };\n\n    /**\n     * Appends notification with different types\n     * @param message {string} - Error or alert message\n     * @param type {string} - Type of message notification. Ex: Error, Warning, Danger ...\n     * @param append {boolean} - can be True or False when notification should be inserted after\n     */\n    notifications.send = function(message, type, append) {\n\n        var notification = codex.draw.block('div');\n\n        notification.textContent = message;\n        notification.classList.add('ce_notification-item', 'ce_notification-' + type, 'flipInX');\n\n        if (!append) {\n            codex.nodes.notifications.innerHTML = '';\n        }\n\n        codex.nodes.notifications.appendChild(notification);\n\n        setTimeout(function () {\n            notification.remove();\n        }, 3000);\n\n    };\n\n    return notifications;\n\n})({});\n\nmodule.exports = notifications;\n\n\n// WEBPACK FOOTER //\n// ./modules/notifications.js","var parser = (function(parser) {\n\n    /**\n     * Splits content by `\\n` and returns blocks\n     */\n    parser.getSeparatedTextFromContent = function(content) {\n        return content.split('\\n');\n    };\n\n    /** inserting text */\n    parser.insertPastedContent = function(content) {\n\n        var blocks = this.getSeparatedTextFromContent(content),\n            i,\n            inputIndex = cEditor.caret.getCurrentInputIndex(),\n            textNode,\n            parsedTextContent;\n\n        for(i = 0; i < blocks.length; i++) {\n\n            blocks[i].trim();\n\n            if (blocks[i]) {\n                var data = cEditor.draw.pluginsRender('paragraph', blocks[i]);\n                cEditor.content.insertBlock(data);\n            }\n        }\n\n    };\n\n    /**\n     * Asynchronously parses textarea input string to HTML editor blocks\n     */\n    parser.parseTextareaContent = function () {\n\n        var initialContent = cEditor.nodes.textarea.value;\n\n        if ( initialContent.trim().length === 0 ) return true;\n\n\n        cEditor.parser\n\n        /** Get child nodes async-aware */\n            .getNodesFromString(initialContent)\n\n            /** Then append nodes to the redactor */\n            .then(cEditor.parser.appendNodesToRedactor)\n\n            /** Write log if something goes wrong */\n            .catch(function(error) {\n                cEditor.core.log('Error while parsing content: %o', 'warn', error);\n            });\n\n    };\n\n    /**\n     * Parses string to nodeList\n     * @param string inputString\n     * @return Primise -> nodeList\n     */\n    parser.getNodesFromString = function (inputString) {\n\n        return Promise.resolve().then(function() {\n\n            var contentHolder = document.createElement('div');\n\n            contentHolder.innerHTML = inputString;\n\n            /**\n             *    Returning childNodes will include:\n             *        - Elements (html-tags),\n             *        - Texts (empty-spaces or non-wrapped strings )\n             *        - Comments and other\n             */\n            return contentHolder.childNodes;\n\n        });\n    };\n\n    /**\n     * Appends nodes to the redactor\n     * @param nodeList nodes - list for nodes to append\n     */\n    parser.appendNodesToRedactor = function(nodes) {\n\n        /**\n         * Sequence of one-by-one nodes appending\n         * Uses to save blocks order after async-handler\n         */\n        var nodeSequence = Promise.resolve();\n\n\n        for (var index = 0; index < nodes.length ; index++ ) {\n\n            /** Add node to sequence at specified index */\n            cEditor.parser.appendNodeAtIndex(nodeSequence, nodes, index);\n\n        }\n\n    };\n\n    /**\n     * Append node at specified index\n     */\n    parser.appendNodeAtIndex = function (nodeSequence, nodes, index) {\n\n        /** We need to append node to sequence */\n        nodeSequence\n\n        /** first, get node async-aware */\n            .then(function() {\n\n                return cEditor.parser.getNodeAsync(nodes , index);\n\n            })\n\n            /**\n             *    second, compose editor-block from node\n             *    and append it to redactor\n             */\n            .then(function(node){\n\n                var block = cEditor.parser.createBlockByDomNode(node);\n\n                if ( cEditor.core.isDomNode(block) ) {\n\n                    block.contentEditable = \"true\";\n\n                    /** Mark node as redactor block*/\n                    block.classList.add('ce-block');\n\n                    /** Append block to the redactor */\n                    cEditor.nodes.redactor.appendChild(block);\n\n                    /** Save block to the cEditor.state array */\n                    cEditor.state.blocks.push(block);\n\n                    return block;\n\n                }\n                return null;\n            })\n\n            .then(cEditor.ui.addBlockHandlers)\n\n            /** Log if something wrong with node */\n            .catch(function(error) {\n                cEditor.core.log('Node skipped while parsing because %o', 'warn', error);\n            });\n\n    };\n\n    /**\n     * Asynchronously returns node from nodeList by index\n     * @return Promise to node\n     */\n    parser.getNodeAsync = function (nodeList, index) {\n\n        return Promise.resolve().then(function() {\n\n            return nodeList.item(index);\n\n        });\n    };\n\n    /**\n     * Creates editor block by DOM node\n     *\n     * First-level blocks (see cEditor.settings.blockTags) saves as-is,\n     * other wrapps with <p>-tag\n     *\n     * @param DOMnode node\n     * @return First-level node (paragraph)\n     */\n    parser.createBlockByDomNode = function (node) {\n\n        /** First level nodes already appears as blocks */\n        if ( cEditor.parser.isFirstLevelBlock(node) ){\n\n            /** Save plugin type in data-type */\n            node = this.storeBlockType(node);\n\n            return node;\n        }\n\n        /** Other nodes wraps into parent block (paragraph-tag) */\n        var parentBlock,\n            nodeContent     = node.textContent.trim(),\n            isPlainTextNode = node.nodeType != cEditor.core.nodeTypes.TAG;\n\n\n        /** Skip empty textNodes with space-symbols */\n        if (isPlainTextNode && !nodeContent.length) return null;\n\n        /** Make <p> tag */\n        parentBlock = cEditor.draw.block('P');\n\n        if (isPlainTextNode){\n            parentBlock.textContent = nodeContent.replace(/(\\s){2,}/, '$1'); // remove double spaces\n        } else {\n            parentBlock.appendChild(node);\n        }\n\n        /** Save plugin type in data-type */\n        parentBlock = this.storeBlockType(parentBlock);\n\n        return parentBlock;\n\n    };\n\n    /**\n     * It's a crutch\n     * - - - - - - -\n     * We need block type stored as data-attr\n     * Now supports only simple blocks : P, HEADER, QUOTE, CODE\n     * Remove it after updating parser module for the block-oriented structure:\n     *       - each block must have stored type\n     * @param {Element} node\n     */\n    parser.storeBlockType = function (node) {\n\n        switch (node.tagName) {\n            case 'P' :          node.dataset.tool = 'paragraph'; break;\n            case 'H1':\n            case 'H2':\n            case 'H3':\n            case 'H4':\n            case 'H5':\n            case 'H6':          node.dataset.tool = 'header'; break;\n            case 'BLOCKQUOTE':  node.dataset.tool = 'quote'; break;\n            case 'CODE':        node.dataset.tool = 'code'; break;\n        }\n\n        return node;\n\n    };\n\n    /**\n     * Check DOM node for display style: separated block or child-view\n     */\n    parser.isFirstLevelBlock = function (node) {\n\n        return node.nodeType == cEditor.core.nodeTypes.TAG &&\n            node.classList.contains(cEditor.ui.className.BLOCK_CLASSNAME);\n\n    };\n\n    return parser;\n\n})({});\n\nmodule.exports = parser;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/parser.js"],"sourceRoot":""}