{"version":3,"sources":["webpack:///webpack/bootstrap ae17760bfc11e8a9c90c","webpack:///./codex.js","webpack:///./modules/core.js","webpack:///./modules/ui.js","webpack:///./modules/transport.js","webpack:///./modules/renderer.js","webpack:///./modules/saver.js","webpack:///./modules/content.js","webpack:///./modules/toolbar/toolbar.js","webpack:///./modules/toolbar/settings.js","webpack:///./modules/toolbar/inline.js","webpack:///./modules/toolbar/toolbox.js","webpack:///./modules/callbacks.js","webpack:///./modules/draw.js","webpack:///./modules/caret.js","webpack:///./modules/notifications.js","webpack:///./modules/parser.js","webpack:///./modules/sanitizer.js","webpack:///./~/html-janitor/src/html-janitor.js"],"names":["module","exports","editor","version","init","core","require","ui","transport","renderer","saver","content","toolbar","callback","draw","caret","notifications","parser","sanitizer","settings","tools","textareaId","uploadImagesUrl","initialBlockPlugin","nodes","textarea","wrapper","inlineToolbar","buttons","actions","toolbox","plusButton","showSettingsButton","showTrashButton","blockSettings","pluginSettings","defaultSettings","toolbarButtons","redactor","state","jsonOutput","blocks","inputs","start","userSettings","prepare","then","make","addTools","bindEvents","preparePlugins","makeBlocksFromData","saveInputs","catch","error","log","codex","Promise","resolve","reject","data","document","getElementById","undefined","Error","msg","type","arg","window","console","e","insertAfter","target","element","parentNode","insertBefore","nextSibling","nodeTypes","TAG","TEXT","COMMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","el","nodeType","ajax","url","XMLHTTP","XMLHttpRequest","ActiveXObject","success_function","params","obj","async","success","test","encodeURIComponent","withCredentials","beforeSend","call","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","importScript","scriptPath","instanceName","instancePrefix","script","createElement","defer","id","onload","onerror","src","head","appendChild","className","BLOCK_CLASSNAME","BLOCK_CONTENT","BLOCK_STRETCHED","BLOCK_HIGHLIGHTED","BLOCK_IN_FEED_MODE","SETTINGS_ITEM","toolbarContent","ceBlock","blockButtons","alertsHolder","body","settingsButton","makeRemoveBlockButton","pluginsSettings","makeInlineToolbar","addDefaultSettings","container","inlineToolbarButtons","inlineToolbarActions","tool","toolName","toolButton","displayInToolbox","iconClassname","render","toolbarButton","addInlineToolbarTools","bold","icon","command","italic","underline","link","name","toolbarButtonInline","setInlineToolbarButtonBehaviour","addEventListener","globalKeydown","redactorKeyDown","globalKeyup","redactorClicked","plusButtonClicked","showSettingsButtonClicked","redactorInputEvent","button","toolbarButtonClicked","pluginName","plugin","config","addBlockHandlers","block","event","blockKeydown","blockPasteCallback","inline","show","elements","querySelectorAll","addInitialBlock","initialBlockType","initialBlock","setAttribute","insertBlock","workingNodeChanged","toolClicked","input","arguments","fileSelected","clearInput","files","filesLength","length","formdData","FormData","file","i","append","selectAndUpload","args","click","xhr","items","appendBlocks","nodeSequence","index","appendNodeAtIndex","getNodeAsync","createBlockFromData","blockData","blocksList","cover","stretched","isStretched","saveBlocks","html","innerHTML","childNodes","makeQueue","queue","getBlockData","makeFormDataFromBlocks","dataset","save","blockContent","pluginsContent","savedData","output","validate","result","classList","contains","push","currentNode","editorAreaHightlighted","sync","getNodeFocused","selection","getSelection","focused","anchorNode","focusNode","parentElement","isFirstLevelBlock","parent","markBlock","add","clearMark","remove","getFirstLevelBlock","node","targetNode","replaceBlock","function_name","targetBlock","newBlock","replaceChild","needPlaceCaret","workingBlock","newBlockContent","blockType","composeNewBlock","currentInputIndex","getCurrentInputIndex","editableElement","querySelector","emptyText","createTextNode","set","move","showPlusButton","setTimeout","setToNextBlock","switchBlock","blockToReplace","newBlockComposed","getDeepestTextNodeFromPosition","position","blockChilds","text","textContent","trim","removeChild","looking_from_start","getRange","getRangeAt","splitBlock","inputIndex","anchorNodeText","caretOffset","anchorOffset","textBeforeCaret","textNodeBeforeCaret","textAfterCaret","textNodeAfterCaret","currentBlock","substring","previousChilds","nextChilds","reachedCurrent","child","previousChildsLength","nextChildsLength","newNode","NEW_BLOCK_TYPE","mergeBlocks","targetInputIndex","targetInput","currentInputContent","paste","mutation","workingNode","allowedToPaste","sanitize","pasteTextContent","addedNodes","textNode","disconnect","cleaner","satinizer","Config","BASIC","clean","outerHTML","div","replaceWith","isLastNode","allChecked","allSiblingsEmpty_","sibling","wrapTextWithParagraphs","htmlString","newWrapper","paragraph","firstLevelBlocks","blockTyped","indexOf","tagName","cloneNode","defaultToolbarHeight","defaultOffset","opened","current","close","toggle","hidePlusButton","toolbarHeight","clientHeight","newYCoordinate","offsetTop","style","transform","Math","floor","hideRemoveActions","setting","toolType","makeSettings","settingsBlock","feedModeToggler","makeFeedModeToggler","isFeedModeActivated","updateFeedMode","removeBlockWrapper","settingButton","actionWrapper","confirmAction","cancelAction","removeButtonClicked","confirmRemovingRequest","cancelRemovingRequest","action","showRemoveActions","firstLevelBlocksCount","buttonsOpened","actionsOpened","wrappersOffset","storedSelection","showInlineToolbar","selectedText","getSelectionText","showButtons","getWrappersOffset","coords","getSelectionCoords","newCoordinateX","newCoordinateY","offsetHeight","x","left","y","scrollY","top","closeButtons","closeAction","createLinkAction","defaultToolAction","forEach","hightlight","offset","getOffset","_x","_y","isNaN","offsetLeft","clientLeft","clientTop","offsetParent","sel","range","createRange","collapse","boundingLeft","boundingTop","rangeCount","cloneRange","getClientRects","rect","toString","showActions","isActive","isLinkActive","editable","saveSelection","restoreSelection","inputForLink","focus","preventDefault","keyCode","setAnchor","value","stopImmediatePropagation","clearRange","dataType","execCommand","containerEl","preSelectionRange","selectNodeContents","setEnd","startContainer","startOffset","end","savedSel","charIndex","setStart","nodeStack","foundStart","stop","nextCharIndex","pop","removeAllRanges","addRange","queryCommandState","setButtonHighlighted","removeButtonsHighLight","tag","leaf","currentTool","Object","barButtons","nextToolIndex","hiddenToolsAmount","toolToSelect","toolIsLastInToolbox","UNREPLACEBLE_TOOLS","appendCallback","setToBlock","callbacks","redactorSyncTimeout","enterKeyPressed","tabKeyPressed","enterKeyPressedOnRedactorZone","escapeKeyPressed","defaultKeyPressed","arrowKeyPressed","enterPressedOnBlock","contentEditable","saveCurrentInputIndex","isEnterPressedOnToolbar","enableLineBreaks","stopPropagation","shiftKey","isLastTextNode","currentSelection","currentSelectedNode","caretAtTheEndOfText","atTheEnd","isTextNodeHasParentBetweenContenteditable","islastNode","detectWhenClickedOnFirstLevelBlockArea","indexOfLastInput","firstLevelBlock","inputIsEmpty","currentNodeType","isInitialType","flag","clearTimeout","blockRightOrDownArrowPressed","backspacePressed","blockLeftOrUpArrowPressed","focusedNode","focusedNodeHolder","editableElementIndex","caretInLastChild","lastChild","deepestTextnode","caretInFirstChild","caretAtTheBeginning","firstChild","setToPreviousBlock","selectionLength","endOffset","atStart","blockPaste","_blockPasteCallback","observer","MutationObserver","handleMutationsOnPaste","attributes","childList","characterData","subtree","observe","clipboardData","getData","cleanData","fragment","createDocumentFragment","lastNode","deleteContents","insertNode","setStartAfter","mutations","self","currentToolType","bar","placeholder","toggler","classname","tool_icon","tool_title","properties","pluginsRender","cEditor","focusedNodeIndex","childs","nodeToSet","nextInput","emptyTextElement","assert","previousInput","lastChildNode","lengthOfLastChildNode","isFirstNode","isOffsetZero","errorThrown","errorMsg","message","notification","insertPastedContent","janitor","tags","p","a","href","rel","b","strong","em","span"],"mappings":"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","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ae17760bfc11e8a9c90c","/**\n *\n * Codex Editor\n *\n * @author Codex Team\n */\n\nmodule.exports = (function (editor) {\n\n    'use strict';\n\n    editor.version = VERSION;\n\n    var init = function () {\n\n        editor.core          = require('./modules/core');\n        editor.ui            = require('./modules/ui');\n        editor.transport     = require('./modules/transport');\n        editor.renderer      = require('./modules/renderer');\n        editor.saver         = require('./modules/saver');\n        editor.content       = require('./modules/content');\n        editor.toolbar       = require('./modules/toolbar/toolbar');\n        editor.callback      = require('./modules/callbacks');\n        editor.draw          = require('./modules/draw');\n        editor.caret         = require('./modules/caret');\n        editor.notifications = require('./modules/notifications');\n        editor.parser        = require('./modules/parser');\n        editor.sanitizer     = require('./modules/sanitizer');\n\n    };\n\n\n\n    /**\n     * @public\n     *\n     * holds initial settings\n     */\n    editor.settings = {\n        tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\n        textareaId: 'codex-editor',\n        uploadImagesUrl: '/editor/transport/',\n\n        // Type of block showing on empty editor\n        initialBlockPlugin: 'paragraph'\n    };\n\n    /**\n     * public\n     *\n     * Static nodes\n     */\n    editor.nodes = {\n        textarea          : null,\n        wrapper           : null,\n        toolbar           : null,\n        inlineToolbar     : {\n            wrapper : null,\n            buttons : null,\n            actions : null\n        },\n        toolbox           : null,\n        notifications     : null,\n        plusButton        : null,\n        showSettingsButton: null,\n        showTrashButton   : null,\n        blockSettings     : null,\n        pluginSettings    : null,\n        defaultSettings   : null,\n        toolbarButtons    : {}, // { type : DomEl, ... }\n        redactor          : null\n    };\n\n    /**\n     * @public\n     *\n     * Output state\n     */\n    editor.state = {\n        jsonOutput: [],\n        blocks    : [],\n        inputs    : []\n    };\n\n    /**\n    * @public\n    * Editor plugins\n    */\n    editor.tools = {};\n\n    /**\n     * Initialization\n     * @uses Promise cEditor.core.prepare\n     * @param {} userSettings are :\n     *          - tools [],\n     *          - textareaId String\n     *          ...\n     *\n     * Load user defined tools\n     * Tools must contain this important objects :\n     *  @param {String} type - this is a type of plugin. It can be used as plugin name\n     *  @param {String} iconClassname - this a icon in toolbar\n     *  @param {Object} make - what should plugin do, when it is clicked\n     *  @param {Object} appendCallback - callback after clicking\n     *  @param {Element} settings - what settings does it have\n     *  @param {Object} render - plugin get JSON, and should return HTML\n     *  @param {Object} save - plugin gets HTML content, returns JSON\n     *  @param {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n     *  @param {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n     *\n     * @example\n     *   -  type             : 'header',\n     *   -  iconClassname    : 'ce-icon-header',\n     *   -  make             : headerTool.make,\n     *   -  appendCallback   : headerTool.appendCallback,\n     *   -  settings         : headerTool.makeSettings(),\n     *   -  render           : headerTool.render,\n     *   -  save             : headerTool.save,\n     *   -  displayInToolbox : true,\n     *   -  enableLineBreaks : false\n     */\n    editor.start = function (userSettings) {\n\n        init();\n\n        editor.core.prepare(userSettings)\n\n        // If all ok, make UI, bind events and parse initial-content\n            .then(editor.ui.make)\n            .then(editor.ui.addTools)\n            .then(editor.ui.bindEvents)\n            .then(editor.ui.preparePlugins)\n            .then(editor.transport.prepare)\n            .then(editor.renderer.makeBlocksFromData)\n            .then(editor.ui.saveInputs)\n            .catch(function (error) {\n\n                editor.core.log('Initialization failed with error: %o', 'warn', error);\n\n            });\n\n    };\n\n    return editor;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./codex.js","/**\n * Codex Editor Core\n *\n * @author Codex Team\n * @version 1.1.2\n */\n\nlet editor = codex.editor;\n\nvar core = (function (core) {\n\n    /**\n     * @public\n     *\n     * Editor preparing method\n     * @return Promise\n     */\n    core.prepare = function (userSettings) {\n\n        return new Promise(function (resolve, reject) {\n\n            if ( userSettings ) {\n\n                editor.settings.tools = userSettings.tools || editor.settings.tools;\n\n            }\n\n            if (userSettings.data) {\n\n                editor.state.blocks = userSettings.data;\n\n            }\n\n            if (userSettings.initialBlockPlugin) {\n\n                editor.settings.initialBlockPlugin = userSettings.initialBlockPlugin;\n\n            }\n\n            if (userSettings.uploadImagesUrl) {\n\n                editor.settings.uploadImagesUrl = userSettings.uploadImagesUrl;\n\n            }\n\n            editor.nodes.textarea = document.getElementById(userSettings.textareaId || editor.settings.textareaId);\n\n            if (typeof editor.nodes.textarea === undefined || editor.nodes.textarea === null) {\n\n                reject(Error(\"Textarea wasn't found by ID: #\" + userSettings.textareaId));\n\n            } else {\n\n                resolve();\n\n            }\n\n        });\n\n    };\n\n    /**\n     * Logging method\n     * @param type = ['log', 'info', 'warn']\n     */\n    core.log = function (msg, type, arg) {\n\n        type = type || 'log';\n\n        if (!arg) {\n\n            arg  = msg || 'undefined';\n            msg  = '[codex-editor]:      %o';\n\n        } else {\n\n            msg  = '[codex-editor]:      ' + msg;\n\n        }\n\n        try{\n\n            if ( 'console' in window && console[ type ] ) {\n\n                if ( arg ) console[ type ]( msg, arg );\n                else console[ type ]( msg );\n\n            }\n\n        }catch(e) {}\n\n    };\n\n    /**\n     * @protected\n     *\n     * Helper for insert one element after another\n     */\n    core.insertAfter = function (target, element) {\n\n        target.parentNode.insertBefore(element, target.nextSibling);\n\n    };\n\n    /**\n     * @const\n     *\n     * Readable DOM-node types map\n     */\n    core.nodeTypes = {\n        TAG     : 1,\n        TEXT    : 3,\n        COMMENT : 8\n    };\n\n    /**\n     * @const\n     * Readable keys map\n     */\n    core.keys = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 };\n\n    /**\n     * @protected\n     *\n     * Check object for DOM node\n     */\n    core.isDomNode = function (el) {\n\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\n    };\n\n    /**\n     * Native Ajax\n     */\n    core.ajax = function (data) {\n\n        if (!data || !data.url) {\n\n            return;\n\n        }\n\n        var XMLHTTP          = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'),\n            success_function = function () {},\n            params = '',\n            obj;\n\n        data.async           = true;\n        data.type            = data.type || 'GET';\n        data.data            = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        success_function     = data.success || success_function ;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\n        } else {\n\n            for(obj in data.data) {\n\n                params += (obj + '=' + encodeURIComponent(data.data[obj]) + '&');\n\n            }\n\n        }\n\n        if (data.withCredentials) {\n\n            XMLHTTP.withCredentials = true;\n\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\n            data.beforeSend.call();\n\n        }\n\n        XMLHTTP.open( data.type, data.url, data.async );\n        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        XMLHTTP.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n        XMLHTTP.onreadystatechange = function () {\n\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\n                success_function(XMLHTTP.responseText);\n\n            }\n\n        };\n\n        XMLHTTP.send(params);\n\n    };\n\n    /**\n    * Appends script to head of document\n    * @return Promise\n    */\n    core.importScript = function (scriptPath, instanceName) {\n\n        return new Promise(function (resolve, reject) {\n\n            const instancePrefix = 'cdx-script-';\n\n            let script;\n\n            /** Script is already loaded */\n            if ( !instanceName ) {\n\n                reject('Instance name is missed');\n\n            } else if ( document.getElementById(instancePrefix + instanceName) ) {\n\n                resolve(scriptPath);\n\n            }\n\n            script = document.createElement('SCRIPT');\n            script.async = true;\n            script.defer = true;\n            script.id = instancePrefix + instanceName;\n\n            script.onload = function () {\n\n                resolve(scriptPath);\n\n            };\n\n            script.onerror = function () {\n\n                reject(scriptPath);\n\n            };\n\n            script.src = scriptPath;\n            document.head.appendChild(script);\n\n        });\n\n    };\n\n    return core;\n\n})({});\n\nmodule.exports = core;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/core.js","/**\n * Codex Editor UI module\n *\n * @author Codex Team\n * @version 1.1\n */\n\nlet editor = codex.editor;\n\nvar ui = (function (ui) {\n\n    /**\n     * Basic editor classnames\n     */\n    ui.className = {\n\n        /**\n         * @const {string} BLOCK_CLASSNAME - redactor blocks name\n         */\n        BLOCK_CLASSNAME : 'ce-block',\n\n        /**\n         * @const {String} wrapper for plugins content\n         */\n        BLOCK_CONTENT : 'ce-block__content',\n\n        /**\n         * @const {String} BLOCK_STRETCHED - makes block stretched\n         */\n        BLOCK_STRETCHED : 'ce-block--stretched',\n\n        /**\n         * @const {String} BLOCK_HIGHLIGHTED - adds background\n         */\n        BLOCK_HIGHLIGHTED : 'ce-block--focused',\n\n        /**\n         * @const {String} - highlights covered blocks\n         */\n        BLOCK_IN_FEED_MODE : 'ce-block--feed-mode',\n\n        /**\n         * @const {String} - for all default settings\n         */\n        SETTINGS_ITEM : 'ce-settings__item'\n\n    };\n\n    /**\n     * @protected\n     *\n     * Making main interface\n     */\n    ui.make = function () {\n\n        var wrapper,\n            toolbar,\n            toolbarContent,\n            inlineToolbar,\n            redactor,\n            ceBlock,\n            notifications,\n            blockButtons,\n            blockSettings,\n            showSettingsButton,\n            showTrashButton,\n            toolbox,\n            plusButton;\n\n        /** Make editor wrapper */\n        wrapper = editor.draw.wrapper();\n\n        /** Append editor wrapper after initial textarea */\n        editor.core.insertAfter(editor.nodes.textarea, wrapper);\n\n        /** Append block with notifications to the document */\n        notifications = editor.draw.alertsHolder();\n        editor.nodes.notifications = document.body.appendChild(notifications);\n\n        /** Make toolbar and content-editable redactor */\n        toolbar               = editor.draw.toolbar();\n        toolbarContent        = editor.draw.toolbarContent();\n        inlineToolbar         = editor.draw.inlineToolbar();\n        plusButton            = editor.draw.plusButton();\n        showSettingsButton    = editor.draw.settingsButton();\n        showTrashButton       = editor.toolbar.settings.makeRemoveBlockButton();\n        blockSettings         = editor.draw.blockSettings();\n        blockButtons          = editor.draw.blockButtons();\n        toolbox               = editor.draw.toolbox();\n        redactor              = editor.draw.redactor();\n\n        /** settings */\n        var defaultSettings = editor.draw.defaultSettings(),\n            pluginSettings  = editor.draw.pluginsSettings();\n\n        /** Add default and plugins settings */\n        blockSettings.appendChild(pluginSettings);\n        blockSettings.appendChild(defaultSettings);\n\n        /** Make blocks buttons\n         * This block contains settings button and remove block button\n         */\n        blockButtons.appendChild(showSettingsButton);\n        blockButtons.appendChild(showTrashButton);\n        blockButtons.appendChild(blockSettings);\n\n        /** Append plus button */\n        toolbarContent.appendChild(plusButton);\n\n        /** Appending toolbar tools */\n        toolbarContent.appendChild(toolbox);\n\n        /** Appending first-level block buttons */\n        toolbar.appendChild(blockButtons);\n\n        /** Append toolbarContent to toolbar */\n        toolbar.appendChild(toolbarContent);\n\n        wrapper.appendChild(toolbar);\n\n        wrapper.appendChild(redactor);\n\n        /** Save created ui-elements to static nodes state */\n        editor.nodes.wrapper            = wrapper;\n        editor.nodes.toolbar            = toolbar;\n        editor.nodes.plusButton         = plusButton;\n        editor.nodes.toolbox            = toolbox;\n        editor.nodes.blockSettings      = blockSettings;\n        editor.nodes.pluginSettings     = pluginSettings;\n        editor.nodes.defaultSettings    = defaultSettings;\n        editor.nodes.showSettingsButton = showSettingsButton;\n        editor.nodes.showTrashButton    = showTrashButton;\n\n        editor.nodes.redactor = redactor;\n\n        editor.ui.makeInlineToolbar(inlineToolbar);\n\n        /** fill in default settings */\n        editor.toolbar.settings.addDefaultSettings();\n\n    };\n\n    ui.makeInlineToolbar = function (container) {\n\n        /** Append to redactor new inline block */\n        editor.nodes.inlineToolbar.wrapper = container;\n\n        /** Draw toolbar buttons */\n        editor.nodes.inlineToolbar.buttons = editor.draw.inlineToolbarButtons();\n\n        /** Buttons action or settings */\n        editor.nodes.inlineToolbar.actions = editor.draw.inlineToolbarActions();\n\n        /** Append to inline toolbar buttons as part of it */\n        editor.nodes.inlineToolbar.wrapper.appendChild(editor.nodes.inlineToolbar.buttons);\n        editor.nodes.inlineToolbar.wrapper.appendChild(editor.nodes.inlineToolbar.actions);\n\n        editor.nodes.wrapper.appendChild(editor.nodes.inlineToolbar.wrapper);\n\n    };\n\n    /**\n     * @private\n     * Append tools passed in editor.tools\n     */\n    ui.addTools = function () {\n\n        var tool,\n            toolName,\n            toolButton;\n\n        for ( toolName in editor.settings.tools ) {\n\n            tool = editor.settings.tools[toolName];\n\n            editor.tools[toolName] = tool;\n\n            if (!tool.displayInToolbox) {\n\n                continue;\n\n            }\n\n            if (!tool.iconClassname) {\n\n                editor.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', toolName);\n                continue;\n\n            }\n\n            if (typeof tool.render != 'function') {\n\n                editor.core.log('render method missed. Tool %o skipped', 'warn', toolName);\n                continue;\n\n            }\n\n            /**\n             * if tools is for toolbox\n             */\n            toolButton = editor.draw.toolbarButton(toolName, tool.iconClassname);\n\n            editor.nodes.toolbox.appendChild(toolButton);\n\n            /** Save tools to static nodes */\n            editor.nodes.toolbarButtons[toolName] = toolButton;\n\n        }\n\n\n        /**\n         * Add inline toolbar tools\n         */\n        editor.ui.addInlineToolbarTools();\n\n\n    };\n\n    ui.addInlineToolbarTools = function () {\n\n        var tools = {\n\n            bold: {\n                icon    : 'ce-icon-bold',\n                command : 'bold'\n            },\n\n            italic: {\n                icon    : 'ce-icon-italic',\n                command : 'italic'\n            },\n\n            underline: {\n                icon    : 'ce-icon-underline',\n                command : 'underline'\n            },\n\n            link: {\n                icon    : 'ce-icon-link',\n                command : 'createLink'\n            }\n        };\n\n        var toolButton,\n            tool;\n\n        for(var name in tools) {\n\n            tool = tools[name];\n\n            toolButton = editor.draw.toolbarButtonInline(name, tool.icon);\n\n            editor.nodes.inlineToolbar.buttons.appendChild(toolButton);\n            /**\n             * Add callbacks to this buttons\n             */\n            editor.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\n\n        }\n\n    };\n\n    /**\n     * @private\n     * Bind editor UI events\n     */\n    ui.bindEvents = function () {\n\n        editor.core.log('ui.bindEvents fired', 'info');\n\n        // window.addEventListener('error', function (errorMsg, url, lineNumber) {\n        //     editor.notifications.errorThrown(errorMsg, event);\n        // }, false );\n\n        /** All keydowns on Document */\n        document.addEventListener('keydown', editor.callback.globalKeydown, false );\n\n        /** All keydowns on Redactor zone */\n        editor.nodes.redactor.addEventListener('keydown', editor.callback.redactorKeyDown, false);\n\n        /** All keydowns on Document */\n        document.addEventListener('keyup', editor.callback.globalKeyup, false );\n\n        /**\n         * Mouse click to radactor\n         */\n        editor.nodes.redactor.addEventListener('click', editor.callback.redactorClicked, false );\n\n        /**\n         * Clicks to the Plus button\n         */\n        editor.nodes.plusButton.addEventListener('click', editor.callback.plusButtonClicked, false);\n\n        /**\n         * Clicks to SETTINGS button in toolbar\n         */\n        editor.nodes.showSettingsButton.addEventListener('click', editor.callback.showSettingsButtonClicked, false );\n\n        /**\n         *  @deprecated ( but now in use for syncronization );\n         *  Any redactor changes: keyboard input, mouse cut/paste, drag-n-drop text\n         */\n        editor.nodes.redactor.addEventListener('input', editor.callback.redactorInputEvent, false );\n\n        /** Bind click listeners on toolbar buttons */\n        for (var button in editor.nodes.toolbarButtons) {\n\n            editor.nodes.toolbarButtons[button].addEventListener('click', editor.callback.toolbarButtonClicked, false);\n\n        }\n\n    };\n\n    /**\n     * Initialize plugins before using\n     * Ex. Load scripts or call some internal methods\n     * @return Promise\n     */\n    ui.preparePlugins = function () {\n\n        return new Promise(function (resolve, reject) {\n\n            let pluginName,\n                plugin;\n\n            for ( pluginName in editor.tools ) {\n\n                plugin = editor.tools[pluginName];\n\n                if (typeof plugin.prepare != 'function') {\n\n                    continue;\n\n                }\n\n                plugin.prepare(plugin.config || {}).then(function () {\n\n                    resolve();\n\n                }).catch(function (error) {\n\n                    reject(error);\n\n                });\n\n            }\n\n        });\n\n    };\n\n    ui.addBlockHandlers = function (block) {\n\n        if (!block) return;\n\n        /**\n         * Block keydowns\n         */\n        block.addEventListener('keydown', function (event) {\n\n            editor.callback.blockKeydown(event, block);\n\n        }, false);\n\n        /**\n         * Pasting content from another source\n         * We have two type of sanitization\n         * First - uses deep-first search algorithm to get sub nodes,\n         * sanitizes whole Block_content and replaces cleared nodes\n         * This method is deprecated\n         * Method is used in editor.callback.blockPaste(event)\n         *\n         * Secont - uses Mutation observer.\n         * Observer \"observe\" DOM changes and send changings to callback.\n         * Callback gets changed node, not whole Block_content.\n         * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\n         *\n         * Method is used in editor.callback.blockPasteViaSanitize(event)\n         *\n         * @uses html-janitor\n         * @example editor.callback.blockPasteViaSanitize(event), the second method.\n         *\n         */\n        block.addEventListener('paste', editor.callback.blockPasteCallback, false);\n\n        block.addEventListener('mouseup', function () {\n\n            editor.toolbar.inline.show();\n\n        }, false);\n\n    };\n\n    /** getting all contenteditable elements */\n    ui.saveInputs = function () {\n\n        var redactor = editor.nodes.redactor,\n            elements = [];\n\n        /** Save all inputs in global variable state */\n        editor.state.inputs = redactor.querySelectorAll('[contenteditable], input');\n\n    };\n\n    /**\n     * Adds first initial block on empty redactor\n     */\n    ui.addInitialBlock = function () {\n\n        var initialBlockType = editor.settings.initialBlockPlugin,\n            initialBlock;\n\n        if ( !editor.tools[initialBlockType] ) {\n\n            editor.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\n            return;\n\n        }\n\n        initialBlock = editor.tools[initialBlockType].render();\n\n        initialBlock.setAttribute('data-placeholder', 'Расскажите свою историю...');\n\n        editor.content.insertBlock({\n            type  : initialBlockType,\n            block : initialBlock\n        });\n\n        editor.content.workingNodeChanged(initialBlock);\n\n    };\n\n    ui.setInlineToolbarButtonBehaviour = function (button, type) {\n\n        button.addEventListener('mousedown', function (event) {\n\n            editor.toolbar.inline.toolClicked(event, type);\n\n        }, false);\n\n    };\n\n    return ui;\n\n})({});\n\nmodule.exports = ui;\n\n\n// WEBPACK FOOTER //\n// ./modules/ui.js","/**\n *\n * Codex.Editor Transport Module\n *\n * @author Codex Team\n * @version 1.0\n */\nlet editor = codex.editor;\n\nvar transport = (function (transport) {\n\n    transport.input = null;\n\n    /**\n     * @property {Object} arguments - keep plugin settings and defined callbacks\n     */\n    transport.arguments = null;\n\n    transport.prepare = function () {\n\n        var input = document.createElement('INPUT');\n\n        input.type = 'file';\n        input.addEventListener('change', editor.transport.fileSelected);\n\n        editor.transport.input = input;\n\n    };\n\n    /** Clear input when files is uploaded */\n    transport.clearInput = function () {\n\n        /** Remove old input */\n        this.input = null;\n\n        /** Prepare new one */\n        this.prepare();\n\n    };\n\n    /**\n     * Callback for file selection\n     */\n    transport.fileSelected = function (event) {\n\n        var input       = this,\n            files       = input.files,\n            filesLength = files.length,\n            formdData   = new FormData(),\n            file,\n            i;\n\n        formdData.append('files', files[0], files[0].name);\n\n        editor.transport.ajax({\n            data : formdData,\n            beforeSend : editor.transport.arguments.beforeSend,\n            success    : editor.transport.arguments.success,\n            error      : editor.transport.arguments.error\n        });\n\n    };\n\n    /**\n     * Use plugin callbacks\n     * @protected\n     */\n    transport.selectAndUpload = function (args) {\n\n        this.arguments = args;\n        this.input.click();\n\n    };\n\n    /**\n     * Ajax requests module\n     */\n    transport.ajax = function (params) {\n\n        var xhr = new XMLHttpRequest(),\n            beforeSend = typeof params.beforeSend == 'function' ? params.beforeSend : function () {},\n            success    = typeof params.success    == 'function' ? params.success : function () {},\n            error      = typeof params.error      == 'function' ? params.error   : function () {};\n\n        beforeSend();\n\n        xhr.open('POST', editor.settings.uploadImagesUrl, true);\n\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n        xhr.onload = function () {\n\n            if (xhr.status === 200) {\n\n                success(xhr.responseText);\n\n            } else {\n\n                console.log('request error: %o', xhr);\n                error();\n\n            }\n\n        };\n\n        xhr.send(params.data);\n        this.clearInput();\n\n    };\n\n    return transport;\n\n})({});\n\nmodule.exports  = transport;\n\n\n// WEBPACK FOOTER //\n// ./modules/transport.js","/**\n * Codex Editor Renderer Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nvar renderer = (function (renderer) {\n\n    /**\n     * Asyncronously parses input JSON to redactor blocks\n     */\n    renderer.makeBlocksFromData = function () {\n\n        /**\n         * If redactor is empty, add first paragraph to start writing\n         */\n        if (!editor.state.blocks.items.length) {\n\n            editor.ui.addInitialBlock();\n            return;\n\n        }\n\n        Promise.resolve()\n\n        /** First, get JSON from state */\n            .then(function () {\n\n                return editor.state.blocks;\n\n            })\n\n            /** Then, start to iterate they */\n            .then(editor.renderer.appendBlocks)\n\n            /** Write log if something goes wrong */\n            .catch(function (error) {\n\n                editor.core.log('Error while parsing JSON: %o', 'error', error);\n\n            });\n\n    };\n\n    /**\n     * Parses JSON to blocks\n     * @param {object} data\n     * @return Primise -> nodeList\n     */\n    renderer.appendBlocks = function (data) {\n\n        var blocks = data.items;\n\n        /**\n         * Sequence of one-by-one blocks appending\n         * Uses to save blocks order after async-handler\n         */\n        var nodeSequence = Promise.resolve();\n\n        for (var index = 0; index < blocks.length ; index++ ) {\n\n            /** Add node to sequence at specified index */\n            editor.renderer.appendNodeAtIndex(nodeSequence, blocks, index);\n\n        }\n\n    };\n\n    /**\n     * Append node at specified index\n     */\n    renderer.appendNodeAtIndex = function (nodeSequence, blocks, index) {\n\n        /** We need to append node to sequence */\n        nodeSequence\n\n        /** first, get node async-aware */\n            .then(function () {\n\n                return editor.renderer.getNodeAsync(blocks, index);\n\n            })\n\n            /**\n             * second, compose editor-block from JSON object\n             */\n            .then(editor.renderer.createBlockFromData)\n\n            /**\n             * now insert block to redactor\n             */\n            .then(function (blockData) {\n\n                /**\n                 * blockData has 'block', 'type' and 'stretched' information\n                 */\n                editor.content.insertBlock(blockData);\n\n                /** Pass created block to next step */\n                return blockData.block;\n\n            })\n\n            /** Log if something wrong with node */\n            .catch(function (error) {\n\n                editor.core.log('Node skipped while parsing because %o', 'error', error);\n\n            });\n\n    };\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    renderer.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function () {\n\n            return blocksList[index];\n\n        });\n\n    };\n\n    /**\n     * Creates editor block by JSON-data\n     *\n     * @uses render method of each plugin\n     *\n     * @param {object} blockData looks like\n     *                            { header : {\n     *                                            text: '',\n     *                                            type: 'H3', ...\n     *                                        }\n     *                            }\n     * @return {object} with type and Element\n     */\n    renderer.createBlockFromData = function (blockData) {\n\n        /** New parser */\n        var pluginName = blockData.type,\n            cover      = blockData.cover;\n\n        /** Get first key of object that stores plugin name */\n        // for (var pluginName in blockData) break;\n\n        /** Check for plugin existance */\n        if (!editor.tools[pluginName]) {\n\n            throw Error(`Plugin «${pluginName}» not found`);\n\n        }\n\n        /** Check for plugin having render method */\n        if (typeof editor.tools[pluginName].render != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have «render» method`);\n\n        }\n\n        /** New Parser */\n        var block = editor.tools[pluginName].render(blockData.data);\n\n        /** is first-level block stretched */\n        var stretched = editor.tools[pluginName].isStretched || false;\n\n        /** Retrun type and block */\n        return {\n            type      : pluginName,\n            block     : block,\n            stretched : stretched,\n            cover     : cover\n        };\n\n    };\n\n    return renderer;\n\n})({});\n\nmodule.exports = renderer;\n\n\n// WEBPACK FOOTER //\n// ./modules/renderer.js","/**\n * Codex Editor Saver\n *\n * @author Codex Team\n * @version 1.0.2\n */\n\nlet editor = codex.editor;\n\nvar saver = (function (saver) {\n\n    /**\n     * Saves blocks\n     * @private\n     */\n    saver.saveBlocks = function () {\n\n        /** Save html content of redactor to memory */\n        editor.state.html = editor.nodes.redactor.innerHTML;\n\n        /** Empty jsonOutput state */\n        editor.state.jsonOutput = [];\n\n        Promise.resolve()\n\n            .then(function () {\n\n                return editor.nodes.redactor.childNodes;\n\n            })\n            /** Making a sequence from separate blocks */\n            .then(editor.saver.makeQueue)\n\n            .then(function () {\n                // editor.nodes.textarea.innerHTML = editor.state.html;\n            })\n\n            .catch( function (error) {\n\n                console.log('Something happend');\n\n            });\n\n    };\n\n    saver.makeQueue = function (blocks) {\n\n        var queue = Promise.resolve();\n\n        for(var index = 0; index < blocks.length; index++) {\n\n            /** Add node to sequence at specified index */\n            editor.saver.getBlockData(queue, blocks, index);\n\n        }\n\n    };\n\n    /** Gets every block and makes From Data */\n    saver.getBlockData = function (queue, blocks, index) {\n\n        queue.then(function () {\n\n            return editor.saver.getNodeAsync(blocks, index);\n\n        })\n\n            .then(editor.saver.makeFormDataFromBlocks);\n\n    };\n\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    saver.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function () {\n\n            return blocksList[index];\n\n        });\n\n    };\n\n    saver.makeFormDataFromBlocks = function (block) {\n\n        var pluginName = block.dataset.tool;\n\n        /** Check for plugin existance */\n        if (!editor.tools[pluginName]) {\n\n            throw Error(`Plugin «${pluginName}» not found`);\n\n        }\n\n        /** Check for plugin having render method */\n        if (typeof editor.tools[pluginName].save != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have save method`);\n\n        }\n\n        /** Result saver */\n        var blockContent   = block.childNodes[0],\n            pluginsContent = blockContent.childNodes[0],\n            savedData      = editor.tools[pluginName].save(pluginsContent),\n            output;\n\n\n        output = {\n            type: pluginName,\n            data: savedData\n        };\n\n        if (editor.tools[pluginName].validate) {\n\n            var result = editor.tools[pluginName].validate(savedData);\n\n            /**\n             * Do not allow invalid data\n             */\n            if (!result)\n                return;\n\n        }\n\n        /** Marks Blocks that will be in main page */\n        output.cover = block.classList.contains(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        editor.state.jsonOutput.push(output);\n\n    };\n\n    return saver;\n\n})({});\n\nmodule.exports = saver;\n\n\n// WEBPACK FOOTER //\n// ./modules/saver.js","/**\n * Codex Editor Content Module\n * Works with DOM\n *\n * @author Codex Team\n * @version 1.3.11\n */\nlet editor = codex.editor;\n\nvar content = (function (content) {\n\n    /**\n     * Links to current active block\n     * @type {null | Element}\n     */\n    content.currentNode = null;\n\n    /**\n     * clicked in redactor area\n     * @type {null | Boolean}\n     */\n    content.editorAreaHightlighted = null;\n\n    /**\n     * Synchronizes redactor with original textarea\n     */\n    content.sync = function () {\n\n        editor.core.log('syncing...');\n\n        /**\n         * Save redactor content to editor.state\n         */\n        editor.state.html = editor.nodes.redactor.innerHTML;\n\n    };\n\n    /**\n     * @deprecated\n     */\n    content.getNodeFocused = function () {\n\n        var selection = window.getSelection(),\n            focused;\n\n        if (selection.anchorNode === null) {\n\n            return null;\n\n        }\n\n        if ( selection.anchorNode.nodeType == editor.core.nodeTypes.TAG ) {\n\n            focused = selection.anchorNode;\n\n        } else {\n\n            focused = selection.focusNode.parentElement;\n\n        }\n\n        if ( !editor.parser.isFirstLevelBlock(focused) ) {\n\n            /** Iterate with parent nodes to find first-level*/\n            var parent = focused.parentNode;\n\n            while (parent && !editor.parser.isFirstLevelBlock(parent)) {\n\n                parent = parent.parentNode;\n\n            }\n\n            focused = parent;\n\n        }\n\n        if (focused != editor.nodes.redactor) {\n\n            return focused;\n\n        }\n\n        return null;\n\n    };\n\n    /**\n     * Appends background to the block\n     */\n    content.markBlock = function () {\n\n        editor.content.currentNode.classList.add(editor.ui.className.BLOCK_HIGHLIGHTED);\n\n    };\n\n    /**\n     * Clear background\n     */\n    content.clearMark = function () {\n\n        if (editor.content.currentNode) {\n\n            editor.content.currentNode.classList.remove(editor.ui.className.BLOCK_HIGHLIGHTED);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Finds first-level block\n     * @param {Element} node - selected or clicked in redactors area node\n     */\n    content.getFirstLevelBlock = function (node) {\n\n        if (!editor.core.isDomNode(node)) {\n\n            node = node.parentNode;\n\n        }\n\n        if (node === editor.nodes.redactor || node === document.body) {\n\n            return null;\n\n        } else {\n\n            while(!node.classList.contains(editor.ui.className.BLOCK_CLASSNAME)) {\n\n                node = node.parentNode;\n\n            }\n\n            return node;\n\n        }\n\n    };\n\n    /**\n     * Trigger this event when working node changed\n     * @param {Element} targetNode - first-level of this node will be current\n     * If targetNode is first-level then we set it as current else we look for parents to find first-level\n     */\n    content.workingNodeChanged = function (targetNode) {\n\n        /** Clear background from previous marked block before we change */\n        editor.content.clearMark();\n\n        if (!targetNode) {\n\n            return;\n\n        }\n\n        this.currentNode = this.getFirstLevelBlock(targetNode);\n\n    };\n\n    /**\n     * Replaces one redactor block with another\n     * @protected\n     * @param {Element} targetBlock - block to replace. Mostly currentNode.\n     * @param {Element} newBlock\n     * @param {string} newBlockType - type of new block; we need to store it to data-attribute\n     *\n     * [!] Function does not saves old block content.\n     *     You can get it manually and pass with newBlock.innerHTML\n     */\n    content.replaceBlock = function function_name(targetBlock, newBlock) {\n\n        if (!targetBlock || !newBlock) {\n\n            editor.core.log('replaceBlock: missed params');\n            return;\n\n        }\n\n        /** If target-block is not a frist-level block, then we iterate parents to find it */\n        while(!targetBlock.classList.contains(editor.ui.className.BLOCK_CLASSNAME)) {\n\n            targetBlock = targetBlock.parentNode;\n\n        }\n\n        /**\n         * Check is this block was in feed\n         * If true, than set switched block also covered\n         */\n        if (targetBlock.classList.contains(editor.ui.className.BLOCK_IN_FEED_MODE)) {\n\n            newBlock.classList.add(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        }\n\n        /** Replacing */\n        editor.nodes.redactor.replaceChild(newBlock, targetBlock);\n\n        /**\n         * Set new node as current\n         */\n        editor.content.workingNodeChanged(newBlock);\n\n        /**\n         * Add block handlers\n         */\n        editor.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Save changes\n         */\n        editor.ui.saveInputs();\n\n    };\n\n    /**\n     * @private\n     *\n     * Inserts new block to redactor\n     * Wrapps block into a DIV with BLOCK_CLASSNAME class\n     *\n     * @param blockData          {object}\n     * @param blockData.block    {Element}   element with block content\n     * @param blockData.type     {string}    block plugin\n     * @param needPlaceCaret     {bool}      pass true to set caret in new block\n     *\n     */\n    content.insertBlock = function ( blockData, needPlaceCaret ) {\n\n        var workingBlock    = editor.content.currentNode,\n            newBlockContent = blockData.block,\n            blockType       = blockData.type,\n            cover           = blockData.cover,\n            isStretched     = blockData.stretched;\n\n        var newBlock = editor.content.composeNewBlock(newBlockContent, blockType, isStretched);\n\n        if (cover === true) {\n\n            newBlock.classList.add(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        }\n\n        if (workingBlock) {\n\n            editor.core.insertAfter(workingBlock, newBlock);\n\n        } else {\n\n            /**\n             * If redactor is empty, append as first child\n             */\n            editor.nodes.redactor.appendChild(newBlock);\n\n        }\n\n        /**\n         * Block handler\n         */\n        editor.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Set new node as current\n         */\n        editor.content.workingNodeChanged(newBlock);\n\n        /**\n         * Save changes\n         */\n        editor.ui.saveInputs();\n\n\n        if ( needPlaceCaret ) {\n\n            /**\n             * If we don't know input index then we set default value -1\n             */\n            var currentInputIndex = editor.caret.getCurrentInputIndex() || -1;\n\n\n            if (currentInputIndex == -1) {\n\n\n                var editableElement = newBlock.querySelector('[contenteditable]'),\n                    emptyText       = document.createTextNode('');\n\n                editableElement.appendChild(emptyText);\n                editor.caret.set(editableElement, 0, 0);\n\n                editor.toolbar.move();\n                editor.toolbar.showPlusButton();\n\n\n            } else {\n\n                if (currentInputIndex === editor.state.inputs.length - 1)\n                    return;\n\n                /** Timeout for browsers execution */\n                setTimeout(function () {\n\n                    /** Setting to the new input */\n                    editor.caret.setToNextBlock(currentInputIndex);\n                    editor.toolbar.move();\n                    editor.toolbar.open();\n\n                }, 10);\n\n            }\n\n        }\n\n        /**\n         * Block is inserted, wait for new click that defined focusing on editors area\n         * @type {boolean}\n         */\n        content.editorAreaHightlighted = false;\n\n    };\n\n    /**\n     * Replaces blocks with saving content\n     * @protected\n     * @param {Element} noteToReplace\n     * @param {Element} newNode\n     * @param {Element} blockType\n     */\n    content.switchBlock = function (blockToReplace, newBlock, tool) {\n\n        var newBlockComposed = editor.content.composeNewBlock(newBlock, tool);\n\n        /** Replacing */\n        editor.content.replaceBlock(blockToReplace, newBlockComposed);\n\n        /** Save new Inputs when block is changed */\n        editor.ui.saveInputs();\n\n    };\n\n    /**\n     * Iterates between child noted and looking for #text node on deepest level\n     * @private\n     * @param {Element} block - node where find\n     * @param {int} postiton - starting postion\n     *      Example: childNodex.length to find from the end\n     *               or 0 to find from the start\n     * @return {Text} block\n     * @uses DFS\n     */\n    content.getDeepestTextNodeFromPosition = function (block, position) {\n\n        /**\n         * Clear Block from empty and useless spaces with trim.\n         * Such nodes we should remove\n         */\n        var blockChilds = block.childNodes,\n            index,\n            node,\n            text;\n\n        for(index = 0; index < blockChilds.length; index++) {\n\n            node = blockChilds[index];\n\n            if (node.nodeType == editor.core.nodeTypes.TEXT) {\n\n                text = node.textContent.trim();\n\n                /** Text is empty. We should remove this child from node before we start DFS\n                 * decrease the quantity of childs.\n                 */\n                if (text === '') {\n\n                    block.removeChild(node);\n                    position--;\n\n                }\n\n            }\n\n        }\n\n        if (block.childNodes.length === 0) {\n\n            return document.createTextNode('');\n\n        }\n\n        /** Setting default position when we deleted all empty nodes */\n        if ( position < 0 )\n            position = 1;\n\n        var looking_from_start = false;\n\n        /** For looking from START */\n        if (position === 0) {\n\n            looking_from_start = true;\n            position = 1;\n\n        }\n\n        while ( position ) {\n\n            /** initial verticle of node. */\n            if ( looking_from_start ) {\n\n                block = block.childNodes[0];\n\n            } else {\n\n                block = block.childNodes[position - 1];\n\n            }\n\n            if ( block.nodeType == editor.core.nodeTypes.TAG ) {\n\n                position = block.childNodes.length;\n\n            } else if (block.nodeType == editor.core.nodeTypes.TEXT ) {\n\n                position = 0;\n\n            }\n\n        }\n\n        return block;\n\n    };\n\n    /**\n     * @private\n     */\n    content.composeNewBlock = function (block, tool, isStretched) {\n\n        var newBlock     = editor.draw.node('DIV', editor.ui.className.BLOCK_CLASSNAME, {}),\n            blockContent = editor.draw.node('DIV', editor.ui.className.BLOCK_CONTENT, {});\n\n        blockContent.appendChild(block);\n        newBlock.appendChild(blockContent);\n\n        if (isStretched) {\n\n            blockContent.classList.add(editor.ui.className.BLOCK_STRETCHED);\n\n        }\n\n        newBlock.dataset.tool = tool;\n        return newBlock;\n\n    };\n\n    /**\n     * Returns Range object of current selection\n     */\n    content.getRange = function () {\n\n        var selection = window.getSelection().getRangeAt(0);\n\n        return selection;\n\n    };\n\n    /**\n     * Divides block in two blocks (after and before caret)\n     * @private\n     * @param {Int} inputIndex - target input index\n     */\n    content.splitBlock = function (inputIndex) {\n\n        var selection      = window.getSelection(),\n            anchorNode     = selection.anchorNode,\n            anchorNodeText = anchorNode.textContent,\n            caretOffset    = selection.anchorOffset,\n            textBeforeCaret,\n            textNodeBeforeCaret,\n            textAfterCaret,\n            textNodeAfterCaret;\n\n        var currentBlock = editor.content.currentNode.querySelector('[contentEditable]');\n\n\n        textBeforeCaret     = anchorNodeText.substring(0, caretOffset);\n        textAfterCaret      = anchorNodeText.substring(caretOffset);\n\n        textNodeBeforeCaret = document.createTextNode(textBeforeCaret);\n\n        if (textAfterCaret) {\n\n            textNodeAfterCaret  = document.createTextNode(textAfterCaret);\n\n        }\n\n        var previousChilds = [],\n            nextChilds     = [],\n            reachedCurrent = false;\n\n        if (textNodeAfterCaret) {\n\n            nextChilds.push(textNodeAfterCaret);\n\n        }\n\n        for ( var i = 0, child; !!(child = currentBlock.childNodes[i]); i++) {\n\n            if ( child != anchorNode ) {\n\n                if ( !reachedCurrent ) {\n\n                    previousChilds.push(child);\n\n                } else {\n\n                    nextChilds.push(child);\n\n                }\n\n            } else {\n\n                reachedCurrent = true;\n\n            }\n\n        }\n\n        /** Clear current input */\n        editor.state.inputs[inputIndex].innerHTML = '';\n\n        /**\n         * Append all childs founded before anchorNode\n         */\n        var previousChildsLength = previousChilds.length;\n\n        for(i = 0; i < previousChildsLength; i++) {\n\n            editor.state.inputs[inputIndex].appendChild(previousChilds[i]);\n\n        }\n\n        editor.state.inputs[inputIndex].appendChild(textNodeBeforeCaret);\n\n        /**\n         * Append text node which is after caret\n         */\n        var nextChildsLength = nextChilds.length,\n            newNode          = document.createElement('div');\n\n        for(i = 0; i < nextChildsLength; i++) {\n\n            newNode.appendChild(nextChilds[i]);\n\n        }\n\n        newNode = newNode.innerHTML;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n        /**\n         * Make new paragraph with text after caret\n         */\n        editor.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : editor.tools[NEW_BLOCK_TYPE].render({\n                text : newNode\n            })\n        }, true );\n\n    };\n\n    /**\n     * Merges two blocks — current and target\n     * If target index is not exist, then previous will be as target\n     */\n    content.mergeBlocks = function (currentInputIndex, targetInputIndex) {\n\n        /** If current input index is zero, then prevent method execution */\n        if (currentInputIndex === 0) {\n\n            return;\n\n        }\n\n        var targetInput,\n            currentInputContent = editor.state.inputs[currentInputIndex].innerHTML;\n\n        if (!targetInputIndex) {\n\n            targetInput = editor.state.inputs[currentInputIndex - 1];\n\n        } else {\n\n            targetInput = editor.state.inputs[targetInputIndex];\n\n        }\n\n        targetInput.innerHTML += currentInputContent;\n\n    };\n\n    /**\n     * @private\n     *\n     * Callback for HTML Mutations\n     * @param {Array} mutation - Mutation Record\n     */\n    content.paste = function (mutation) {\n\n        var workingNode = editor.content.currentNode,\n            tool        = workingNode.dataset.tool;\n\n        if (editor.tools[tool].allowedToPaste) {\n\n            editor.content.sanitize.call(this, mutation.target);\n\n        } else {\n\n            editor.content.pasteTextContent(mutation.addedNodes);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * gets only text/plain content of node\n     * @param {Element} target - HTML node\n     */\n    content.pasteTextContent = function (nodes) {\n\n        var node = nodes[0],\n            textNode;\n\n        if (!node) {\n\n            return;\n\n        }\n\n        if (node.nodeType == editor.core.nodeTypes.TEXT) {\n\n            textNode = document.createTextNode(node);\n\n        } else {\n\n            textNode = document.createTextNode(node.textContent);\n\n        }\n\n        if (editor.core.isDomNode(node)) {\n\n            node.parentNode.replaceChild(textNode, node);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Sanitizes HTML content\n     * @param {Element} target - inserted element\n     * @uses Sanitize library html-janitor\n     */\n    content.sanitize = function (target) {\n\n        if (!target) {\n\n            return;\n\n        }\n\n        var node = target[0];\n\n        if (!node) {\n\n            return;\n\n        }\n\n        /**\n         * Disconnect Observer\n         * hierarchy of function calls inherits context of observer\n         */\n        this.disconnect();\n\n        /**\n         * Don't sanitize text node\n         */\n        if (node.nodeType == editor.core.nodeTypes.TEXT) {\n\n            return;\n\n        }\n\n        /**\n         * Clear dirty content\n         */\n        var cleaner = editor.sanitizer.init(editor.satinizer.Config.BASIC),\n            clean = cleaner.clean(target.outerHTML);\n\n        var div = editor.draw.node('DIV', [], { innerHTML: clean });\n\n        node.replaceWith(div.childNodes[0]);\n\n\n    };\n\n    /**\n     * Iterates all right siblings and parents, which has right siblings\n     * while it does not reached the first-level block\n     *\n     * @param {Element} node\n     * @return {boolean}\n     */\n    content.isLastNode = function (node) {\n\n        // console.log('погнали перебор родителей');\n\n        var allChecked = false;\n\n        while ( !allChecked ) {\n\n            // console.log('Смотрим на %o', node);\n            // console.log('Проверим, пустые ли соседи справа');\n\n            if ( !allSiblingsEmpty_(node) ) {\n\n                // console.log('Есть непустые соседи. Узел не последний. Выходим.');\n                return false;\n\n            }\n\n            node = node.parentNode;\n\n            /**\n             * Проверяем родителей до тех пор, пока не найдем блок первого уровня\n             */\n            if ( node.classList.contains(editor.ui.className.BLOCK_CONTENT) ) {\n\n                allChecked = true;\n\n            }\n\n        }\n\n        return true;\n\n    };\n\n    /**\n     * Checks if all element right siblings is empty\n     * @param node\n     */\n    var allSiblingsEmpty_ = function (node) {\n\n        /**\n         * Нужно убедиться, что после пустого соседа ничего нет\n         */\n        var sibling = node.nextSibling;\n\n        while ( sibling ) {\n\n            if (sibling.textContent.length) {\n\n                return false;\n\n            }\n\n            sibling = sibling.nextSibling;\n\n        }\n\n        return true;\n\n    };\n\n    /**\n     * @public\n     *\n     * @param [String] htmlString - html content as string\n     * @return {string} - html content as string\n     */\n    content.wrapTextWithParagraphs = function (htmlString) {\n\n        var wrapper = document.createElement('DIV'),\n            newWrapper = document.createElement('DIV'),\n            i,\n            paragraph,\n            firstLevelBlocks = ['DIV', 'P'],\n            blockTyped,\n            node;\n\n        /**\n         * Make HTML Element to Wrap Text\n         * It allows us to work with input data as HTML content\n         */\n        wrapper.innerHTML = htmlString;\n        paragraph = document.createElement('P');\n\n        for (i = 0; i < wrapper.childNodes.length; i++) {\n\n            node = wrapper.childNodes[i];\n\n            blockTyped = firstLevelBlocks.indexOf(node.tagName) != -1;\n\n            /**\n             * If node is first-levet\n             * we add this node to our new wrapper\n             */\n            if ( blockTyped ) {\n\n                /**\n                 * If we had splitted inline nodes to paragraph before\n                 */\n                if ( paragraph.childNodes.length ) {\n\n                    newWrapper.appendChild(paragraph.cloneNode(true));\n\n                    /** empty paragraph */\n                    paragraph = null;\n                    paragraph = document.createElement('P');\n\n                }\n\n                newWrapper.appendChild(node.cloneNode(true));\n\n            } else {\n\n                /** Collect all inline nodes to one as paragraph */\n                paragraph.appendChild(node.cloneNode(true));\n\n                /** if node is last we should append this node to paragraph and paragraph to new wrapper */\n                if ( i == wrapper.childNodes.length - 1 ) {\n\n                    newWrapper.appendChild(paragraph.cloneNode(true));\n\n                }\n\n            }\n\n        }\n\n        return newWrapper.innerHTML;\n\n    };\n\n    return content;\n\n})({});\n\nmodule.exports = content;\n\n\n// WEBPACK FOOTER //\n// ./modules/content.js","/**\n * Codex Editor toolbar module\n *\n * Contains:\n *  - Inline toolbox\n *  - Toolbox within plus button\n *  - Settings section\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nvar toolbar = (function (toolbar) {\n\n    toolbar.init = function () {\n\n        toolbar.settings = require('./settings');\n        toolbar.inline   = require('./inline');\n        toolbar.toolbox  = require('./toolbox');\n\n    };\n\n    /**\n     * Margin between focused node and toolbar\n     */\n    toolbar.defaultToolbarHeight = 49;\n\n    toolbar.defaultOffset = 34;\n\n    toolbar.opened = false;\n\n    toolbar.current = null;\n\n    /**\n     * @protected\n     */\n    toolbar.open = function () {\n\n        editor.nodes.toolbar.classList.add('opened');\n        this.opened = true;\n\n    };\n\n    /**\n     * @protected\n     */\n    toolbar.close = function () {\n\n        editor.nodes.toolbar.classList.remove('opened');\n\n        toolbar.opened  = false;\n        toolbar.current = null;\n\n        for (var button in editor.nodes.toolbarButtons) {\n\n            editor.nodes.toolbarButtons[button].classList.remove('selected');\n\n        }\n\n        /** Close toolbox when toolbar is not displayed */\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.close();\n\n    };\n\n    toolbar.toggle = function () {\n\n        if ( !this.opened ) {\n\n            this.open();\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    toolbar.hidePlusButton = function () {\n\n        editor.nodes.plusButton.classList.add('hide');\n\n    };\n\n    toolbar.showPlusButton = function () {\n\n        editor.nodes.plusButton.classList.remove('hide');\n\n    };\n\n    /**\n     * Moving toolbar to the specified node\n     */\n    toolbar.move = function () {\n\n        /** Close Toolbox when we move toolbar */\n        editor.toolbar.toolbox.close();\n\n        if (!editor.content.currentNode) {\n\n            return;\n\n        }\n\n        var toolbarHeight = editor.nodes.toolbar.clientHeight || editor.toolbar.defaultToolbarHeight,\n            newYCoordinate = editor.content.currentNode.offsetTop - (editor.toolbar.defaultToolbarHeight / 2) + editor.toolbar.defaultOffset;\n\n        editor.nodes.toolbar.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\n\n        /** Close trash actions */\n        editor.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return toolbar;\n\n})({});\n\ntoolbar.init();\n\nmodule.exports = toolbar;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbar.js","/**\n * Toolbar settings\n *\n * @version 1.0.4\n */\n\nlet editor = codex.editor;\n\nvar settings = (function(settings) {\n\n    settings.init = function() {\n        require('../content');\n    };\n\n    settings.opened = false;\n\n    settings.setting = null;\n    settings.actions = null;\n\n    settings.cover = null;\n\n    /**\n     * Append and open settings\n     */\n    settings.open = function(toolType){\n\n        /**\n         * Append settings content\n         * It's stored in tool.settings\n         */\n        if (!editor.tools[toolType] || !editor.tools[toolType].makeSettings ) {\n\n            editor.core.log(`Plugin «${toolType}» has no settings`, 'warn');\n            // editor.nodes.pluginSettings.innerHTML = `Плагин «${toolType}» не имеет настроек`;\n\n        } else {\n\n            /**\n             * Draw settings block\n             */\n            var settingsBlock = editor.tools[toolType].makeSettings();\n            editor.nodes.pluginSettings.appendChild(settingsBlock);\n        }\n\n        var currentBlock = editor.content.currentNode;\n\n        /** Open settings block */\n        editor.nodes.blockSettings.classList.add('opened');\n        editor.toolbar.settings.addDefaultSettings();\n        this.opened = true;\n    };\n\n    /**\n     * Close and clear settings\n     */\n    settings.close = function(){\n\n        editor.nodes.blockSettings.classList.remove('opened');\n        editor.nodes.pluginSettings.innerHTML = '';\n\n        this.opened = false;\n\n    };\n\n    /**\n     * @param {string} toolType - plugin type\n     */\n    settings.toggle = function( toolType ){\n\n        if ( !this.opened ){\n\n            this.open(toolType);\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    /**\n     * This function adds default core settings\n     */\n    settings.addDefaultSettings = function() {\n\n        /** list of default settings */\n        var feedModeToggler;\n\n        /** Clear block and append initialized settings */\n        editor.nodes.defaultSettings.innerHTML = '';\n\n\n        /** Init all default setting buttons */\n        feedModeToggler = editor.toolbar.settings.makeFeedModeToggler();\n\n        /**\n         * Fill defaultSettings\n         */\n\n        /**\n         * Button that enables/disables Feed-mode\n         * Feed-mode means that block will be showed in articles-feed like cover\n         */\n        editor.nodes.defaultSettings.appendChild(feedModeToggler);\n\n    };\n\n    /**\n     * Cover setting.\n     * This tune highlights block, so that it may be used for showing target block on main page\n     * Draw different setting when block is marked for main page\n     * If TRUE, then we show button that removes this selection\n     * Also defined setting \"Click\" events will be listened and have separate callbacks\n     *\n     * @return {Element} node/button that we place in default settings block\n     */\n    settings.makeFeedModeToggler = function() {\n\n        var isFeedModeActivated = editor.toolbar.settings.isFeedModeActivated(),\n            setting,\n            data;\n\n        if (!isFeedModeActivated) {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Вывести в ленте'\n            };\n\n        } else {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Не выводить в ленте'\n            };\n\n        }\n\n        setting = editor.draw.node('DIV', editor.ui.className.SETTINGS_ITEM, data);\n        setting.addEventListener('click', editor.toolbar.settings.updateFeedMode, false);\n\n        return setting;\n    };\n\n    /**\n     * Updates Feed-mode\n     */\n    settings.updateFeedMode = function() {\n\n        var currentNode = editor.content.currentNode;\n\n        currentNode.classList.toggle(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        editor.toolbar.settings.close();\n    };\n\n    settings.isFeedModeActivated = function() {\n\n        var currentBlock = editor.content.currentNode;\n\n        if (currentBlock) {\n            return currentBlock.classList.contains(editor.ui.className.BLOCK_IN_FEED_MODE);\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Here we will draw buttons and add listeners to components\n     */\n    settings.makeRemoveBlockButton = function() {\n\n        var removeBlockWrapper  = editor.draw.node('SPAN', 'ce-toolbar__remove-btn', {}),\n            settingButton = editor.draw.node('SPAN', 'ce-toolbar__remove-setting', { innerHTML : '<i class=\"ce-icon-trash\"></i>' }),\n            actionWrapper = editor.draw.node('DIV', 'ce-toolbar__remove-confirmation', {}),\n            confirmAction = editor.draw.node('DIV', 'ce-toolbar__remove-confirm', { textContent : 'Удалить блок' }),\n            cancelAction  = editor.draw.node('DIV', 'ce-toolbar__remove-cancel', { textContent : 'Отмена' });\n\n        settingButton.addEventListener('click', editor.toolbar.settings.removeButtonClicked, false);\n\n        confirmAction.addEventListener('click', editor.toolbar.settings.confirmRemovingRequest, false);\n\n        cancelAction.addEventListener('click', editor.toolbar.settings.cancelRemovingRequest, false);\n\n        actionWrapper.appendChild(confirmAction);\n        actionWrapper.appendChild(cancelAction);\n\n        removeBlockWrapper.appendChild(settingButton);\n        removeBlockWrapper.appendChild(actionWrapper);\n\n        /** Save setting */\n        editor.toolbar.settings.setting = settingButton;\n        editor.toolbar.settings.actions = actionWrapper;\n\n        return removeBlockWrapper;\n\n    };\n\n    settings.removeButtonClicked = function() {\n\n        var action = editor.toolbar.settings.actions;\n\n        if (action.classList.contains('opened')) {\n            editor.toolbar.settings.hideRemoveActions();\n        } else {\n            editor.toolbar.settings.showRemoveActions();\n        }\n\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.close();\n\n    };\n\n    settings.cancelRemovingRequest = function() {\n\n        editor.toolbar.settings.actions.classList.remove('opened');\n    };\n\n    settings.confirmRemovingRequest = function() {\n\n        var currentBlock = editor.content.currentNode,\n            firstLevelBlocksCount;\n\n        currentBlock.remove();\n\n        firstLevelBlocksCount = editor.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            editor.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            editor.ui.addInitialBlock();\n        }\n\n        editor.ui.saveInputs();\n\n        editor.toolbar.close();\n    };\n\n    settings.showRemoveActions = function() {\n        editor.toolbar.settings.actions.classList.add('opened');\n    };\n\n    settings.hideRemoveActions = function() {\n        editor.toolbar.settings.actions.classList.remove('opened');\n    };\n\n    return settings;\n\n})({});\n\nsettings.init();\n\nmodule.exports = settings;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/settings.js","/**\n * Inline toolbar\n *\n * Contains from tools:\n * Bold, Italic, Underline and Anchor\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (inline) {\n\n    inline.buttonsOpened = null;\n    inline.actionsOpened = null;\n    inline.wrappersOffset = null;\n\n    /**\n     * saving selection that need for execCommand for styling\n     *\n     */\n    inline.storedSelection = null;\n\n    /**\n     * @protected\n     *\n     * Open inline toobar\n     */\n    inline.show = function () {\n\n        var currentNode = editor.content.currentNode,\n            tool = currentNode.dataset.tool,\n            plugin;\n\n        /**\n         * tool allowed to open inline toolbar\n         */\n        plugin = editor.tools[tool];\n\n        if (!plugin.showInlineToolbar)\n            return;\n\n        var selectedText = this.getSelectionText(),\n            toolbar      = editor.nodes.inlineToolbar.wrapper,\n            buttons      = editor.nodes.inlineToolbar.buttons;\n\n        if (selectedText.length > 0) {\n\n            /** Move toolbar and open */\n            editor.toolbar.inline.move();\n\n            /** Open inline toolbar */\n            toolbar.classList.add('opened');\n\n            /** show buttons of inline toolbar */\n            editor.toolbar.inline.showButtons();\n\n        }\n\n    };\n\n    /**\n     * @protected\n     *\n     * Closes inline toolbar\n     */\n    inline.close = function () {\n\n        var toolbar = editor.nodes.inlineToolbar.wrapper;\n\n        toolbar.classList.remove('opened');\n\n    };\n\n    /**\n     * @private\n     *\n     * Moving toolbar\n     */\n    inline.move = function () {\n\n        if (!this.wrappersOffset) {\n\n            this.wrappersOffset = this.getWrappersOffset();\n\n        }\n\n        var coords          = this.getSelectionCoords(),\n            defaultOffset   = 0,\n            toolbar         = editor.nodes.inlineToolbar.wrapper,\n            newCoordinateX,\n            newCoordinateY;\n\n        if (toolbar.offsetHeight === 0) {\n\n            defaultOffset = 40;\n\n        }\n\n        newCoordinateX = coords.x - this.wrappersOffset.left;\n        newCoordinateY = coords.y + window.scrollY - this.wrappersOffset.top - defaultOffset - toolbar.offsetHeight;\n\n        toolbar.style.transform = `translate3D(${Math.floor(newCoordinateX)}px, ${Math.floor(newCoordinateY)}px, 0)`;\n\n        /** Close everything */\n        editor.toolbar.inline.closeButtons();\n        editor.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Tool Clicked\n     */\n\n    inline.toolClicked = function (event, type) {\n\n        /**\n         * For simple tools we use default browser function\n         * For more complicated tools, we should write our own behavior\n         */\n        switch (type) {\n            case 'createLink' : editor.toolbar.inline.createLinkAction(event, type); break;\n            default           : editor.toolbar.inline.defaultToolAction(type); break;\n        }\n\n        /**\n         * highlight buttons\n         * after making some action\n         */\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\n\n    };\n\n    /**\n     * @private\n     *\n     * Saving wrappers offset in DOM\n     */\n    inline.getWrappersOffset = function () {\n\n        var wrapper = editor.nodes.wrapper,\n            offset  = this.getOffset(wrapper);\n\n        this.wrappersOffset = offset;\n        return offset;\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates offset of DOM element\n     *\n     * @param el\n     * @returns {{top: number, left: number}}\n     */\n    inline.getOffset = function ( el ) {\n\n        var _x = 0;\n        var _y = 0;\n\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\n\n            _x += (el.offsetLeft + el.clientLeft);\n            _y += (el.offsetTop + el.clientTop);\n            el = el.offsetParent;\n\n        }\n        return { top: _y, left: _x };\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates position of selected text\n     * @returns {{x: number, y: number}}\n     */\n    inline.getSelectionCoords = function () {\n\n        var sel = document.selection, range;\n        var x = 0, y = 0;\n\n        if (sel) {\n\n            if (sel.type != 'Control') {\n\n                range = sel.createRange();\n                range.collapse(true);\n                x = range.boundingLeft;\n                y = range.boundingTop;\n\n            }\n\n        } else if (window.getSelection) {\n\n            sel = window.getSelection();\n\n            if (sel.rangeCount) {\n\n                range = sel.getRangeAt(0).cloneRange();\n                if (range.getClientRects) {\n\n                    range.collapse(true);\n                    var rect = range.getClientRects()[0];\n\n                    if (!rect) {\n\n                        return;\n\n                    }\n\n                    x = rect.left;\n                    y = rect.top;\n\n                }\n\n            }\n\n        }\n        return { x: x, y: y };\n\n    };\n\n    /**\n     * @private\n     *\n     * Returns selected text as String\n     * @returns {string}\n     */\n    inline.getSelectionText = function getSelectionText() {\n\n        var selectedText = '';\n\n        // all modern browsers and IE9+\n        if (window.getSelection) {\n\n            selectedText = window.getSelection().toString();\n\n        }\n\n        return selectedText;\n\n    };\n\n    /** Opens buttons block */\n    inline.showButtons = function () {\n\n        var buttons = editor.nodes.inlineToolbar.buttons;\n\n        buttons.classList.add('opened');\n\n        editor.toolbar.inline.buttonsOpened = true;\n\n        /** highlight buttons */\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\n\n    };\n\n    /** Makes buttons disappear */\n    inline.closeButtons = function () {\n\n        var buttons = editor.nodes.inlineToolbar.buttons;\n\n        buttons.classList.remove('opened');\n\n        editor.toolbar.inline.buttonsOpened = false;\n\n    };\n\n    /** Open buttons defined action if exist */\n    inline.showActions = function () {\n\n        var action = editor.nodes.inlineToolbar.actions;\n\n        action.classList.add('opened');\n\n        editor.toolbar.inline.actionsOpened = true;\n\n    };\n\n    /** Close actions block */\n    inline.closeAction = function () {\n\n        var action = editor.nodes.inlineToolbar.actions;\n\n        action.innerHTML = '';\n        action.classList.remove('opened');\n        editor.toolbar.inline.actionsOpened = false;\n\n    };\n\n    /** Action for link creation or for setting anchor */\n    inline.createLinkAction = function (event, type) {\n\n        var isActive = this.isLinkActive();\n\n        var editable        = editor.content.currentNode,\n            storedSelection = editor.toolbar.inline.storedSelection;\n\n        if (isActive) {\n\n            var selection   = window.getSelection(),\n                anchorNode  = selection.anchorNode;\n\n            storedSelection = editor.toolbar.inline.saveSelection(editable);\n\n            /**\n             * Changing stored selection. if we want to remove anchor from word\n             * we should remove anchor from whole word, not only selected part.\n             * The solution is than we get the length of current link\n             * Change start position to - end of selection minus length of anchor\n             */\n            editor.toolbar.inline.restoreSelection(editable, storedSelection);\n\n            editor.toolbar.inline.defaultToolAction('unlink');\n\n        } else {\n\n            /** Create input and close buttons */\n            var action = editor.draw.inputForLink();\n\n            editor.nodes.inlineToolbar.actions.appendChild(action);\n\n            editor.toolbar.inline.closeButtons();\n            editor.toolbar.inline.showActions();\n\n            storedSelection = editor.toolbar.inline.saveSelection(editable);\n\n            /**\n             * focus to input\n             * Solution: https://developer.mozilla.org/ru/docs/Web/API/HTMLElement/focus\n             * Prevents event after showing input and when we need to focus an input which is in unexisted form\n             */\n            action.focus();\n            event.preventDefault();\n\n            /** Callback to link action */\n            action.addEventListener('keydown', function (event) {\n\n                if (event.keyCode == editor.core.keys.ENTER) {\n\n                    editor.toolbar.inline.restoreSelection(editable, storedSelection);\n                    editor.toolbar.inline.setAnchor(action.value);\n\n                    /**\n                     * Preventing events that will be able to happen\n                     */\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    editor.toolbar.inline.clearRange();\n\n                }\n\n            }, false);\n\n        }\n\n    };\n\n    inline.isLinkActive = function () {\n\n        var isActive = false;\n\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(function (tool) {\n\n            var dataType = tool.dataset.type;\n\n            if (dataType == 'link' && tool.classList.contains('hightlighted')) {\n\n                isActive = true;\n\n            }\n\n        });\n\n        return isActive;\n\n    };\n\n    /** default action behavior of tool */\n    inline.defaultToolAction = function (type) {\n\n        document.execCommand(type, false, null);\n\n    };\n\n    /**\n     * @private\n     *\n     * Sets URL\n     *\n     * @param {String} url - URL\n     */\n    inline.setAnchor = function (url) {\n\n        document.execCommand('createLink', false, url);\n\n        /** Close after URL inserting */\n        editor.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Saves selection\n     */\n    inline.saveSelection = function (containerEl) {\n\n        var range = window.getSelection().getRangeAt(0),\n            preSelectionRange = range.cloneRange(),\n            start;\n\n        preSelectionRange.selectNodeContents(containerEl);\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\n\n        start = preSelectionRange.toString().length;\n\n        return {\n            start: start,\n            end: start + range.toString().length\n        };\n\n    };\n\n    /**\n     * @private\n     *\n     * Sets to previous selection (Range)\n     *\n     * @param {Element} containerEl - editable element where we restore range\n     * @param {Object} savedSel - range basic information to restore\n     */\n    inline.restoreSelection = function (containerEl, savedSel) {\n\n        var range     = document.createRange(),\n            charIndex = 0;\n\n        range.setStart(containerEl, 0);\n        range.collapse(true);\n\n        var nodeStack = [ containerEl ],\n            node,\n            foundStart = false,\n            stop = false,\n            nextCharIndex;\n\n        while (!stop && (node = nodeStack.pop())) {\n\n            if (node.nodeType == 3) {\n\n                nextCharIndex = charIndex + node.length;\n\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\n\n                    range.setStart(node, savedSel.start - charIndex);\n                    foundStart = true;\n\n                }\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\n\n                    range.setEnd(node, savedSel.end - charIndex);\n                    stop = true;\n\n                }\n                charIndex = nextCharIndex;\n\n            } else {\n\n                var i = node.childNodes.length;\n\n                while (i--) {\n\n                    nodeStack.push(node.childNodes[i]);\n\n                }\n\n            }\n\n        }\n\n        var sel = window.getSelection();\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n    };\n\n    /**\n     * @private\n     *\n     * Removes all ranges from window selection\n     */\n    inline.clearRange = function () {\n\n        var selection = window.getSelection();\n\n        selection.removeAllRanges();\n\n    };\n\n    /**\n     * @private\n     *\n     * sets or removes hightlight\n     */\n    inline.hightlight = function (tool) {\n\n        var dataType = tool.dataset.type;\n\n        if (document.queryCommandState(dataType)) {\n\n            editor.toolbar.inline.setButtonHighlighted(tool);\n\n        } else {\n\n            editor.toolbar.inline.removeButtonsHighLight(tool);\n\n        }\n\n        /**\n         *\n         * hightlight for anchors\n         */\n        var selection = window.getSelection(),\n            tag = selection.anchorNode.parentNode;\n\n        if (tag.tagName == 'A' && dataType == 'link') {\n\n            editor.toolbar.inline.setButtonHighlighted(tool);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Mark button if text is already executed\n     */\n    inline.setButtonHighlighted = function (button) {\n\n        button.classList.add('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n\n            var icon = button.childNodes[0];\n\n            icon.classList.remove('ce-icon-link');\n            icon.classList.add('ce-icon-unlink');\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Removes hightlight\n     */\n    inline.removeButtonsHighLight = function (button) {\n\n        button.classList.remove('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n\n            var icon = button.childNodes[0];\n\n            icon.classList.remove('ce-icon-unlink');\n            icon.classList.add('ce-icon-link');\n\n        }\n\n    };\n\n\n    return inline;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/inline.js","/**\n * Codex Editor toolbox\n *\n * All tools be able to appended here\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nvar toolbox = (function (toolbox) {\n\n    toolbox.init = function () {\n\n        require('./toolbar');\n\n    };\n\n    toolbox.opened = false;\n\n    /** Shows toolbox */\n    toolbox.open = function () {\n\n        /** Close setting if toolbox is opened */\n        if (editor.toolbar.settings.opened) {\n\n            editor.toolbar.settings.close();\n\n        }\n\n        /** display toolbox */\n        editor.nodes.toolbox.classList.add('opened');\n\n        /** Animate plus button */\n        editor.nodes.plusButton.classList.add('clicked');\n\n        /** toolbox state */\n        editor.toolbar.toolbox.opened = true;\n\n    };\n\n    /** Closes toolbox */\n    toolbox.close = function () {\n\n        /** Makes toolbox disapear */\n        editor.nodes.toolbox.classList.remove('opened');\n\n        /** Rotate plus button */\n        editor.nodes.plusButton.classList.remove('clicked');\n\n        /** toolbox state */\n        editor.toolbar.toolbox.opened = false;\n\n    };\n\n    toolbox.leaf = function () {\n\n        var currentTool = editor.toolbar.current,\n            tools       = Object.keys(editor.tools),\n            barButtons  = editor.nodes.toolbarButtons,\n            nextToolIndex,\n            hiddenToolsAmount = 0,\n            toolToSelect;\n\n        /** Count toolbox hidden tools */\n        for( var tool in editor.tools ) {\n\n            if (!editor.tools[tool].displayInToolbox) {\n\n                hiddenToolsAmount ++;\n\n            }\n\n\n        }\n\n        if ( !currentTool ) {\n\n            /** Get first tool from object*/\n            for (toolToSelect in barButtons) break;\n\n        } else {\n\n            nextToolIndex = tools.indexOf(currentTool) + 1;\n\n            var toolIsLastInToolbox = nextToolIndex == tools.length - (hiddenToolsAmount - 2);\n\n            if ( toolIsLastInToolbox ) {\n\n                nextToolIndex = 0;\n\n                /** getting first displayed tool */\n                for( var tool in editor.tools ) {\n\n                    if (editor.tools[tool].displayInToolbox) {\n\n                        break;\n\n                    }\n\n                    nextToolIndex ++;\n\n                }\n\n            }\n\n            toolToSelect = tools[nextToolIndex];\n\n        }\n\n        for (var button in barButtons) barButtons[button].classList.remove('selected');\n        barButtons[toolToSelect].classList.add('selected');\n        editor.toolbar.current = toolToSelect;\n\n    };\n\n    /**\n     * Transforming selected node type into selected toolbar element type\n     * @param {event} event\n     */\n    toolbox.toolClicked = function () {\n\n        /**\n         * UNREPLACEBLE_TOOLS this types of tools are forbidden to replace even they are empty\n         */\n        var UNREPLACEBLE_TOOLS = ['image', 'link', 'list', 'instagram', 'twitter', 'embed'],\n            tool               = editor.tools[editor.toolbar.current],\n            workingNode        = editor.content.currentNode,\n            currentInputIndex  = editor.caret.inputIndex,\n            newBlockContent,\n            appendCallback,\n            blockData;\n\n        /** Make block from plugin */\n        newBlockContent = tool.render();\n\n        /** information about block */\n        blockData = {\n            block     : newBlockContent,\n            type      : tool.type,\n            stretched : false\n        };\n\n        if (\n            workingNode &&\n            UNREPLACEBLE_TOOLS.indexOf(workingNode.dataset.tool) === -1 &&\n            workingNode.textContent.trim() === ''\n        ) {\n\n            /** Replace current block */\n            editor.content.switchBlock(workingNode, newBlockContent, tool.type);\n\n        } else {\n\n            /** Insert new Block from plugin */\n            editor.content.insertBlock(blockData);\n\n            /** increase input index */\n            currentInputIndex++;\n\n        }\n\n        /** Fire tool append callback  */\n        appendCallback = tool.appendCallback;\n\n        if (appendCallback && typeof appendCallback == 'function') {\n\n            appendCallback.call(event);\n\n        }\n\n        setTimeout(function () {\n\n            /** Set caret to current block */\n            editor.caret.setToBlock(currentInputIndex);\n\n        }, 10);\n\n\n        /**\n         * Changing current Node\n         */\n        editor.content.workingNodeChanged();\n\n        /**\n         * Move toolbar when node is changed\n         */\n        editor.toolbar.move();\n\n    };\n\n    return toolbox;\n\n})({});\n\ntoolbox.init();\n\nmodule.exports = toolbox;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbox.js","/**\n * Codex Editor callbacks module\n *\n * @author Codex Team\n * @version 1.3.5\n */\nlet editor = codex.editor;\n\nvar callbacks = (function (callbacks) {\n\n    callbacks.redactorSyncTimeout = null;\n\n    callbacks.globalKeydown = function (event) {\n\n        switch (event.keyCode) {\n            case editor.core.keys.ENTER : editor.callback.enterKeyPressed(event);     break;\n        }\n\n    };\n\n    callbacks.redactorKeyDown = function (event) {\n\n        switch (event.keyCode) {\n            case editor.core.keys.TAB   : editor.callback.tabKeyPressed(event);                     break;\n            case editor.core.keys.ENTER : editor.callback.enterKeyPressedOnRedactorZone(event);     break;\n            case editor.core.keys.ESC   : editor.callback.escapeKeyPressed(event);                  break;\n            default                    : editor.callback.defaultKeyPressed(event);                 break;\n        }\n\n    };\n\n    callbacks.globalKeyup = function (event) {\n\n        switch (event.keyCode) {\n            case editor.core.keys.UP    :\n            case editor.core.keys.LEFT  :\n            case editor.core.keys.RIGHT :\n            case editor.core.keys.DOWN  : editor.callback.arrowKeyPressed(event); break;\n        }\n\n    };\n\n    callbacks.tabKeyPressed = function (event) {\n\n        if ( !editor.toolbar.opened ) {\n\n            editor.toolbar.open();\n\n        }\n\n        if (editor.toolbar.opened && !editor.toolbar.toolbox.opened) {\n\n            editor.toolbar.toolbox.open();\n\n        } else {\n\n            editor.toolbar.toolbox.leaf();\n\n        }\n\n        event.preventDefault();\n\n    };\n\n    callbacks.enterKeyPressed = function (event) {\n\n        if (editor.content.editorAreaHightlighted) {\n\n            /**\n             * it means that we lose input index, saved index before is not correct\n             * therefore we need to set caret when we insert new block\n             */\n            editor.caret.inputIndex = -1;\n\n            editor.callback.enterPressedOnBlock();\n\n        }\n\n    };\n\n    /**\n     * ENTER key handler\n     * Makes new paragraph block\n     */\n    callbacks.enterKeyPressedOnRedactorZone = function (event) {\n\n        if (event.target.contentEditable == 'true') {\n\n            /** Update input index */\n            editor.caret.saveCurrentInputIndex();\n\n        }\n\n        var currentInputIndex       = editor.caret.getCurrentInputIndex() || 0,\n            workingNode             = editor.content.currentNode,\n            tool                    = workingNode.dataset.tool,\n            isEnterPressedOnToolbar = editor.toolbar.opened &&\n                                        editor.toolbar.current &&\n                                        event.target == editor.state.inputs[currentInputIndex];\n\n        /** The list of tools which needs the default browser behaviour */\n        var enableLineBreaks = editor.tools[tool].enableLineBreaks;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n        /**\n         * When toolbar is opened, select tool instead of making new paragraph\n         */\n        if ( isEnterPressedOnToolbar ) {\n\n            event.preventDefault();\n\n            editor.toolbar.toolbox.toolClicked(event);\n\n            editor.toolbar.close();\n\n            /**\n             * Stop other listeners callback executions\n             */\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n\n            return;\n\n        }\n\n        /**\n         * Allow paragraph lineBreaks with shift enter\n         * Or if shiftkey pressed and enter and enabledLineBreaks, the let new block creation\n         */\n        if ( event.shiftKey || enableLineBreaks ) {\n\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n            return;\n\n        }\n\n        var isLastTextNode = false,\n            currentSelection = window.getSelection(),\n            currentSelectedNode = currentSelection.anchorNode,\n            caretAtTheEndOfText = editor.caret.position.atTheEnd(),\n            isTextNodeHasParentBetweenContenteditable = false;\n\n        /**\n         * Allow making new <p> in same block by SHIFT+ENTER and forbids to prevent default browser behaviour\n         */\n        if ( event.shiftKey && !enableLineBreaks ) {\n\n            editor.callback.enterPressedOnBlock(editor.content.currentBlock, event);\n            event.preventDefault();\n            return;\n\n        }\n\n        /**\n         * Workaround situation when caret at the Text node that has some wrapper Elements\n         * Split block cant handle this.\n         * We need to save default behavior\n         */\n        isTextNodeHasParentBetweenContenteditable = currentSelectedNode && currentSelectedNode.parentNode.contentEditable != 'true';\n\n        /**\n         * Split blocks when input has several nodes and caret placed in textNode\n         */\n        if (\n            currentSelectedNode.nodeType == editor.core.nodeTypes.TEXT &&\n            !isTextNodeHasParentBetweenContenteditable &&\n            !caretAtTheEndOfText\n        ) {\n\n            event.preventDefault();\n\n            editor.core.log('Splitting Text node...');\n\n            editor.content.splitBlock(currentInputIndex);\n\n            /** Show plus button when next input after split is empty*/\n            if (!editor.state.inputs[currentInputIndex + 1].textContent.trim()) {\n\n                editor.toolbar.showPlusButton();\n\n            }\n\n        } else {\n\n            var islastNode = editor.content.isLastNode(currentSelectedNode);\n\n            if ( islastNode && caretAtTheEndOfText ) {\n\n                event.preventDefault();\n                event.stopPropagation();\n                event.stopImmediatePropagation();\n\n                editor.core.log('ENTER clicked in last textNode. Create new BLOCK');\n\n                editor.content.insertBlock({\n                    type: NEW_BLOCK_TYPE,\n                    block: editor.tools[NEW_BLOCK_TYPE].render()\n                }, true);\n\n                editor.toolbar.move();\n                editor.toolbar.open();\n\n                /** Show plus button with empty block */\n                editor.toolbar.showPlusButton();\n\n            }\n\n        }\n\n        /** get all inputs after new appending block */\n        editor.ui.saveInputs();\n\n    };\n\n    callbacks.escapeKeyPressed = function (event) {\n\n        /** Close all toolbar */\n        editor.toolbar.close();\n\n        /** Close toolbox */\n        editor.toolbar.toolbox.close();\n\n        event.preventDefault();\n\n    };\n\n    callbacks.arrowKeyPressed = function (event) {\n\n        editor.content.workingNodeChanged();\n\n        /* Closing toolbar */\n        editor.toolbar.close();\n        editor.toolbar.move();\n\n    };\n\n    callbacks.defaultKeyPressed = function (event) {\n\n        editor.toolbar.close();\n\n        if (!editor.toolbar.inline.actionsOpened) {\n\n            editor.toolbar.inline.close();\n            editor.content.clearMark();\n\n        }\n\n    };\n\n    callbacks.redactorClicked = function (event) {\n\n        callbacks.detectWhenClickedOnFirstLevelBlockArea();\n\n        editor.content.workingNodeChanged(event.target);\n\n        editor.ui.saveInputs();\n\n        var selectedText = editor.toolbar.inline.getSelectionText();\n\n        /**\n         * If selection range took off, then we hide inline toolbar\n         */\n        if (selectedText.length === 0) {\n\n            editor.toolbar.inline.close();\n\n        }\n\n        /** Update current input index in memory when caret focused into existed input */\n        if (event.target.contentEditable == 'true') {\n\n            editor.caret.saveCurrentInputIndex();\n\n        }\n\n        if (editor.content.currentNode === null) {\n\n            /**\n             * If inputs in redactor does not exits, then we put input index 0 not -1\n             */\n            var indexOfLastInput = editor.state.inputs.length > 0 ? editor.state.inputs.length - 1 : 0;\n\n            /** If we have any inputs */\n            if (editor.state.inputs.length) {\n\n                /** getting firstlevel parent of input */\n                var firstLevelBlock  = editor.content.getFirstLevelBlock(editor.state.inputs[indexOfLastInput]);\n\n            }\n\n            /** If input is empty, then we set caret to the last input */\n            if (editor.state.inputs.length && editor.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == editor.settings.initialBlockPlugin) {\n\n                editor.caret.setToBlock(indexOfLastInput);\n\n            } else {\n\n                /** Create new input when caret clicked in redactors area */\n                var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n                editor.content.insertBlock({\n                    type  : NEW_BLOCK_TYPE,\n                    block : editor.tools[NEW_BLOCK_TYPE].render()\n                });\n\n                /** If there is no inputs except inserted */\n                if (editor.state.inputs.length === 1) {\n\n                    editor.caret.setToBlock(indexOfLastInput);\n\n                } else {\n\n                    /** Set caret to this appended input */\n                    editor.caret.setToNextBlock(indexOfLastInput);\n\n                }\n\n            }\n\n            /**\n             * Move toolbar to the right position and open\n             */\n            editor.toolbar.move();\n\n\n            editor.toolbar.open();\n\n        } else {\n\n            /**\n             * Move toolbar to the new position and open\n             */\n            editor.toolbar.move();\n\n            editor.toolbar.open();\n\n            /** Close all panels */\n            editor.toolbar.settings.close();\n            editor.toolbar.toolbox.close();\n\n        }\n\n\n        var inputIsEmpty = !editor.content.currentNode.textContent.trim(),\n            currentNodeType = editor.content.currentNode.dataset.tool,\n            isInitialType = currentNodeType == editor.settings.initialBlockPlugin;\n\n\n        /** Hide plus buttons */\n        editor.toolbar.hidePlusButton();\n\n        /** Mark current block */\n        editor.content.markBlock();\n\n\n        if ( isInitialType && inputIsEmpty ) {\n\n            /** Show plus button */\n            editor.toolbar.showPlusButton();\n\n        }\n\n\n    };\n\n    /**\n     * This method allows to define, is caret in contenteditable element or not.\n     * Otherwise, if we get TEXT node from range container, that will means we have input index.\n     * In this case we use default browsers behaviour (if plugin allows that) or overwritten action.\n     * Therefore, to be sure that we've clicked first-level block area, we should have currentNode, which always\n     * specifies to the first-level block. Other cases we just ignore.\n     */\n    callbacks.detectWhenClickedOnFirstLevelBlockArea = function () {\n\n        var selection  = window.getSelection(),\n            anchorNode = selection.anchorNode,\n            flag = false;\n\n        if (selection.rangeCount == 0) {\n\n            editor.content.editorAreaHightlighted = true;\n\n        } else {\n\n            if (!editor.core.isDomNode(anchorNode)) {\n\n                anchorNode = anchorNode.parentNode;\n\n            }\n\n            /** Already founded, without loop */\n            if (anchorNode.contentEditable == 'true') {\n\n                flag = true;\n\n            }\n\n            while (anchorNode.contentEditable != 'true') {\n\n                anchorNode = anchorNode.parentNode;\n\n                if (anchorNode.contentEditable == 'true') {\n\n                    flag = true;\n\n                }\n\n                if (anchorNode == document.body) {\n\n                    break;\n\n                }\n\n            }\n\n            /** If editable element founded, flag is \"TRUE\", Therefore we return \"FALSE\" */\n            editor.content.editorAreaHightlighted = flag ? false : true;\n\n        }\n\n    };\n\n    /**\n     * Toolbar button click handler\n     * @param this - cursor to the button\n     */\n    callbacks.toolbarButtonClicked = function (event) {\n\n        var button = this;\n\n        editor.toolbar.current = button.dataset.type;\n\n        editor.toolbar.toolbox.toolClicked(event);\n        editor.toolbar.close();\n\n    };\n\n    callbacks.redactorInputEvent = function (event) {\n\n        /**\n         * Clear previous sync-timeout\n         */\n        if (this.redactorSyncTimeout) {\n\n            clearTimeout(this.redactorSyncTimeout);\n\n        }\n\n        /**\n         * Start waiting to input finish and sync redactor\n         */\n        this.redactorSyncTimeout = setTimeout(function () {\n\n            editor.content.sync();\n\n        }, 500);\n\n    };\n\n    /** Show or Hide toolbox when plus button is clicked */\n    callbacks.plusButtonClicked = function () {\n\n        if (!editor.nodes.toolbox.classList.contains('opened')) {\n\n            editor.toolbar.toolbox.open();\n\n        } else {\n\n            editor.toolbar.toolbox.close();\n\n        }\n\n    };\n\n    /**\n     * Block handlers for KeyDown events\n     */\n    callbacks.blockKeydown = function (event, block) {\n\n        switch (event.keyCode) {\n\n            case editor.core.keys.DOWN:\n            case editor.core.keys.RIGHT:\n                editor.callback.blockRightOrDownArrowPressed(block);\n                break;\n\n            case editor.core.keys.BACKSPACE:\n                editor.callback.backspacePressed(block);\n                break;\n\n            case editor.core.keys.UP:\n            case editor.core.keys.LEFT:\n                editor.callback.blockLeftOrUpArrowPressed(block);\n                break;\n\n        }\n\n    };\n\n    /**\n     * RIGHT or DOWN keydowns on block\n     */\n    callbacks.blockRightOrDownArrowPressed = function (block) {\n\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode) {\n\n            return false;\n\n        }\n\n        /** Looking for closest (parent) contentEditable element of focused node */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n\n            editor.caret.setToNextBlock(editableElementIndex);\n            return;\n\n        }\n\n        /**\n         * Do nothing when caret doesn not reaches the end of last child\n         */\n        var caretInLastChild    = false,\n            caretAtTheEndOfText = false;\n\n        var lastChild,\n            deepestTextnode;\n\n        lastChild = focusedNode.childNodes[focusedNode.childNodes.length - 1 ];\n\n        if (editor.core.isDomNode(lastChild)) {\n\n            deepestTextnode = editor.content.getDeepestTextNodeFromPosition(lastChild, lastChild.childNodes.length);\n\n        } else {\n\n            deepestTextnode = lastChild;\n\n        }\n\n        caretInLastChild = selection.anchorNode == deepestTextnode;\n        caretAtTheEndOfText = deepestTextnode.length == selection.anchorOffset;\n\n        if ( !caretInLastChild  || !caretAtTheEndOfText ) {\n\n            editor.core.log('arrow [down|right] : caret does not reached the end');\n            return false;\n\n        }\n\n        editor.caret.setToNextBlock(editableElementIndex);\n\n    };\n\n    /**\n     * LEFT or UP keydowns on block\n     */\n    callbacks.blockLeftOrUpArrowPressed = function (block) {\n\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode) {\n\n            return false;\n\n        }\n\n        /**\n         * LEFT or UP not at the beginning\n         */\n        if ( selection.anchorOffset !== 0) {\n\n            return false;\n\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        /**\n         * Do nothing if caret is not at the beginning of first child\n         */\n        var caretInFirstChild   = false,\n            caretAtTheBeginning = false;\n\n        var firstChild,\n            deepestTextnode;\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n\n            editor.caret.setToPreviousBlock(editableElementIndex);\n            return;\n\n        }\n\n        firstChild = focusedNode.childNodes[0];\n\n        if (editor.core.isDomNode(firstChild)) {\n\n            deepestTextnode = editor.content.getDeepestTextNodeFromPosition(firstChild, 0);\n\n        } else {\n\n            deepestTextnode = firstChild;\n\n        }\n\n        caretInFirstChild   = selection.anchorNode == deepestTextnode;\n        caretAtTheBeginning = selection.anchorOffset === 0;\n\n        if ( caretInFirstChild && caretAtTheBeginning ) {\n\n            editor.caret.setToPreviousBlock(editableElementIndex);\n\n        }\n\n    };\n\n    /**\n     * Callback for enter key pressing in first-level block area\n     */\n    callbacks.enterPressedOnBlock = function (event) {\n\n        var NEW_BLOCK_TYPE  = editor.settings.initialBlockPlugin;\n\n        editor.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : editor.tools[NEW_BLOCK_TYPE].render()\n        }, true );\n\n        editor.toolbar.move();\n        editor.toolbar.open();\n\n    };\n\n    callbacks.backspacePressed = function (block) {\n\n        var currentInputIndex = editor.caret.getCurrentInputIndex(),\n            range,\n            selectionLength,\n            firstLevelBlocksCount;\n\n        if (block.textContent.trim()) {\n\n            range           = editor.content.getRange();\n            selectionLength = range.endOffset - range.startOffset;\n\n\n            if (editor.caret.position.atStart() && !selectionLength && editor.state.inputs[currentInputIndex - 1]) {\n\n                editor.content.mergeBlocks(currentInputIndex);\n\n            } else {\n\n                return;\n\n            }\n\n        }\n\n        if (!selectionLength) {\n\n            block.remove();\n\n        }\n\n\n        firstLevelBlocksCount = editor.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            editor.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            editor.ui.addInitialBlock();\n\n            /** Updating inputs state after deleting last block */\n            editor.ui.saveInputs();\n\n            /** Set to current appended block */\n            setTimeout(function () {\n\n                editor.caret.setToPreviousBlock(1);\n\n            }, 10);\n\n        } else {\n\n            if (editor.caret.inputIndex !== 0) {\n\n                /** Target block is not first */\n                editor.caret.setToPreviousBlock(editor.caret.inputIndex);\n\n            } else {\n\n                /** If we try to delete first block */\n                editor.caret.setToNextBlock(editor.caret.inputIndex);\n\n            }\n\n        }\n\n        editor.toolbar.move();\n\n        if (!editor.toolbar.opened) {\n\n            editor.toolbar.open();\n\n        }\n\n        /** Updating inputs state */\n        editor.ui.saveInputs();\n\n        /** Prevent default browser behaviour */\n        event.preventDefault();\n\n    };\n\n    /**\n     * @deprecated\n     *\n     * @param event\n     */\n    callbacks.blockPaste = function (event) {\n\n        var currentInputIndex = editor.caret.getCurrentInputIndex(),\n            node = editor.state.inputs[currentInputIndex];\n\n        setTimeout(function () {\n\n            editor.content.sanitize(node);\n\n            event.preventDefault();\n\n        }, 10);\n\n        event.stopImmediatePropagation();\n\n    };\n\n    /**\n     * This method is used to observe pasted dirty data.\n     *\n     * Mutation handlers send to separate observers each mutation (added, changed and so on), which will be\n     * passed from handler that sanitizes and replaces data.\n     *\n     * Probably won't be used\n     *\n     * @deprecated\n     *\n     * @param event\n     * @private\n     */\n    callbacks._blockPasteCallback = function (event) {\n\n        var currentInputIndex = editor.caret.getCurrentInputIndex();\n\n        /**\n         * create an observer instance\n         */\n        var observer = new MutationObserver(editor.callback.handleMutationsOnPaste);\n\n        /**\n         * configuration of the observer:\n         */\n        var config = {\n            attributes: true,\n            childList: false,\n            characterData: false,\n            subtree : true\n        };\n\n        // pass in the target node, as well as the observer options\n        observer.observe(editor.state.inputs[currentInputIndex], config);\n\n    };\n\n    /**\n     * This method prevents default behaviour.\n     *\n     * We get from clipboard pasted data, sanitize, make a fragment that contains of this sanitized nodes.\n     * Firstly, we need to memorize the caret position. We can do that by getting the range of selection.\n     * After all, we insert clear fragment into caret placed position. Then, we should move the caret to the last node\n     *\n     * @param event\n     */\n    callbacks.blockPasteCallback = function (event) {\n\n        /** Prevent default behaviour */\n        event.preventDefault();\n\n        /** get html pasted data - dirty data */\n        var data = event.clipboardData.getData('text/html') || event.clipboardData.getData('text/plain');\n\n        /** Temporary DIV that is used to work with childs as arrays item */\n        var div     = editor.draw.node('DIV', '', {}),\n            cleaner = new editor.sanitizer.init(editor.sanitizer.Config.BASIC),\n            cleanData,\n            fragment;\n\n        /** Create fragment, that we paste to range after proccesing */\n        fragment = document.createDocumentFragment();\n\n        cleanData = cleaner.clean(data);\n\n        div.innerHTML = cleanData;\n\n        var node, lastNode;\n\n        /**\n         * and fill in fragment\n         */\n        while (( node = div.firstChild) ) {\n\n            lastNode = fragment.appendChild(node);\n\n        }\n\n        /**\n         * work with selection and range\n         */\n        var selection, range;\n\n        selection = window.getSelection();\n\n        range = selection.getRangeAt(0);\n        range.deleteContents();\n\n        range.insertNode(fragment);\n        // document.execCommand('insertParagraph', false, \"<p>\");\n\n        /** Preserve the selection */\n        if (lastNode) {\n\n            range = range.cloneRange();\n            range.setStartAfter(lastNode);\n            range.collapse(true);\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n        }\n\n    };\n\n    /**\n     * Sends all mutations to paste handler\n     */\n    callbacks.handleMutationsOnPaste = function (mutations) {\n\n        var self = this;\n\n        /**\n         * Calling function with context of this function.\n         * Also, we should sanitize pasted or changed data one time and ignore\n         * changings which makes sanitize method.\n         * For that, we need to send Context, MutationObserver.__proto__ that contains\n         * observer disconnect method.\n         */\n        mutations.forEach(function (mutation) {\n\n            editor.content.paste.call(self, mutation);\n\n        });\n\n    };\n\n    /**\n     * Clicks on block settings button\n     */\n    callbacks.showSettingsButtonClicked = function () {\n\n        /**\n         * Get type of current block\n         * It uses to append settings from tool.settings property.\n         * ...\n         * Type is stored in data-type attribute on block\n         */\n        var currentToolType = editor.content.currentNode.dataset.tool;\n\n        editor.toolbar.settings.toggle(currentToolType);\n\n        /** Close toolbox when settings button is active */\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return callbacks;\n\n})({});\n\nmodule.exports  = callbacks;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/callbacks.js","/**\n * Codex Editor Draw module\n *\n * @author Codex Team\n * @version 1.0.\n */\n\nvar draw = (function (draw) {\n\n    /**\n     * Base editor wrapper\n     */\n    draw.wrapper = function () {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className += 'codex-editor';\n\n        return wrapper;\n\n    };\n\n    /**\n     * Content-editable holder\n     */\n    draw.redactor = function () {\n\n        var redactor = document.createElement('div');\n\n        redactor.className += 'ce-redactor';\n\n        return redactor;\n\n    };\n\n    draw.ceBlock = function () {\n\n        var block = document.createElement('DIV');\n\n        block.className += 'ce_block';\n\n        return block;\n\n    };\n\n    /**\n     * Empty toolbar with toggler\n     */\n    draw.toolbar = function () {\n\n        var bar = document.createElement('div');\n\n        bar.className += 'ce-toolbar';\n\n        return bar;\n\n    };\n\n    draw.toolbarContent = function () {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.classList.add('ce-toolbar__content');\n\n        return wrapper;\n\n    };\n\n    /**\n     * Inline toolbar\n     */\n    draw.inlineToolbar = function () {\n\n        var bar = document.createElement('DIV');\n\n        bar.className += 'ce-toolbar-inline';\n\n        return bar;\n\n    };\n\n    /**\n     * Wrapper for inline toobar buttons\n     */\n    draw.inlineToolbarButtons = function () {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__buttons';\n\n        return wrapper;\n\n    };\n\n    /**\n     * For some actions\n     */\n    draw.inlineToolbarActions = function () {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__actions';\n\n        return wrapper;\n\n    };\n\n    draw.inputForLink = function () {\n\n        var input = document.createElement('INPUT');\n\n        input.type        = 'input';\n        input.className  += 'inputForLink';\n        input.placeholder = 'Вставьте ссылку ...';\n        input.setAttribute('form', 'defaultForm');\n\n        input.setAttribute('autofocus', 'autofocus');\n\n        return input;\n\n    };\n\n    /**\n     * Block with notifications\n     */\n    draw.alertsHolder = function () {\n\n        var block = document.createElement('div');\n\n        block.classList.add('ce_notifications-block');\n\n        return block;\n\n    };\n\n    /**\n     * @todo Desc\n     */\n    draw.blockButtons = function () {\n\n        var block = document.createElement('div');\n\n        block.className += 'ce-toolbar__actions';\n\n        return block;\n\n    };\n\n    /**\n     * Block settings panel\n     */\n    draw.blockSettings = function () {\n\n        var settings = document.createElement('div');\n\n        settings.className += 'ce-settings';\n\n        return settings;\n\n    };\n\n    draw.defaultSettings = function () {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_default');\n\n        return div;\n\n    };\n\n    draw.pluginsSettings = function () {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_plugin');\n\n        return div;\n\n    };\n\n    draw.plusButton = function () {\n\n        var button = document.createElement('span');\n\n        button.className = 'ce-toolbar__plus';\n        // button.innerHTML = '<i class=\"ce-icon-plus\"></i>';\n\n        return button;\n\n    };\n\n    /**\n     * Settings button in toolbar\n     */\n    draw.settingsButton = function () {\n\n        var toggler = document.createElement('span');\n\n        toggler.className = 'ce-toolbar__settings-btn';\n\n        /** Toggler button*/\n        toggler.innerHTML = '<i class=\"ce-icon-cog\"></i>';\n\n        return toggler;\n\n    };\n\n    /**\n     * Redactor tools wrapper\n     */\n\n    draw.toolbox = function () {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className = 'ce-toolbar__tools';\n\n        return wrapper;\n\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tool buttons for toolbox\n     *\n     * @param {String} type\n     * @param {String} classname\n     * @returns {Element}\n     */\n    draw.toolbarButton = function (type, classname) {\n\n        var button     = document.createElement('li'),\n            tool_icon  = document.createElement('i'),\n            tool_title = document.createElement('span');\n\n        button.dataset.type = type;\n        button.setAttribute('title', type);\n\n        tool_icon.classList.add(classname);\n        tool_title.classList.add('ce_toolbar_tools--title');\n\n\n        button.appendChild(tool_icon);\n        button.appendChild(tool_title);\n\n        return button;\n\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tools for inline toolbar\n     *\n     * @param {String} type\n     * @param {String} classname\n     */\n    draw.toolbarButtonInline = function (type, classname) {\n\n        var button     = document.createElement('BUTTON'),\n            tool_icon  = document.createElement('I');\n\n        button.type = 'button';\n        button.dataset.type = type;\n        tool_icon.classList.add(classname);\n\n        button.appendChild(tool_icon);\n\n        return button;\n\n    };\n\n    /**\n     * Redactor block\n     */\n    draw.block = function (tagName, content) {\n\n        var node = document.createElement(tagName);\n\n        node.innerHTML = content || '';\n\n        return node;\n\n    };\n\n    /**\n     * Creates Node with passed tagName and className\n     * @param {string}  tagName\n     * @param {string} className\n     * @param {object} properties - allow to assign properties\n     */\n    draw.node = function ( tagName, className, properties ) {\n\n        var el = document.createElement( tagName );\n\n        if ( className ) el.className = className;\n\n        if ( properties ) {\n\n            for (var name in properties) {\n\n                el[name] = properties[name];\n\n            }\n\n        }\n\n        return el;\n\n    };\n\n    draw.pluginsRender = function (type, content) {\n\n        return {\n            type  : type,\n            block : cEditor.tools[type].render({\n                text : content\n            })\n        };\n\n    };\n\n    return draw;\n\n})({});\n\nmodule.exports = draw;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/draw.js","/**\n * Codex Editor Caret Module\n *\n * @author Codex Team\n * @version 1.0\n */\nlet editor = codex.editor;\n\nvar caret = (function (caret) {\n\n    /**\n     * @var {int} InputIndex - editable element in DOM\n     */\n    caret.inputIndex = null;\n\n    /**\n     * @var {int} offset - caret position in a text node.\n     */\n    caret.offset = null;\n\n    /**\n     * @var {int} focusedNodeIndex - we get index of child node from first-level block\n     */\n    caret.focusedNodeIndex = null;\n\n    /**\n     * Creates Document Range and sets caret to the element.\n     * @protected\n     * @uses caret.save — if you need to save caret position\n     * @param {Element} el - Changed Node.\n     */\n    caret.set = function ( el, index, offset) {\n\n        offset = offset || this.offset || 0;\n        index  = index  || this.focusedNodeIndex || 0;\n\n        var childs = el.childNodes,\n            nodeToSet;\n\n        if ( childs.length === 0 ) {\n\n            nodeToSet = el;\n\n        } else {\n\n            nodeToSet = childs[index];\n\n        }\n\n        /** If Element is INPUT */\n        if (el.tagName == 'INPUT') {\n\n            el.focus();\n            return;\n\n        }\n\n        if (editor.core.isDomNode(nodeToSet)) {\n\n            nodeToSet = editor.content.getDeepestTextNodeFromPosition(nodeToSet, nodeToSet.childNodes.length);\n\n        }\n\n        var range     = document.createRange(),\n            selection = window.getSelection();\n\n        setTimeout(function () {\n\n            range.setStart(nodeToSet, offset);\n            range.setEnd(nodeToSet, offset);\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            editor.caret.saveCurrentInputIndex();\n\n        }, 20);\n\n    };\n\n    /**\n     * @protected\n     * Updates index of input and saves it in caret object\n     */\n    caret.saveCurrentInputIndex = function () {\n\n        /** Index of Input that we paste sanitized content */\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        if (!focusedNode) {\n\n            return;\n\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        this.inputIndex = editableElementIndex;\n\n    };\n\n    /**\n     * Returns current input index (caret object)\n     */\n    caret.getCurrentInputIndex = function () {\n\n        return this.inputIndex;\n\n    };\n\n    /**\n     * @param {int} index - index of first-level block after that we set caret into next input\n     */\n    caret.setToNextBlock = function (index) {\n\n        var inputs = editor.state.inputs,\n            nextInput = inputs[index + 1];\n\n        if (!nextInput) {\n\n            editor.core.log('We are reached the end');\n            return;\n\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!nextInput.childNodes.length) {\n\n            var emptyTextElement = document.createTextNode('');\n\n            nextInput.appendChild(emptyTextElement);\n\n        }\n\n        editor.caret.inputIndex = index + 1;\n        editor.caret.set(nextInput, 0, 0);\n        editor.content.workingNodeChanged(nextInput);\n\n    };\n\n    /**\n     * @param {int} index - index of target input.\n     * Sets caret to input with this index\n     */\n    caret.setToBlock = function (index) {\n\n        var inputs = editor.state.inputs,\n            targetInput = inputs[index];\n\n        console.assert( targetInput, 'caret.setToBlock: target input does not exists');\n\n        if ( !targetInput ) {\n\n            return;\n\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!targetInput.childNodes.length) {\n\n            var emptyTextElement = document.createTextNode('');\n\n            targetInput.appendChild(emptyTextElement);\n\n        }\n\n        editor.caret.inputIndex = index;\n        editor.caret.set(targetInput, 0, 0);\n        editor.content.workingNodeChanged(targetInput);\n\n    };\n\n    /**\n     * @param {int} index - index of input\n     */\n    caret.setToPreviousBlock = function (index) {\n\n        index = index || 0;\n\n        var inputs = editor.state.inputs,\n            previousInput = inputs[index - 1],\n            lastChildNode,\n            lengthOfLastChildNode,\n            emptyTextElement;\n\n\n        if (!previousInput) {\n\n            editor.core.log('We are reached first node');\n            return;\n\n        }\n\n        lastChildNode = editor.content.getDeepestTextNodeFromPosition(previousInput, previousInput.childNodes.length);\n        lengthOfLastChildNode = lastChildNode.length;\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!previousInput.childNodes.length) {\n\n            emptyTextElement = document.createTextNode('');\n            previousInput.appendChild(emptyTextElement);\n\n        }\n        editor.caret.inputIndex = index - 1;\n        editor.caret.set(previousInput, previousInput.childNodes.length - 1, lengthOfLastChildNode);\n        editor.content.workingNodeChanged(inputs[index - 1]);\n\n    };\n\n    caret.position = {\n\n        atStart : function () {\n\n            var selection       = window.getSelection(),\n                anchorOffset    = selection.anchorOffset,\n                anchorNode      = selection.anchorNode,\n                firstLevelBlock = editor.content.getFirstLevelBlock(anchorNode),\n                pluginsRender   = firstLevelBlock.childNodes[0];\n\n            if (!editor.core.isDomNode(anchorNode)) {\n\n                anchorNode = anchorNode.parentNode;\n\n            }\n\n            var isFirstNode  = anchorNode === pluginsRender.childNodes[0],\n                isOffsetZero = anchorOffset === 0;\n\n            return isFirstNode && isOffsetZero;\n\n        },\n\n        atTheEnd : function () {\n\n            var selection    = window.getSelection(),\n                anchorOffset = selection.anchorOffset,\n                anchorNode   = selection.anchorNode;\n\n            /** Caret is at the end of input */\n            return !anchorNode || !anchorNode.length || anchorOffset === anchorNode.length;\n\n        }\n    };\n\n    return caret;\n\n})({});\n\nmodule.exports = caret;\n\n\n// WEBPACK FOOTER //\n// ./modules/caret.js","/**\n * Codex Editor Notification Module\n *\n * @author Codex Team\n * @version 1.0\n */\nlet editor = codex.editor;\n\nvar notifications = (function (notifications) {\n\n    /**\n     * Error notificator. Shows block with message\n     * @protected\n     */\n    notifications.errorThrown = function (errorMsg, event) {\n\n        editor.notifications.send('This action is not available currently', event.type, false);\n\n    };\n\n    /**\n     * Appends notification with different types\n     * @param message {string} - Error or alert message\n     * @param type {string} - Type of message notification. Ex: Error, Warning, Danger ...\n     * @param append {boolean} - can be True or False when notification should be inserted after\n     */\n    notifications.send = function (message, type, append) {\n\n        var notification = editor.draw.block('div');\n\n        notification.textContent = message;\n        notification.classList.add('ce_notification-item', 'ce_notification-' + type, 'flipInX');\n\n        if (!append) {\n\n            editor.nodes.notifications.innerHTML = '';\n\n        }\n\n        editor.nodes.notifications.appendChild(notification);\n\n        setTimeout(function () {\n\n            notification.remove();\n\n        }, 3000);\n\n    };\n\n    return notifications;\n\n})({});\n\nmodule.exports = notifications;\n\n\n// WEBPACK FOOTER //\n// ./modules/notifications.js","/**\n * Codex Editor Parser Module\n *\n * @author Codex Team\n * @version 1.1\n */\nlet editor = codex.editor;\n\nvar parser = (function (parser) {\n\n    /** inserting text */\n    parser.insertPastedContent = function (blockType, tag) {\n\n        editor.content.insertBlock({\n            type :  blockType.type,\n            block : blockType.render({\n                text : tag.innerHTML\n            })\n        });\n\n    };\n\n    /**\n     * Check DOM node for display style: separated block or child-view\n     */\n    parser.isFirstLevelBlock = function (node) {\n\n        return node.nodeType == cEditor.core.nodeTypes.TAG &&\n            node.classList.contains(cEditor.ui.className.BLOCK_CLASSNAME);\n\n    };\n\n    return parser;\n\n})({});\n\nmodule.exports = parser;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/parser.js","/**\n * Codex Sanitizer\n */\n\nvar janitor = require('html-janitor');\n\nvar sanitizer = (function (sanitizer) {\n\n    /**\n     * Basic config\n     */\n    var Config = {\n\n        BASIC : {\n\n            tags: {\n                p: {},\n                a: {\n                    href: true,\n                    target: '_blank',\n                    rel: 'nofollow'\n                },\n                i: {},\n                b: {},\n                strong: {},\n                em: {},\n                span: {}\n            }\n        }\n    };\n\n    sanitizer.Config = Config;\n\n    sanitizer.init = janitor;\n\n    return sanitizer;\n\n})({});\n\nmodule.exports = sanitizer;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/sanitizer.js","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-janitor/src/html-janitor.js\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}