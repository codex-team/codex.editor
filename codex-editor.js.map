{"version":3,"sources":["webpack:///webpack/bootstrap ff35899cc29e54b2b6c0","webpack:///./index.js","webpack:///./editor.js","webpack:///./modules/core.js","webpack:///./modules/ui.js","webpack:///./modules/transport.js","webpack:///./modules/renderer.js","webpack:///./modules/saver.js","webpack:///./modules/content.js","webpack:///./~/html-janitor/src/html-janitor.js","webpack:///./modules/toolbar/toolbar.js","webpack:///./modules/toolbar/settings.js","webpack:///./modules/toolbar/inline.js","webpack:///./modules/toolbar/toolbox.js","webpack:///./modules/tools.js","webpack:///./modules/callbacks.js","webpack:///./modules/draw.js","webpack:///./modules/caret.js","webpack:///./modules/notifications.js","webpack:///./modules/parser.js"],"names":["editor","require","module","exports","codex","init","core","ui","transport","renderer","saver","content","toolbar","tools","callback","draw","caret","notifications","parser","version","settings","textareaId","uploadImagesUrl","initialBlockPlugin","nodes","textarea","wrapper","inlineToolbar","buttons","actions","toolbox","plusButton","showSettingsButton","showTrashButton","blockSettings","pluginSettings","defaultSettings","toolbarButtons","redactor","state","jsonOutput","blocks","inputs","start","userSettings","prepare","then","make","addTools","bindEvents","preparePlugins","makeBlocksFromData","saveInputs","catch","error","log","Promise","resolve","reject","data","document","getElementById","undefined","Error","msg","type","arg","window","console","e","insertAfter","target","element","parentNode","insertBefore","nextSibling","nodeTypes","TAG","TEXT","COMMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","el","nodeType","ajax","url","XMLHTTP","XMLHttpRequest","ActiveXObject","success_function","params","obj","async","success","test","encodeURIComponent","withCredentials","beforeSend","call","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","importScript","scriptPath","instanceName","script","createElement","src","defer","id","head","appendChild","className","BLOCK_CLASSNAME","BLOCK_CONTENT","BLOCK_STRETCHED","BLOCK_HIGHLIGHTED","BLOCK_IN_FEED_MODE","SETTINGS_ITEM","toolbarContent","ceBlock","blockButtons","alertsHolder","body","settingsButton","makeRemoveBlockButton","pluginsSettings","makeInlineToolbar","addDefaultSettings","container","inlineToolbarButtons","inlineToolbarActions","tool","tool_button","name","displayInToolbox","iconClassname","toolbarButton","addInlineToolbarTools","bold","icon","command","italic","underline","link","toolButton","toolbarButtonInline","setInlineToolbarButtonBehaviour","addEventListener","errorMsg","lineNumber","errorThrown","event","globalKeydown","redactorKeyDown","globalKeyup","redactorClicked","plusButtonClicked","showSettingsButtonClicked","redactorInputEvent","button","toolbarButtonClicked","addBlockHandlers","block","blockKeydown","blockPasteCallback","inline","show","elements","querySelectorAll","addInitialBlock","initialBlockType","initialBlock","render","setAttribute","insertBlock","workingNodeChanged","toolClicked","input","arguments","fileSelected","clearInput","files","filesLength","length","formdData","FormData","file","i","append","selectAndUpload","args","click","xhr","onload","items","appendBlocks","nodeSequence","index","appendNodeAtIndex","getNodeAsync","createBlockFromData","blockData","blocksList","pluginName","cover","stretched","isStretched","saveBlocks","html","innerHTML","childNodes","makeQueue","queue","getBlockData","makeFormDataFromBlocks","dataset","save","blockContent","pluginsContent","savedData","output","classList","contains","push","janitor","Config","tags","p","a","href","rel","b","strong","em","span","currentNode","editorAreaHightlighted","sync","getNodeFocused","selection","getSelection","focused","anchorNode","focusNode","parentElement","isFirstLevelBlock","parent","markBlock","add","clearMark","remove","getFirstLevelBlock","node","targetNode","replaceBlock","function_name","targetBlock","newBlock","replaceChild","needPlaceCaret","workingBlock","newBlockContent","blockType","composeNewBlock","currentInputIndex","getCurrentInputIndex","editableElement","querySelector","emptyText","createTextNode","set","move","showPlusButton","setTimeout","setToNextBlock","switchBlock","blockToReplace","newBlockComposed","getDeepestTextNodeFromPosition","position","blockChilds","text","textContent","trim","removeChild","looking_from_start","getRange","getRangeAt","splitBlock","inputIndex","anchorNodeText","caretOffset","anchorOffset","textBeforeCaret","textNodeBeforeCaret","textAfterCaret","textNodeAfterCaret","currentBlock","substring","previousChilds","nextChilds","reachedCurrent","child","previousChildsLength","nextChildsLength","newNode","NEW_BLOCK_TYPE","mergeBlocks","targetInputIndex","targetInput","currentInputContent","paste","mutation","workingNode","allowedToPaste","sanitize","addedNodes","pasteTextContent","textNode","disconnect","sanitizer","clear","clean","outerHTML","div","replaceWith","defaultToolbarHeight","defaultOffset","opened","current","close","toggle","hidePlusButton","toolbarHeight","clientHeight","newYCoordinate","offsetTop","style","transform","Math","floor","hideRemoveActions","setting","toolType","feedModeToggler","makeFeedModeToggler","isFeedModeActivated","updateFeedMode","removeBlockWrapper","settingButton","actionWrapper","confirmAction","cancelAction","removeButtonClicked","confirmRemovingRequest","cancelRemovingRequest","action","showRemoveActions","firstLevelBlocksCount","buttonsOpened","actionsOpened","wrappersOffset","storedSelection","plugin","showInlineToolbar","selectedText","getSelectionText","showButtons","getWrappersOffset","coords","getSelectionCoords","newCoordinateX","newCoordinateY","offsetHeight","x","left","y","scrollY","top","closeButtons","closeAction","createLinkAction","defaultToolAction","forEach","hightlight","offset","getOffset","_x","_y","isNaN","offsetLeft","clientLeft","clientTop","offsetParent","sel","range","createRange","collapse","boundingLeft","boundingTop","rangeCount","cloneRange","getClientRects","rect","toString","showActions","isActive","isLinkActive","editable","saveSelection","restoreSelection","inputForLink","focus","preventDefault","keyCode","setAnchor","value","stopImmediatePropagation","clearRange","dataType","execCommand","containerEl","preSelectionRange","selectNodeContents","setEnd","startContainer","startOffset","end","savedSel","charIndex","setStart","nodeStack","foundStart","stop","nextCharIndex","pop","removeAllRanges","addRange","queryCommandState","setButtonHighlighted","removeButtonsHighLight","tag","tagName","leaf","currentTool","Object","barButtons","nextToolIndex","hiddenToolsAmount","toolToSelect","indexOf","toolIsLastInToolbox","UNREPLACEBLE_TOOLS","appendCallback","setToBlock","callbacks","redactorSyncTimeout","enterKeyPressed","tabKeyPressed","enterKeyPressedOnRedactorZone","escapeKeyPressed","defaultKeyPressed","arrowKeyPressed","enterPressedOnBlock","contentEditable","saveCurrentInputIndex","isEnterPressedOnToolbar","enableLineBreaks","stopPropagation","shiftKey","isLastTextNode","currentSelection","currentSelectedNode","caretAtTheEndOfText","atTheEnd","isTextNodeHasParentBetweenContenteditable","detectWhenClickedOnFirstLevelBlockArea","indexOfLastInput","firstLevelBlock","inputIsEmpty","currentNodeType","flag","clearTimeout","blockRightOrDownArrowPressed","backspacePressed","blockLeftOrUpArrowPressed","focusedNode","focusedNodeHolder","editableElementIndex","caretInLastChild","lastChild","deepestTextnode","caretInFirstChild","caretAtTheBeginning","firstChild","setToPreviousBlock","selectionLength","endOffset","atStart","blockPaste","observer","MutationObserver","handleMutationsOnPaste","config","attributes","childList","characterData","subtree","observe","mutations","self","currentToolType","bar","placeholder","toggler","classname","tool_icon","tool_title","properties","pluginsRender","cEditor","focusedNodeIndex","childs","nodeToSet","nextInput","emptyTextElement","assert","previousInput","lastChildNode","lengthOfLastChildNode","isFirstNode","isOffsetZero","message","notification","insertPastedContent"],"mappings":"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","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ff35899cc29e54b2b6c0","/**\n *\n */\n\n'use strict';\n\nvar editor = require('./editor');\nmodule.exports = editor;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/**\n *\n * Codex Editor\n *\n * @author Codex Team\n * @version 1.2.5\n */\n\nvar codex = (function(codex){\n\n    var init = function() {\n\n        codex.core          = require('./modules/core');\n        codex.ui            = require('./modules/ui');\n        codex.transport     = require('./modules/transport');\n        codex.renderer      = require('./modules/renderer');\n        codex.saver         = require('./modules/saver');\n        codex.content       = require('./modules/content');\n        codex.toolbar       = require('./modules/toolbar/toolbar');\n        codex.tools         = require('./modules/tools');\n        codex.callback      = require('./modules/callbacks');\n        codex.draw          = require('./modules/draw');\n        codex.caret         = require('./modules/caret');\n        codex.notifications = require('./modules/notifications');\n        codex.parser        = require('./modules/parser');\n    };\n\n    codex.version = VERSION;\n\n    /**\n     * @public\n     *\n     * holds initial settings\n     */\n    codex.settings = {\n        tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\n        textareaId: 'codex-editor',\n        uploadImagesUrl: '/editor/transport/',\n\n        // Type of block showing on empty editor\n        initialBlockPlugin: \"paragraph\"\n    };\n\n    /**\n     * public\n     *\n     * Static nodes\n     */\n    codex.nodes = {\n        textarea          : null,\n        wrapper           : null,\n        toolbar           : null,\n        inlineToolbar     : {\n            wrapper : null,\n            buttons : null,\n            actions : null\n        },\n        toolbox           : null,\n        notifications     : null,\n        plusButton        : null,\n        showSettingsButton: null,\n        showTrashButton   : null,\n        blockSettings     : null,\n        pluginSettings    : null,\n        defaultSettings   : null,\n        toolbarButtons    : {}, // { type : DomEl, ... }\n        redactor          : null\n    };\n\n    /**\n     * @public\n     *\n     * Output state\n     */\n    codex.state = {\n        jsonOutput: [],\n        blocks    : [],\n        inputs    : []\n    };\n\n    /**\n     * Initialization\n     * @uses Promise cEditor.core.prepare\n     * @param {} userSettings are :\n     *          - tools [],\n     *          - textareaId String\n     *          ...\n     *\n     * Load user defined tools\n     * Tools must contain this important objects :\n     *  @param {String} type - this is a type of plugin. It can be used as plugin name\n     *  @param {String} iconClassname - this a icon in toolbar\n     *  @param {Object} make - what should plugin do, when it is clicked\n     *  @param {Object} appendCallback - callback after clicking\n     *  @param {Element} settings - what settings does it have\n     *  @param {Object} render - plugin get JSON, and should return HTML\n     *  @param {Object} save - plugin gets HTML content, returns JSON\n     *  @param {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n     *  @param {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n     *\n     * @example\n     *   -  type             : 'header',\n     *   -  iconClassname    : 'ce-icon-header',\n     *   -  make             : headerTool.make,\n     *   -  appendCallback   : headerTool.appendCallback,\n     *   -  settings         : headerTool.makeSettings(),\n     *   -  render           : headerTool.render,\n     *   -  save             : headerTool.save,\n     *   -  displayInToolbox : true,\n     *   -  enableLineBreaks : false\n     */\n    codex.start = function (userSettings) {\n\n        init();\n\n        this.core.prepare(userSettings)\n\n        // If all ok, make UI, bind events and parse initial-content\n            .then(this.ui.make)\n            .then(this.ui.addTools)\n            .then(this.ui.bindEvents)\n            .then(this.ui.preparePlugins)\n            .then(this.transport.prepare)\n            .then(this.renderer.makeBlocksFromData)\n            .then(this.ui.saveInputs)\n            .catch(function (error) {\n                codex.core.log('Initialization failed with error: %o', 'warn', error);\n            });\n\n    };\n\n    return codex;\n\n})({});\n\nmodule.exports = codex;\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./editor.js","/**\n * Codex Editor Core\n *\n * @author Codex Team\n * @version 1.1.2\n */\n\nvar core = (function(core) {\n\n    /**\n     * @public\n     *\n     * Editor preparing method\n     * @return Promise\n     */\n    core.prepare = function (userSettings) {\n\n        return new Promise(function(resolve, reject) {\n\n            if ( userSettings ){\n\n                codex.settings.tools = userSettings.tools || codex.settings.tools;\n\n            }\n\n            if (userSettings.data) {\n                codex.state.blocks = userSettings.data;\n            }\n\n            if (userSettings.initialBlockPlugin) {\n                codex.settings.initialBlockPlugin = userSettings.initialBlockPlugin;\n            }\n\n            if (userSettings.uploadImagesUrl) {\n                codex.settings.uploadImagesUrl = userSettings.uploadImagesUrl;\n            }\n\n            codex.nodes.textarea = document.getElementById(userSettings.textareaId || codex.settings.textareaId);\n\n            if (typeof codex.nodes.textarea === undefined || codex.nodes.textarea === null) {\n                reject(Error(\"Textarea wasn't found by ID: #\" + userSettings.textareaId));\n            } else {\n                resolve();\n            }\n\n        });\n\n    };\n\n    /**\n     * Logging method\n     * @param type = ['log', 'info', 'warn']\n     */\n    core.log = function (msg, type, arg) {\n\n        type = type || 'log';\n\n        if (!arg) {\n            arg  = msg || 'undefined';\n            msg  = '[codex-editor]:      %o';\n        } else {\n            msg  = '[codex-editor]:      ' + msg;\n        }\n\n        try{\n            if ( 'console' in window && console[ type ] ){\n                if ( arg ) console[ type ]( msg , arg );\n                else console[ type ]( msg );\n            }\n\n        }catch(e){}\n\n    };\n\n    /**\n     * @protected\n     *\n     * Helper for insert one element after another\n     */\n    core.insertAfter = function (target, element) {\n        target.parentNode.insertBefore(element, target.nextSibling);\n    };\n\n    /**\n     * @const\n     *\n     * Readable DOM-node types map\n     */\n    core.nodeTypes = {\n        TAG     : 1,\n        TEXT    : 3,\n        COMMENT : 8\n    };\n\n    /**\n     * @const\n     * Readable keys map\n     */\n    core.keys = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 };\n\n    /**\n     * @protected\n     *\n     * Check object for DOM node\n     */\n    core.isDomNode = function (el) {\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n    };\n\n    /**\n     * Native Ajax\n     */\n    core.ajax = function (data) {\n\n        if (!data || !data.url){\n            return;\n        }\n\n        var XMLHTTP          = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\"),\n            success_function = function(){},\n            params = '',\n            obj;\n\n        data.async           = true;\n        data.type            = data.type || 'GET';\n        data.data            = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        success_function     = data.success || success_function ;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\n        } else {\n\n            for(obj in data.data) {\n                params += (obj + '=' + encodeURIComponent(data.data[obj]) + '&');\n            }\n        }\n\n        if (data.withCredentials) {\n            XMLHTTP.withCredentials = true;\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n            data.beforeSend.call();\n        }\n\n        XMLHTTP.open( data.type, data.url, data.async );\n        XMLHTTP.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        XMLHTTP.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n        XMLHTTP.onreadystatechange = function() {\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n                success_function(XMLHTTP.responseText);\n            }\n        };\n\n        XMLHTTP.send(params);\n    };\n\n    /** Appends script to head of document */\n    core.importScript = function(scriptPath, instanceName) {\n\n        /** Script is already loaded */\n        if ( !instanceName || (instanceName && document.getElementById('ce-script-' + instanceName)) ) {\n            codex.core.log(\"Instance name of script is missed or script is already loaded\", \"warn\");\n            return;\n        }\n\n\n        var script   = document.createElement('SCRIPT');\n        script.type = \"text/javascript\";\n        script.src = scriptPath;\n        script.async = true;\n        script.defer = true;\n\n        if (instanceName) {\n            script.id = \"ce-script-\" + instanceName;\n        }\n\n        document.head.appendChild(script);\n        return script;\n    };\n\n    return core;\n\n})({});\n\nmodule.exports = core;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/core.js","/**\n * Codex Editor UI module\n *\n * @author Codex Team\n * @version 1.1\n */\n\nvar ui = (function(ui){\n\n    /**\n     * Basic editor classnames\n     */\n    ui.className = {\n\n        /**\n         * @const {string} BLOCK_CLASSNAME - redactor blocks name\n         */\n        BLOCK_CLASSNAME : 'ce-block',\n\n        /**\n         * @const {String} wrapper for plugins content\n         */\n        BLOCK_CONTENT : 'ce-block__content',\n\n        /**\n         * @const {String} BLOCK_STRETCHED - makes block stretched\n         */\n        BLOCK_STRETCHED : 'ce-block--stretched',\n\n        /**\n         * @const {String} BLOCK_HIGHLIGHTED - adds background\n         */\n        BLOCK_HIGHLIGHTED : 'ce-block--focused',\n\n        /**\n         * @const {String} - highlights covered blocks\n         */\n        BLOCK_IN_FEED_MODE : 'ce-block--feed-mode',\n\n        /**\n         * @const {String} - for all default settings\n         */\n        SETTINGS_ITEM : 'ce-settings__item'\n\n    };\n\n    /**\n     * @protected\n     *\n     * Making main interface\n     */\n    ui.make = function () {\n\n        var wrapper,\n            toolbar,\n            toolbarContent,\n            inlineToolbar,\n            redactor,\n            ceBlock,\n            notifications,\n            blockButtons,\n            blockSettings,\n            showSettingsButton,\n            showTrashButton,\n            toolbox,\n            plusButton;\n\n        /** Make editor wrapper */\n        wrapper = codex.draw.wrapper();\n\n        /** Append editor wrapper after initial textarea */\n        codex.core.insertAfter(codex.nodes.textarea, wrapper);\n\n        /** Append block with notifications to the document */\n        notifications = codex.draw.alertsHolder();\n        codex.nodes.notifications = document.body.appendChild(notifications);\n\n        /** Make toolbar and content-editable redactor */\n        toolbar               = codex.draw.toolbar();\n        toolbarContent        = codex.draw.toolbarContent();\n        inlineToolbar         = codex.draw.inlineToolbar();\n        plusButton            = codex.draw.plusButton();\n        showSettingsButton    = codex.draw.settingsButton();\n        showTrashButton       = codex.toolbar.settings.makeRemoveBlockButton();\n        blockSettings         = codex.draw.blockSettings();\n        blockButtons          = codex.draw.blockButtons();\n        toolbox               = codex.draw.toolbox();\n        redactor              = codex.draw.redactor();\n\n        /** settings */\n        var defaultSettings = codex.draw.defaultSettings(),\n            pluginSettings  = codex.draw.pluginsSettings();\n\n        /** Add default and plugins settings */\n        blockSettings.appendChild(pluginSettings);\n        blockSettings.appendChild(defaultSettings);\n\n        /** Make blocks buttons\n         * This block contains settings button and remove block button\n         */\n        blockButtons.appendChild(showSettingsButton);\n        blockButtons.appendChild(showTrashButton);\n        blockButtons.appendChild(blockSettings);\n\n        /** Append plus button */\n        toolbarContent.appendChild(plusButton);\n\n        /** Appending toolbar tools */\n        toolbarContent.appendChild(toolbox);\n\n        /** Appending first-level block buttons */\n        toolbar.appendChild(blockButtons);\n\n        /** Append toolbarContent to toolbar */\n        toolbar.appendChild(toolbarContent);\n\n        wrapper.appendChild(toolbar);\n\n        wrapper.appendChild(redactor);\n\n        /** Save created ui-elements to static nodes state */\n        codex.nodes.wrapper            = wrapper;\n        codex.nodes.toolbar            = toolbar;\n        codex.nodes.plusButton         = plusButton;\n        codex.nodes.toolbox            = toolbox;\n        codex.nodes.blockSettings      = blockSettings;\n        codex.nodes.pluginSettings     = pluginSettings;\n        codex.nodes.defaultSettings    = defaultSettings;\n        codex.nodes.showSettingsButton = showSettingsButton;\n        codex.nodes.showTrashButton    = showTrashButton;\n\n        codex.nodes.redactor = redactor;\n\n        codex.ui.makeInlineToolbar(inlineToolbar);\n\n        /** fill in default settings */\n        codex.toolbar.settings.addDefaultSettings();\n    };\n\n    ui.makeInlineToolbar = function(container) {\n\n        /** Append to redactor new inline block */\n        codex.nodes.inlineToolbar.wrapper = container;\n\n        /** Draw toolbar buttons */\n        codex.nodes.inlineToolbar.buttons = codex.draw.inlineToolbarButtons();\n\n        /** Buttons action or settings */\n        codex.nodes.inlineToolbar.actions = codex.draw.inlineToolbarActions();\n\n        /** Append to inline toolbar buttons as part of it */\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.buttons);\n        codex.nodes.inlineToolbar.wrapper.appendChild(codex.nodes.inlineToolbar.actions);\n\n        codex.nodes.wrapper.appendChild(codex.nodes.inlineToolbar.wrapper);\n    };\n\n    /**\n     * @private\n     * Append tools passed in codex.tools\n     */\n    ui.addTools = function () {\n\n        var tool,\n            tool_button;\n\n        for(var name in codex.settings.tools) {\n            tool = codex.settings.tools[name];\n            codex.tools[name] = tool;;\n        }\n\n        /** Make toolbar buttons */\n        for (var name in codex.tools){\n\n            tool = codex.tools[name];\n\n            if (!tool.displayInToolbox) {\n                continue;\n            }\n\n            if (!tool.iconClassname) {\n                codex.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', name);\n                continue;\n            }\n\n            if (typeof tool.make != 'function') {\n                codex.core.log('make method missed. Tool %o skipped', 'warn', name);\n                continue;\n            }\n\n            /**\n             * if tools is for toolbox\n             */\n            tool_button = codex.draw.toolbarButton(name, tool.iconClassname);\n\n            codex.nodes.toolbox.appendChild(tool_button);\n\n            /** Save tools to static nodes */\n            codex.nodes.toolbarButtons[name] = tool_button;\n        }\n\n\n        /**\n         * Add inline toolbar tools\n         */\n        codex.ui.addInlineToolbarTools();\n\n\n    };\n\n    ui.addInlineToolbarTools = function() {\n\n        var tools = {\n\n            bold: {\n                icon    : 'ce-icon-bold',\n                command : 'bold'\n            },\n\n            italic: {\n                icon    : 'ce-icon-italic',\n                command : 'italic'\n            },\n\n            underline: {\n                icon    : 'ce-icon-underline',\n                command : 'underline'\n            },\n\n            link: {\n                icon    : 'ce-icon-link',\n                command : 'createLink',\n            }\n        };\n\n        var toolButton,\n            tool;\n\n        for(var name in tools) {\n\n            tool = tools[name];\n\n            toolButton = codex.draw.toolbarButtonInline(name, tool.icon);\n\n            codex.nodes.inlineToolbar.buttons.appendChild(toolButton);\n            /**\n             * Add callbacks to this buttons\n             */\n            codex.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\n        }\n\n    };\n\n    /**\n     * @private\n     * Bind editor UI events\n     */\n    ui.bindEvents = function () {\n\n        codex.core.log('ui.bindEvents fired', 'info');\n\n        window.addEventListener('error', function (errorMsg, url, lineNumber) {\n            codex.notifications.errorThrown(errorMsg, event);\n        }, false );\n\n        /** All keydowns on Document */\n        document.addEventListener('keydown', codex.callback.globalKeydown, false );\n\n        /** All keydowns on Redactor zone */\n        codex.nodes.redactor.addEventListener('keydown', codex.callback.redactorKeyDown, false);\n\n        /** All keydowns on Document */\n        document.addEventListener('keyup', codex.callback.globalKeyup, false );\n\n        /**\n         * Mouse click to radactor\n         */\n        codex.nodes.redactor.addEventListener('click', codex.callback.redactorClicked, false );\n\n        /**\n         * Clicks to the Plus button\n         */\n        codex.nodes.plusButton.addEventListener('click', codex.callback.plusButtonClicked, false);\n\n        /**\n         * Clicks to SETTINGS button in toolbar\n         */\n        codex.nodes.showSettingsButton.addEventListener('click', codex.callback.showSettingsButtonClicked, false );\n        /**\n         *  @deprecated ( but now in use for syncronization );\n         *  Any redactor changes: keyboard input, mouse cut/paste, drag-n-drop text\n         */\n        codex.nodes.redactor.addEventListener('input', codex.callback.redactorInputEvent, false );\n\n        /** Bind click listeners on toolbar buttons */\n        for (var button in codex.nodes.toolbarButtons){\n            codex.nodes.toolbarButtons[button].addEventListener('click', codex.callback.toolbarButtonClicked, false);\n        }\n\n    };\n\n    /**\n     * Initialize plugins before using\n     * Ex. Load scripts or call some internal methods\n     */\n    ui.preparePlugins = function() {\n\n        for(var tool in codex.tools) {\n\n            if (typeof codex.tools[tool].prepare != 'function')\n                continue;\n\n            codex.tools[tool].prepare();\n        }\n    };\n\n    ui.addBlockHandlers = function(block) {\n\n        if (!block) return;\n\n        /**\n         * Block keydowns\n         */\n        block.addEventListener('keydown', function(event) {\n            codex.callback.blockKeydown(event, block);\n        }, false);\n\n        /**\n         * Pasting content from another source\n         * We have two type of sanitization\n         * First - uses deep-first search algorithm to get sub nodes,\n         * sanitizes whole Block_content and replaces cleared nodes\n         * This method is deprecated\n         * Method is used in codex.callback.blockPaste(event)\n         *\n         * Secont - uses Mutation observer.\n         * Observer \"observe\" DOM changes and send changings to callback.\n         * Callback gets changed node, not whole Block_content.\n         * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\n         *\n         * Method is used in codex.callback.blockPasteViaSanitize(event)\n         *\n         * @uses html-janitor\n         * @example codex.callback.blockPasteViaSanitize(event), the second method.\n         *\n         */\n        block.addEventListener('paste', codex.callback.blockPasteCallback, false);\n\n        block.addEventListener('mouseup', function(){\n            codex.toolbar.inline.show();\n        }, false);\n\n    };\n\n    /** getting all contenteditable elements */\n    ui.saveInputs = function() {\n\n        var redactor = codex.nodes.redactor,\n            elements = [];\n\n        /** Save all inputs in global variable state */\n        codex.state.inputs = redactor.querySelectorAll('[contenteditable], input');\n    };\n\n    /**\n     * Adds first initial block on empty redactor\n     */\n    ui.addInitialBlock = function(){\n\n        var initialBlockType = codex.settings.initialBlockPlugin,\n            initialBlock;\n\n        if ( !codex.tools[initialBlockType] ){\n            codex.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\n            return;\n        }\n\n        initialBlock = codex.tools[initialBlockType].render();\n\n        initialBlock.setAttribute('data-placeholder', 'Write your story...');\n\n        codex.content.insertBlock({\n            type  : initialBlockType,\n            block : initialBlock\n        });\n\n        codex.content.workingNodeChanged(initialBlock);\n\n    };\n\n    ui.setInlineToolbarButtonBehaviour = function(button, type) {\n\n        button.addEventListener('mousedown', function(event) {\n\n            codex.toolbar.inline.toolClicked(event, type);\n\n        }, false);\n    };\n\n    return ui;\n\n})({});\n\nmodule.exports = ui;\n\n\n// WEBPACK FOOTER //\n// ./modules/ui.js","/**\n *\n * Codex.Editor Transport Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nvar transport = (function(transport){\n\n    transport.input = null;\n\n    /**\n     * @property {Object} arguments - keep plugin settings and defined callbacks\n     */\n    transport.arguments = null;\n\n    transport.prepare = function(){\n\n        var input = document.createElement('INPUT');\n\n        input.type = 'file';\n        input.addEventListener('change', codex.transport.fileSelected);\n\n        codex.transport.input = input;\n\n    };\n\n    /** Clear input when files is uploaded */\n    transport.clearInput = function() {\n\n        /** Remove old input */\n        this.input = null;\n\n        /** Prepare new one */\n        this.prepare();\n    };\n\n    /**\n     * Callback for file selection\n     */\n    transport.fileSelected = function(event){\n\n        var input       = this,\n            files       = input.files,\n            filesLength = files.length,\n            formdData   = new FormData(),\n            file,\n            i;\n\n        formdData.append('files', files[0], files[0].name);\n\n        codex.transport.ajax({\n            data : formdData,\n            beforeSend : codex.transport.arguments.beforeSend,\n            success    : codex.transport.arguments.success,\n            error      : codex.transport.arguments.error\n        });\n    };\n\n    /**\n     * Use plugin callbacks\n     * @protected\n     */\n    transport.selectAndUpload = function (args) {\n\n        this.arguments = args;\n        this.input.click();\n\n    };\n\n    /**\n     * Ajax requests module\n     */\n    transport.ajax = function(params){\n\n        var xhr = new XMLHttpRequest(),\n            beforeSend = typeof params.beforeSend == 'function' ? params.beforeSend : function(){},\n            success    = typeof params.success    == 'function' ? params.success : function(){},\n            error      = typeof params.error      == 'function' ? params.error   : function(){};\n\n        beforeSend();\n\n        xhr.open('POST', codex.settings.uploadImagesUrl, true);\n\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\n        xhr.onload = function () {\n            if (xhr.status === 200) {\n                success(xhr.responseText);\n            } else {\n                console.log(\"request error: %o\", xhr);\n                error();\n            }\n        };\n\n        xhr.send(params.data);\n        this.clearInput();\n\n    };\n\n    return transport;\n\n})({});\n\nmodule.exports  = transport;\n\n\n// WEBPACK FOOTER //\n// ./modules/transport.js","/**\n * Codex Editor Renderer Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nvar renderer = (function(renderer) {\n\n    /**\n     * Asyncronously parses input JSON to redactor blocks\n     */\n    renderer.makeBlocksFromData = function () {\n\n        /**\n         * If redactor is empty, add first paragraph to start writing\n         */\n        if (!codex.state.blocks.items.length) {\n\n            codex.ui.addInitialBlock();\n            return;\n\n        }\n\n        Promise.resolve()\n\n        /** First, get JSON from state */\n            .then(function() {\n                return codex.state.blocks;\n            })\n\n            /** Then, start to iterate they */\n            .then(codex.renderer.appendBlocks)\n\n            /** Write log if something goes wrong */\n            .catch(function(error) {\n                codex.core.log('Error while parsing JSON: %o', 'error', error);\n            });\n\n    };\n\n    /**\n     * Parses JSON to blocks\n     * @param {object} data\n     * @return Primise -> nodeList\n     */\n    renderer.appendBlocks = function (data) {\n\n        var blocks = data.items;\n\n        /**\n         * Sequence of one-by-one blocks appending\n         * Uses to save blocks order after async-handler\n         */\n        var nodeSequence = Promise.resolve();\n\n        for (var index = 0; index < blocks.length ; index++ ) {\n\n            /** Add node to sequence at specified index */\n            codex.renderer.appendNodeAtIndex(nodeSequence, blocks, index);\n\n        }\n\n    };\n\n    /**\n     * Append node at specified index\n     */\n    renderer.appendNodeAtIndex = function (nodeSequence, blocks, index) {\n\n        /** We need to append node to sequence */\n        nodeSequence\n\n        /** first, get node async-aware */\n            .then(function() {\n\n                return codex.renderer.getNodeAsync(blocks , index);\n\n            })\n\n            /**\n             * second, compose editor-block from JSON object\n             */\n            .then(codex.renderer.createBlockFromData)\n\n            /**\n             * now insert block to redactor\n             */\n            .then(function(blockData){\n\n                /**\n                 * blockData has 'block', 'type' and 'stretched' information\n                 */\n                codex.content.insertBlock(blockData);\n\n                /** Pass created block to next step */\n                return blockData.block;\n\n            })\n\n            /** Log if something wrong with node */\n            .catch(function(error) {\n                codex.core.log('Node skipped while parsing because %o', 'error', error);\n            });\n\n    };\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    renderer.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function() {\n\n            return blocksList[index];\n\n        });\n    };\n\n    /**\n     * Creates editor block by JSON-data\n     *\n     * @uses render method of each plugin\n     *\n     * @param {object} blockData looks like\n     *                            { header : {\n     *                                            text: '',\n     *                                            type: 'H3', ...\n     *                                        }\n     *                            }\n     * @return {object} with type and Element\n     */\n    renderer.createBlockFromData = function (blockData) {\n\n        /** New parser */\n        var pluginName = blockData.type,\n            cover      = blockData.cover;\n\n        /** Get first key of object that stores plugin name */\n        // for (var pluginName in blockData) break;\n\n        /** Check for plugin existance */\n        if (!codex.tools[pluginName]) {\n            throw Error(`Plugin «${pluginName}» not found`);\n        }\n\n        /** Check for plugin having render method */\n        if (typeof codex.tools[pluginName].render != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have «render» method`);\n        }\n\n        /** New Parser */\n        var block = codex.tools[pluginName].render(blockData.data);\n\n        /** is first-level block stretched */\n        var stretched = codex.tools[pluginName].isStretched || false;\n\n        /** Retrun type and block */\n        return {\n            type      : pluginName,\n            block     : block,\n            stretched : stretched,\n            cover     : cover\n        };\n\n    };\n\n    return renderer;\n\n})({});\n\nmodule.exports = renderer;\n\n\n// WEBPACK FOOTER //\n// ./modules/renderer.js","/**\n * Codex Editor Saver\n *\n * @author Codex Team\n * @version 1.0\n */\n\nvar saver = (function(saver) {\n\n    /**\n     * Saves blocks\n     * @private\n     */\n    saver.saveBlocks = function () {\n\n        /** Save html content of redactor to memory */\n        codex.state.html = codex.nodes.redactor.innerHTML;\n\n        /** Empty jsonOutput state */\n        codex.state.jsonOutput = [];\n\n        Promise.resolve()\n\n            .then(function() {\n                return codex.nodes.redactor.childNodes;\n            })\n            /** Making a sequence from separate blocks */\n            .then(codex.saver.makeQueue)\n\n            .then(function() {\n                // codex.nodes.textarea.innerHTML = codex.state.html;\n            })\n\n            .catch( function(error) {\n                console.log('Something happend');\n            });\n\n    };\n\n    saver.makeQueue = function(blocks) {\n\n        var queue = Promise.resolve();\n\n        for(var index = 0; index < blocks.length; index++) {\n\n            /** Add node to sequence at specified index */\n            codex.saver.getBlockData(queue, blocks, index);\n\n        }\n\n    };\n\n    /** Gets every block and makes From Data */\n    saver.getBlockData = function(queue, blocks, index) {\n\n        queue.then(function() {\n            return codex.saver.getNodeAsync(blocks, index);\n        })\n\n            .then(codex.saver.makeFormDataFromBlocks);\n\n    };\n\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    saver.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function() {\n\n            return blocksList[index];\n\n        });\n    };\n\n    saver.makeFormDataFromBlocks = function(block) {\n\n        var pluginName = block.dataset.tool;\n\n        /** Check for plugin existance */\n        if (!codex.tools[pluginName]) {\n            throw Error(`Plugin «${pluginName}» not found`);\n        }\n\n        /** Check for plugin having render method */\n        if (typeof codex.tools[pluginName].save != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have save method`);\n        }\n\n        /** Result saver */\n        var blockContent   = block.childNodes[0],\n            pluginsContent = blockContent.childNodes[0],\n            savedData      = codex.tools[pluginName].save(pluginsContent),\n            output;\n\n\n        output = {\n            type: pluginName,\n            data: savedData\n        };\n\n        /** Marks Blocks that will be in main page */\n        output.cover = block.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE);\n\n        codex.state.jsonOutput.push(output);\n    };\n\n    return saver;\n\n})({});\n\nmodule.exports = saver;\n\n\n// WEBPACK FOOTER //\n// ./modules/saver.js","/**\n * Codex Editor Content Module\n * Works with DOM\n *\n * @author Codex Team\n * @version 1.3.1\n */\n\nvar janitor = require('html-janitor');\n\n\n/**\n * Default settings for sane.\n * @uses html-janitor\n */\nvar Config = {\n\n    tags: {\n        p: {},\n        a: {\n            href: true,\n            target: '_blank',\n            rel: 'nofollow'\n        },\n        i: {},\n        b: {},\n        strong: {},\n        em: {},\n        span: {}\n    }\n};\n\nvar content = (function(content) {\n\n    /**\n     * Links to current active block\n     * @type {null | Element}\n     */\n    content.currentNode = null;\n\n    /**\n     * clicked in redactor area\n     * @type {null | Boolean}\n     */\n    content.editorAreaHightlighted = null;\n\n    /**\n     * Synchronizes redactor with original textarea\n     */\n    content.sync = function () {\n\n        codex.core.log('syncing...');\n\n        /**\n         * Save redactor content to codex.state\n         */\n        codex.state.html = codex.nodes.redactor.innerHTML;\n\n    };\n\n    /**\n     * @deprecated\n     */\n    content.getNodeFocused = function() {\n\n        var selection = window.getSelection(),\n            focused;\n\n        if (selection.anchorNode === null) {\n            return null;\n        }\n\n        if ( selection.anchorNode.nodeType == codex.core.nodeTypes.TAG ) {\n            focused = selection.anchorNode;\n        } else {\n            focused = selection.focusNode.parentElement;\n        }\n\n        if ( !codex.parser.isFirstLevelBlock(focused) ) {\n\n            /** Iterate with parent nodes to find first-level*/\n            var parent = focused.parentNode;\n\n            while (parent && !codex.parser.isFirstLevelBlock(parent)){\n                parent = parent.parentNode;\n            }\n\n            focused = parent;\n        }\n\n        if (focused != codex.nodes.redactor){\n            return focused;\n        }\n\n        return null;\n\n    };\n\n    /**\n     * Appends background to the block\n     */\n    content.markBlock = function() {\n\n        codex.content.currentNode.classList.add(codex.ui.className.BLOCK_HIGHLIGHTED);\n    };\n\n    /**\n     * Clear background\n     */\n    content.clearMark = function() {\n\n        if (codex.content.currentNode) {\n            codex.content.currentNode.classList.remove(codex.ui.className.BLOCK_HIGHLIGHTED);\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Finds first-level block\n     * @param {Element} node - selected or clicked in redactors area node\n     */\n    content.getFirstLevelBlock = function(node) {\n\n        if (!codex.core.isDomNode(node)) {\n            node = node.parentNode;\n        }\n\n        if (node === codex.nodes.redactor || node === document.body) {\n\n            return null;\n\n        } else {\n\n            while(!node.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\n                node = node.parentNode;\n            }\n\n            return node;\n        }\n\n    };\n\n    /**\n     * Trigger this event when working node changed\n     * @param {Element} targetNode - first-level of this node will be current\n     * If targetNode is first-level then we set it as current else we look for parents to find first-level\n     */\n    content.workingNodeChanged = function (targetNode) {\n\n        /** Clear background from previous marked block before we change */\n        codex.content.clearMark();\n\n        if (!targetNode) {\n            return;\n        }\n\n        this.currentNode = this.getFirstLevelBlock(targetNode);\n\n    };\n\n    /**\n     * Replaces one redactor block with another\n     * @protected\n     * @param {Element} targetBlock - block to replace. Mostly currentNode.\n     * @param {Element} newBlock\n     * @param {string} newBlockType - type of new block; we need to store it to data-attribute\n     *\n     * [!] Function does not saves old block content.\n     *     You can get it manually and pass with newBlock.innerHTML\n     */\n    content.replaceBlock = function function_name(targetBlock, newBlock) {\n\n        if (!targetBlock || !newBlock){\n            codex.core.log('replaceBlock: missed params');\n            return;\n        }\n\n        /** If target-block is not a frist-level block, then we iterate parents to find it */\n        while(!targetBlock.classList.contains(codex.ui.className.BLOCK_CLASSNAME)) {\n            targetBlock = targetBlock.parentNode;\n        }\n\n        /** Replacing */\n        codex.nodes.redactor.replaceChild(newBlock, targetBlock);\n\n        /**\n         * Set new node as current\n         */\n        codex.content.workingNodeChanged(newBlock);\n\n        /**\n         * Add block handlers\n         */\n        codex.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Save changes\n         */\n        codex.ui.saveInputs();\n\n    };\n\n    /**\n     * @private\n     *\n     * Inserts new block to redactor\n     * Wrapps block into a DIV with BLOCK_CLASSNAME class\n     *\n     * @param blockData          {object}\n     * @param blockData.block    {Element}   element with block content\n     * @param blockData.type     {string}    block plugin\n     * @param needPlaceCaret     {bool}      pass true to set caret in new block\n     *\n     */\n    content.insertBlock = function( blockData, needPlaceCaret ) {\n\n        var workingBlock    = codex.content.currentNode,\n            newBlockContent = blockData.block,\n            blockType       = blockData.type,\n            cover           = blockData.cover,\n            isStretched     = blockData.stretched;\n\n        var newBlock = codex.content.composeNewBlock(newBlockContent, blockType, isStretched);\n\n        if (cover === true) {\n            newBlock.classList.add(codex.ui.className.BLOCK_IN_FEED_MODE);\n        }\n\n        if (workingBlock) {\n\n            codex.core.insertAfter(workingBlock, newBlock);\n\n        } else {\n            /**\n             * If redactor is empty, append as first child\n             */\n            codex.nodes.redactor.appendChild(newBlock);\n\n        }\n\n        /**\n         * Block handler\n         */\n        codex.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Set new node as current\n         */\n        codex.content.workingNodeChanged(newBlock);\n\n        /**\n         * Save changes\n         */\n        codex.ui.saveInputs();\n\n\n        if ( needPlaceCaret ) {\n\n            /**\n             * If we don't know input index then we set default value -1\n             */\n            var currentInputIndex = codex.caret.getCurrentInputIndex() || -1;\n\n\n            if (currentInputIndex == -1) {\n\n\n                var editableElement = newBlock.querySelector('[contenteditable]'),\n                    emptyText       = document.createTextNode('');\n\n                editableElement.appendChild(emptyText);\n                codex.caret.set(editableElement, 0, 0);\n\n                codex.toolbar.move();\n                codex.toolbar.showPlusButton();\n\n\n            } else {\n\n                /** Timeout for browsers execution */\n                setTimeout(function () {\n\n                    /** Setting to the new input */\n                    codex.caret.setToNextBlock(currentInputIndex);\n                    codex.toolbar.move();\n                    codex.toolbar.open();\n\n                }, 10);\n\n            }\n\n        }\n\n        /**\n         * Block is inserted, wait for new click that defined focusing on editors area\n         * @type {boolean}\n         */\n        content.editorAreaHightlighted = false;\n\n    };\n\n    /**\n     * Replaces blocks with saving content\n     * @protected\n     * @param {Element} noteToReplace\n     * @param {Element} newNode\n     * @param {Element} blockType\n     */\n    content.switchBlock = function(blockToReplace, newBlock, tool){\n\n        var newBlockComposed = codex.content.composeNewBlock(newBlock, tool);\n\n        /** Replacing */\n        codex.content.replaceBlock(blockToReplace, newBlockComposed);\n\n        /** Save new Inputs when block is changed */\n        codex.ui.saveInputs();\n    };\n\n    /**\n     * Iterates between child noted and looking for #text node on deepest level\n     * @private\n     * @param {Element} block - node where find\n     * @param {int} postiton - starting postion\n     *      Example: childNodex.length to find from the end\n     *               or 0 to find from the start\n     * @return {Text} block\n     * @uses DFS\n     */\n    content.getDeepestTextNodeFromPosition = function (block, position) {\n\n        /**\n         * Clear Block from empty and useless spaces with trim.\n         * Such nodes we should remove\n         */\n        var blockChilds = block.childNodes,\n            index,\n            node,\n            text;\n\n        for(index = 0; index < blockChilds.length; index++)\n        {\n            node = blockChilds[index];\n\n            if (node.nodeType == codex.core.nodeTypes.TEXT) {\n\n                text = node.textContent.trim();\n\n                /** Text is empty. We should remove this child from node before we start DFS\n                 * decrease the quantity of childs.\n                 */\n                if (text === '') {\n\n                    block.removeChild(node);\n                    position--;\n                }\n            }\n        }\n\n        if (block.childNodes.length === 0) {\n            return document.createTextNode('');\n        }\n\n        /** Setting default position when we deleted all empty nodes */\n        if ( position < 0 )\n            position = 1;\n\n        var looking_from_start = false;\n\n        /** For looking from START */\n        if (position === 0) {\n            looking_from_start = true;\n            position = 1;\n        }\n\n        while ( position ) {\n\n            /** initial verticle of node. */\n            if ( looking_from_start ) {\n                block = block.childNodes[0];\n            } else {\n                block = block.childNodes[position - 1];\n            }\n\n            if ( block.nodeType == codex.core.nodeTypes.TAG ){\n\n                position = block.childNodes.length;\n\n            } else if (block.nodeType == codex.core.nodeTypes.TEXT ){\n\n                position = 0;\n            }\n\n        }\n\n        return block;\n    };\n\n    /**\n     * @private\n     */\n    content.composeNewBlock = function (block, tool, isStretched) {\n\n        var newBlock     = codex.draw.node('DIV', codex.ui.className.BLOCK_CLASSNAME, {}),\n            blockContent = codex.draw.node('DIV', codex.ui.className.BLOCK_CONTENT, {});\n\n        blockContent.appendChild(block);\n        newBlock.appendChild(blockContent);\n\n        if (isStretched) {\n            blockContent.classList.add(codex.ui.className.BLOCK_STRETCHED);\n        }\n\n        newBlock.dataset.tool = tool;\n        return newBlock;\n    };\n\n    /**\n     * Returns Range object of current selection\n     */\n    content.getRange = function() {\n\n        var selection = window.getSelection().getRangeAt(0);\n\n        return selection;\n    };\n\n    /**\n     * Divides block in two blocks (after and before caret)\n     * @private\n     * @param {Int} inputIndex - target input index\n     */\n    content.splitBlock = function(inputIndex) {\n\n        var selection      = window.getSelection(),\n            anchorNode     = selection.anchorNode,\n            anchorNodeText = anchorNode.textContent,\n            caretOffset    = selection.anchorOffset,\n            textBeforeCaret,\n            textNodeBeforeCaret,\n            textAfterCaret,\n            textNodeAfterCaret;\n\n        var currentBlock = codex.content.currentNode.querySelector('[contentEditable]');\n\n\n        textBeforeCaret     = anchorNodeText.substring(0, caretOffset);\n        textAfterCaret      = anchorNodeText.substring(caretOffset);\n\n        textNodeBeforeCaret = document.createTextNode(textBeforeCaret);\n\n        if (textAfterCaret) {\n            textNodeAfterCaret  = document.createTextNode(textAfterCaret);\n        }\n\n        var previousChilds = [],\n            nextChilds     = [],\n            reachedCurrent = false;\n\n        if (textNodeAfterCaret) {\n            nextChilds.push(textNodeAfterCaret);\n        }\n\n        for ( var i = 0, child; !!(child = currentBlock.childNodes[i]); i++) {\n\n            if ( child != anchorNode ) {\n                if ( !reachedCurrent ){\n                    previousChilds.push(child);\n                } else {\n                    nextChilds.push(child);\n                }\n            } else {\n                reachedCurrent = true;\n            }\n\n        }\n\n        /** Clear current input */\n        codex.state.inputs[inputIndex].innerHTML = '';\n\n        /**\n         * Append all childs founded before anchorNode\n         */\n        var previousChildsLength = previousChilds.length;\n\n        for(i = 0; i < previousChildsLength; i++) {\n            codex.state.inputs[inputIndex].appendChild(previousChilds[i]);\n        }\n\n        codex.state.inputs[inputIndex].appendChild(textNodeBeforeCaret);\n\n        /**\n         * Append text node which is after caret\n         */\n        var nextChildsLength = nextChilds.length,\n            newNode          = document.createElement('div');\n\n        for(i = 0; i < nextChildsLength; i++) {\n            newNode.appendChild(nextChilds[i]);\n        }\n\n        newNode = newNode.innerHTML;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\n\n        /**\n         * Make new paragraph with text after caret\n         */\n        codex.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : codex.tools[NEW_BLOCK_TYPE].render({\n                text : newNode\n            })\n        }, true );\n\n    };\n\n    /**\n     * Merges two blocks — current and target\n     * If target index is not exist, then previous will be as target\n     */\n    content.mergeBlocks = function(currentInputIndex, targetInputIndex) {\n\n        /** If current input index is zero, then prevent method execution */\n        if (currentInputIndex === 0) {\n            return;\n        }\n\n        var targetInput,\n            currentInputContent = codex.state.inputs[currentInputIndex].innerHTML;\n\n        if (!targetInputIndex) {\n\n            targetInput = codex.state.inputs[currentInputIndex - 1];\n\n        } else {\n\n            targetInput = codex.state.inputs[targetInputIndex];\n\n        }\n\n        targetInput.innerHTML += currentInputContent;\n    };\n\n    /**\n     * @private\n     *\n     * Callback for HTML Mutations\n     * @param {Array} mutation - Mutation Record\n     */\n    content.paste = function(mutation) {\n\n        var workingNode = codex.content.currentNode,\n            tool        = workingNode.dataset.tool;\n\n        if (codex.tools[tool].allowedToPaste) {\n            codex.content.sanitize.call(this, mutation.addedNodes);\n        } else {\n            codex.content.pasteTextContent(mutation.addedNodes);\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * gets only text/plain content of node\n     * @param {Element} target - HTML node\n     */\n    content.pasteTextContent = function(nodes) {\n\n        var node = nodes[0],\n            textNode;\n\n        if (!node) {\n            return;\n        }\n\n        if (node.nodeType == codex.core.nodeTypes.TEXT) {\n            textNode = document.createTextNode(node);\n        } else {\n            textNode = document.createTextNode(node.textContent);\n        }\n\n        if (codex.core.isDomNode(node)) {\n            node.parentNode.replaceChild(textNode, node);\n        }\n    };\n\n    /**\n     * @private\n     *\n     * Sanitizes HTML content\n     * @param {Element} target - inserted element\n     * @uses Sanitize library html-janitor\n     */\n    content.sanitize = function(target) {\n\n        if (!target) {\n            return;\n        }\n\n        var node = target[0];\n\n        if (!node) {\n            return;\n        }\n\n        /**\n         * Disconnect Observer\n         * hierarchy of function calls inherits context of observer\n         */\n        this.disconnect();\n\n        /**\n         * Don't sanitize text node\n         */\n        if (node.nodeType == codex.core.nodeTypes.TEXT) {\n            return;\n        }\n\n        /**\n         * Clear dirty content\n         */\n        var sanitizer = new janitor(Config),\n            clear = sanitizer.clean(node.outerHTML);\n\n        var div = codex.draw.node('DIV', [], { innerHTML: clear });\n        node.replaceWith(div.childNodes[0]);\n\n        // for (i = 0; i < clearHTML.childNodes.length; i++) {\n        //\n        //     var tag = clearHTML.childNodes[i],\n        //         blockType = null;\n        //\n        //     for (tool in codex.tools) {\n        //\n        //         var handleTags = codex.tools[tool].handleTagOnPaste;\n        //\n        //         if (!handleTags) {\n        //             continue;\n        //         }\n        //\n        //         if (handleTags.indexOf(tag.tagName) !== -1) {\n        //             blockType = codex.tools[tool];\n        //             break;\n        //         }\n        //\n        //     }\n        //\n        //     if (blockType) {\n        //         codex.parser.insertPastedContent(blockType, tag);\n        //     }\n        //\n        // }\n\n    };\n\n    return content;\n\n})({});\n\nmodule.exports = content;\n\n\n// WEBPACK FOOTER //\n// ./modules/content.js","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-janitor/src/html-janitor.js\n// module id = 8\n// module chunks = 0","/**\n * Codex Editor toolbar module\n *\n * Contains:\n *  - Inline toolbox\n *  - Toolbox within plus button\n *  - Settings section\n *\n * @author Codex Team\n * @version 1.0\n */\nvar toolbar = (function(toolbar) {\n\n    toolbar.init = function() {\n        toolbar.settings = require('./settings');\n        toolbar.inline   = require('./inline');\n        toolbar.toolbox  = require('./toolbox');\n    };\n\n    /**\n     * Margin between focused node and toolbar\n     */\n    toolbar.defaultToolbarHeight = 49;\n\n    toolbar.defaultOffset = 34;\n\n    toolbar.opened = false;\n\n    toolbar.current = null;\n\n    /**\n     * @protected\n     */\n    toolbar.open = function (){\n\n        codex.nodes.toolbar.classList.add('opened');\n        this.opened = true;\n\n    };\n\n    /**\n     * @protected\n     */\n    toolbar.close = function(){\n\n        codex.nodes.toolbar.classList.remove('opened');\n\n        toolbar.opened  = false;\n        toolbar.current = null;\n\n        for (var button in codex.nodes.toolbarButtons){\n            codex.nodes.toolbarButtons[button].classList.remove('selected');\n        }\n\n        /** Close toolbox when toolbar is not displayed */\n        codex.toolbar.toolbox.close();\n        codex.toolbar.settings.close();\n\n    };\n\n    toolbar.toggle = function(){\n\n        if ( !this.opened ){\n\n            this.open();\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    toolbar.hidePlusButton = function() {\n        codex.nodes.plusButton.classList.add('hide');\n    };\n\n    toolbar.showPlusButton = function() {\n        codex.nodes.plusButton.classList.remove('hide');\n    };\n\n    /**\n     * Moving toolbar to the specified node\n     */\n    toolbar.move = function() {\n\n        /** Close Toolbox when we move toolbar */\n        codex.toolbar.toolbox.close();\n\n        if (!codex.content.currentNode) {\n            return;\n        }\n\n        var toolbarHeight = codex.nodes.toolbar.clientHeight || codex.toolbar.defaultToolbarHeight,\n            newYCoordinate = codex.content.currentNode.offsetTop - (codex.toolbar.defaultToolbarHeight / 2) + codex.toolbar.defaultOffset;\n\n        codex.nodes.toolbar.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\n\n        /** Close trash actions */\n        codex.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return toolbar;\n\n})({});\n\ntoolbar.init();\n\nmodule.exports = toolbar;\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbar.js","var settings = (function(settings) {\n\n    settings.init = function() {\n        require('../content');\n    };\n\n    settings.opened = false;\n\n    settings.setting = null;\n    settings.actions = null;\n\n    settings.cover = null;\n\n    /**\n     * Append and open settings\n     */\n    settings.open = function(toolType){\n\n        /**\n         * Append settings content\n         * It's stored in tool.settings\n         */\n        if (!codex.tools[toolType] || !codex.core.isDomNode(codex.tools[toolType].settings) ) {\n\n            codex.core.log(`Plugin «${toolType}» has no settings`, 'warn');\n            // codex.nodes.pluginSettings.innerHTML = `Плагин «${toolType}» не имеет настроек`;\n\n        } else {\n\n            codex.nodes.pluginSettings.appendChild(codex.tools[toolType].settings);\n\n        }\n\n        var currentBlock = codex.content.currentNode;\n\n        /** Open settings block */\n        codex.nodes.blockSettings.classList.add('opened');\n        codex.toolbar.settings.addDefaultSettings();\n        this.opened = true;\n    };\n\n    /**\n     * Close and clear settings\n     */\n    settings.close = function(){\n\n        codex.nodes.blockSettings.classList.remove('opened');\n        codex.nodes.pluginSettings.innerHTML = '';\n\n        this.opened = false;\n\n    };\n\n    /**\n     * @param {string} toolType - plugin type\n     */\n    settings.toggle = function( toolType ){\n\n        if ( !this.opened ){\n\n            this.open(toolType);\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    /**\n     * This function adds default core settings\n     */\n    settings.addDefaultSettings = function() {\n\n        /** list of default settings */\n        var feedModeToggler;\n\n        /** Clear block and append initialized settings */\n        codex.nodes.defaultSettings.innerHTML = '';\n\n\n        /** Init all default setting buttons */\n        feedModeToggler = codex.toolbar.settings.makeFeedModeToggler();\n\n        /**\n         * Fill defaultSettings\n         */\n\n        /**\n         * Button that enables/disables Feed-mode\n         * Feed-mode means that block will be showed in articles-feed like cover\n         */\n        codex.nodes.defaultSettings.appendChild(feedModeToggler);\n\n    };\n\n    /**\n     * Cover setting.\n     * This tune highlights block, so that it may be used for showing target block on main page\n     * Draw different setting when block is marked for main page\n     * If TRUE, then we show button that removes this selection\n     * Also defined setting \"Click\" events will be listened and have separate callbacks\n     *\n     * @return {Element} node/button that we place in default settings block\n     */\n    settings.makeFeedModeToggler = function() {\n\n        var isFeedModeActivated = codex.toolbar.settings.isFeedModeActivated(),\n            setting,\n            data;\n\n        if (!isFeedModeActivated) {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Вывести в ленте'\n            };\n\n        } else {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Не выводить в ленте'\n            };\n\n        }\n\n        setting = codex.draw.node('DIV', codex.ui.className.SETTINGS_ITEM, data);\n        setting.addEventListener('click', codex.toolbar.settings.updateFeedMode, false);\n\n        return setting;\n    };\n\n    /**\n     * Updates Feed-mode\n     */\n    settings.updateFeedMode = function() {\n\n        var currentNode = codex.content.currentNode;\n\n        currentNode.classList.toggle(codex.ui.className.BLOCK_IN_FEED_MODE);\n\n        codex.toolbar.settings.close();\n    };\n\n    settings.isFeedModeActivated = function() {\n\n        var currentBlock = codex.content.currentNode;\n\n        if (currentBlock) {\n            return currentBlock.classList.contains(codex.ui.className.BLOCK_IN_FEED_MODE);\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Here we will draw buttons and add listeners to components\n     */\n    settings.makeRemoveBlockButton = function() {\n\n        var removeBlockWrapper  = codex.draw.node('SPAN', 'ce-toolbar__remove-btn', {}),\n            settingButton = codex.draw.node('SPAN', 'ce-toolbar__remove-setting', { innerHTML : '<i class=\"ce-icon-trash\"></i>' }),\n            actionWrapper = codex.draw.node('DIV', 'ce-toolbar__remove-confirmation', {}),\n            confirmAction = codex.draw.node('DIV', 'ce-toolbar__remove-confirm', { textContent : 'Удалить блок' }),\n            cancelAction  = codex.draw.node('DIV', 'ce-toolbar__remove-cancel', { textContent : 'Отменить удаление' });\n\n        settingButton.addEventListener('click', codex.toolbar.settings.removeButtonClicked, false);\n\n        confirmAction.addEventListener('click', codex.toolbar.settings.confirmRemovingRequest, false);\n\n        cancelAction.addEventListener('click', codex.toolbar.settings.cancelRemovingRequest, false);\n\n        actionWrapper.appendChild(confirmAction);\n        actionWrapper.appendChild(cancelAction);\n\n        removeBlockWrapper.appendChild(settingButton);\n        removeBlockWrapper.appendChild(actionWrapper);\n\n        /** Save setting */\n        codex.toolbar.settings.setting = settingButton;\n        codex.toolbar.settings.actions = actionWrapper;\n\n        return removeBlockWrapper;\n\n    };\n\n    settings.removeButtonClicked = function() {\n\n        var action = codex.toolbar.settings.actions;\n\n        if (action.classList.contains('opened')) {\n            codex.toolbar.settings.hideRemoveActions();\n        } else {\n            codex.toolbar.settings.showRemoveActions();\n        }\n\n        codex.toolbar.toolbox.close();\n        codex.toolbar.settings.close();\n\n    };\n\n    settings.cancelRemovingRequest = function() {\n\n        codex.toolbar.settings.actions.classList.remove('opened');\n    };\n\n    settings.confirmRemovingRequest = function() {\n\n        var currentBlock = codex.content.currentNode,\n            firstLevelBlocksCount;\n\n        currentBlock.remove();\n\n        firstLevelBlocksCount = codex.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            codex.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            codex.ui.addInitialBlock();\n        }\n\n        codex.ui.saveInputs();\n\n        codex.toolbar.close();\n    };\n\n    settings.showRemoveActions = function() {\n        codex.toolbar.settings.actions.classList.add('opened');\n    };\n\n    settings.hideRemoveActions = function() {\n        codex.toolbar.settings.actions.classList.remove('opened');\n    };\n\n    return settings;\n\n})({});\n\nsettings.init();\n\nmodule.exports = settings;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/settings.js","/**\n * Inline toolbar\n *\n * Contains from tools:\n * Bold, Italic, Underline and Anchor\n *\n * @author Codex Team\n * @version 1.0\n */\nvar inline = (function(inline) {\n\n    inline.init = function() {\n\n    };\n\n    inline.buttonsOpened = null;\n    inline.actionsOpened = null;\n    inline.wrappersOffset = null;\n\n    /**\n     * saving selection that need for execCommand for styling\n     *\n     */\n    inline.storedSelection = null;\n\n    /**\n     * @protected\n     *\n     * Open inline toobar\n     */\n    inline.show = function() {\n\n        var currentNode = codex.content.currentNode,\n            tool = currentNode.dataset.tool,\n            plugin;\n\n        /**\n         * tool allowed to open inline toolbar\n         */\n        plugin = codex.tools[tool];\n\n        if (!plugin.showInlineToolbar)\n            return;\n\n        var selectedText = this.getSelectionText(),\n            toolbar      = codex.nodes.inlineToolbar.wrapper,\n            buttons      = codex.nodes.inlineToolbar.buttons;\n\n        if (selectedText.length > 0) {\n\n            /** Move toolbar and open */\n            codex.toolbar.inline.move();\n\n            /** Open inline toolbar */\n            toolbar.classList.add('opened');\n\n            /** show buttons of inline toolbar */\n            codex.toolbar.inline.showButtons();\n        }\n\n    };\n\n    /**\n     * @protected\n     *\n     * Closes inline toolbar\n     */\n    inline.close = function() {\n        var toolbar = codex.nodes.inlineToolbar.wrapper;\n        toolbar.classList.remove('opened');\n    };\n\n    /**\n     * @private\n     *\n     * Moving toolbar\n     */\n    inline.move = function() {\n\n        if (!this.wrappersOffset) {\n            this.wrappersOffset = this.getWrappersOffset();\n        }\n\n        var coords          = this.getSelectionCoords(),\n            defaultOffset   = 0,\n            toolbar         = codex.nodes.inlineToolbar.wrapper,\n            newCoordinateX,\n            newCoordinateY;\n\n        if (toolbar.offsetHeight === 0) {\n            defaultOffset = 40;\n        }\n\n        newCoordinateX = coords.x - this.wrappersOffset.left;\n        newCoordinateY = coords.y + window.scrollY - this.wrappersOffset.top - defaultOffset - toolbar.offsetHeight;\n\n        toolbar.style.transform = `translate3D(${Math.floor(newCoordinateX)}px, ${Math.floor(newCoordinateY)}px, 0)`;\n\n        /** Close everything */\n        codex.toolbar.inline.closeButtons();\n        codex.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Tool Clicked\n     */\n\n    inline.toolClicked = function(event, type) {\n\n        /**\n         * For simple tools we use default browser function\n         * For more complicated tools, we should write our own behavior\n         */\n        switch (type) {\n            case 'createLink' : codex.toolbar.inline.createLinkAction(event, type); break;\n            default           : codex.toolbar.inline.defaultToolAction(type); break;\n        }\n\n        /**\n         * highlight buttons\n         * after making some action\n         */\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(codex.toolbar.inline.hightlight);\n    };\n\n    /**\n     * @private\n     *\n     * Saving wrappers offset in DOM\n     */\n    inline.getWrappersOffset = function() {\n\n        var wrapper = codex.nodes.wrapper,\n            offset  = this.getOffset(wrapper);\n\n        this.wrappersOffset = offset;\n        return offset;\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates offset of DOM element\n     *\n     * @param el\n     * @returns {{top: number, left: number}}\n     */\n    inline.getOffset = function ( el ) {\n\n        var _x = 0;\n        var _y = 0;\n\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\n            _x += (el.offsetLeft + el.clientLeft);\n            _y += (el.offsetTop + el.clientTop);\n            el = el.offsetParent;\n        }\n        return { top: _y, left: _x };\n    };\n\n    /**\n     * @private\n     *\n     * Calculates position of selected text\n     * @returns {{x: number, y: number}}\n     */\n    inline.getSelectionCoords = function() {\n\n        var sel = document.selection, range;\n        var x = 0, y = 0;\n\n        if (sel) {\n\n            if (sel.type != \"Control\") {\n                range = sel.createRange();\n                range.collapse(true);\n                x = range.boundingLeft;\n                y = range.boundingTop;\n            }\n\n        } else if (window.getSelection) {\n\n            sel = window.getSelection();\n\n            if (sel.rangeCount) {\n\n                range = sel.getRangeAt(0).cloneRange();\n                if (range.getClientRects) {\n                    range.collapse(true);\n                    var rect = range.getClientRects()[0];\n\n                    if (!rect) {\n                        return;\n                    }\n\n                    x = rect.left;\n                    y = rect.top;\n                }\n\n            }\n        }\n        return { x: x, y: y };\n    };\n\n    /**\n     * @private\n     *\n     * Returns selected text as String\n     * @returns {string}\n     */\n    inline.getSelectionText = function getSelectionText(){\n\n        var selectedText = \"\";\n\n        if (window.getSelection){ // all modern browsers and IE9+\n            selectedText = window.getSelection().toString();\n        }\n\n        return selectedText;\n    };\n\n    /** Opens buttons block */\n    inline.showButtons = function() {\n\n        var buttons = codex.nodes.inlineToolbar.buttons;\n        buttons.classList.add('opened');\n\n        codex.toolbar.inline.buttonsOpened = true;\n\n        /** highlight buttons */\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(codex.toolbar.inline.hightlight);\n\n    };\n\n    /** Makes buttons disappear */\n    inline.closeButtons = function() {\n        var buttons = codex.nodes.inlineToolbar.buttons;\n        buttons.classList.remove('opened');\n\n        codex.toolbar.inline.buttonsOpened = false;\n    };\n\n    /** Open buttons defined action if exist */\n    inline.showActions = function() {\n        var action = codex.nodes.inlineToolbar.actions;\n        action.classList.add('opened');\n\n        codex.toolbar.inline.actionsOpened = true;\n    };\n\n    /** Close actions block */\n    inline.closeAction = function() {\n        var action = codex.nodes.inlineToolbar.actions;\n        action.innerHTML = '';\n        action.classList.remove('opened');\n        codex.toolbar.inline.actionsOpened = false;\n    };\n\n    /** Action for link creation or for setting anchor */\n    inline.createLinkAction = function(event, type) {\n\n        var isActive = this.isLinkActive();\n\n        var editable        = codex.content.currentNode,\n            storedSelection = codex.toolbar.inline.storedSelection;\n\n        if (isActive) {\n\n            var selection   = window.getSelection(),\n                anchorNode  = selection.anchorNode;\n\n            storedSelection = codex.toolbar.inline.saveSelection(editable);\n\n            /**\n             * Changing stored selection. if we want to remove anchor from word\n             * we should remove anchor from whole word, not only selected part.\n             * The solution is than we get the length of current link\n             * Change start position to - end of selection minus length of anchor\n             */\n            codex.toolbar.inline.restoreSelection(editable, storedSelection);\n\n            codex.toolbar.inline.defaultToolAction('unlink');\n\n        } else {\n\n            /** Create input and close buttons */\n            var action = codex.draw.inputForLink();\n            codex.nodes.inlineToolbar.actions.appendChild(action);\n\n            codex.toolbar.inline.closeButtons();\n            codex.toolbar.inline.showActions();\n\n            storedSelection = codex.toolbar.inline.saveSelection(editable);\n\n            /**\n             * focus to input\n             * Solution: https://developer.mozilla.org/ru/docs/Web/API/HTMLElement/focus\n             * Prevents event after showing input and when we need to focus an input which is in unexisted form\n             */\n            action.focus();\n            event.preventDefault();\n\n            /** Callback to link action */\n            action.addEventListener('keydown', function(event){\n\n                if (event.keyCode == codex.core.keys.ENTER) {\n\n                    codex.toolbar.inline.restoreSelection(editable, storedSelection);\n                    codex.toolbar.inline.setAnchor(action.value);\n\n                    /**\n                     * Preventing events that will be able to happen\n                     */\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    codex.toolbar.inline.clearRange();\n                }\n\n            }, false);\n        }\n    };\n\n    inline.isLinkActive = function() {\n\n        var isActive = false;\n\n        codex.nodes.inlineToolbar.buttons.childNodes.forEach(function(tool) {\n            var dataType = tool.dataset.type;\n\n            if (dataType == 'link' && tool.classList.contains('hightlighted')) {\n                isActive = true;\n            }\n        });\n\n        return isActive;\n    };\n\n    /** default action behavior of tool */\n    inline.defaultToolAction = function(type) {\n        document.execCommand(type, false, null);\n    };\n\n    /**\n     * @private\n     *\n     * Sets URL\n     *\n     * @param {String} url - URL\n     */\n    inline.setAnchor = function(url) {\n\n        document.execCommand('createLink', false, url);\n\n        /** Close after URL inserting */\n        codex.toolbar.inline.closeAction();\n    };\n\n    /**\n     * @private\n     *\n     * Saves selection\n     */\n    inline.saveSelection = function(containerEl) {\n\n        var range = window.getSelection().getRangeAt(0),\n            preSelectionRange = range.cloneRange(),\n            start;\n\n        preSelectionRange.selectNodeContents(containerEl);\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\n\n        start = preSelectionRange.toString().length;\n\n        return {\n            start: start,\n            end: start + range.toString().length\n        };\n    };\n\n    /**\n     * @private\n     *\n     * Sets to previous selection (Range)\n     *\n     * @param {Element} containerEl - editable element where we restore range\n     * @param {Object} savedSel - range basic information to restore\n     */\n    inline.restoreSelection = function(containerEl, savedSel) {\n\n        var range     = document.createRange(),\n            charIndex = 0;\n\n        range.setStart(containerEl, 0);\n        range.collapse(true);\n\n        var nodeStack = [containerEl],\n            node,\n            foundStart = false,\n            stop = false,\n            nextCharIndex;\n\n        while (!stop && (node = nodeStack.pop())) {\n\n            if (node.nodeType == 3) {\n\n                nextCharIndex = charIndex + node.length;\n\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\n                    range.setStart(node, savedSel.start - charIndex);\n                    foundStart = true;\n                }\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\n                    range.setEnd(node, savedSel.end - charIndex);\n                    stop = true;\n                }\n                charIndex = nextCharIndex;\n            } else {\n                var i = node.childNodes.length;\n                while (i--) {\n                    nodeStack.push(node.childNodes[i]);\n                }\n            }\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    };\n\n    /**\n     * @private\n     *\n     * Removes all ranges from window selection\n     */\n    inline.clearRange = function() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n    };\n\n    /**\n     * @private\n     *\n     * sets or removes hightlight\n     */\n    inline.hightlight = function(tool) {\n        var dataType = tool.dataset.type;\n\n        if (document.queryCommandState(dataType)) {\n            codex.toolbar.inline.setButtonHighlighted(tool);\n        } else {\n            codex.toolbar.inline.removeButtonsHighLight(tool);\n        }\n\n        /**\n         *\n         * hightlight for anchors\n         */\n        var selection = window.getSelection(),\n            tag = selection.anchorNode.parentNode;\n\n        if (tag.tagName == 'A' && dataType == 'link') {\n            codex.toolbar.inline.setButtonHighlighted(tool);\n        }\n    };\n\n    /**\n     * @private\n     *\n     * Mark button if text is already executed\n     */\n    inline.setButtonHighlighted = function(button) {\n        button.classList.add('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n            var icon = button.childNodes[0];\n            icon.classList.remove('ce-icon-link');\n            icon.classList.add('ce-icon-unlink');\n        }\n    };\n\n    /**\n     * @private\n     *\n     * Removes hightlight\n     */\n    inline.removeButtonsHighLight = function(button) {\n        button.classList.remove('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n            var icon = button.childNodes[0];\n            icon.classList.remove('ce-icon-unlink');\n            icon.classList.add('ce-icon-link');\n        }\n    };\n\n\n    return inline;\n})({});\n\ninline.init();\n\nmodule.exports = inline;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/inline.js","/**\n * Codex Editor toolbox\n *\n * All tools be able to appended here\n *\n * @author Codex Team\n * @version 1.0\n */\n \nvar toolbox = (function(toolbox) {\n\n    toolbox.init = function () {\n\n        require('./toolbar');\n\n    };\n\n    toolbox.opened = false;\n\n    /** Shows toolbox */\n    toolbox.open = function() {\n\n        /** Close setting if toolbox is opened */\n        if (codex.toolbar.settings.opened) {\n\n            codex.toolbar.settings.close();\n\n        }\n\n        /** display toolbox */\n        codex.nodes.toolbox.classList.add('opened');\n\n        /** Animate plus button */\n        codex.nodes.plusButton.classList.add('clicked');\n\n        /** toolbox state */\n        codex.toolbar.toolbox.opened = true;\n\n    };\n\n    /** Closes toolbox */\n    toolbox.close = function() {\n\n        /** Makes toolbox disapear */\n        codex.nodes.toolbox.classList.remove('opened');\n\n        /** Rotate plus button */\n        codex.nodes.plusButton.classList.remove('clicked');\n\n        /** toolbox state */\n        codex.toolbar.toolbox.opened = false;\n\n    };\n\n    toolbox.leaf = function(){\n\n        var currentTool = codex.toolbar.current,\n            tools       = Object.keys(codex.tools),\n            barButtons  = codex.nodes.toolbarButtons,\n            nextToolIndex,\n            hiddenToolsAmount = 0,\n            toolToSelect;\n\n        /** Count toolbox hidden tools */\n        for( var tool in codex.tools ) {\n\n            if (!codex.tools[tool].displayInToolbox) {\n\n                hiddenToolsAmount ++;\n\n            }\n\n\n        }\n\n        if ( !currentTool ) {\n\n            /** Get first tool from object*/\n            for (toolToSelect in barButtons) break;\n\n        } else {\n\n            nextToolIndex = tools.indexOf(currentTool) + 1;\n\n            var toolIsLastInToolbox = nextToolIndex == tools.length - (hiddenToolsAmount - 2);\n\n            if ( toolIsLastInToolbox ) {\n\n                nextToolIndex = 0;\n\n                /** getting first displayed tool */\n                for( var tool in codex.tools ) {\n\n                    if (codex.tools[tool].displayInToolbox){\n\n                        break;\n\n                    }\n\n                    nextToolIndex ++;\n                }\n\n            }\n\n            toolToSelect = tools[nextToolIndex];\n\n        }\n\n        for (var button in barButtons) barButtons[button].classList.remove('selected');\n        barButtons[toolToSelect].classList.add('selected');\n        codex.toolbar.current = toolToSelect;\n\n    };\n\n    /**\n     * Transforming selected node type into selected toolbar element type\n     * @param {event} event\n     */\n    toolbox.toolClicked = function() {\n\n        /**\n         * UNREPLACEBLE_TOOLS this types of tools are forbidden to replace even they are empty\n         */\n        var UNREPLACEBLE_TOOLS = ['image', 'link', 'list', 'instagram', 'twitter'],\n            tool               = codex.tools[codex.toolbar.current],\n            workingNode        = codex.content.currentNode,\n            currentInputIndex  = codex.caret.inputIndex,\n            newBlockContent,\n            appendCallback,\n            blockData;\n\n        /** Make block from plugin */\n        newBlockContent = tool.make();\n\n        /** information about block */\n        blockData = {\n            block     : newBlockContent,\n            type      : tool.type,\n            stretched : false\n        };\n\n        if (\n            workingNode &&\n            UNREPLACEBLE_TOOLS.indexOf(workingNode.dataset.tool) === -1 &&\n            workingNode.textContent.trim() === ''\n        ){\n\n            /** Replace current block */\n            codex.content.switchBlock(workingNode, newBlockContent, tool.type);\n\n        } else {\n\n            /** Insert new Block from plugin */\n            codex.content.insertBlock(blockData);\n\n            /** increase input index */\n            currentInputIndex++;\n\n        }\n\n        /** Fire tool append callback  */\n        appendCallback = tool.appendCallback;\n\n        if (appendCallback && typeof appendCallback == 'function') {\n\n            appendCallback.call(event);\n\n        }\n\n        setTimeout(function() {\n\n            /** Set caret to current block */\n            codex.caret.setToBlock(currentInputIndex);\n\n        }, 10);\n\n\n        /**\n         * Changing current Node\n         */\n        codex.content.workingNodeChanged();\n\n        /**\n         * Move toolbar when node is changed\n         */\n        codex.toolbar.move();\n    };\n\n    return toolbox;\n\n})({});\n\ntoolbox.init();\n\nmodule.exports = toolbox;\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbox.js","/**\n * Codex Editor tools\n * This tools will be appended in toolbox\n *\n * @author Codex Team\n * @version 1.0\n */\n\nvar tools = (function(tools) {\n\n    return tools;\n\n})({});\n\nmodule.exports = tools;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/tools.js","/**\n * Codex Editor callbacks module\n *\n * @author Codex Team\n * @version 1.2.5\n */\n\nvar callbacks = (function(callbacks) {\n\n    callbacks.redactorSyncTimeout = null;\n\n    callbacks.globalKeydown = function(event){\n        switch (event.keyCode){\n            case codex.core.keys.ENTER : codex.callback.enterKeyPressed(event);     break;\n        }\n    };\n\n    callbacks.redactorKeyDown = function(event) {\n        switch (event.keyCode){\n            case codex.core.keys.TAB   : codex.callback.tabKeyPressed(event);                     break;\n            case codex.core.keys.ENTER : codex.callback.enterKeyPressedOnRedactorZone(event);     break;\n            case codex.core.keys.ESC   : codex.callback.escapeKeyPressed(event);                  break;\n            default                    : codex.callback.defaultKeyPressed(event);                 break;\n        }\n    };\n\n    callbacks.globalKeyup = function(event){\n        switch (event.keyCode){\n            case codex.core.keys.UP    :\n            case codex.core.keys.LEFT  :\n            case codex.core.keys.RIGHT :\n            case codex.core.keys.DOWN  : codex.callback.arrowKeyPressed(event); break;\n        }\n    };\n\n    callbacks.tabKeyPressed = function(event){\n\n        if ( !codex.toolbar.opened ) {\n            codex.toolbar.open();\n        }\n\n        if (codex.toolbar.opened && !codex.toolbar.toolbox.opened) {\n            codex.toolbar.toolbox.open();\n        } else {\n            codex.toolbar.toolbox.leaf();\n        }\n\n        event.preventDefault();\n    };\n\n    callbacks.enterKeyPressed = function(event) {\n\n        if (codex.content.editorAreaHightlighted) {\n\n            /**\n             * it means that we lose input index, saved index before is not correct\n             * therefore we need to set caret when we insert new block\n             */\n            codex.caret.inputIndex = -1;\n\n            codex.callback.enterPressedOnBlock();\n        }\n    };\n\n    /**\n     * ENTER key handler\n     * Makes new paragraph block\n     */\n    callbacks.enterKeyPressedOnRedactorZone = function(event){\n\n        if (event.target.contentEditable == 'true') {\n\n            /** Update input index */\n            codex.caret.saveCurrentInputIndex();\n        }\n\n        if (!codex.content.currentNode) {\n            /**\n             * Enter key pressed in first-level block area\n             */\n            codex.callback.enterPressedOnBlock(event);\n            return;\n        }\n\n\n        var currentInputIndex       = codex.caret.getCurrentInputIndex() || 0,\n            workingNode             = codex.content.currentNode,\n            tool                    = workingNode.dataset.tool,\n            isEnterPressedOnToolbar = codex.toolbar.opened &&\n                codex.toolbar.current &&\n                event.target == codex.state.inputs[currentInputIndex];\n\n        /** The list of tools which needs the default browser behaviour */\n        var enableLineBreaks = codex.tools[tool].enableLineBreaks;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\n\n        /**\n         * When toolbar is opened, select tool instead of making new paragraph\n         */\n        if ( isEnterPressedOnToolbar ) {\n\n            event.preventDefault();\n\n            codex.toolbar.toolbox.toolClicked(event);\n\n            codex.toolbar.close();\n\n            /**\n             * Stop other listeners callback executions\n             */\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n\n            return;\n\n        }\n\n        /**\n         * Allow making new <p> in same block by SHIFT+ENTER and forbids to prevent default browser behaviour\n         */\n        if ( event.shiftKey && !enableLineBreaks) {\n            codex.callback.enterPressedOnBlock(codex.content.currentBlock, event);\n            event.preventDefault();\n\n        } else if ( (event.shiftKey && !enableLineBreaks) || (!event.shiftKey && enableLineBreaks) ){\n            /** XOR */\n            return;\n        }\n\n        var isLastTextNode = false,\n            currentSelection = window.getSelection(),\n            currentSelectedNode = currentSelection.anchorNode,\n            caretAtTheEndOfText = codex.caret.position.atTheEnd(),\n            isTextNodeHasParentBetweenContenteditable = false;\n\n        /**\n         * Workaround situation when caret at the Text node that has some wrapper Elements\n         * Split block cant handle this.\n         * We need to save default behavior\n         */\n        isTextNodeHasParentBetweenContenteditable = currentSelectedNode && currentSelectedNode.parentNode.contentEditable != \"true\";\n\n        /**\n         * Split blocks when input has several nodes and caret placed in textNode\n         */\n        if (\n            currentSelectedNode.nodeType == codex.core.nodeTypes.TEXT &&\n            !isTextNodeHasParentBetweenContenteditable &&\n            !caretAtTheEndOfText\n        ){\n\n            event.preventDefault();\n\n            codex.core.log('Splitting Text node...');\n\n            codex.content.splitBlock(currentInputIndex);\n\n            /** Show plus button when next input after split is empty*/\n            if (!codex.state.inputs[currentInputIndex + 1].textContent.trim()) {\n                codex.toolbar.showPlusButton();\n            }\n\n        } else {\n\n            if ( currentSelectedNode && currentSelectedNode.parentNode) {\n\n                isLastTextNode = !currentSelectedNode.parentNode.nextSibling;\n\n            }\n\n            if ( isLastTextNode && caretAtTheEndOfText ) {\n\n                event.preventDefault();\n\n                codex.core.log('ENTER clicked in last textNode. Create new BLOCK');\n\n                codex.content.insertBlock({\n                    type  : NEW_BLOCK_TYPE,\n                    block : codex.tools[NEW_BLOCK_TYPE].render()\n                }, true );\n\n                codex.toolbar.move();\n                codex.toolbar.open();\n\n                /** Show plus button with empty block */\n                codex.toolbar.showPlusButton();\n\n            } else {\n\n                codex.core.log('Default ENTER behavior.');\n\n            }\n\n        }\n\n        /** get all inputs after new appending block */\n        codex.ui.saveInputs();\n\n    };\n\n    callbacks.escapeKeyPressed = function(event){\n\n        /** Close all toolbar */\n        codex.toolbar.close();\n\n        /** Close toolbox */\n        codex.toolbar.toolbox.close();\n\n        event.preventDefault();\n\n    };\n\n    callbacks.arrowKeyPressed = function(event){\n\n        codex.content.workingNodeChanged();\n\n        /* Closing toolbar */\n        codex.toolbar.close();\n        codex.toolbar.move();\n\n    };\n\n    callbacks.defaultKeyPressed = function(event) {\n\n        codex.toolbar.close();\n\n        if (!codex.toolbar.inline.actionsOpened) {\n            codex.toolbar.inline.close();\n            codex.content.clearMark();\n        }\n    };\n\n    callbacks.redactorClicked = function (event) {\n\n        callbacks.detectWhenClickedOnFirstLevelBlockArea();\n\n        codex.content.workingNodeChanged(event.target);\n\n        codex.ui.saveInputs();\n\n        var selectedText = codex.toolbar.inline.getSelectionText();\n\n        /**\n         * If selection range took off, then we hide inline toolbar\n         */\n        if (selectedText.length === 0) {\n            codex.toolbar.inline.close();\n        }\n\n        /** Update current input index in memory when caret focused into existed input */\n        if (event.target.contentEditable == 'true') {\n\n            codex.caret.saveCurrentInputIndex();\n\n        }\n\n        if (codex.content.currentNode === null) {\n\n            /**\n             * If inputs in redactor does not exits, then we put input index 0 not -1\n             */\n            var indexOfLastInput = codex.state.inputs.length > 0 ? codex.state.inputs.length - 1 : 0;\n\n            /** If we have any inputs */\n            if (codex.state.inputs.length) {\n\n                /** getting firstlevel parent of input */\n                var firstLevelBlock  = codex.content.getFirstLevelBlock(codex.state.inputs[indexOfLastInput]);\n            }\n\n            /** If input is empty, then we set caret to the last input */\n            if (codex.state.inputs.length && codex.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == codex.settings.initialBlockPlugin) {\n\n                codex.caret.setToBlock(indexOfLastInput);\n\n            } else {\n\n                /** Create new input when caret clicked in redactors area */\n                var NEW_BLOCK_TYPE = codex.settings.initialBlockPlugin;\n\n                codex.content.insertBlock({\n                    type  : NEW_BLOCK_TYPE,\n                    block : codex.tools[NEW_BLOCK_TYPE].render()\n                });\n\n                /** If there is no inputs except inserted */\n                if (codex.state.inputs.length === 1) {\n\n                    codex.caret.setToBlock(indexOfLastInput);\n\n                } else {\n\n                    /** Set caret to this appended input */\n                    codex.caret.setToNextBlock(indexOfLastInput);\n                }\n            }\n\n            /**\n             * Move toolbar to the right position and open\n             */\n            codex.toolbar.move();\n\n\n            codex.toolbar.open();\n\n        } else {\n\n            /**\n             * Move toolbar to the new position and open\n             */\n            codex.toolbar.move();\n\n            codex.toolbar.open();\n\n            /** Close all panels */\n            codex.toolbar.settings.close();\n            codex.toolbar.toolbox.close();\n        }\n\n\n        var inputIsEmpty = !codex.content.currentNode.textContent.trim();\n\n        if (inputIsEmpty) {\n\n            /** Show plus button */\n            codex.toolbar.showPlusButton();\n\n        } else {\n\n            /** Hide plus buttons */\n            codex.toolbar.hidePlusButton();\n\n        }\n\n        var currentNodeType = codex.content.currentNode.dataset.tool;\n\n        /** Mark current block*/\n        if (currentNodeType != codex.settings.initialBlockPlugin || !inputIsEmpty) {\n\n            codex.content.markBlock();\n\n        }\n\n    };\n\n    /**\n     * This method allows to define, is caret in contenteditable element or not.\n     * Otherwise, if we get TEXT node from range container, that will means we have input index.\n     * In this case we use default browsers behaviour (if plugin allows that) or overwritten action.\n     * Therefore, to be sure that we've clicked first-level block area, we should have currentNode, which always\n     * specifies to the first-level block. Other cases we just ignore.\n     */\n    callbacks.detectWhenClickedOnFirstLevelBlockArea = function() {\n\n        var selection  = window.getSelection(),\n            anchorNode = selection.anchorNode,\n            flag = false;\n\n        if (selection.rangeCount == 0) {\n\n            codex.content.editorAreaHightlighted = true;\n\n        } else {\n\n            if (!codex.core.isDomNode(anchorNode)) {\n                anchorNode = anchorNode.parentNode;\n            }\n\n            /** Already founded, without loop */\n            if (anchorNode.contentEditable == 'true') {\n                flag = true;\n            }\n\n            while (anchorNode.contentEditable != 'true') {\n                anchorNode = anchorNode.parentNode;\n\n                if (anchorNode.contentEditable == 'true') {\n                    flag = true;\n                }\n\n                if (anchorNode == document.body) {\n                    break;\n                }\n            }\n\n            /** If editable element founded, flag is \"TRUE\", Therefore we return \"FALSE\" */\n            codex.content.editorAreaHightlighted = flag ? false : true;\n        }\n\n    };\n\n    /**\n     * Toolbar button click handler\n     * @param this - cursor to the button\n     */\n    callbacks.toolbarButtonClicked = function (event) {\n\n        var button = this;\n\n        codex.toolbar.current = button.dataset.type;\n\n        codex.toolbar.toolbox.toolClicked(event);\n        codex.toolbar.close();\n\n    };\n\n    callbacks.redactorInputEvent = function (event) {\n\n        /**\n         * Clear previous sync-timeout\n         */\n        if (this.redactorSyncTimeout){\n            clearTimeout(this.redactorSyncTimeout);\n        }\n\n        /**\n         * Start waiting to input finish and sync redactor\n         */\n        this.redactorSyncTimeout = setTimeout(function() {\n\n            codex.content.sync();\n\n        }, 500);\n\n    };\n\n    /** Show or Hide toolbox when plus button is clicked */\n    callbacks.plusButtonClicked = function() {\n\n        if (!codex.nodes.toolbox.classList.contains('opened')) {\n\n            codex.toolbar.toolbox.open();\n\n        } else {\n\n            codex.toolbar.toolbox.close();\n\n        }\n    };\n\n    /**\n     * Block handlers for KeyDown events\n     */\n    callbacks.blockKeydown = function(event, block) {\n\n        switch (event.keyCode){\n\n            case codex.core.keys.DOWN:\n            case codex.core.keys.RIGHT:\n                codex.callback.blockRightOrDownArrowPressed(block);\n                break;\n\n            case codex.core.keys.BACKSPACE:\n                codex.callback.backspacePressed(block);\n                break;\n\n            case codex.core.keys.UP:\n            case codex.core.keys.LEFT:\n                codex.callback.blockLeftOrUpArrowPressed(block);\n                break;\n\n        }\n    };\n\n    /**\n     * RIGHT or DOWN keydowns on block\n     */\n    callbacks.blockRightOrDownArrowPressed = function (block) {\n\n        var selection   = window.getSelection(),\n            inputs      = codex.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode){\n            return false;\n        }\n\n        /** Looking for closest (parent) contentEditable element of focused node */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n        while (focusedNode != inputs[editableElementIndex]) {\n            editableElementIndex ++;\n        }\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent)\n        {\n            codex.caret.setToNextBlock(editableElementIndex);\n            return;\n        }\n\n        /**\n         * Do nothing when caret doesn not reaches the end of last child\n         */\n        var caretInLastChild    = false,\n            caretAtTheEndOfText = false;\n\n        var lastChild,\n            deepestTextnode;\n\n        lastChild = focusedNode.childNodes[focusedNode.childNodes.length - 1 ];\n\n        if (codex.core.isDomNode(lastChild)) {\n\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(lastChild, lastChild.childNodes.length);\n\n        } else {\n\n            deepestTextnode = lastChild;\n\n        }\n\n        caretInLastChild = selection.anchorNode == deepestTextnode;\n        caretAtTheEndOfText = deepestTextnode.length == selection.anchorOffset;\n\n        if ( !caretInLastChild  || !caretAtTheEndOfText ) {\n            codex.core.log('arrow [down|right] : caret does not reached the end');\n            return false;\n        }\n\n        codex.caret.setToNextBlock(editableElementIndex);\n\n    };\n\n    /**\n     * LEFT or UP keydowns on block\n     */\n    callbacks.blockLeftOrUpArrowPressed = function (block) {\n\n        var selection   = window.getSelection(),\n            inputs      = codex.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode){\n            return false;\n        }\n\n        /**\n         * LEFT or UP not at the beginning\n         */\n        if ( selection.anchorOffset !== 0) {\n            return false;\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n        while (focusedNode != inputs[editableElementIndex]) {\n            editableElementIndex ++;\n        }\n\n        /**\n         * Do nothing if caret is not at the beginning of first child\n         */\n        var caretInFirstChild   = false,\n            caretAtTheBeginning = false;\n\n        var firstChild,\n            deepestTextnode;\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n            codex.caret.setToPreviousBlock(editableElementIndex);\n            return;\n        }\n\n        firstChild = focusedNode.childNodes[0];\n\n        if (codex.core.isDomNode(firstChild)) {\n\n            deepestTextnode = codex.content.getDeepestTextNodeFromPosition(firstChild, 0);\n\n        } else {\n\n            deepestTextnode = firstChild;\n\n        }\n\n        caretInFirstChild   = selection.anchorNode == deepestTextnode;\n        caretAtTheBeginning = selection.anchorOffset === 0;\n\n        if ( caretInFirstChild && caretAtTheBeginning ) {\n\n            codex.caret.setToPreviousBlock(editableElementIndex);\n\n        }\n\n    };\n\n    /**\n     * Callback for enter key pressing in first-level block area\n     */\n    callbacks.enterPressedOnBlock = function (event) {\n\n        var NEW_BLOCK_TYPE  = codex.settings.initialBlockPlugin;\n\n        codex.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : codex.tools[NEW_BLOCK_TYPE].render()\n        }, true );\n\n        codex.toolbar.move();\n        codex.toolbar.open();\n\n    };\n\n    callbacks.backspacePressed = function (block) {\n\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\n            range,\n            selectionLength,\n            firstLevelBlocksCount;\n\n        if (block.textContent.trim()) {\n\n            range           = codex.content.getRange();\n            selectionLength = range.endOffset - range.startOffset;\n\n\n            if (codex.caret.position.atStart() && !selectionLength && codex.state.inputs[currentInputIndex - 1]) {\n\n                codex.content.mergeBlocks(currentInputIndex);\n\n            } else {\n\n                return;\n\n            }\n        }\n\n        if (!selectionLength) {\n            block.remove();\n        }\n\n\n        firstLevelBlocksCount = codex.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            codex.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            codex.ui.addInitialBlock();\n\n            /** Updating inputs state after deleting last block */\n            codex.ui.saveInputs();\n\n            /** Set to current appended block */\n            setTimeout(function () {\n\n                codex.caret.setToPreviousBlock(1);\n\n            }, 10);\n\n        } else {\n\n            if (codex.caret.inputIndex !== 0) {\n\n                /** Target block is not first */\n                codex.caret.setToPreviousBlock(codex.caret.inputIndex);\n\n            } else {\n\n                /** If we try to delete first block */\n                codex.caret.setToNextBlock(codex.caret.inputIndex);\n\n            }\n        }\n\n        codex.toolbar.move();\n\n        if (!codex.toolbar.opened) {\n            codex.toolbar.open();\n        }\n\n        /** Updating inputs state */\n        codex.ui.saveInputs();\n\n        /** Prevent default browser behaviour */\n        event.preventDefault();\n\n    };\n\n    /**\n     * @deprecated\n     *\n     * @param event\n     */\n    callbacks.blockPaste = function(event) {\n\n        var currentInputIndex = codex.caret.getCurrentInputIndex(),\n            node = codex.state.inputs[currentInputIndex];\n\n        setTimeout(function() {\n\n            codex.content.sanitize(node);\n\n            event.preventDefault();\n\n        }, 10);\n\n        event.stopImmediatePropagation();\n\n    };\n\n    callbacks.blockPasteCallback = function(event) {\n\n        var currentInputIndex = codex.caret.getCurrentInputIndex();\n\n        /**\n         * create an observer instance\n         */\n        var observer = new MutationObserver(codex.callback.handleMutationsOnPaste);\n\n        /**\n         * configuration of the observer:\n         */\n        var config = {\n            attributes: true,\n            childList: true,\n            characterData: false,\n            subtree : true\n        };\n\n        // pass in the target node, as well as the observer options\n        observer.observe(codex.state.inputs[currentInputIndex], config);\n    };\n\n    /**\n     * Sends all mutations to paste handler\n     */\n    callbacks.handleMutationsOnPaste = function(mutations) {\n\n        var self = this;\n\n        /**\n         * Calling function with context of this function.\n         * Also, we should sanitize pasted or changed data one time and ignore\n         * changings which makes sanitize method.\n         * For that, we need to send Context, MutationObserver.__proto__ that contains\n         * observer disconnect method.\n         */\n        mutations.forEach(function(mutation) {\n            codex.content.paste.call(self, mutation);\n        });\n    };\n\n    /**\n     * Clicks on block settings button\n     */\n    callbacks.showSettingsButtonClicked = function(){\n\n        /**\n         * Get type of current block\n         * It uses to append settings from tool.settings property.\n         * ...\n         * Type is stored in data-type attribute on block\n         */\n        var currentToolType = codex.content.currentNode.dataset.tool;\n\n        codex.toolbar.settings.toggle(currentToolType);\n\n        /** Close toolbox when settings button is active */\n        codex.toolbar.toolbox.close();\n        codex.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return callbacks;\n\n})({});\n\nmodule.exports  = callbacks;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/callbacks.js","/**\n * Codex Editor Draw module\n *\n * @author Codex Team\n * @version 1.0.\n */\n\nvar draw = (function(draw) {\n\n    /**\n     * Base editor wrapper\n     */\n    draw.wrapper = function () {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className += 'codex-editor';\n\n        return wrapper;\n\n    };\n\n    /**\n     * Content-editable holder\n     */\n    draw.redactor = function () {\n\n        var redactor = document.createElement('div');\n\n        redactor.className += 'ce-redactor';\n\n        return redactor;\n\n    };\n\n    draw.ceBlock = function() {\n\n        var block = document.createElement('DIV');\n\n        block.className += 'ce_block';\n\n        return block;\n\n    };\n\n    /**\n     * Empty toolbar with toggler\n     */\n    draw.toolbar = function () {\n\n        var bar = document.createElement('div');\n\n        bar.className += 'ce-toolbar';\n\n        return bar;\n    };\n\n    draw.toolbarContent = function() {\n\n        var wrapper = document.createElement('DIV');\n        wrapper.classList.add('ce-toolbar__content');\n\n        return wrapper;\n    };\n\n    /**\n     * Inline toolbar\n     */\n    draw.inlineToolbar = function() {\n\n        var bar = document.createElement('DIV');\n\n        bar.className += 'ce-toolbar-inline';\n\n        return bar;\n\n    };\n\n    /**\n     * Wrapper for inline toobar buttons\n     */\n    draw.inlineToolbarButtons = function() {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__buttons';\n\n        return wrapper;\n    };\n\n    /**\n     * For some actions\n     */\n    draw.inlineToolbarActions = function() {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__actions';\n\n        return wrapper;\n\n    };\n\n    draw.inputForLink = function() {\n\n        var input = document.createElement('INPUT');\n\n        input.type        = 'input';\n        input.className  += 'inputForLink';\n        input.placeholder = 'Type URL ...';\n        input.setAttribute('form', 'defaultForm');\n\n        input.setAttribute('autofocus', 'autofocus');\n\n        return input;\n\n    };\n\n    /**\n     * Block with notifications\n     */\n    draw.alertsHolder = function() {\n\n        var block = document.createElement('div');\n\n        block.classList.add('ce_notifications-block');\n\n        return block;\n\n    };\n\n    /**\n     * @todo Desc\n     */\n    draw.blockButtons = function() {\n\n        var block = document.createElement('div');\n\n        block.className += 'ce-toolbar__actions';\n\n        return block;\n    };\n\n    /**\n     * Block settings panel\n     */\n    draw.blockSettings = function () {\n\n        var settings = document.createElement('div');\n\n        settings.className += 'ce-settings';\n\n        return settings;\n    };\n\n    draw.defaultSettings = function() {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_default');\n\n        return div;\n    };\n\n    draw.pluginsSettings = function() {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_plugin');\n\n        return div;\n\n    };\n\n    draw.plusButton = function() {\n\n        var button = document.createElement('span');\n\n        button.className = 'ce-toolbar__plus';\n        // button.innerHTML = '<i class=\"ce-icon-plus\"></i>';\n\n        return button;\n    };\n\n    /**\n     * Settings button in toolbar\n     */\n    draw.settingsButton = function () {\n\n        var toggler = document.createElement('span');\n\n        toggler.className = 'ce-toolbar__settings-btn';\n\n        /** Toggler button*/\n        toggler.innerHTML = '<i class=\"ce-icon-cog\"></i>';\n\n        return toggler;\n    };\n\n    /**\n     * Redactor tools wrapper\n     */\n\n    draw.toolbox = function() {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className = 'ce-toolbar__tools';\n\n        return wrapper;\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tool buttons for toolbox\n     *\n     * @param {String} type\n     * @param {String} classname\n     * @returns {Element}\n     */\n    draw.toolbarButton = function (type, classname) {\n\n        var button     = document.createElement(\"li\"),\n            tool_icon  = document.createElement(\"i\"),\n            tool_title = document.createElement(\"span\");\n\n        button.dataset.type = type;\n        button.setAttribute('title', type);\n\n        tool_icon.classList.add(classname);\n        tool_title.classList.add('ce_toolbar_tools--title');\n\n\n        button.appendChild(tool_icon);\n        button.appendChild(tool_title);\n\n        return button;\n\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tools for inline toolbar\n     *\n     * @param {String} type\n     * @param {String} classname\n     */\n    draw.toolbarButtonInline = function(type, classname) {\n        var button     = document.createElement(\"BUTTON\"),\n            tool_icon  = document.createElement(\"I\");\n\n        button.type = \"button\";\n        button.dataset.type = type;\n        tool_icon.classList.add(classname);\n\n        button.appendChild(tool_icon);\n\n        return button;\n    };\n\n    /**\n     * Redactor block\n     */\n    draw.block = function (tagName, content) {\n\n        var node = document.createElement(tagName);\n\n        node.innerHTML = content || '';\n\n        return node;\n\n    };\n\n    /**\n     * Creates Node with passed tagName and className\n     * @param {string}  tagName\n     * @param {string} className\n     * @param {object} properties - allow to assign properties\n     */\n    draw.node = function( tagName , className , properties ){\n\n        var el = document.createElement( tagName );\n\n        if ( className ) el.className = className;\n\n        if ( properties ) {\n\n            for (var name in properties){\n                el[name] = properties[name];\n            }\n        }\n\n        return el;\n    };\n\n    draw.pluginsRender = function(type, content) {\n\n        return {\n            type  : type,\n            block : cEditor.tools[type].render({\n                text : content\n            })\n        };\n    };\n\n    return draw;\n\n})({});\n\nmodule.exports = draw;\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./modules/draw.js","/**\n * Codex Editor Caret Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nvar caret = (function(caret) {\n\n    /**\n     * @var {int} InputIndex - editable element in DOM\n     */\n    caret.inputIndex = null;\n\n    /**\n     * @var {int} offset - caret position in a text node.\n     */\n    caret.offset = null;\n\n    /**\n     * @var {int} focusedNodeIndex - we get index of child node from first-level block\n     */\n    caret.focusedNodeIndex = null;\n\n    /**\n     * Creates Document Range and sets caret to the element.\n     * @protected\n     * @uses caret.save — if you need to save caret position\n     * @param {Element} el - Changed Node.\n     */\n    caret.set = function( el , index, offset) {\n\n        offset = offset || this.offset || 0;\n        index  = index  || this.focusedNodeIndex || 0;\n\n        var childs = el.childNodes,\n            nodeToSet;\n\n        if ( childs.length === 0 ) {\n\n            nodeToSet = el;\n\n        } else {\n\n            nodeToSet = childs[index];\n\n        }\n\n        /** If Element is INPUT */\n        if (el.tagName == 'INPUT') {\n            el.focus();\n            return;\n        }\n\n        if (codex.core.isDomNode(nodeToSet)) {\n\n            nodeToSet = codex.content.getDeepestTextNodeFromPosition(nodeToSet, nodeToSet.childNodes.length);\n        }\n\n        var range     = document.createRange(),\n            selection = window.getSelection();\n\n        setTimeout(function() {\n\n            range.setStart(nodeToSet, offset);\n            range.setEnd(nodeToSet, offset);\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            codex.caret.saveCurrentInputIndex();\n\n        }, 20);\n    };\n\n    /**\n     * @protected\n     * Updates index of input and saves it in caret object\n     */\n    caret.saveCurrentInputIndex = function () {\n\n        /** Index of Input that we paste sanitized content */\n        var selection   = window.getSelection(),\n            inputs      = codex.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        if (!focusedNode){\n            return;\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n            editableElementIndex ++;\n        }\n\n        this.inputIndex = editableElementIndex;\n    };\n\n    /**\n     * Returns current input index (caret object)\n     */\n    caret.getCurrentInputIndex = function() {\n        return this.inputIndex;\n    };\n\n    /**\n     * @param {int} index - index of first-level block after that we set caret into next input\n     */\n    caret.setToNextBlock = function(index) {\n\n        var inputs = codex.state.inputs,\n            nextInput = inputs[index + 1];\n\n        if (!nextInput) {\n            codex.core.log('We are reached the end');\n            return;\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!nextInput.childNodes.length) {\n            var emptyTextElement = document.createTextNode('');\n            nextInput.appendChild(emptyTextElement);\n        }\n\n        codex.caret.inputIndex = index + 1;\n        codex.caret.set(nextInput, 0, 0);\n        codex.content.workingNodeChanged(nextInput);\n\n    };\n\n    /**\n     * @param {int} index - index of target input.\n     * Sets caret to input with this index\n     */\n    caret.setToBlock = function(index) {\n\n        var inputs = codex.state.inputs,\n            targetInput = inputs[index];\n\n        console.assert( targetInput , 'caret.setToBlock: target input does not exists');\n\n        if ( !targetInput ) {\n            return;\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!targetInput.childNodes.length) {\n            var emptyTextElement = document.createTextNode('');\n            targetInput.appendChild(emptyTextElement);\n        }\n\n        codex.caret.inputIndex = index;\n        codex.caret.set(targetInput, 0, 0);\n        codex.content.workingNodeChanged(targetInput);\n\n    };\n\n    /**\n     * @param {int} index - index of input\n     */\n    caret.setToPreviousBlock = function(index) {\n\n        index = index || 0;\n\n        var inputs = codex.state.inputs,\n            previousInput = inputs[index - 1],\n            lastChildNode,\n            lengthOfLastChildNode,\n            emptyTextElement;\n\n\n        if (!previousInput) {\n            codex.core.log('We are reached first node');\n            return;\n        }\n\n        lastChildNode = codex.content.getDeepestTextNodeFromPosition(previousInput, previousInput.childNodes.length);\n        lengthOfLastChildNode = lastChildNode.length;\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!previousInput.childNodes.length) {\n\n            emptyTextElement = document.createTextNode('');\n            previousInput.appendChild(emptyTextElement);\n        }\n        codex.caret.inputIndex = index - 1;\n        codex.caret.set(previousInput, previousInput.childNodes.length - 1, lengthOfLastChildNode);\n        codex.content.workingNodeChanged(inputs[index - 1]);\n    };\n\n    caret.position = {\n\n        atStart : function() {\n\n            var selection       = window.getSelection(),\n                anchorOffset    = selection.anchorOffset,\n                anchorNode      = selection.anchorNode,\n                firstLevelBlock = codex.content.getFirstLevelBlock(anchorNode),\n                pluginsRender   = firstLevelBlock.childNodes[0];\n\n            if (!codex.core.isDomNode(anchorNode)) {\n                anchorNode = anchorNode.parentNode;\n            }\n\n            var isFirstNode  = anchorNode === pluginsRender.childNodes[0],\n                isOffsetZero = anchorOffset === 0;\n\n            return isFirstNode && isOffsetZero;\n\n        },\n\n        atTheEnd : function() {\n\n            var selection    = window.getSelection(),\n                anchorOffset = selection.anchorOffset,\n                anchorNode   = selection.anchorNode;\n\n            /** Caret is at the end of input */\n            return !anchorNode || !anchorNode.length || anchorOffset === anchorNode.length;\n        }\n    };\n\n    return caret;\n\n})({});\n\nmodule.exports = caret;\n\n\n// WEBPACK FOOTER //\n// ./modules/caret.js","/**\n * Codex Editor Notification Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nvar notifications = (function(notifications) {\n\n    /**\n     * Error notificator. Shows block with message\n     * @protected\n     */\n    notifications.errorThrown = function(errorMsg, event) {\n\n        codex.notifications.send('This action is not available currently', event.type, false);\n\n    };\n\n    /**\n     * Appends notification with different types\n     * @param message {string} - Error or alert message\n     * @param type {string} - Type of message notification. Ex: Error, Warning, Danger ...\n     * @param append {boolean} - can be True or False when notification should be inserted after\n     */\n    notifications.send = function(message, type, append) {\n\n        var notification = codex.draw.block('div');\n\n        notification.textContent = message;\n        notification.classList.add('ce_notification-item', 'ce_notification-' + type, 'flipInX');\n\n        if (!append) {\n            codex.nodes.notifications.innerHTML = '';\n        }\n\n        codex.nodes.notifications.appendChild(notification);\n\n        setTimeout(function () {\n            notification.remove();\n        }, 3000);\n\n    };\n\n    return notifications;\n\n})({});\n\nmodule.exports = notifications;\n\n\n// WEBPACK FOOTER //\n// ./modules/notifications.js","/**\n * Codex Editor Parser Module\n *\n * @author Codex Team\n * @version 1.1\n */\n\nvar parser = (function(parser) {\n\n    /** inserting text */\n    parser.insertPastedContent = function(blockType, tag) {\n\n        codex.content.insertBlock({\n            type :  blockType.type,\n            block : blockType.render({\n                text : tag.innerHTML\n            })\n        });\n\n    };\n\n    /**\n     * Check DOM node for display style: separated block or child-view\n     */\n    parser.isFirstLevelBlock = function (node) {\n\n        return node.nodeType == cEditor.core.nodeTypes.TAG &&\n            node.classList.contains(cEditor.ui.className.BLOCK_CLASSNAME);\n\n    };\n\n    return parser;\n\n})({});\n\nmodule.exports = parser;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/parser.js"],"sourceRoot":""}