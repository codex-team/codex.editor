{"version":3,"sources":["webpack:///webpack/bootstrap b2a3ac9eff8ca080d11c","webpack:///./codex.js","webpack:///./modules/core.js","webpack:///./modules/ui.js","webpack:///./modules/transport.js","webpack:///./modules/renderer.js","webpack:///./modules/saver.js","webpack:///./modules/content.js","webpack:///./modules/toolbar/toolbar.js","webpack:///./modules/toolbar/settings.js","webpack:///./modules/toolbar/inline.js","webpack:///./modules/toolbar/toolbox.js","webpack:///./modules/callbacks.js","webpack:///./modules/draw.js","webpack:///./modules/caret.js","webpack:///./modules/notifications.js","webpack:///./modules/parser.js","webpack:///./modules/sanitizer.js","webpack:///./~/html-janitor/src/html-janitor.js"],"names":["module","exports","editor","version","init","core","require","ui","transport","renderer","saver","content","toolbar","callback","draw","caret","notifications","parser","sanitizer","settings","tools","textareaId","uploadImagesUrl","initialBlockPlugin","nodes","textarea","wrapper","inlineToolbar","buttons","actions","toolbox","plusButton","showSettingsButton","showTrashButton","blockSettings","pluginSettings","defaultSettings","toolbarButtons","redactor","state","jsonOutput","blocks","inputs","start","userSettings","prepare","then","make","addTools","bindEvents","preparePlugins","makeBlocksFromData","saveInputs","catch","error","log","codex","Promise","resolve","reject","data","document","getElementById","undefined","Error","msg","type","arg","window","console","e","insertAfter","target","element","parentNode","insertBefore","nextSibling","nodeTypes","TAG","TEXT","COMMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","el","nodeType","ajax","url","XMLHTTP","XMLHttpRequest","ActiveXObject","successFunction","params","obj","async","success","test","encodeURIComponent","withCredentials","beforeSend","call","open","setRequestHeader","onreadystatechange","readyState","status","responseText","send","importScript","scriptPath","instanceName","instancePrefix","script","createElement","defer","id","onload","onerror","src","head","appendChild","className","BLOCK_CLASSNAME","BLOCK_CONTENT","BLOCK_STRETCHED","BLOCK_HIGHLIGHTED","BLOCK_IN_FEED_MODE","SETTINGS_ITEM","toolbarContent","blockButtons","alertsHolder","body","settingsButton","makeRemoveBlockButton","pluginsSettings","makeInlineToolbar","addDefaultSettings","container","inlineToolbarButtons","inlineToolbarActions","tool","toolName","toolButton","iconClassname","render","displayInToolbox","toolbarButton","addInlineToolbarTools","bold","icon","command","italic","underline","link","name","toolbarButtonInline","setInlineToolbarButtonBehaviour","addEventListener","globalKeydown","redactorKeyDown","globalKeyup","redactorClicked","plusButtonClicked","showSettingsButtonClicked","button","toolbarButtonClicked","resolve_","reject_","pluginName","plugin","queue","sequence","push","request","continue_","abort_","reduce","previousValue","currentValue","index","ahead_","away_","callPluginsPrepareMethod_","length","available","config","addBlockHandlers","block","blockKeydown","blockPasteCallback","inline","show","querySelectorAll","addInitialBlock","initialBlockType","initialBlock","setAttribute","insertBlock","workingNodeChanged","event","toolClicked","input","arguments","fileSelected","clearInput","files","formdData","FormData","append","selectAndUpload","args","click","xhr","items","appendBlocks","nodeSequence","appendNodeAtIndex","getNodeAsync","createBlockFromData","blockData","blocksList","cover","stretched","isStretched","saveBlocks","html","innerHTML","childNodes","makeQueue","getBlockData","makeFormDataFromBlocks","dataset","save","blockContent","pluginsContent","savedData","output","validate","result","classList","contains","currentNode","editorAreaHightlighted","sync","getNodeFocused","selection","getSelection","focused","anchorNode","focusNode","parentElement","isFirstLevelBlock","parent","markBlock","add","clearMark","remove","getFirstLevelBlock","node","targetNode","replaceBlock","targetBlock","newBlock","replaceChild","needPlaceCaret","workingBlock","newBlockContent","blockType","composeNewBlock","currentInputIndex","getCurrentInputIndex","editableElement","querySelector","emptyText","createTextNode","set","move","showPlusButton","setTimeout","setToNextBlock","switchBlock","blockToReplace","newBlockComposed","getDeepestTextNodeFromPosition","position","blockChilds","text","textContent","trim","removeChild","lookingFromStart","getRange","getRangeAt","splitBlock","inputIndex","anchorNodeText","caretOffset","anchorOffset","textBeforeCaret","textNodeBeforeCaret","textAfterCaret","textNodeAfterCaret","currentBlock","substring","previousChilds","nextChilds","reachedCurrent","i","child","previousChildsLength","nextChildsLength","newNode","NEW_BLOCK_TYPE","mergeBlocks","targetInputIndex","targetInput","currentInputContent","paste","mutation","workingNode","allowedToPaste","sanitize","pasteTextContent","addedNodes","textNode","disconnect","cleaner","satinizer","Config","BASIC","clean","outerHTML","div","replaceWith","isLastNode","allChecked","allSiblingsEmpty_","sibling","wrapTextWithParagraphs","htmlString","newWrapper","paragraph","firstLevelBlocks","blockTyped","indexOf","tagName","cloneNode","defaultToolbarHeight","defaultOffset","opened","current","close","toggle","hidePlusButton","newYCoordinate","offsetTop","style","transform","Math","floor","hideRemoveActions","setting","toolType","makeSettings","settingsBlock","feedModeToggler","makeFeedModeToggler","isFeedModeActivated","updateFeedMode","removeBlockWrapper","settingButton","actionWrapper","confirmAction","cancelAction","removeButtonClicked","confirmRemovingRequest","cancelRemovingRequest","action","showRemoveActions","firstLevelBlocksCount","buttonsOpened","actionsOpened","wrappersOffset","storedSelection","showInlineToolbar","selectedText","getSelectionText","showButtons","getWrappersOffset","coords","getSelectionCoords","newCoordinateX","newCoordinateY","offsetHeight","x","left","y","scrollY","top","closeButtons","closeAction","createLinkAction","defaultToolAction","forEach","hightlight","offset","getOffset","_x","_y","isNaN","offsetLeft","clientLeft","clientTop","offsetParent","sel","range","createRange","collapse","boundingLeft","boundingTop","rangeCount","cloneRange","getClientRects","rect","toString","showActions","inlineToolbarAnchorInputKeydown_","keyCode","editable","restoreSelection","setAnchor","value","preventDefault","stopImmediatePropagation","clearRange","isActive","isLinkActive","saveSelection","inputForLink","focus","dataType","execCommand","containerEl","preSelectionRange","selectNodeContents","setEnd","startContainer","startOffset","end","savedSel","charIndex","setStart","nodeStack","foundStart","stop","nextCharIndex","pop","removeAllRanges","addRange","queryCommandState","setButtonHighlighted","removeButtonsHighLight","tag","leaf","currentTool","Object","barButtons","nextToolIndex","toolToSelect","visibleTool","UNREPLACEBLE_TOOLS","appendCallback","setToBlock","callbacks","enterKeyPressed","tabKeyPressed","enterKeyPressedOnRedactorZone","escapeKeyPressed","defaultKeyPressed","arrowKeyPressed","enterPressedOnBlock","contentEditable","saveCurrentInputIndex","isEnterPressedOnToolbar","enableLineBreaks","stopPropagation","shiftKey","currentSelection","currentSelectedNode","caretAtTheEndOfText","atTheEnd","isTextNodeHasParentBetweenContenteditable","islastNode","detectWhenClickedOnFirstLevelBlockArea","firstLevelBlock","indexOfLastInput","inputIsEmpty","currentNodeType","isInitialType","flag","blockRightOrDownArrowPressed","backspacePressed","blockLeftOrUpArrowPressed","focusedNode","focusedNodeHolder","editableElementIndex","caretInLastChild","lastChild","deepestTextnode","caretInFirstChild","caretAtTheBeginning","firstChild","setToPreviousBlock","selectionLength","endOffset","atStart","blockPaste","_blockPasteCallback","observer","MutationObserver","handleMutationsOnPaste","attributes","childList","characterData","subtree","observe","clipboardData","getData","cleanData","fragment","createDocumentFragment","lastNode","deleteContents","insertNode","setStartAfter","mutations","self","currentToolType","ceBlock","bar","placeholder","toggler","classname","toolIcon","toolTitle","properties","focusedNodeIndex","childs","nodeToSet","nextInput","emptyTextElement","previousInput","lastChildNode","lengthOfLastChildNode","pluginsRender","isFirstNode","isOffsetZero","errorThrown","errorMsg","message","notification","insertPastedContent","janitor","tags","p","a","href","rel","b","strong","em","span"],"mappings":"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","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b2a3ac9eff8ca080d11c","/**\n *\n * Codex Editor\n *\n * @author Codex Team\n */\n\nmodule.exports = (function (editor) {\n\n    'use strict';\n\n    editor.version = VERSION;\n\n    var init = function () {\n\n        editor.core          = require('./modules/core');\n        editor.ui            = require('./modules/ui');\n        editor.transport     = require('./modules/transport');\n        editor.renderer      = require('./modules/renderer');\n        editor.saver         = require('./modules/saver');\n        editor.content       = require('./modules/content');\n        editor.toolbar       = require('./modules/toolbar/toolbar');\n        editor.callback      = require('./modules/callbacks');\n        editor.draw          = require('./modules/draw');\n        editor.caret         = require('./modules/caret');\n        editor.notifications = require('./modules/notifications');\n        editor.parser        = require('./modules/parser');\n        editor.sanitizer     = require('./modules/sanitizer');\n\n    };\n\n    /**\n     * @public\n     *\n     * holds initial settings\n     */\n    editor.settings = {\n        tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\n        textareaId: 'codex-editor',\n        uploadImagesUrl: '/editor/transport/',\n\n        // Type of block showing on empty editor\n        initialBlockPlugin: 'paragraph'\n    };\n\n    /**\n     * public\n     *\n     * Static nodes\n     */\n    editor.nodes = {\n        textarea          : null,\n        wrapper           : null,\n        toolbar           : null,\n        inlineToolbar     : {\n            wrapper : null,\n            buttons : null,\n            actions : null\n        },\n        toolbox           : null,\n        notifications     : null,\n        plusButton        : null,\n        showSettingsButton: null,\n        showTrashButton   : null,\n        blockSettings     : null,\n        pluginSettings    : null,\n        defaultSettings   : null,\n        toolbarButtons    : {}, // { type : DomEl, ... }\n        redactor          : null\n    };\n\n    /**\n     * @public\n     *\n     * Output state\n     */\n    editor.state = {\n        jsonOutput: [],\n        blocks    : [],\n        inputs    : []\n    };\n\n    /**\n    * @public\n    * Editor plugins\n    */\n    editor.tools = {};\n\n    /**\n     * Initialization\n     * @uses Promise cEditor.core.prepare\n     * @param {} userSettings are :\n     *          - tools [],\n     *          - textareaId String\n     *          ...\n     *\n     * Load user defined tools\n     * Tools must contain this important objects :\n     *  @param {String} type - this is a type of plugin. It can be used as plugin name\n     *  @param {String} iconClassname - this a icon in toolbar\n     *  @param {Object} make - what should plugin do, when it is clicked\n     *  @param {Object} appendCallback - callback after clicking\n     *  @param {Element} settings - what settings does it have\n     *  @param {Object} render - plugin get JSON, and should return HTML\n     *  @param {Object} save - plugin gets HTML content, returns JSON\n     *  @param {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n     *  @param {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n     *\n     * @example\n     *   -  type             : 'header',\n     *   -  iconClassname    : 'ce-icon-header',\n     *   -  make             : headerTool.make,\n     *   -  appendCallback   : headerTool.appendCallback,\n     *   -  settings         : headerTool.makeSettings(),\n     *   -  render           : headerTool.render,\n     *   -  save             : headerTool.save,\n     *   -  displayInToolbox : true,\n     *   -  enableLineBreaks : false\n     */\n    editor.start = function (userSettings) {\n\n        init();\n\n        editor.core.prepare(userSettings)\n\n        // If all ok, make UI, bind events and parse initial-content\n            .then(editor.ui.make)\n            .then(editor.ui.addTools)\n            .then(editor.ui.bindEvents)\n            .then(editor.ui.preparePlugins)\n            .then(editor.transport.prepare)\n            .then(editor.renderer.makeBlocksFromData)\n            .then(editor.ui.saveInputs)\n            .catch(function (error) {\n\n                editor.core.log('Initialization failed with error: %o', 'warn', error);\n\n            });\n\n    };\n\n    return editor;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./codex.js","/**\n * Codex Editor Core\n *\n * @author Codex Team\n * @version 1.1.2\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (core) {\n\n    /**\n     * @public\n     *\n     * Editor preparing method\n     * @return Promise\n     */\n    core.prepare = function (userSettings) {\n\n        return new Promise(function (resolve, reject) {\n\n            if ( userSettings ) {\n\n                editor.settings.tools = userSettings.tools || editor.settings.tools;\n\n            }\n\n            if (userSettings.data) {\n\n                editor.state.blocks = userSettings.data;\n\n            }\n\n            if (userSettings.initialBlockPlugin) {\n\n                editor.settings.initialBlockPlugin = userSettings.initialBlockPlugin;\n\n            }\n\n            if (userSettings.uploadImagesUrl) {\n\n                editor.settings.uploadImagesUrl = userSettings.uploadImagesUrl;\n\n            }\n\n            editor.nodes.textarea = document.getElementById(userSettings.textareaId || editor.settings.textareaId);\n\n            if (typeof editor.nodes.textarea === undefined || editor.nodes.textarea === null) {\n\n                reject(Error(\"Textarea wasn't found by ID: #\" + userSettings.textareaId));\n\n            } else {\n\n                resolve();\n\n            }\n\n        });\n\n    };\n\n    /**\n     * Logging method\n     * @param type = ['log', 'info', 'warn']\n     */\n    core.log = function (msg, type, arg) {\n\n        type = type || 'log';\n\n        if (!arg) {\n\n            arg  = msg || 'undefined';\n            msg  = '[codex-editor]:      %o';\n\n        } else {\n\n            msg  = '[codex-editor]:      ' + msg;\n\n        }\n\n        try{\n\n            if ( 'console' in window && window.console[ type ] ) {\n\n                if ( arg ) window.console[ type ]( msg, arg );\n                else window.console[ type ]( msg );\n\n            }\n\n        }catch(e) {}\n\n    };\n\n    /**\n     * @protected\n     *\n     * Helper for insert one element after another\n     */\n    core.insertAfter = function (target, element) {\n\n        target.parentNode.insertBefore(element, target.nextSibling);\n\n    };\n\n    /**\n     * @const\n     *\n     * Readable DOM-node types map\n     */\n    core.nodeTypes = {\n        TAG     : 1,\n        TEXT    : 3,\n        COMMENT : 8\n    };\n\n    /**\n     * @const\n     * Readable keys map\n     */\n    core.keys = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 };\n\n    /**\n     * @protected\n     *\n     * Check object for DOM node\n     */\n    core.isDomNode = function (el) {\n\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\n    };\n\n    /**\n     * Native Ajax\n     */\n    core.ajax = function (data) {\n\n        if (!data || !data.url) {\n\n            return;\n\n        }\n\n        var XMLHTTP          = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject('Microsoft.XMLHTTP'),\n            successFunction = function () {},\n            params = '',\n            obj;\n\n        data.async           = true;\n        data.type            = data.type || 'GET';\n        data.data            = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        successFunction     = data.success || successFunction ;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\n        } else {\n\n            for(obj in data.data) {\n\n                params += (obj + '=' + encodeURIComponent(data.data[obj]) + '&');\n\n            }\n\n        }\n\n        if (data.withCredentials) {\n\n            XMLHTTP.withCredentials = true;\n\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\n            data.beforeSend.call();\n\n        }\n\n        XMLHTTP.open( data.type, data.url, data.async );\n        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        XMLHTTP.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n        XMLHTTP.onreadystatechange = function () {\n\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\n                successFunction(XMLHTTP.responseText);\n\n            }\n\n        };\n\n        XMLHTTP.send(params);\n\n    };\n\n    /**\n    * Appends script to head of document\n    * @return Promise\n    */\n    core.importScript = function (scriptPath, instanceName) {\n\n        return new Promise(function (resolve, reject) {\n\n            const instancePrefix = 'cdx-script-';\n\n            let script;\n\n            /** Script is already loaded */\n            if ( !instanceName ) {\n\n                reject('Instance name is missed');\n\n            } else if ( document.getElementById(instancePrefix + instanceName) ) {\n\n                resolve(scriptPath);\n\n            }\n\n            script = document.createElement('SCRIPT');\n            script.async = true;\n            script.defer = true;\n            script.id = instancePrefix + instanceName;\n\n            script.onload = function () {\n\n                resolve(scriptPath);\n\n            };\n\n            script.onerror = function () {\n\n                reject(scriptPath);\n\n            };\n\n            script.src = scriptPath;\n            document.head.appendChild(script);\n\n        });\n\n    };\n\n    return core;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/core.js","/**\n * Codex Editor UI module\n *\n * @author Codex Team\n * @version 1.1\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (ui) {\n\n    /**\n     * Basic editor classnames\n     */\n    ui.className = {\n\n        /**\n         * @const {string} BLOCK_CLASSNAME - redactor blocks name\n         */\n        BLOCK_CLASSNAME : 'ce-block',\n\n        /**\n         * @const {String} wrapper for plugins content\n         */\n        BLOCK_CONTENT : 'ce-block__content',\n\n        /**\n         * @const {String} BLOCK_STRETCHED - makes block stretched\n         */\n        BLOCK_STRETCHED : 'ce-block--stretched',\n\n        /**\n         * @const {String} BLOCK_HIGHLIGHTED - adds background\n         */\n        BLOCK_HIGHLIGHTED : 'ce-block--focused',\n\n        /**\n         * @const {String} - highlights covered blocks\n         */\n        BLOCK_IN_FEED_MODE : 'ce-block--feed-mode',\n\n        /**\n         * @const {String} - for all default settings\n         */\n        SETTINGS_ITEM : 'ce-settings__item'\n\n    };\n\n    /**\n     * @protected\n     *\n     * Making main interface\n     */\n    ui.make = function () {\n\n        var wrapper,\n            toolbar,\n            toolbarContent,\n            redactor,\n            notifications,\n            blockButtons,\n            blockSettings,\n            showSettingsButton,\n            showTrashButton,\n            toolbox,\n            plusButton;\n\n        /** Make editor wrapper */\n        wrapper = editor.draw.wrapper();\n\n        /** Append editor wrapper after initial textarea */\n        editor.core.insertAfter(editor.nodes.textarea, wrapper);\n\n        /** Append block with notifications to the document */\n        notifications = editor.draw.alertsHolder();\n        editor.nodes.notifications = document.body.appendChild(notifications);\n\n        /** Make toolbar and content-editable redactor */\n        toolbar               = editor.draw.toolbar();\n        toolbarContent        = editor.draw.toolbarContent();\n        plusButton            = editor.draw.plusButton();\n        showSettingsButton    = editor.draw.settingsButton();\n        showTrashButton       = editor.toolbar.settings.makeRemoveBlockButton();\n        blockSettings         = editor.draw.blockSettings();\n        blockButtons          = editor.draw.blockButtons();\n        toolbox               = editor.draw.toolbox();\n        redactor              = editor.draw.redactor();\n\n        /** settings */\n        var defaultSettings = editor.draw.defaultSettings(),\n            pluginSettings  = editor.draw.pluginsSettings();\n\n        /** Add default and plugins settings */\n        blockSettings.appendChild(pluginSettings);\n        blockSettings.appendChild(defaultSettings);\n\n        /** Make blocks buttons\n         * This block contains settings button and remove block button\n         */\n        blockButtons.appendChild(showSettingsButton);\n        blockButtons.appendChild(showTrashButton);\n        blockButtons.appendChild(blockSettings);\n\n        /** Append plus button */\n        toolbarContent.appendChild(plusButton);\n\n        /** Appending toolbar tools */\n        toolbarContent.appendChild(toolbox);\n\n        /** Appending first-level block buttons */\n        toolbar.appendChild(blockButtons);\n\n        /** Append toolbarContent to toolbar */\n        toolbar.appendChild(toolbarContent);\n\n        wrapper.appendChild(toolbar);\n\n        wrapper.appendChild(redactor);\n\n        /** Save created ui-elements to static nodes state */\n        editor.nodes.wrapper            = wrapper;\n        editor.nodes.toolbar            = toolbar;\n        editor.nodes.plusButton         = plusButton;\n        editor.nodes.toolbox            = toolbox;\n        editor.nodes.blockSettings      = blockSettings;\n        editor.nodes.pluginSettings     = pluginSettings;\n        editor.nodes.defaultSettings    = defaultSettings;\n        editor.nodes.showSettingsButton = showSettingsButton;\n        editor.nodes.showTrashButton    = showTrashButton;\n\n        editor.nodes.redactor = redactor;\n\n        /** Make container for inline toolbar */\n        editor.ui.makeInlineToolbar();\n\n        /** fill in default settings */\n        editor.toolbar.settings.addDefaultSettings();\n\n    };\n\n    ui.makeInlineToolbar = function () {\n\n        var container = editor.draw.inlineToolbar();\n\n        /** Append to redactor new inline block */\n        editor.nodes.inlineToolbar.wrapper = container;\n\n        /** Draw toolbar buttons */\n        editor.nodes.inlineToolbar.buttons = editor.draw.inlineToolbarButtons();\n\n        /** Buttons action or settings */\n        editor.nodes.inlineToolbar.actions = editor.draw.inlineToolbarActions();\n\n        /** Append to inline toolbar buttons as part of it */\n        editor.nodes.inlineToolbar.wrapper.appendChild(editor.nodes.inlineToolbar.buttons);\n        editor.nodes.inlineToolbar.wrapper.appendChild(editor.nodes.inlineToolbar.actions);\n\n        editor.nodes.wrapper.appendChild(editor.nodes.inlineToolbar.wrapper);\n\n    };\n\n    /**\n     * @private\n     * Append tools passed in editor.tools\n     */\n    ui.addTools = function () {\n\n        var tool,\n            toolName,\n            toolButton;\n\n        for ( toolName in editor.settings.tools ) {\n\n            tool = editor.settings.tools[toolName];\n\n            editor.tools[toolName] = tool;\n\n            if (!tool.iconClassname) {\n\n                editor.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', toolName);\n                continue;\n\n            }\n\n            if (typeof tool.render != 'function') {\n\n                editor.core.log('render method missed. Tool %o skipped', 'warn', toolName);\n                continue;\n\n            }\n\n            if (!tool.displayInToolbox) {\n\n                continue;\n\n            } else {\n\n                /** if tools is for toolbox */\n                toolButton = editor.draw.toolbarButton(toolName, tool.iconClassname);\n\n                editor.nodes.toolbox.appendChild(toolButton);\n\n                editor.nodes.toolbarButtons[toolName] = toolButton;\n\n            }\n\n        }\n\n        /**\n         * Add inline toolbar tools\n         */\n        editor.ui.addInlineToolbarTools();\n\n\n    };\n\n    ui.addInlineToolbarTools = function () {\n\n        var tools = {\n\n            bold: {\n                icon    : 'ce-icon-bold',\n                command : 'bold'\n            },\n\n            italic: {\n                icon    : 'ce-icon-italic',\n                command : 'italic'\n            },\n\n            underline: {\n                icon    : 'ce-icon-underline',\n                command : 'underline'\n            },\n\n            link: {\n                icon    : 'ce-icon-link',\n                command : 'createLink'\n            }\n        };\n\n        var toolButton,\n            tool;\n\n        for(var name in tools) {\n\n            tool = tools[name];\n\n            toolButton = editor.draw.toolbarButtonInline(name, tool.icon);\n\n            editor.nodes.inlineToolbar.buttons.appendChild(toolButton);\n            /**\n             * Add callbacks to this buttons\n             */\n            editor.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\n\n        }\n\n    };\n\n    /**\n     * @private\n     * Bind editor UI events\n     */\n    ui.bindEvents = function () {\n\n        editor.core.log('ui.bindEvents fired', 'info');\n\n        // window.addEventListener('error', function (errorMsg, url, lineNumber) {\n        //     editor.notifications.errorThrown(errorMsg, event);\n        // }, false );\n\n        /** All keydowns on Document */\n        document.addEventListener('keydown', editor.callback.globalKeydown, false );\n\n        /** All keydowns on Redactor zone */\n        editor.nodes.redactor.addEventListener('keydown', editor.callback.redactorKeyDown, false);\n\n        /** All keydowns on Document */\n        document.addEventListener('keyup', editor.callback.globalKeyup, false );\n\n        /**\n         * Mouse click to radactor\n         */\n        editor.nodes.redactor.addEventListener('click', editor.callback.redactorClicked, false );\n\n        /**\n         * Clicks to the Plus button\n         */\n        editor.nodes.plusButton.addEventListener('click', editor.callback.plusButtonClicked, false);\n\n        /**\n         * Clicks to SETTINGS button in toolbar\n         */\n        editor.nodes.showSettingsButton.addEventListener('click', editor.callback.showSettingsButtonClicked, false );\n\n        /**\n         *  @deprecated ( but now in use for syncronization );\n         *  Any redactor changes: keyboard input, mouse cut/paste, drag-n-drop text\n         */\n        // editor.nodes.redactor.addEventListener('input', editor.callback.redactorInputEvent, false );\n\n        /** Bind click listeners on toolbar buttons */\n        for (var button in editor.nodes.toolbarButtons) {\n\n            editor.nodes.toolbarButtons[button].addEventListener('click', editor.callback.toolbarButtonClicked, false);\n\n        }\n\n    };\n\n    /**\n     * Initialize plugins before using\n     * Ex. Load scripts or call some internal methods\n     * @return Promise\n     */\n    ui.preparePlugins = function () {\n\n        return new Promise(function (resolve_, reject_) {\n\n            let pluginName,\n                plugin,\n                queue = [],\n                sequence;\n\n            for ( pluginName in editor.tools ) {\n\n                plugin = editor.tools[pluginName];\n\n                if (plugin.prepare && typeof plugin.prepare != 'function' || !plugin.prepare) {\n\n                    continue;\n\n                }\n\n                queue.push(plugin);\n\n            }\n\n            /** Make a sequence from blocks that have prepare method */\n            sequence = Promise.resolve();\n\n            sequence.then(function () {\n\n                return queue;\n\n            })\n\n            .then(function (request) {\n\n                return new Promise (function (continue_, abort_) {\n\n                    request.reduce(function (previousValue, currentValue, index) {\n\n                        return previousValue.then( function () {\n\n                            return new Promise ( function (ahead_, away_) {\n\n                                callPluginsPrepareMethod_( currentValue )\n\n                                    .then( ahead_ )\n\n                                    .then( function () {\n\n                                        if (index == request.length - 1) {\n\n                                            continue_();\n\n                                        }\n\n                                    }).catch(function () {\n\n                                        editor.core.log('Plugin was not loaded', 'warn', currentValue);\n                                        currentValue.available = false;\n\n                                        /** Go ahead even some plugin has problems */\n                                        ahead_();\n\n                                        /** If last plugin has problems then just ignore and continue */\n                                        if (index == request.length - 1) {\n\n                                            continue_();\n\n                                        }\n\n                                    });\n\n                            });\n\n                        });\n\n                    }, Promise.resolve() );\n\n                });\n\n            })\n\n            .then(function () {\n\n                editor.core.log('Basic functionality initialized', 'info');\n                resolve_();\n\n            }).catch(function (error) {\n\n                reject_(error);\n\n            });\n\n        });\n\n    };\n\n    var callPluginsPrepareMethod_ = function (plugin) {\n\n        return plugin.prepare( plugin.config || {} );\n\n    };\n\n    ui.addBlockHandlers = function (block) {\n\n        if (!block) return;\n\n        /**\n         * Block keydowns\n         */\n        block.addEventListener('keydown', editor.callback.blockKeydown, false);\n\n        /**\n         * Pasting content from another source\n         * We have two type of sanitization\n         * First - uses deep-first search algorithm to get sub nodes,\n         * sanitizes whole Block_content and replaces cleared nodes\n         * This method is deprecated\n         * Method is used in editor.callback.blockPaste(event)\n         *\n         * Secont - uses Mutation observer.\n         * Observer \"observe\" DOM changes and send changings to callback.\n         * Callback gets changed node, not whole Block_content.\n         * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\n         *\n         * Method is used in editor.callback.blockPasteViaSanitize(event)\n         *\n         * @uses html-janitor\n         * @example editor.callback.blockPasteViaSanitize(event), the second method.\n         *\n         */\n        block.addEventListener('paste', editor.callback.blockPasteCallback, false);\n\n        block.addEventListener('mouseup', editor.toolbar.inline.show, false);\n\n    };\n\n    /** getting all contenteditable elements */\n    ui.saveInputs = function () {\n\n        var redactor = editor.nodes.redactor;\n\n        /** Save all inputs in global variable state */\n        editor.state.inputs = redactor.querySelectorAll('[contenteditable], input');\n\n    };\n\n    /**\n     * Adds first initial block on empty redactor\n     */\n    ui.addInitialBlock = function () {\n\n        var initialBlockType = editor.settings.initialBlockPlugin,\n            initialBlock;\n\n        if ( !editor.tools[initialBlockType] ) {\n\n            editor.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\n            return;\n\n        }\n\n        initialBlock = editor.tools[initialBlockType].render();\n\n        initialBlock.setAttribute('data-placeholder', 'Расскажите свою историю...');\n\n        editor.content.insertBlock({\n            type  : initialBlockType,\n            block : initialBlock\n        });\n\n        editor.content.workingNodeChanged(initialBlock);\n\n    };\n\n    ui.setInlineToolbarButtonBehaviour = function (button, type) {\n\n        button.addEventListener('mousedown', function (event) {\n\n            editor.toolbar.inline.toolClicked(event, type);\n\n        }, false);\n\n    };\n\n    return ui;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/ui.js","/**\n *\n * Codex.Editor Transport Module\n *\n * @author Codex Team\n * @version 1.0\n */\nlet editor = codex.editor;\n\nmodule.exports = (function (transport) {\n\n    transport.input = null;\n\n    /**\n     * @property {Object} arguments - keep plugin settings and defined callbacks\n     */\n    transport.arguments = null;\n\n    transport.prepare = function () {\n\n        var input = document.createElement('INPUT');\n\n        input.type = 'file';\n        input.addEventListener('change', editor.transport.fileSelected);\n\n        editor.transport.input = input;\n\n    };\n\n    /** Clear input when files is uploaded */\n    transport.clearInput = function () {\n\n        /** Remove old input */\n        this.input = null;\n\n        /** Prepare new one */\n        this.prepare();\n\n    };\n\n    /**\n     * Callback for file selection\n     * @param {Event} event\n     */\n    transport.fileSelected = function () {\n\n        var input       = this,\n            files       = input.files,\n            formdData   = new FormData();\n\n        formdData.append('files', files[0], files[0].name);\n\n        editor.transport.ajax({\n            data : formdData,\n            beforeSend : editor.transport.arguments.beforeSend,\n            success    : editor.transport.arguments.success,\n            error      : editor.transport.arguments.error\n        });\n\n    };\n\n    /**\n     * Use plugin callbacks\n     * @protected\n     */\n    transport.selectAndUpload = function (args) {\n\n        this.arguments = args;\n        this.input.click();\n\n    };\n\n    /**\n     * Ajax requests module\n     * @todo use core.ajax\n     */\n    transport.ajax = function (params) {\n\n        var xhr = new XMLHttpRequest(),\n            beforeSend = typeof params.beforeSend == 'function' ? params.beforeSend : function () {},\n            success    = typeof params.success    == 'function' ? params.success : function () {},\n            error      = typeof params.error      == 'function' ? params.error   : function () {};\n\n        beforeSend();\n\n        xhr.open('POST', editor.settings.uploadImagesUrl, true);\n\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n        xhr.onload = function () {\n\n            if (xhr.status === 200) {\n\n                success(xhr.responseText);\n\n            } else {\n\n                editor.core.log('request error: %o', xhr);\n                error();\n\n            }\n\n        };\n\n        xhr.send(params.data);\n        this.clearInput();\n\n    };\n\n    return transport;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/transport.js","/**\n * Codex Editor Renderer Module\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (renderer) {\n\n    /**\n     * Asyncronously parses input JSON to redactor blocks\n     */\n    renderer.makeBlocksFromData = function () {\n\n        /**\n         * If redactor is empty, add first paragraph to start writing\n         */\n        if (!editor.state.blocks.items.length) {\n\n            editor.ui.addInitialBlock();\n            return;\n\n        }\n\n        Promise.resolve()\n\n        /** First, get JSON from state */\n            .then(function () {\n\n                return editor.state.blocks;\n\n            })\n\n            /** Then, start to iterate they */\n            .then(editor.renderer.appendBlocks)\n\n            /** Write log if something goes wrong */\n            .catch(function (error) {\n\n                editor.core.log('Error while parsing JSON: %o', 'error', error);\n\n            });\n\n    };\n\n    /**\n     * Parses JSON to blocks\n     * @param {object} data\n     * @return Primise -> nodeList\n     */\n    renderer.appendBlocks = function (data) {\n\n        var blocks = data.items;\n\n        /**\n         * Sequence of one-by-one blocks appending\n         * Uses to save blocks order after async-handler\n         */\n        var nodeSequence = Promise.resolve();\n\n        for (var index = 0; index < blocks.length ; index++ ) {\n\n            /** Add node to sequence at specified index */\n            editor.renderer.appendNodeAtIndex(nodeSequence, blocks, index);\n\n        }\n\n    };\n\n    /**\n     * Append node at specified index\n     */\n    renderer.appendNodeAtIndex = function (nodeSequence, blocks, index) {\n\n        /** We need to append node to sequence */\n        nodeSequence\n\n        /** first, get node async-aware */\n            .then(function () {\n\n                return editor.renderer.getNodeAsync(blocks, index);\n\n            })\n\n            /**\n             * second, compose editor-block from JSON object\n             */\n            .then(editor.renderer.createBlockFromData)\n\n            /**\n             * now insert block to redactor\n             */\n            .then(function (blockData) {\n\n                /**\n                 * blockData has 'block', 'type' and 'stretched' information\n                 */\n                editor.content.insertBlock(blockData);\n\n                /** Pass created block to next step */\n                return blockData.block;\n\n            })\n\n            /** Log if something wrong with node */\n            .catch(function (error) {\n\n                editor.core.log('Node skipped while parsing because %o', 'error', error);\n\n            });\n\n    };\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    renderer.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function () {\n\n            return blocksList[index];\n\n        });\n\n    };\n\n    /**\n     * Creates editor block by JSON-data\n     *\n     * @uses render method of each plugin\n     *\n     * @param {object} blockData looks like\n     *                            { header : {\n     *                                            text: '',\n     *                                            type: 'H3', ...\n     *                                        }\n     *                            }\n     * @return {object} with type and Element\n     */\n    renderer.createBlockFromData = function (blockData) {\n\n        /** New parser */\n        var pluginName = blockData.type,\n            cover      = blockData.cover;\n\n        /** Get first key of object that stores plugin name */\n        // for (var pluginName in blockData) break;\n\n        /** Check for plugin existance */\n        if (!editor.tools[pluginName]) {\n\n            throw Error(`Plugin «${pluginName}» not found`);\n\n        }\n\n        /** Check for plugin having render method */\n        if (typeof editor.tools[pluginName].render != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have «render» method`);\n\n        }\n\n        /** New Parser */\n        var block = editor.tools[pluginName].render(blockData.data);\n\n        /** is first-level block stretched */\n        var stretched = editor.tools[pluginName].isStretched || false;\n\n        /** Retrun type and block */\n        return {\n            type      : pluginName,\n            block     : block,\n            stretched : stretched,\n            cover     : cover\n        };\n\n    };\n\n    return renderer;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/renderer.js","/**\n * Codex Editor Saver\n *\n * @author Codex Team\n * @version 1.0.2\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (saver) {\n\n    /**\n     * Saves blocks\n     * @private\n     */\n    saver.saveBlocks = function () {\n\n        /** Save html content of redactor to memory */\n        editor.state.html = editor.nodes.redactor.innerHTML;\n\n        /** Empty jsonOutput state */\n        editor.state.jsonOutput = [];\n\n        Promise.resolve()\n\n            .then(function () {\n\n                return editor.nodes.redactor.childNodes;\n\n            })\n            /** Making a sequence from separate blocks */\n            .then(editor.saver.makeQueue)\n\n            .then(function () {\n                // editor.nodes.textarea.innerHTML = editor.state.html;\n            })\n\n            .catch( function (error) {\n\n                editor.core.log(error);\n\n            });\n\n    };\n\n    saver.makeQueue = function (blocks) {\n\n        var queue = Promise.resolve();\n\n        for(var index = 0; index < blocks.length; index++) {\n\n            /** Add node to sequence at specified index */\n            editor.saver.getBlockData(queue, blocks, index);\n\n        }\n\n    };\n\n    /** Gets every block and makes From Data */\n    saver.getBlockData = function (queue, blocks, index) {\n\n        queue.then(function () {\n\n            return editor.saver.getNodeAsync(blocks, index);\n\n        })\n\n            .then(editor.saver.makeFormDataFromBlocks);\n\n    };\n\n\n    /**\n     * Asynchronously returns block data from blocksList by index\n     * @return Promise to node\n     */\n    saver.getNodeAsync = function (blocksList, index) {\n\n        return Promise.resolve().then(function () {\n\n            return blocksList[index];\n\n        });\n\n    };\n\n    saver.makeFormDataFromBlocks = function (block) {\n\n        var pluginName = block.dataset.tool;\n\n        /** Check for plugin existance */\n        if (!editor.tools[pluginName]) {\n\n            throw Error(`Plugin «${pluginName}» not found`);\n\n        }\n\n        /** Check for plugin having render method */\n        if (typeof editor.tools[pluginName].save != 'function') {\n\n            throw Error(`Plugin «${pluginName}» must have save method`);\n\n        }\n\n        /** Result saver */\n        var blockContent   = block.childNodes[0],\n            pluginsContent = blockContent.childNodes[0],\n            savedData      = editor.tools[pluginName].save(pluginsContent),\n            output;\n\n\n        output = {\n            type: pluginName,\n            data: savedData\n        };\n\n        if (editor.tools[pluginName].validate) {\n\n            var result = editor.tools[pluginName].validate(savedData);\n\n            /**\n             * Do not allow invalid data\n             */\n            if (!result)\n                return;\n\n        }\n\n        /** Marks Blocks that will be in main page */\n        output.cover = block.classList.contains(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        editor.state.jsonOutput.push(output);\n\n    };\n\n    return saver;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/saver.js","/**\n * Codex Editor Content Module\n * Works with DOM\n *\n * @author Codex Team\n * @version 1.3.11\n */\nlet editor = codex.editor;\n\nmodule.exports = (function (content) {\n\n    /**\n     * Links to current active block\n     * @type {null | Element}\n     */\n    content.currentNode = null;\n\n    /**\n     * clicked in redactor area\n     * @type {null | Boolean}\n     */\n    content.editorAreaHightlighted = null;\n\n    /**\n     * Synchronizes redactor with original textarea\n     */\n    content.sync = function () {\n\n        editor.core.log('syncing...');\n\n        /**\n         * Save redactor content to editor.state\n         */\n        editor.state.html = editor.nodes.redactor.innerHTML;\n\n    };\n\n    /**\n     * @deprecated\n     */\n    content.getNodeFocused = function () {\n\n        var selection = window.getSelection(),\n            focused;\n\n        if (selection.anchorNode === null) {\n\n            return null;\n\n        }\n\n        if ( selection.anchorNode.nodeType == editor.core.nodeTypes.TAG ) {\n\n            focused = selection.anchorNode;\n\n        } else {\n\n            focused = selection.focusNode.parentElement;\n\n        }\n\n        if ( !editor.parser.isFirstLevelBlock(focused) ) {\n\n            /** Iterate with parent nodes to find first-level*/\n            var parent = focused.parentNode;\n\n            while (parent && !editor.parser.isFirstLevelBlock(parent)) {\n\n                parent = parent.parentNode;\n\n            }\n\n            focused = parent;\n\n        }\n\n        if (focused != editor.nodes.redactor) {\n\n            return focused;\n\n        }\n\n        return null;\n\n    };\n\n    /**\n     * Appends background to the block\n     */\n    content.markBlock = function () {\n\n        editor.content.currentNode.classList.add(editor.ui.className.BLOCK_HIGHLIGHTED);\n\n    };\n\n    /**\n     * Clear background\n     */\n    content.clearMark = function () {\n\n        if (editor.content.currentNode) {\n\n            editor.content.currentNode.classList.remove(editor.ui.className.BLOCK_HIGHLIGHTED);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Finds first-level block\n     * @param {Element} node - selected or clicked in redactors area node\n     */\n    content.getFirstLevelBlock = function (node) {\n\n        if (!editor.core.isDomNode(node)) {\n\n            node = node.parentNode;\n\n        }\n\n        if (node === editor.nodes.redactor || node === document.body) {\n\n            return null;\n\n        } else {\n\n            while(!node.classList.contains(editor.ui.className.BLOCK_CLASSNAME)) {\n\n                node = node.parentNode;\n\n            }\n\n            return node;\n\n        }\n\n    };\n\n    /**\n     * Trigger this event when working node changed\n     * @param {Element} targetNode - first-level of this node will be current\n     * If targetNode is first-level then we set it as current else we look for parents to find first-level\n     */\n    content.workingNodeChanged = function (targetNode) {\n\n        /** Clear background from previous marked block before we change */\n        editor.content.clearMark();\n\n        if (!targetNode) {\n\n            return;\n\n        }\n\n        this.currentNode = this.getFirstLevelBlock(targetNode);\n\n    };\n\n    /**\n     * Replaces one redactor block with another\n     * @protected\n     * @param {Element} targetBlock - block to replace. Mostly currentNode.\n     * @param {Element} newBlock\n     * @param {string} newBlockType - type of new block; we need to store it to data-attribute\n     *\n     * [!] Function does not saves old block content.\n     *     You can get it manually and pass with newBlock.innerHTML\n     */\n    content.replaceBlock = function (targetBlock, newBlock) {\n\n        if (!targetBlock || !newBlock) {\n\n            editor.core.log('replaceBlock: missed params');\n            return;\n\n        }\n\n        /** If target-block is not a frist-level block, then we iterate parents to find it */\n        while(!targetBlock.classList.contains(editor.ui.className.BLOCK_CLASSNAME)) {\n\n            targetBlock = targetBlock.parentNode;\n\n        }\n\n        /**\n         * Check is this block was in feed\n         * If true, than set switched block also covered\n         */\n        if (targetBlock.classList.contains(editor.ui.className.BLOCK_IN_FEED_MODE)) {\n\n            newBlock.classList.add(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        }\n\n        /** Replacing */\n        editor.nodes.redactor.replaceChild(newBlock, targetBlock);\n\n        /**\n         * Set new node as current\n         */\n        editor.content.workingNodeChanged(newBlock);\n\n        /**\n         * Add block handlers\n         */\n        editor.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Save changes\n         */\n        editor.ui.saveInputs();\n\n    };\n\n    /**\n     * @private\n     *\n     * Inserts new block to redactor\n     * Wrapps block into a DIV with BLOCK_CLASSNAME class\n     *\n     * @param blockData          {object}\n     * @param blockData.block    {Element}   element with block content\n     * @param blockData.type     {string}    block plugin\n     * @param needPlaceCaret     {bool}      pass true to set caret in new block\n     *\n     */\n    content.insertBlock = function ( blockData, needPlaceCaret ) {\n\n        var workingBlock    = editor.content.currentNode,\n            newBlockContent = blockData.block,\n            blockType       = blockData.type,\n            cover           = blockData.cover,\n            isStretched     = blockData.stretched;\n\n        var newBlock = editor.content.composeNewBlock(newBlockContent, blockType, isStretched);\n\n        if (cover === true) {\n\n            newBlock.classList.add(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        }\n\n        if (workingBlock) {\n\n            editor.core.insertAfter(workingBlock, newBlock);\n\n        } else {\n\n            /**\n             * If redactor is empty, append as first child\n             */\n            editor.nodes.redactor.appendChild(newBlock);\n\n        }\n\n        /**\n         * Block handler\n         */\n        editor.ui.addBlockHandlers(newBlock);\n\n        /**\n         * Set new node as current\n         */\n        editor.content.workingNodeChanged(newBlock);\n\n        /**\n         * Save changes\n         */\n        editor.ui.saveInputs();\n\n\n        if ( needPlaceCaret ) {\n\n            /**\n             * If we don't know input index then we set default value -1\n             */\n            var currentInputIndex = editor.caret.getCurrentInputIndex() || -1;\n\n\n            if (currentInputIndex == -1) {\n\n\n                var editableElement = newBlock.querySelector('[contenteditable]'),\n                    emptyText       = document.createTextNode('');\n\n                editableElement.appendChild(emptyText);\n                editor.caret.set(editableElement, 0, 0);\n\n                editor.toolbar.move();\n                editor.toolbar.showPlusButton();\n\n\n            } else {\n\n                if (currentInputIndex === editor.state.inputs.length - 1)\n                    return;\n\n                /** Timeout for browsers execution */\n                window.setTimeout(function () {\n\n                    /** Setting to the new input */\n                    editor.caret.setToNextBlock(currentInputIndex);\n                    editor.toolbar.move();\n                    editor.toolbar.open();\n\n                }, 10);\n\n            }\n\n        }\n\n        /**\n         * Block is inserted, wait for new click that defined focusing on editors area\n         * @type {boolean}\n         */\n        content.editorAreaHightlighted = false;\n\n    };\n\n    /**\n     * Replaces blocks with saving content\n     * @protected\n     * @param {Element} noteToReplace\n     * @param {Element} newNode\n     * @param {Element} blockType\n     */\n    content.switchBlock = function (blockToReplace, newBlock, tool) {\n\n        var newBlockComposed = editor.content.composeNewBlock(newBlock, tool);\n\n        /** Replacing */\n        editor.content.replaceBlock(blockToReplace, newBlockComposed);\n\n        /** Save new Inputs when block is changed */\n        editor.ui.saveInputs();\n\n    };\n\n    /**\n     * Iterates between child noted and looking for #text node on deepest level\n     * @private\n     * @param {Element} block - node where find\n     * @param {int} postiton - starting postion\n     *      Example: childNodex.length to find from the end\n     *               or 0 to find from the start\n     * @return {Text} block\n     * @uses DFS\n     */\n    content.getDeepestTextNodeFromPosition = function (block, position) {\n\n        /**\n         * Clear Block from empty and useless spaces with trim.\n         * Such nodes we should remove\n         */\n        var blockChilds = block.childNodes,\n            index,\n            node,\n            text;\n\n        for(index = 0; index < blockChilds.length; index++) {\n\n            node = blockChilds[index];\n\n            if (node.nodeType == editor.core.nodeTypes.TEXT) {\n\n                text = node.textContent.trim();\n\n                /** Text is empty. We should remove this child from node before we start DFS\n                 * decrease the quantity of childs.\n                 */\n                if (text === '') {\n\n                    block.removeChild(node);\n                    position--;\n\n                }\n\n            }\n\n        }\n\n        if (block.childNodes.length === 0) {\n\n            return document.createTextNode('');\n\n        }\n\n        /** Setting default position when we deleted all empty nodes */\n        if ( position < 0 )\n            position = 1;\n\n        var lookingFromStart = false;\n\n        /** For looking from START */\n        if (position === 0) {\n\n            lookingFromStart = true;\n            position = 1;\n\n        }\n\n        while ( position ) {\n\n            /** initial verticle of node. */\n            if ( lookingFromStart ) {\n\n                block = block.childNodes[0];\n\n            } else {\n\n                block = block.childNodes[position - 1];\n\n            }\n\n            if ( block.nodeType == editor.core.nodeTypes.TAG ) {\n\n                position = block.childNodes.length;\n\n            } else if (block.nodeType == editor.core.nodeTypes.TEXT ) {\n\n                position = 0;\n\n            }\n\n        }\n\n        return block;\n\n    };\n\n    /**\n     * @private\n     */\n    content.composeNewBlock = function (block, tool, isStretched) {\n\n        var newBlock     = editor.draw.node('DIV', editor.ui.className.BLOCK_CLASSNAME, {}),\n            blockContent = editor.draw.node('DIV', editor.ui.className.BLOCK_CONTENT, {});\n\n        blockContent.appendChild(block);\n        newBlock.appendChild(blockContent);\n\n        if (isStretched) {\n\n            blockContent.classList.add(editor.ui.className.BLOCK_STRETCHED);\n\n        }\n\n        newBlock.dataset.tool = tool;\n        return newBlock;\n\n    };\n\n    /**\n     * Returns Range object of current selection\n     */\n    content.getRange = function () {\n\n        var selection = window.getSelection().getRangeAt(0);\n\n        return selection;\n\n    };\n\n    /**\n     * Divides block in two blocks (after and before caret)\n     * @private\n     * @param {Int} inputIndex - target input index\n     */\n    content.splitBlock = function (inputIndex) {\n\n        var selection      = window.getSelection(),\n            anchorNode     = selection.anchorNode,\n            anchorNodeText = anchorNode.textContent,\n            caretOffset    = selection.anchorOffset,\n            textBeforeCaret,\n            textNodeBeforeCaret,\n            textAfterCaret,\n            textNodeAfterCaret;\n\n        var currentBlock = editor.content.currentNode.querySelector('[contentEditable]');\n\n\n        textBeforeCaret     = anchorNodeText.substring(0, caretOffset);\n        textAfterCaret      = anchorNodeText.substring(caretOffset);\n\n        textNodeBeforeCaret = document.createTextNode(textBeforeCaret);\n\n        if (textAfterCaret) {\n\n            textNodeAfterCaret  = document.createTextNode(textAfterCaret);\n\n        }\n\n        var previousChilds = [],\n            nextChilds     = [],\n            reachedCurrent = false;\n\n        if (textNodeAfterCaret) {\n\n            nextChilds.push(textNodeAfterCaret);\n\n        }\n\n        for ( var i = 0, child; !!(child = currentBlock.childNodes[i]); i++) {\n\n            if ( child != anchorNode ) {\n\n                if ( !reachedCurrent ) {\n\n                    previousChilds.push(child);\n\n                } else {\n\n                    nextChilds.push(child);\n\n                }\n\n            } else {\n\n                reachedCurrent = true;\n\n            }\n\n        }\n\n        /** Clear current input */\n        editor.state.inputs[inputIndex].innerHTML = '';\n\n        /**\n         * Append all childs founded before anchorNode\n         */\n        var previousChildsLength = previousChilds.length;\n\n        for(i = 0; i < previousChildsLength; i++) {\n\n            editor.state.inputs[inputIndex].appendChild(previousChilds[i]);\n\n        }\n\n        editor.state.inputs[inputIndex].appendChild(textNodeBeforeCaret);\n\n        /**\n         * Append text node which is after caret\n         */\n        var nextChildsLength = nextChilds.length,\n            newNode          = document.createElement('div');\n\n        for(i = 0; i < nextChildsLength; i++) {\n\n            newNode.appendChild(nextChilds[i]);\n\n        }\n\n        newNode = newNode.innerHTML;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n        /**\n         * Make new paragraph with text after caret\n         */\n        editor.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : editor.tools[NEW_BLOCK_TYPE].render({\n                text : newNode\n            })\n        }, true );\n\n    };\n\n    /**\n     * Merges two blocks — current and target\n     * If target index is not exist, then previous will be as target\n     */\n    content.mergeBlocks = function (currentInputIndex, targetInputIndex) {\n\n        /** If current input index is zero, then prevent method execution */\n        if (currentInputIndex === 0) {\n\n            return;\n\n        }\n\n        var targetInput,\n            currentInputContent = editor.state.inputs[currentInputIndex].innerHTML;\n\n        if (!targetInputIndex) {\n\n            targetInput = editor.state.inputs[currentInputIndex - 1];\n\n        } else {\n\n            targetInput = editor.state.inputs[targetInputIndex];\n\n        }\n\n        targetInput.innerHTML += currentInputContent;\n\n    };\n\n    /**\n     * @private\n     *\n     * Callback for HTML Mutations\n     * @param {Array} mutation - Mutation Record\n     */\n    content.paste = function (mutation) {\n\n        var workingNode = editor.content.currentNode,\n            tool        = workingNode.dataset.tool;\n\n        if (editor.tools[tool].allowedToPaste) {\n\n            editor.content.sanitize.call(this, mutation.target);\n\n        } else {\n\n            editor.content.pasteTextContent(mutation.addedNodes);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * gets only text/plain content of node\n     * @param {Element} target - HTML node\n     */\n    content.pasteTextContent = function (nodes) {\n\n        var node = nodes[0],\n            textNode;\n\n        if (!node) {\n\n            return;\n\n        }\n\n        if (node.nodeType == editor.core.nodeTypes.TEXT) {\n\n            textNode = document.createTextNode(node);\n\n        } else {\n\n            textNode = document.createTextNode(node.textContent);\n\n        }\n\n        if (editor.core.isDomNode(node)) {\n\n            node.parentNode.replaceChild(textNode, node);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Sanitizes HTML content\n     * @param {Element} target - inserted element\n     * @uses Sanitize library html-janitor\n     */\n    content.sanitize = function (target) {\n\n        if (!target) {\n\n            return;\n\n        }\n\n        var node = target[0];\n\n        if (!node) {\n\n            return;\n\n        }\n\n        /**\n         * Disconnect Observer\n         * hierarchy of function calls inherits context of observer\n         */\n        this.disconnect();\n\n        /**\n         * Don't sanitize text node\n         */\n        if (node.nodeType == editor.core.nodeTypes.TEXT) {\n\n            return;\n\n        }\n\n        /**\n         * Clear dirty content\n         */\n        var cleaner = editor.sanitizer.init(editor.satinizer.Config.BASIC),\n            clean = cleaner.clean(target.outerHTML);\n\n        var div = editor.draw.node('DIV', [], { innerHTML: clean });\n\n        node.replaceWith(div.childNodes[0]);\n\n\n    };\n\n    /**\n     * Iterates all right siblings and parents, which has right siblings\n     * while it does not reached the first-level block\n     *\n     * @param {Element} node\n     * @return {boolean}\n     */\n    content.isLastNode = function (node) {\n\n        // console.log('погнали перебор родителей');\n\n        var allChecked = false;\n\n        while ( !allChecked ) {\n\n            // console.log('Смотрим на %o', node);\n            // console.log('Проверим, пустые ли соседи справа');\n\n            if ( !allSiblingsEmpty_(node) ) {\n\n                // console.log('Есть непустые соседи. Узел не последний. Выходим.');\n                return false;\n\n            }\n\n            node = node.parentNode;\n\n            /**\n             * Проверяем родителей до тех пор, пока не найдем блок первого уровня\n             */\n            if ( node.classList.contains(editor.ui.className.BLOCK_CONTENT) ) {\n\n                allChecked = true;\n\n            }\n\n        }\n\n        return true;\n\n    };\n\n    /**\n     * Checks if all element right siblings is empty\n     * @param node\n     */\n    var allSiblingsEmpty_ = function (node) {\n\n        /**\n         * Нужно убедиться, что после пустого соседа ничего нет\n         */\n        var sibling = node.nextSibling;\n\n        while ( sibling ) {\n\n            if (sibling.textContent.length) {\n\n                return false;\n\n            }\n\n            sibling = sibling.nextSibling;\n\n        }\n\n        return true;\n\n    };\n\n    /**\n     * @public\n     *\n     * @param [String] htmlString - html content as string\n     * @return {string} - html content as string\n     */\n    content.wrapTextWithParagraphs = function (htmlString) {\n\n        var wrapper = document.createElement('DIV'),\n            newWrapper = document.createElement('DIV'),\n            i,\n            paragraph,\n            firstLevelBlocks = ['DIV', 'P'],\n            blockTyped,\n            node;\n\n        /**\n         * Make HTML Element to Wrap Text\n         * It allows us to work with input data as HTML content\n         */\n        wrapper.innerHTML = htmlString;\n        paragraph = document.createElement('P');\n\n        for (i = 0; i < wrapper.childNodes.length; i++) {\n\n            node = wrapper.childNodes[i];\n\n            blockTyped = firstLevelBlocks.indexOf(node.tagName) != -1;\n\n            /**\n             * If node is first-levet\n             * we add this node to our new wrapper\n             */\n            if ( blockTyped ) {\n\n                /**\n                 * If we had splitted inline nodes to paragraph before\n                 */\n                if ( paragraph.childNodes.length ) {\n\n                    newWrapper.appendChild(paragraph.cloneNode(true));\n\n                    /** empty paragraph */\n                    paragraph = null;\n                    paragraph = document.createElement('P');\n\n                }\n\n                newWrapper.appendChild(node.cloneNode(true));\n\n            } else {\n\n                /** Collect all inline nodes to one as paragraph */\n                paragraph.appendChild(node.cloneNode(true));\n\n                /** if node is last we should append this node to paragraph and paragraph to new wrapper */\n                if ( i == wrapper.childNodes.length - 1 ) {\n\n                    newWrapper.appendChild(paragraph.cloneNode(true));\n\n                }\n\n            }\n\n        }\n\n        return newWrapper.innerHTML;\n\n    };\n\n    return content;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/content.js","/**\n * Codex Editor toolbar module\n *\n * Contains:\n *  - Inline toolbox\n *  - Toolbox within plus button\n *  - Settings section\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (toolbar) {\n\n    toolbar.settings = require('./settings');\n    toolbar.inline   = require('./inline');\n    toolbar.toolbox  = require('./toolbox');\n\n    /**\n     * Margin between focused node and toolbar\n     */\n    toolbar.defaultToolbarHeight = 49;\n\n    toolbar.defaultOffset = 34;\n\n    toolbar.opened = false;\n\n    toolbar.current = null;\n\n    /**\n     * @protected\n     */\n    toolbar.open = function () {\n\n        editor.nodes.toolbar.classList.add('opened');\n        this.opened = true;\n\n    };\n\n    /**\n     * @protected\n     */\n    toolbar.close = function () {\n\n        editor.nodes.toolbar.classList.remove('opened');\n\n        toolbar.opened  = false;\n        toolbar.current = null;\n\n        for (var button in editor.nodes.toolbarButtons) {\n\n            editor.nodes.toolbarButtons[button].classList.remove('selected');\n\n        }\n\n        /** Close toolbox when toolbar is not displayed */\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.close();\n\n    };\n\n    toolbar.toggle = function () {\n\n        if ( !this.opened ) {\n\n            this.open();\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    toolbar.hidePlusButton = function () {\n\n        editor.nodes.plusButton.classList.add('hide');\n\n    };\n\n    toolbar.showPlusButton = function () {\n\n        editor.nodes.plusButton.classList.remove('hide');\n\n    };\n\n    /**\n     * Moving toolbar to the specified node\n     */\n    toolbar.move = function () {\n\n        /** Close Toolbox when we move toolbar */\n        editor.toolbar.toolbox.close();\n\n        if (!editor.content.currentNode) {\n\n            return;\n\n        }\n\n        var newYCoordinate = editor.content.currentNode.offsetTop - (editor.toolbar.defaultToolbarHeight / 2) + editor.toolbar.defaultOffset;\n\n        editor.nodes.toolbar.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\n\n        /** Close trash actions */\n        editor.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return toolbar;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbar.js","/**\n * Toolbar settings\n *\n * @version 1.0.4\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (settings) {\n\n    settings.opened = false;\n\n    settings.setting = null;\n    settings.actions = null;\n\n    settings.cover = null;\n\n    /**\n     * Append and open settings\n     */\n    settings.open = function (toolType) {\n\n        /**\n         * Append settings content\n         * It's stored in tool.settings\n         */\n        if (!editor.tools[toolType] || !editor.tools[toolType].makeSettings ) {\n\n            editor.core.log(`Plugin «${toolType}» has no settings`, 'warn');\n            // editor.nodes.pluginSettings.innerHTML = `Плагин «${toolType}» не имеет настроек`;\n\n        } else {\n\n            /**\n             * Draw settings block\n             */\n            var settingsBlock = editor.tools[toolType].makeSettings();\n\n            editor.nodes.pluginSettings.appendChild(settingsBlock);\n\n        }\n\n        /** Open settings block */\n        editor.nodes.blockSettings.classList.add('opened');\n        editor.toolbar.settings.addDefaultSettings();\n        this.opened = true;\n\n    };\n\n    /**\n     * Close and clear settings\n     */\n    settings.close = function () {\n\n        editor.nodes.blockSettings.classList.remove('opened');\n        editor.nodes.pluginSettings.innerHTML = '';\n\n        this.opened = false;\n\n    };\n\n    /**\n     * @param {string} toolType - plugin type\n     */\n    settings.toggle = function ( toolType ) {\n\n        if ( !this.opened ) {\n\n            this.open(toolType);\n\n        } else {\n\n            this.close();\n\n        }\n\n    };\n\n    /**\n     * This function adds default core settings\n     */\n    settings.addDefaultSettings = function () {\n\n        /** list of default settings */\n        var feedModeToggler;\n\n        /** Clear block and append initialized settings */\n        editor.nodes.defaultSettings.innerHTML = '';\n\n\n        /** Init all default setting buttons */\n        feedModeToggler = editor.toolbar.settings.makeFeedModeToggler();\n\n        /**\n         * Fill defaultSettings\n         */\n\n        /**\n         * Button that enables/disables Feed-mode\n         * Feed-mode means that block will be showed in articles-feed like cover\n         */\n        editor.nodes.defaultSettings.appendChild(feedModeToggler);\n\n    };\n\n    /**\n     * Cover setting.\n     * This tune highlights block, so that it may be used for showing target block on main page\n     * Draw different setting when block is marked for main page\n     * If TRUE, then we show button that removes this selection\n     * Also defined setting \"Click\" events will be listened and have separate callbacks\n     *\n     * @return {Element} node/button that we place in default settings block\n     */\n    settings.makeFeedModeToggler = function () {\n\n        var isFeedModeActivated = editor.toolbar.settings.isFeedModeActivated(),\n            setting,\n            data;\n\n        if (!isFeedModeActivated) {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Вывести в ленте'\n            };\n\n        } else {\n\n            data = {\n                innerHTML : '<i class=\"ce-icon-newspaper\"></i>Не выводить в ленте'\n            };\n\n        }\n\n        setting = editor.draw.node('DIV', editor.ui.className.SETTINGS_ITEM, data);\n        setting.addEventListener('click', editor.toolbar.settings.updateFeedMode, false);\n\n        return setting;\n\n    };\n\n    /**\n     * Updates Feed-mode\n     */\n    settings.updateFeedMode = function () {\n\n        var currentNode = editor.content.currentNode;\n\n        currentNode.classList.toggle(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        editor.toolbar.settings.close();\n\n    };\n\n    settings.isFeedModeActivated = function () {\n\n        var currentBlock = editor.content.currentNode;\n\n        if (currentBlock) {\n\n            return currentBlock.classList.contains(editor.ui.className.BLOCK_IN_FEED_MODE);\n\n        } else {\n\n            return false;\n\n        }\n\n    };\n\n    /**\n     * Here we will draw buttons and add listeners to components\n     */\n    settings.makeRemoveBlockButton = function () {\n\n        var removeBlockWrapper  = editor.draw.node('SPAN', 'ce-toolbar__remove-btn', {}),\n            settingButton = editor.draw.node('SPAN', 'ce-toolbar__remove-setting', { innerHTML : '<i class=\"ce-icon-trash\"></i>' }),\n            actionWrapper = editor.draw.node('DIV', 'ce-toolbar__remove-confirmation', {}),\n            confirmAction = editor.draw.node('DIV', 'ce-toolbar__remove-confirm', { textContent : 'Удалить блок' }),\n            cancelAction  = editor.draw.node('DIV', 'ce-toolbar__remove-cancel', { textContent : 'Отмена' });\n\n        settingButton.addEventListener('click', editor.toolbar.settings.removeButtonClicked, false);\n\n        confirmAction.addEventListener('click', editor.toolbar.settings.confirmRemovingRequest, false);\n\n        cancelAction.addEventListener('click', editor.toolbar.settings.cancelRemovingRequest, false);\n\n        actionWrapper.appendChild(confirmAction);\n        actionWrapper.appendChild(cancelAction);\n\n        removeBlockWrapper.appendChild(settingButton);\n        removeBlockWrapper.appendChild(actionWrapper);\n\n        /** Save setting */\n        editor.toolbar.settings.setting = settingButton;\n        editor.toolbar.settings.actions = actionWrapper;\n\n        return removeBlockWrapper;\n\n    };\n\n    settings.removeButtonClicked = function () {\n\n        var action = editor.toolbar.settings.actions;\n\n        if (action.classList.contains('opened')) {\n\n            editor.toolbar.settings.hideRemoveActions();\n\n        } else {\n\n            editor.toolbar.settings.showRemoveActions();\n\n        }\n\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.close();\n\n    };\n\n    settings.cancelRemovingRequest = function () {\n\n        editor.toolbar.settings.actions.classList.remove('opened');\n\n    };\n\n    settings.confirmRemovingRequest = function () {\n\n        var currentBlock = editor.content.currentNode,\n            firstLevelBlocksCount;\n\n        currentBlock.remove();\n\n        firstLevelBlocksCount = editor.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            editor.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            editor.ui.addInitialBlock();\n\n        }\n\n        editor.ui.saveInputs();\n\n        editor.toolbar.close();\n\n    };\n\n    settings.showRemoveActions = function () {\n\n        editor.toolbar.settings.actions.classList.add('opened');\n\n    };\n\n    settings.hideRemoveActions = function () {\n\n        editor.toolbar.settings.actions.classList.remove('opened');\n\n    };\n\n    return settings;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/settings.js","/**\n * Inline toolbar\n *\n * Contains from tools:\n * Bold, Italic, Underline and Anchor\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (inline) {\n\n    inline.buttonsOpened = null;\n    inline.actionsOpened = null;\n    inline.wrappersOffset = null;\n\n    /**\n     * saving selection that need for execCommand for styling\n     *\n     */\n    inline.storedSelection = null;\n\n    /**\n     * @protected\n     *\n     * Open inline toobar\n     */\n    inline.show = function () {\n\n        var currentNode = editor.content.currentNode,\n            tool = currentNode.dataset.tool,\n            plugin;\n\n        /**\n         * tool allowed to open inline toolbar\n         */\n        plugin = editor.tools[tool];\n\n        if (!plugin.showInlineToolbar)\n            return;\n\n        var selectedText = inline.getSelectionText(),\n            toolbar      = editor.nodes.inlineToolbar.wrapper;\n\n        if (selectedText.length > 0) {\n\n            /** Move toolbar and open */\n            editor.toolbar.inline.move();\n\n            /** Open inline toolbar */\n            toolbar.classList.add('opened');\n\n            /** show buttons of inline toolbar */\n            editor.toolbar.inline.showButtons();\n\n        }\n\n    };\n\n    /**\n     * @protected\n     *\n     * Closes inline toolbar\n     */\n    inline.close = function () {\n\n        var toolbar = editor.nodes.inlineToolbar.wrapper;\n\n        toolbar.classList.remove('opened');\n\n    };\n\n    /**\n     * @private\n     *\n     * Moving toolbar\n     */\n    inline.move = function () {\n\n        if (!this.wrappersOffset) {\n\n            this.wrappersOffset = this.getWrappersOffset();\n\n        }\n\n        var coords          = this.getSelectionCoords(),\n            defaultOffset   = 0,\n            toolbar         = editor.nodes.inlineToolbar.wrapper,\n            newCoordinateX,\n            newCoordinateY;\n\n        if (toolbar.offsetHeight === 0) {\n\n            defaultOffset = 40;\n\n        }\n\n        newCoordinateX = coords.x - this.wrappersOffset.left;\n        newCoordinateY = coords.y + window.scrollY - this.wrappersOffset.top - defaultOffset - toolbar.offsetHeight;\n\n        toolbar.style.transform = `translate3D(${Math.floor(newCoordinateX)}px, ${Math.floor(newCoordinateY)}px, 0)`;\n\n        /** Close everything */\n        editor.toolbar.inline.closeButtons();\n        editor.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Tool Clicked\n     */\n\n    inline.toolClicked = function (event, type) {\n\n        /**\n         * For simple tools we use default browser function\n         * For more complicated tools, we should write our own behavior\n         */\n        switch (type) {\n            case 'createLink' : editor.toolbar.inline.createLinkAction(event, type); break;\n            default           : editor.toolbar.inline.defaultToolAction(type); break;\n        }\n\n        /**\n         * highlight buttons\n         * after making some action\n         */\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\n\n    };\n\n    /**\n     * @private\n     *\n     * Saving wrappers offset in DOM\n     */\n    inline.getWrappersOffset = function () {\n\n        var wrapper = editor.nodes.wrapper,\n            offset  = this.getOffset(wrapper);\n\n        this.wrappersOffset = offset;\n        return offset;\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates offset of DOM element\n     *\n     * @param el\n     * @returns {{top: number, left: number}}\n     */\n    inline.getOffset = function ( el ) {\n\n        var _x = 0;\n        var _y = 0;\n\n        while( el && !isNaN( el.offsetLeft ) && !isNaN( el.offsetTop ) ) {\n\n            _x += (el.offsetLeft + el.clientLeft);\n            _y += (el.offsetTop + el.clientTop);\n            el = el.offsetParent;\n\n        }\n        return { top: _y, left: _x };\n\n    };\n\n    /**\n     * @private\n     *\n     * Calculates position of selected text\n     * @returns {{x: number, y: number}}\n     */\n    inline.getSelectionCoords = function () {\n\n        var sel = document.selection, range;\n        var x = 0, y = 0;\n\n        if (sel) {\n\n            if (sel.type != 'Control') {\n\n                range = sel.createRange();\n                range.collapse(true);\n                x = range.boundingLeft;\n                y = range.boundingTop;\n\n            }\n\n        } else if (window.getSelection) {\n\n            sel = window.getSelection();\n\n            if (sel.rangeCount) {\n\n                range = sel.getRangeAt(0).cloneRange();\n                if (range.getClientRects) {\n\n                    range.collapse(true);\n                    var rect = range.getClientRects()[0];\n\n                    if (!rect) {\n\n                        return;\n\n                    }\n\n                    x = rect.left;\n                    y = rect.top;\n\n                }\n\n            }\n\n        }\n        return { x: x, y: y };\n\n    };\n\n    /**\n     * @private\n     *\n     * Returns selected text as String\n     * @returns {string}\n     */\n    inline.getSelectionText = function () {\n\n        var selectedText = '';\n\n        // all modern browsers and IE9+\n        if (window.getSelection) {\n\n            selectedText = window.getSelection().toString();\n\n        }\n\n        return selectedText;\n\n    };\n\n    /** Opens buttons block */\n    inline.showButtons = function () {\n\n        var buttons = editor.nodes.inlineToolbar.buttons;\n\n        buttons.classList.add('opened');\n\n        editor.toolbar.inline.buttonsOpened = true;\n\n        /** highlight buttons */\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(editor.toolbar.inline.hightlight);\n\n    };\n\n    /** Makes buttons disappear */\n    inline.closeButtons = function () {\n\n        var buttons = editor.nodes.inlineToolbar.buttons;\n\n        buttons.classList.remove('opened');\n\n        editor.toolbar.inline.buttonsOpened = false;\n\n    };\n\n    /** Open buttons defined action if exist */\n    inline.showActions = function () {\n\n        var action = editor.nodes.inlineToolbar.actions;\n\n        action.classList.add('opened');\n\n        editor.toolbar.inline.actionsOpened = true;\n\n    };\n\n    /** Close actions block */\n    inline.closeAction = function () {\n\n        var action = editor.nodes.inlineToolbar.actions;\n\n        action.innerHTML = '';\n        action.classList.remove('opened');\n        editor.toolbar.inline.actionsOpened = false;\n\n    };\n\n\n    /**\n    * Callback for keydowns in inline toolbar \"Insert link...\" input\n    */\n    let inlineToolbarAnchorInputKeydown_ = function (event) {\n\n        if (event.keyCode != editor.core.keys.ENTER) {\n\n            return;\n\n        }\n\n        let editable        = editor.content.currentNode,\n            storedSelection = editor.toolbar.inline.storedSelection;\n\n        editor.toolbar.inline.restoreSelection(editable, storedSelection);\n        editor.toolbar.inline.setAnchor(this.value);\n\n        /**\n         * Preventing events that will be able to happen\n         */\n        event.preventDefault();\n        event.stopImmediatePropagation();\n\n        editor.toolbar.inline.clearRange();\n\n    };\n\n    /** Action for link creation or for setting anchor */\n    inline.createLinkAction = function (event) {\n\n        var isActive = this.isLinkActive();\n\n        var editable        = editor.content.currentNode,\n            storedSelection = editor.toolbar.inline.saveSelection(editable);\n\n        /** Save globally selection */\n        editor.toolbar.inline.storedSelection = storedSelection;\n\n        if (isActive) {\n\n\n            /**\n             * Changing stored selection. if we want to remove anchor from word\n             * we should remove anchor from whole word, not only selected part.\n             * The solution is than we get the length of current link\n             * Change start position to - end of selection minus length of anchor\n             */\n            editor.toolbar.inline.restoreSelection(editable, storedSelection);\n\n            editor.toolbar.inline.defaultToolAction('unlink');\n\n        } else {\n\n            /** Create input and close buttons */\n            var action = editor.draw.inputForLink();\n\n            editor.nodes.inlineToolbar.actions.appendChild(action);\n\n            editor.toolbar.inline.closeButtons();\n            editor.toolbar.inline.showActions();\n\n            /**\n             * focus to input\n             * Solution: https://developer.mozilla.org/ru/docs/Web/API/HTMLElement/focus\n             * Prevents event after showing input and when we need to focus an input which is in unexisted form\n             */\n            action.focus();\n            event.preventDefault();\n\n            /** Callback to link action */\n            action.addEventListener('keydown', inlineToolbarAnchorInputKeydown_, false);\n\n        }\n\n    };\n\n    inline.isLinkActive = function () {\n\n        var isActive = false;\n\n        editor.nodes.inlineToolbar.buttons.childNodes.forEach(function (tool) {\n\n            var dataType = tool.dataset.type;\n\n            if (dataType == 'link' && tool.classList.contains('hightlighted')) {\n\n                isActive = true;\n\n            }\n\n        });\n\n        return isActive;\n\n    };\n\n    /** default action behavior of tool */\n    inline.defaultToolAction = function (type) {\n\n        document.execCommand(type, false, null);\n\n    };\n\n    /**\n     * @private\n     *\n     * Sets URL\n     *\n     * @param {String} url - URL\n     */\n    inline.setAnchor = function (url) {\n\n        document.execCommand('createLink', false, url);\n\n        /** Close after URL inserting */\n        editor.toolbar.inline.closeAction();\n\n    };\n\n    /**\n     * @private\n     *\n     * Saves selection\n     */\n    inline.saveSelection = function (containerEl) {\n\n        var range = window.getSelection().getRangeAt(0),\n            preSelectionRange = range.cloneRange(),\n            start;\n\n        preSelectionRange.selectNodeContents(containerEl);\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\n\n        start = preSelectionRange.toString().length;\n\n        return {\n            start: start,\n            end: start + range.toString().length\n        };\n\n    };\n\n    /**\n     * @private\n     *\n     * Sets to previous selection (Range)\n     *\n     * @param {Element} containerEl - editable element where we restore range\n     * @param {Object} savedSel - range basic information to restore\n     */\n    inline.restoreSelection = function (containerEl, savedSel) {\n\n        var range     = document.createRange(),\n            charIndex = 0;\n\n        range.setStart(containerEl, 0);\n        range.collapse(true);\n\n        var nodeStack = [ containerEl ],\n            node,\n            foundStart = false,\n            stop = false,\n            nextCharIndex;\n\n        while (!stop && (node = nodeStack.pop())) {\n\n            if (node.nodeType == 3) {\n\n                nextCharIndex = charIndex + node.length;\n\n                if (!foundStart && savedSel.start >= charIndex && savedSel.start <= nextCharIndex) {\n\n                    range.setStart(node, savedSel.start - charIndex);\n                    foundStart = true;\n\n                }\n                if (foundStart && savedSel.end >= charIndex && savedSel.end <= nextCharIndex) {\n\n                    range.setEnd(node, savedSel.end - charIndex);\n                    stop = true;\n\n                }\n                charIndex = nextCharIndex;\n\n            } else {\n\n                var i = node.childNodes.length;\n\n                while (i--) {\n\n                    nodeStack.push(node.childNodes[i]);\n\n                }\n\n            }\n\n        }\n\n        var sel = window.getSelection();\n\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n    };\n\n    /**\n     * @private\n     *\n     * Removes all ranges from window selection\n     */\n    inline.clearRange = function () {\n\n        var selection = window.getSelection();\n\n        selection.removeAllRanges();\n\n    };\n\n    /**\n     * @private\n     *\n     * sets or removes hightlight\n     */\n    inline.hightlight = function (tool) {\n\n        var dataType = tool.dataset.type;\n\n        if (document.queryCommandState(dataType)) {\n\n            editor.toolbar.inline.setButtonHighlighted(tool);\n\n        } else {\n\n            editor.toolbar.inline.removeButtonsHighLight(tool);\n\n        }\n\n        /**\n         *\n         * hightlight for anchors\n         */\n        var selection = window.getSelection(),\n            tag = selection.anchorNode.parentNode;\n\n        if (tag.tagName == 'A' && dataType == 'link') {\n\n            editor.toolbar.inline.setButtonHighlighted(tool);\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Mark button if text is already executed\n     */\n    inline.setButtonHighlighted = function (button) {\n\n        button.classList.add('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n\n            var icon = button.childNodes[0];\n\n            icon.classList.remove('ce-icon-link');\n            icon.classList.add('ce-icon-unlink');\n\n        }\n\n    };\n\n    /**\n     * @private\n     *\n     * Removes hightlight\n     */\n    inline.removeButtonsHighLight = function (button) {\n\n        button.classList.remove('hightlighted');\n\n        /** At link tool we also change icon */\n        if (button.dataset.type == 'link') {\n\n            var icon = button.childNodes[0];\n\n            icon.classList.remove('ce-icon-unlink');\n            icon.classList.add('ce-icon-link');\n\n        }\n\n    };\n\n\n    return inline;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/inline.js","/**\n * Codex Editor toolbox\n *\n * All tools be able to appended here\n *\n * @author Codex Team\n * @version 1.0\n */\n\nlet editor = codex.editor;\n\nmodule.exports = (function (toolbox) {\n\n    toolbox.opened = false;\n\n    /** Shows toolbox */\n    toolbox.open = function () {\n\n        /** Close setting if toolbox is opened */\n        if (editor.toolbar.settings.opened) {\n\n            editor.toolbar.settings.close();\n\n        }\n\n        /** display toolbox */\n        editor.nodes.toolbox.classList.add('opened');\n\n        /** Animate plus button */\n        editor.nodes.plusButton.classList.add('clicked');\n\n        /** toolbox state */\n        editor.toolbar.toolbox.opened = true;\n\n    };\n\n    /** Closes toolbox */\n    toolbox.close = function () {\n\n        /** Makes toolbox disapear */\n        editor.nodes.toolbox.classList.remove('opened');\n\n        /** Rotate plus button */\n        editor.nodes.plusButton.classList.remove('clicked');\n\n        /** toolbox state */\n        editor.toolbar.toolbox.opened = false;\n\n    };\n\n    toolbox.leaf = function () {\n\n        let currentTool = editor.toolbar.current,\n            tools       = Object.keys(editor.tools),\n            barButtons  = editor.nodes.toolbarButtons,\n            nextToolIndex = 0,\n            toolToSelect,\n            visibleTool,\n            tool;\n\n        if ( !currentTool ) {\n\n            /** Get first tool from object*/\n            for(tool in editor.tools) {\n\n                if (editor.tools[tool].displayInToolbox) {\n\n                    break;\n\n                }\n\n                nextToolIndex ++;\n\n            }\n\n        } else {\n\n            nextToolIndex = tools.indexOf(currentTool) + 1;\n            visibleTool = tools[nextToolIndex];\n\n            while (!editor.tools[visibleTool].displayInToolbox) {\n\n                nextToolIndex++;\n                visibleTool = tools[nextToolIndex];\n\n                if ( nextToolIndex == tools.length ) {\n\n                    nextToolIndex = 0;\n                    visibleTool = tools[nextToolIndex];\n\n                }\n\n            }\n\n        }\n\n        toolToSelect = tools[nextToolIndex];\n\n        for ( var button in barButtons ) {\n\n            barButtons[button].classList.remove('selected');\n\n        }\n\n        barButtons[toolToSelect].classList.add('selected');\n        editor.toolbar.current = toolToSelect;\n\n    };\n\n    /**\n     * Transforming selected node type into selected toolbar element type\n     * @param {event} event\n     */\n    toolbox.toolClicked = function (event) {\n\n        /**\n         * UNREPLACEBLE_TOOLS this types of tools are forbidden to replace even they are empty\n         */\n        var UNREPLACEBLE_TOOLS = ['image', 'link', 'list', 'instagram', 'twitter', 'embed'],\n            tool               = editor.tools[editor.toolbar.current],\n            workingNode        = editor.content.currentNode,\n            currentInputIndex  = editor.caret.inputIndex,\n            newBlockContent,\n            appendCallback,\n            blockData;\n\n        /** Make block from plugin */\n        newBlockContent = tool.render();\n\n        /** information about block */\n        blockData = {\n            block     : newBlockContent,\n            type      : tool.type,\n            stretched : false\n        };\n\n        if (\n            workingNode &&\n            UNREPLACEBLE_TOOLS.indexOf(workingNode.dataset.tool) === -1 &&\n            workingNode.textContent.trim() === ''\n        ) {\n\n            /** Replace current block */\n            editor.content.switchBlock(workingNode, newBlockContent, tool.type);\n\n        } else {\n\n            /** Insert new Block from plugin */\n            editor.content.insertBlock(blockData);\n\n            /** increase input index */\n            currentInputIndex++;\n\n        }\n\n        /** Fire tool append callback  */\n        appendCallback = tool.appendCallback;\n\n        if (appendCallback && typeof appendCallback == 'function') {\n\n            appendCallback.call(event);\n\n        }\n\n        window.setTimeout(function () {\n\n            /** Set caret to current block */\n            editor.caret.setToBlock(currentInputIndex);\n\n        }, 10);\n\n\n        /**\n         * Changing current Node\n         */\n        editor.content.workingNodeChanged();\n\n        /**\n         * Move toolbar when node is changed\n         */\n        editor.toolbar.move();\n\n    };\n\n    return toolbox;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/toolbar/toolbox.js","/**\n * Codex Editor callbacks module\n *\n * @author Codex Team\n * @version 1.3.5\n */\nlet editor = codex.editor;\n\nmodule.exports = (function (callbacks) {\n\n    callbacks.globalKeydown = function (event) {\n\n        switch (event.keyCode) {\n            case editor.core.keys.ENTER : editor.callback.enterKeyPressed(event);     break;\n        }\n\n    };\n\n    callbacks.redactorKeyDown = function (event) {\n\n        switch (event.keyCode) {\n            case editor.core.keys.TAB   : editor.callback.tabKeyPressed(event);                     break;\n            case editor.core.keys.ENTER : editor.callback.enterKeyPressedOnRedactorZone(event);     break;\n            case editor.core.keys.ESC   : editor.callback.escapeKeyPressed(event);                  break;\n            default                    : editor.callback.defaultKeyPressed(event);                 break;\n        }\n\n    };\n\n    callbacks.globalKeyup = function (event) {\n\n        switch (event.keyCode) {\n            case editor.core.keys.UP    :\n            case editor.core.keys.LEFT  :\n            case editor.core.keys.RIGHT :\n            case editor.core.keys.DOWN  : editor.callback.arrowKeyPressed(event); break;\n        }\n\n    };\n\n    callbacks.tabKeyPressed = function (event) {\n\n        if ( !editor.toolbar.opened ) {\n\n            editor.toolbar.open();\n\n        }\n\n        if (editor.toolbar.opened && !editor.toolbar.toolbox.opened) {\n\n            editor.toolbar.toolbox.open();\n\n        } else {\n\n            editor.toolbar.toolbox.leaf();\n\n        }\n\n        event.preventDefault();\n\n    };\n\n    /**\n    * @param {Event} event\n    */\n    callbacks.enterKeyPressed = function () {\n\n        if (editor.content.editorAreaHightlighted) {\n\n            /**\n             * it means that we lose input index, saved index before is not correct\n             * therefore we need to set caret when we insert new block\n             */\n            editor.caret.inputIndex = -1;\n\n            editor.callback.enterPressedOnBlock();\n\n        }\n\n    };\n\n    /**\n     * ENTER key handler\n     * Makes new paragraph block\n     */\n    callbacks.enterKeyPressedOnRedactorZone = function (event) {\n\n        if (event.target.contentEditable == 'true') {\n\n            /** Update input index */\n            editor.caret.saveCurrentInputIndex();\n\n        }\n\n        var currentInputIndex       = editor.caret.getCurrentInputIndex() || 0,\n            workingNode             = editor.content.currentNode,\n            tool                    = workingNode.dataset.tool,\n            isEnterPressedOnToolbar = editor.toolbar.opened &&\n                                        editor.toolbar.current &&\n                                        event.target == editor.state.inputs[currentInputIndex];\n\n        /** The list of tools which needs the default browser behaviour */\n        var enableLineBreaks = editor.tools[tool].enableLineBreaks;\n\n        /** This type of block creates when enter is pressed */\n        var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n        /**\n         * When toolbar is opened, select tool instead of making new paragraph\n         */\n        if ( isEnterPressedOnToolbar ) {\n\n            event.preventDefault();\n\n            editor.toolbar.toolbox.toolClicked(event);\n\n            editor.toolbar.close();\n\n            /**\n             * Stop other listeners callback executions\n             */\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n\n            return;\n\n        }\n\n        /**\n         * Allow paragraph lineBreaks with shift enter\n         * Or if shiftkey pressed and enter and enabledLineBreaks, the let new block creation\n         */\n        if ( event.shiftKey || enableLineBreaks ) {\n\n            event.stopPropagation();\n            event.stopImmediatePropagation();\n            return;\n\n        }\n\n        var currentSelection = window.getSelection(),\n            currentSelectedNode = currentSelection.anchorNode,\n            caretAtTheEndOfText = editor.caret.position.atTheEnd(),\n            isTextNodeHasParentBetweenContenteditable = false;\n\n        /**\n         * Allow making new <p> in same block by SHIFT+ENTER and forbids to prevent default browser behaviour\n         */\n        if ( event.shiftKey && !enableLineBreaks ) {\n\n            editor.callback.enterPressedOnBlock(editor.content.currentBlock, event);\n            event.preventDefault();\n            return;\n\n        }\n\n        /**\n         * Workaround situation when caret at the Text node that has some wrapper Elements\n         * Split block cant handle this.\n         * We need to save default behavior\n         */\n        isTextNodeHasParentBetweenContenteditable = currentSelectedNode && currentSelectedNode.parentNode.contentEditable != 'true';\n\n        /**\n         * Split blocks when input has several nodes and caret placed in textNode\n         */\n        if (\n            currentSelectedNode.nodeType == editor.core.nodeTypes.TEXT &&\n            !isTextNodeHasParentBetweenContenteditable &&\n            !caretAtTheEndOfText\n        ) {\n\n            event.preventDefault();\n\n            editor.core.log('Splitting Text node...');\n\n            editor.content.splitBlock(currentInputIndex);\n\n            /** Show plus button when next input after split is empty*/\n            if (!editor.state.inputs[currentInputIndex + 1].textContent.trim()) {\n\n                editor.toolbar.showPlusButton();\n\n            }\n\n        } else {\n\n            var islastNode = editor.content.isLastNode(currentSelectedNode);\n\n            if ( islastNode && caretAtTheEndOfText ) {\n\n                event.preventDefault();\n                event.stopPropagation();\n                event.stopImmediatePropagation();\n\n                editor.core.log('ENTER clicked in last textNode. Create new BLOCK');\n\n                editor.content.insertBlock({\n                    type: NEW_BLOCK_TYPE,\n                    block: editor.tools[NEW_BLOCK_TYPE].render()\n                }, true);\n\n                editor.toolbar.move();\n                editor.toolbar.open();\n\n                /** Show plus button with empty block */\n                editor.toolbar.showPlusButton();\n\n            }\n\n        }\n\n        /** get all inputs after new appending block */\n        editor.ui.saveInputs();\n\n    };\n\n    callbacks.escapeKeyPressed = function (event) {\n\n        /** Close all toolbar */\n        editor.toolbar.close();\n\n        /** Close toolbox */\n        editor.toolbar.toolbox.close();\n\n        event.preventDefault();\n\n    };\n\n    /**\n    * @param {Event} event\n    */\n    callbacks.arrowKeyPressed = function () {\n\n        editor.content.workingNodeChanged();\n\n        /* Closing toolbar */\n        editor.toolbar.close();\n        editor.toolbar.move();\n\n    };\n\n    /**\n    * @param {Event} event\n    */\n    callbacks.defaultKeyPressed = function () {\n\n        editor.toolbar.close();\n\n        if (!editor.toolbar.inline.actionsOpened) {\n\n            editor.toolbar.inline.close();\n            editor.content.clearMark();\n\n        }\n\n    };\n\n    callbacks.redactorClicked = function (event) {\n\n        callbacks.detectWhenClickedOnFirstLevelBlockArea();\n\n        editor.content.workingNodeChanged(event.target);\n\n        editor.ui.saveInputs();\n\n        var selectedText = editor.toolbar.inline.getSelectionText(),\n            firstLevelBlock;\n\n        /**\n         * If selection range took off, then we hide inline toolbar\n         */\n        if (selectedText.length === 0) {\n\n            editor.toolbar.inline.close();\n\n        }\n\n        /** Update current input index in memory when caret focused into existed input */\n        if (event.target.contentEditable == 'true') {\n\n            editor.caret.saveCurrentInputIndex();\n\n        }\n\n        if (editor.content.currentNode === null) {\n\n            /**\n             * If inputs in redactor does not exits, then we put input index 0 not -1\n             */\n            var indexOfLastInput = editor.state.inputs.length > 0 ? editor.state.inputs.length - 1 : 0;\n\n            /** If we have any inputs */\n            if (editor.state.inputs.length) {\n\n                /**\n                * @todo Refactor\n                */\n\n                /** getting firstlevel parent of input */\n                firstLevelBlock = editor.content.getFirstLevelBlock(editor.state.inputs[indexOfLastInput]);\n\n            }\n\n            /** If input is empty, then we set caret to the last input */\n            if (editor.state.inputs.length && editor.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == editor.settings.initialBlockPlugin) {\n\n                editor.caret.setToBlock(indexOfLastInput);\n\n            } else {\n\n                /** Create new input when caret clicked in redactors area */\n                var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n\n                editor.content.insertBlock({\n                    type  : NEW_BLOCK_TYPE,\n                    block : editor.tools[NEW_BLOCK_TYPE].render()\n                });\n\n                /** If there is no inputs except inserted */\n                if (editor.state.inputs.length === 1) {\n\n                    editor.caret.setToBlock(indexOfLastInput);\n\n                } else {\n\n                    /** Set caret to this appended input */\n                    editor.caret.setToNextBlock(indexOfLastInput);\n\n                }\n\n            }\n\n            /**\n             * Move toolbar to the right position and open\n             */\n            editor.toolbar.move();\n            editor.toolbar.open();\n\n        } else {\n\n            /**\n             * Move toolbar to the new position and open\n             */\n            editor.toolbar.move();\n            editor.toolbar.open();\n\n            /** Close all panels */\n            editor.toolbar.settings.close();\n            editor.toolbar.toolbox.close();\n\n        }\n\n\n        var inputIsEmpty = !editor.content.currentNode.textContent.trim(),\n            currentNodeType = editor.content.currentNode.dataset.tool,\n            isInitialType = currentNodeType == editor.settings.initialBlockPlugin;\n\n\n        /** Hide plus buttons */\n        editor.toolbar.hidePlusButton();\n\n        /** Mark current block */\n        editor.content.markBlock();\n\n\n        if ( isInitialType && inputIsEmpty ) {\n\n            /** Show plus button */\n            editor.toolbar.showPlusButton();\n\n        }\n\n\n    };\n\n    /**\n     * This method allows to define, is caret in contenteditable element or not.\n     * Otherwise, if we get TEXT node from range container, that will means we have input index.\n     * In this case we use default browsers behaviour (if plugin allows that) or overwritten action.\n     * Therefore, to be sure that we've clicked first-level block area, we should have currentNode, which always\n     * specifies to the first-level block. Other cases we just ignore.\n     */\n    callbacks.detectWhenClickedOnFirstLevelBlockArea = function () {\n\n        var selection  = window.getSelection(),\n            anchorNode = selection.anchorNode,\n            flag = false;\n\n        if (selection.rangeCount === 0) {\n\n            editor.content.editorAreaHightlighted = true;\n\n        } else {\n\n            if (!editor.core.isDomNode(anchorNode)) {\n\n                anchorNode = anchorNode.parentNode;\n\n            }\n\n            /** Already founded, without loop */\n            if (anchorNode.contentEditable == 'true') {\n\n                flag = true;\n\n            }\n\n            while (anchorNode.contentEditable != 'true') {\n\n                anchorNode = anchorNode.parentNode;\n\n                if (anchorNode.contentEditable == 'true') {\n\n                    flag = true;\n\n                }\n\n                if (anchorNode == document.body) {\n\n                    break;\n\n                }\n\n            }\n\n            /** If editable element founded, flag is \"TRUE\", Therefore we return \"FALSE\" */\n            editor.content.editorAreaHightlighted = flag ? false : true;\n\n        }\n\n    };\n\n    /**\n     * Toolbar button click handler\n     * @param this - cursor to the button\n     */\n    callbacks.toolbarButtonClicked = function (event) {\n\n        var button = this;\n\n        editor.toolbar.current = button.dataset.type;\n\n        editor.toolbar.toolbox.toolClicked(event);\n        editor.toolbar.close();\n\n    };\n\n    /** Show or Hide toolbox when plus button is clicked */\n    callbacks.plusButtonClicked = function () {\n\n        if (!editor.nodes.toolbox.classList.contains('opened')) {\n\n            editor.toolbar.toolbox.open();\n\n        } else {\n\n            editor.toolbar.toolbox.close();\n\n        }\n\n    };\n\n    /**\n     * Block handlers for KeyDown events\n     */\n    callbacks.blockKeydown = function (event) {\n\n        let block = this; // event.target input\n\n        switch (event.keyCode) {\n\n            case editor.core.keys.DOWN:\n            case editor.core.keys.RIGHT:\n                editor.callback.blockRightOrDownArrowPressed();\n                break;\n\n            case editor.core.keys.BACKSPACE:\n                editor.callback.backspacePressed(block, event);\n                break;\n\n            case editor.core.keys.UP:\n            case editor.core.keys.LEFT:\n                editor.callback.blockLeftOrUpArrowPressed();\n                break;\n\n        }\n\n    };\n\n    /**\n     * RIGHT or DOWN keydowns on block\n     */\n    callbacks.blockRightOrDownArrowPressed = function () {\n\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode) {\n\n            return false;\n\n        }\n\n        /** Looking for closest (parent) contentEditable element of focused node */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n\n            editor.caret.setToNextBlock(editableElementIndex);\n            return;\n\n        }\n\n        /**\n         * Do nothing when caret doesn not reaches the end of last child\n         */\n        var caretInLastChild    = false,\n            caretAtTheEndOfText = false;\n\n        var lastChild,\n            deepestTextnode;\n\n        lastChild = focusedNode.childNodes[focusedNode.childNodes.length - 1 ];\n\n        if (editor.core.isDomNode(lastChild)) {\n\n            deepestTextnode = editor.content.getDeepestTextNodeFromPosition(lastChild, lastChild.childNodes.length);\n\n        } else {\n\n            deepestTextnode = lastChild;\n\n        }\n\n        caretInLastChild = selection.anchorNode == deepestTextnode;\n        caretAtTheEndOfText = deepestTextnode.length == selection.anchorOffset;\n\n        if ( !caretInLastChild  || !caretAtTheEndOfText ) {\n\n            editor.core.log('arrow [down|right] : caret does not reached the end');\n            return false;\n\n        }\n\n        editor.caret.setToNextBlock(editableElementIndex);\n\n    };\n\n    /**\n     * LEFT or UP keydowns on block\n     */\n    callbacks.blockLeftOrUpArrowPressed = function () {\n\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        /** Check for caret existance */\n        if (!focusedNode) {\n\n            return false;\n\n        }\n\n        /**\n         * LEFT or UP not at the beginning\n         */\n        if ( selection.anchorOffset !== 0) {\n\n            return false;\n\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        /**\n         * Do nothing if caret is not at the beginning of first child\n         */\n        var caretInFirstChild   = false,\n            caretAtTheBeginning = false;\n\n        var firstChild,\n            deepestTextnode;\n\n        /**\n         * Founded contentEditable element doesn't have childs\n         * Or maybe New created block\n         */\n        if (!focusedNode.textContent) {\n\n            editor.caret.setToPreviousBlock(editableElementIndex);\n            return;\n\n        }\n\n        firstChild = focusedNode.childNodes[0];\n\n        if (editor.core.isDomNode(firstChild)) {\n\n            deepestTextnode = editor.content.getDeepestTextNodeFromPosition(firstChild, 0);\n\n        } else {\n\n            deepestTextnode = firstChild;\n\n        }\n\n        caretInFirstChild   = selection.anchorNode == deepestTextnode;\n        caretAtTheBeginning = selection.anchorOffset === 0;\n\n        if ( caretInFirstChild && caretAtTheBeginning ) {\n\n            editor.caret.setToPreviousBlock(editableElementIndex);\n\n        }\n\n    };\n\n    /**\n     * Callback for enter key pressing in first-level block area\n     * @param {Event} event\n     */\n    callbacks.enterPressedOnBlock = function () {\n\n        var NEW_BLOCK_TYPE  = editor.settings.initialBlockPlugin;\n\n        editor.content.insertBlock({\n            type  : NEW_BLOCK_TYPE,\n            block : editor.tools[NEW_BLOCK_TYPE].render()\n        }, true );\n\n        editor.toolbar.move();\n        editor.toolbar.open();\n\n    };\n\n    callbacks.backspacePressed = function (block, event) {\n\n        var currentInputIndex = editor.caret.getCurrentInputIndex(),\n            range,\n            selectionLength,\n            firstLevelBlocksCount;\n\n        if (block.textContent.trim()) {\n\n            range           = editor.content.getRange();\n            selectionLength = range.endOffset - range.startOffset;\n\n            if (editor.caret.position.atStart() && !selectionLength && editor.state.inputs[currentInputIndex - 1]) {\n\n                editor.content.mergeBlocks(currentInputIndex);\n\n            } else {\n\n                return;\n\n            }\n\n        }\n\n        if (!selectionLength) {\n\n            block.remove();\n\n        }\n\n\n        firstLevelBlocksCount = editor.nodes.redactor.childNodes.length;\n\n        /**\n         * If all blocks are removed\n         */\n        if (firstLevelBlocksCount === 0) {\n\n            /** update currentNode variable */\n            editor.content.currentNode = null;\n\n            /** Inserting new empty initial block */\n            editor.ui.addInitialBlock();\n\n            /** Updating inputs state after deleting last block */\n            editor.ui.saveInputs();\n\n            /** Set to current appended block */\n            window.setTimeout(function () {\n\n                editor.caret.setToPreviousBlock(1);\n\n            }, 10);\n\n        } else {\n\n            if (editor.caret.inputIndex !== 0) {\n\n                /** Target block is not first */\n                editor.caret.setToPreviousBlock(editor.caret.inputIndex);\n\n            } else {\n\n                /** If we try to delete first block */\n                editor.caret.setToNextBlock(editor.caret.inputIndex);\n\n            }\n\n        }\n\n        editor.toolbar.move();\n\n        if (!editor.toolbar.opened) {\n\n            editor.toolbar.open();\n\n        }\n\n        /** Updating inputs state */\n        editor.ui.saveInputs();\n\n        /** Prevent default browser behaviour */\n        event.preventDefault();\n\n    };\n\n    /**\n     * @deprecated\n     *\n     * @param event\n     */\n    callbacks.blockPaste = function (event) {\n\n        var currentInputIndex = editor.caret.getCurrentInputIndex(),\n            node = editor.state.inputs[currentInputIndex];\n\n        window.setTimeout(function () {\n\n            editor.content.sanitize(node);\n\n            event.preventDefault();\n\n        }, 10);\n\n        event.stopImmediatePropagation();\n\n    };\n\n    /**\n     * This method is used to observe pasted dirty data.\n     *\n     * Mutation handlers send to separate observers each mutation (added, changed and so on), which will be\n     * passed from handler that sanitizes and replaces data.\n     *\n     * Probably won't be used\n     *\n     * @deprecated\n     *\n     * @param event\n     * @private\n     */\n    callbacks._blockPasteCallback = function () {\n\n        var currentInputIndex = editor.caret.getCurrentInputIndex();\n\n        /**\n         * create an observer instance\n         */\n        var observer = new MutationObserver(editor.callback.handleMutationsOnPaste);\n\n        /**\n         * configuration of the observer:\n         */\n        var config = {\n            attributes: true,\n            childList: false,\n            characterData: false,\n            subtree : true\n        };\n\n        // pass in the target node, as well as the observer options\n        observer.observe(editor.state.inputs[currentInputIndex], config);\n\n    };\n\n    /**\n     * This method prevents default behaviour.\n     *\n     * We get from clipboard pasted data, sanitize, make a fragment that contains of this sanitized nodes.\n     * Firstly, we need to memorize the caret position. We can do that by getting the range of selection.\n     * After all, we insert clear fragment into caret placed position. Then, we should move the caret to the last node\n     *\n     * @param event\n     */\n    callbacks.blockPasteCallback = function (event) {\n\n        /** Prevent default behaviour */\n        event.preventDefault();\n\n        /** get html pasted data - dirty data */\n        var data = event.clipboardData.getData('text/html') || event.clipboardData.getData('text/plain');\n\n        /** Temporary DIV that is used to work with childs as arrays item */\n        var div     = editor.draw.node('DIV', '', {}),\n            cleaner = new editor.sanitizer.init(editor.sanitizer.Config.BASIC),\n            cleanData,\n            fragment;\n\n        /** Create fragment, that we paste to range after proccesing */\n        fragment = document.createDocumentFragment();\n\n        cleanData = cleaner.clean(data);\n\n        div.innerHTML = cleanData;\n\n        var node, lastNode;\n\n        /**\n         * and fill in fragment\n         */\n        while (( node = div.firstChild) ) {\n\n            lastNode = fragment.appendChild(node);\n\n        }\n\n        /**\n         * work with selection and range\n         */\n        var selection, range;\n\n        selection = window.getSelection();\n\n        range = selection.getRangeAt(0);\n        range.deleteContents();\n\n        range.insertNode(fragment);\n        // document.execCommand('insertParagraph', false, \"<p>\");\n\n        /** Preserve the selection */\n        if (lastNode) {\n\n            range = range.cloneRange();\n            range.setStartAfter(lastNode);\n            range.collapse(true);\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n        }\n\n    };\n\n    /**\n     * Sends all mutations to paste handler\n     */\n    callbacks.handleMutationsOnPaste = function (mutations) {\n\n        var self = this;\n\n        /**\n         * Calling function with context of this function.\n         * Also, we should sanitize pasted or changed data one time and ignore\n         * changings which makes sanitize method.\n         * For that, we need to send Context, MutationObserver.__proto__ that contains\n         * observer disconnect method.\n         */\n        mutations.forEach(function (mutation) {\n\n            editor.content.paste.call(self, mutation);\n\n        });\n\n    };\n\n    /**\n     * Clicks on block settings button\n     */\n    callbacks.showSettingsButtonClicked = function () {\n\n        /**\n         * Get type of current block\n         * It uses to append settings from tool.settings property.\n         * ...\n         * Type is stored in data-type attribute on block\n         */\n        var currentToolType = editor.content.currentNode.dataset.tool;\n\n        editor.toolbar.settings.toggle(currentToolType);\n\n        /** Close toolbox when settings button is active */\n        editor.toolbar.toolbox.close();\n        editor.toolbar.settings.hideRemoveActions();\n\n    };\n\n    return callbacks;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/callbacks.js","/**\n * Codex Editor Draw module\n *\n * @author Codex Team\n * @version 1.0.\n */\n\nmodule.exports = (function (draw) {\n\n    /**\n     * Base editor wrapper\n     */\n    draw.wrapper = function () {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className += 'codex-editor';\n\n        return wrapper;\n\n    };\n\n    /**\n     * Content-editable holder\n     */\n    draw.redactor = function () {\n\n        var redactor = document.createElement('div');\n\n        redactor.className += 'ce-redactor';\n\n        return redactor;\n\n    };\n\n    draw.ceBlock = function () {\n\n        var block = document.createElement('DIV');\n\n        block.className += 'ce_block';\n\n        return block;\n\n    };\n\n    /**\n     * Empty toolbar with toggler\n     */\n    draw.toolbar = function () {\n\n        var bar = document.createElement('div');\n\n        bar.className += 'ce-toolbar';\n\n        return bar;\n\n    };\n\n    draw.toolbarContent = function () {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.classList.add('ce-toolbar__content');\n\n        return wrapper;\n\n    };\n\n    /**\n     * Inline toolbar\n     */\n    draw.inlineToolbar = function () {\n\n        var bar = document.createElement('DIV');\n\n        bar.className += 'ce-toolbar-inline';\n\n        return bar;\n\n    };\n\n    /**\n     * Wrapper for inline toobar buttons\n     */\n    draw.inlineToolbarButtons = function () {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__buttons';\n\n        return wrapper;\n\n    };\n\n    /**\n     * For some actions\n     */\n    draw.inlineToolbarActions = function () {\n\n        var wrapper = document.createElement('DIV');\n\n        wrapper.className += 'ce-toolbar-inline__actions';\n\n        return wrapper;\n\n    };\n\n    draw.inputForLink = function () {\n\n        var input = document.createElement('INPUT');\n\n        input.type        = 'input';\n        input.className  += 'inputForLink';\n        input.placeholder = 'Вставьте ссылку ...';\n        input.setAttribute('form', 'defaultForm');\n\n        input.setAttribute('autofocus', 'autofocus');\n\n        return input;\n\n    };\n\n    /**\n     * Block with notifications\n     */\n    draw.alertsHolder = function () {\n\n        var block = document.createElement('div');\n\n        block.classList.add('ce_notifications-block');\n\n        return block;\n\n    };\n\n    /**\n     * @todo Desc\n     */\n    draw.blockButtons = function () {\n\n        var block = document.createElement('div');\n\n        block.className += 'ce-toolbar__actions';\n\n        return block;\n\n    };\n\n    /**\n     * Block settings panel\n     */\n    draw.blockSettings = function () {\n\n        var settings = document.createElement('div');\n\n        settings.className += 'ce-settings';\n\n        return settings;\n\n    };\n\n    draw.defaultSettings = function () {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_default');\n\n        return div;\n\n    };\n\n    draw.pluginsSettings = function () {\n\n        var div = document.createElement('div');\n\n        div.classList.add('ce-settings_plugin');\n\n        return div;\n\n    };\n\n    draw.plusButton = function () {\n\n        var button = document.createElement('span');\n\n        button.className = 'ce-toolbar__plus';\n        // button.innerHTML = '<i class=\"ce-icon-plus\"></i>';\n\n        return button;\n\n    };\n\n    /**\n     * Settings button in toolbar\n     */\n    draw.settingsButton = function () {\n\n        var toggler = document.createElement('span');\n\n        toggler.className = 'ce-toolbar__settings-btn';\n\n        /** Toggler button*/\n        toggler.innerHTML = '<i class=\"ce-icon-cog\"></i>';\n\n        return toggler;\n\n    };\n\n    /**\n     * Redactor tools wrapper\n     */\n\n    draw.toolbox = function () {\n\n        var wrapper = document.createElement('div');\n\n        wrapper.className = 'ce-toolbar__tools';\n\n        return wrapper;\n\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tool buttons for toolbox\n     *\n     * @param {String} type\n     * @param {String} classname\n     * @returns {Element}\n     */\n    draw.toolbarButton = function (type, classname) {\n\n        var button     = document.createElement('li'),\n            toolIcon  = document.createElement('i'),\n            toolTitle = document.createElement('span');\n\n        button.dataset.type = type;\n        button.setAttribute('title', type);\n\n        toolIcon.classList.add(classname);\n        toolTitle.classList.add('ce_toolbar_tools--title');\n\n\n        button.appendChild(toolIcon);\n        button.appendChild(toolTitle);\n\n        return button;\n\n    };\n\n    /**\n     * @protected\n     *\n     * Draws tools for inline toolbar\n     *\n     * @param {String} type\n     * @param {String} classname\n     */\n    draw.toolbarButtonInline = function (type, classname) {\n\n        var button     = document.createElement('BUTTON'),\n            toolIcon  = document.createElement('I');\n\n        button.type = 'button';\n        button.dataset.type = type;\n        toolIcon.classList.add(classname);\n\n        button.appendChild(toolIcon);\n\n        return button;\n\n    };\n\n    /**\n     * Redactor block\n     */\n    draw.block = function (tagName, content) {\n\n        var node = document.createElement(tagName);\n\n        node.innerHTML = content || '';\n\n        return node;\n\n    };\n\n    /**\n     * Creates Node with passed tagName and className\n     * @param {string}  tagName\n     * @param {string} className\n     * @param {object} properties - allow to assign properties\n     */\n    draw.node = function ( tagName, className, properties ) {\n\n        var el = document.createElement( tagName );\n\n        if ( className ) el.className = className;\n\n        if ( properties ) {\n\n            for (var name in properties) {\n\n                el[name] = properties[name];\n\n            }\n\n        }\n\n        return el;\n\n    };\n\n    return draw;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/draw.js","/**\n * Codex Editor Caret Module\n *\n * @author Codex Team\n * @version 1.0\n */\nlet editor = codex.editor;\n\nmodule.exports = (function (caret) {\n\n    /**\n     * @var {int} InputIndex - editable element in DOM\n     */\n    caret.inputIndex = null;\n\n    /**\n     * @var {int} offset - caret position in a text node.\n     */\n    caret.offset = null;\n\n    /**\n     * @var {int} focusedNodeIndex - we get index of child node from first-level block\n     */\n    caret.focusedNodeIndex = null;\n\n    /**\n     * Creates Document Range and sets caret to the element.\n     * @protected\n     * @uses caret.save — if you need to save caret position\n     * @param {Element} el - Changed Node.\n     */\n    caret.set = function ( el, index, offset) {\n\n        offset = offset || caret.offset || 0;\n        index  = index  || caret.focusedNodeIndex || 0;\n\n        var childs = el.childNodes,\n            nodeToSet;\n\n        if ( childs.length === 0 ) {\n\n            nodeToSet = el;\n\n        } else {\n\n            nodeToSet = childs[index];\n\n        }\n\n        /** If Element is INPUT */\n        if (el.tagName == 'INPUT') {\n\n            el.focus();\n            return;\n\n        }\n\n        if (editor.core.isDomNode(nodeToSet)) {\n\n            nodeToSet = editor.content.getDeepestTextNodeFromPosition(nodeToSet, nodeToSet.childNodes.length);\n\n        }\n\n        var range     = document.createRange(),\n            selection = window.getSelection();\n\n        window.setTimeout(function () {\n\n            range.setStart(nodeToSet, offset);\n            range.setEnd(nodeToSet, offset);\n\n            selection.removeAllRanges();\n            selection.addRange(range);\n\n            editor.caret.saveCurrentInputIndex();\n\n        }, 20);\n\n    };\n\n    /**\n     * @protected\n     * Updates index of input and saves it in caret object\n     */\n    caret.saveCurrentInputIndex = function () {\n\n        /** Index of Input that we paste sanitized content */\n        var selection   = window.getSelection(),\n            inputs      = editor.state.inputs,\n            focusedNode = selection.anchorNode,\n            focusedNodeHolder;\n\n        if (!focusedNode) {\n\n            return;\n\n        }\n\n        /** Looking for parent contentEditable block */\n        while (focusedNode.contentEditable != 'true') {\n\n            focusedNodeHolder = focusedNode.parentNode;\n            focusedNode       = focusedNodeHolder;\n\n        }\n\n        /** Input index in DOM level */\n        var editableElementIndex = 0;\n\n        while (focusedNode != inputs[editableElementIndex]) {\n\n            editableElementIndex ++;\n\n        }\n\n        caret.inputIndex = editableElementIndex;\n\n    };\n\n    /**\n     * Returns current input index (caret object)\n     */\n    caret.getCurrentInputIndex = function () {\n\n        return caret.inputIndex;\n\n    };\n\n    /**\n     * @param {int} index - index of first-level block after that we set caret into next input\n     */\n    caret.setToNextBlock = function (index) {\n\n        var inputs = editor.state.inputs,\n            nextInput = inputs[index + 1];\n\n        if (!nextInput) {\n\n            editor.core.log('We are reached the end');\n            return;\n\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!nextInput.childNodes.length) {\n\n            var emptyTextElement = document.createTextNode('');\n\n            nextInput.appendChild(emptyTextElement);\n\n        }\n\n        editor.caret.inputIndex = index + 1;\n        editor.caret.set(nextInput, 0, 0);\n        editor.content.workingNodeChanged(nextInput);\n\n    };\n\n    /**\n     * @param {int} index - index of target input.\n     * Sets caret to input with this index\n     */\n    caret.setToBlock = function (index) {\n\n        var inputs = editor.state.inputs,\n            targetInput = inputs[index];\n\n        if ( !targetInput ) {\n\n            return;\n\n        }\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!targetInput.childNodes.length) {\n\n            var emptyTextElement = document.createTextNode('');\n\n            targetInput.appendChild(emptyTextElement);\n\n        }\n\n        editor.caret.inputIndex = index;\n        editor.caret.set(targetInput, 0, 0);\n        editor.content.workingNodeChanged(targetInput);\n\n    };\n\n    /**\n     * @param {int} index - index of input\n     */\n    caret.setToPreviousBlock = function (index) {\n\n        index = index || 0;\n\n        var inputs = editor.state.inputs,\n            previousInput = inputs[index - 1],\n            lastChildNode,\n            lengthOfLastChildNode,\n            emptyTextElement;\n\n\n        if (!previousInput) {\n\n            editor.core.log('We are reached first node');\n            return;\n\n        }\n\n        lastChildNode = editor.content.getDeepestTextNodeFromPosition(previousInput, previousInput.childNodes.length);\n        lengthOfLastChildNode = lastChildNode.length;\n\n        /**\n         * When new Block created or deleted content of input\n         * We should add some text node to set caret\n         */\n        if (!previousInput.childNodes.length) {\n\n            emptyTextElement = document.createTextNode('');\n            previousInput.appendChild(emptyTextElement);\n\n        }\n        editor.caret.inputIndex = index - 1;\n        editor.caret.set(previousInput, previousInput.childNodes.length - 1, lengthOfLastChildNode);\n        editor.content.workingNodeChanged(inputs[index - 1]);\n\n    };\n\n    caret.position = {\n\n        atStart : function () {\n\n            var selection       = window.getSelection(),\n                anchorOffset    = selection.anchorOffset,\n                anchorNode      = selection.anchorNode,\n                firstLevelBlock = editor.content.getFirstLevelBlock(anchorNode),\n                pluginsRender   = firstLevelBlock.childNodes[0];\n\n            if (!editor.core.isDomNode(anchorNode)) {\n\n                anchorNode = anchorNode.parentNode;\n\n            }\n\n            var isFirstNode  = anchorNode === pluginsRender.childNodes[0],\n                isOffsetZero = anchorOffset === 0;\n\n            return isFirstNode && isOffsetZero;\n\n        },\n\n        atTheEnd : function () {\n\n            var selection    = window.getSelection(),\n                anchorOffset = selection.anchorOffset,\n                anchorNode   = selection.anchorNode;\n\n            /** Caret is at the end of input */\n            return !anchorNode || !anchorNode.length || anchorOffset === anchorNode.length;\n\n        }\n    };\n\n    return caret;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/caret.js","/**\n * Codex Editor Notification Module\n *\n * @author Codex Team\n * @version 1.0\n */\nlet editor = codex.editor;\n\nmodule.exports = (function (notifications) {\n\n    /**\n     * Error notificator. Shows block with message\n     * @protected\n     */\n    notifications.errorThrown = function (errorMsg, event) {\n\n        editor.notifications.send('This action is not available currently', event.type, false);\n\n    };\n\n    /**\n     * Appends notification with different types\n     * @param message {string} - Error or alert message\n     * @param type {string} - Type of message notification. Ex: Error, Warning, Danger ...\n     * @param append {boolean} - can be True or False when notification should be inserted after\n     */\n    notifications.send = function (message, type, append) {\n\n        var notification = editor.draw.block('div');\n\n        notification.textContent = message;\n        notification.classList.add('ce_notification-item', 'ce_notification-' + type, 'flipInX');\n\n        if (!append) {\n\n            editor.nodes.notifications.innerHTML = '';\n\n        }\n\n        editor.nodes.notifications.appendChild(notification);\n\n        window.setTimeout(function () {\n\n            notification.remove();\n\n        }, 3000);\n\n    };\n\n    return notifications;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/notifications.js","/**\n * Codex Editor Parser Module\n *\n * @author Codex Team\n * @version 1.1\n */\nlet editor = codex.editor;\n\nmodule.exports = (function (parser) {\n\n    /** inserting text */\n    parser.insertPastedContent = function (blockType, tag) {\n\n        editor.content.insertBlock({\n            type :  blockType.type,\n            block : blockType.render({\n                text : tag.innerHTML\n            })\n        });\n\n    };\n\n    /**\n     * Check DOM node for display style: separated block or child-view\n     */\n    parser.isFirstLevelBlock = function (node) {\n\n        return node.nodeType == editor.core.nodeTypes.TAG &&\n            node.classList.contains(editor.ui.className.BLOCK_CLASSNAME);\n\n    };\n\n    return parser;\n\n})({});\n\n\n\n// WEBPACK FOOTER //\n// ./modules/parser.js","/**\n * Codex Sanitizer\n */\n\nvar janitor = require('html-janitor');\n\nmodule.exports = (function (sanitizer) {\n\n    /**\n     * Basic config\n     */\n    var Config = {\n\n        BASIC : {\n\n            tags: {\n                p: {},\n                a: {\n                    href: true,\n                    target: '_blank',\n                    rel: 'nofollow'\n                },\n                i: {},\n                b: {},\n                strong: {},\n                em: {},\n                span: {}\n            }\n        }\n    };\n\n    sanitizer.Config = Config;\n\n    sanitizer.init = janitor;\n\n    return sanitizer;\n\n})({});\n\n\n// WEBPACK FOOTER //\n// ./modules/sanitizer.js","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/html-janitor/src/html-janitor.js\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}