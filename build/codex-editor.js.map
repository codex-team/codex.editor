{"version":3,"sources":["webpack://CodexEditor/webpack/universalModuleDefinition","webpack://CodexEditor/webpack/bootstrap","webpack://CodexEditor/./build/sprite.svg","webpack://CodexEditor/./node_modules/@babel/register/lib/browser.js","webpack://CodexEditor/./node_modules/@babel/register/lib/index.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/createClass.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/inherits.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://CodexEditor/./node_modules/@babel/runtime/helpers/typeof.js","webpack://CodexEditor/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","webpack://CodexEditor/./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack://CodexEditor/./node_modules/@babel/runtime/regenerator/index.js","webpack://CodexEditor/./node_modules/@codexteam/shortcuts/lib/shortcuts.js","webpack://CodexEditor/./node_modules/css-loader/lib/css-base.js","webpack://CodexEditor/./node_modules/html-janitor/src/html-janitor.js","webpack://CodexEditor/./src/codex.js","webpack://CodexEditor/./src/components/__module.ts","webpack://CodexEditor/./src/components/block-tunes/block-tune-delete.ts","webpack://CodexEditor/./src/components/block-tunes/block-tune-move-down.ts","webpack://CodexEditor/./src/components/block-tunes/block-tune-move-up.ts","webpack://CodexEditor/./src/components/block.ts","webpack://CodexEditor/./src/components/core.js","webpack://CodexEditor/./src/components/dom.ts","webpack://CodexEditor/./src/components/inline-tools/inline-tool-bold.ts","webpack://CodexEditor/./src/components/inline-tools/inline-tool-italic.ts","webpack://CodexEditor/./src/components/inline-tools/inline-tool-link.ts","webpack://CodexEditor/./src/components/modules sync nonrecursive [^_](api-blocks.ts|api-caret.ts|api-events.ts|api-listener.ts|api-sanitizer.ts|api-saver.ts|api-selection.ts|api-styles.ts|api-toolbar.ts|api.ts|block-events.ts|blockManager.js|caret.js|dragNDrop.ts|events.js|listeners.js|modificationsObserver.ts|paste.ts|renderer.js|sanitizer.js|saver.js|shortcuts.ts|toolbar-blockSettings.js|toolbar-inline.ts|toolbar-toolbox.js|toolbar.js|tools.js|ui.js)$","webpack://CodexEditor/./src/components/modules/api-blocks.ts","webpack://CodexEditor/./src/components/modules/api-caret.ts","webpack://CodexEditor/./src/components/modules/api-events.ts","webpack://CodexEditor/./src/components/modules/api-listener.ts","webpack://CodexEditor/./src/components/modules/api-sanitizer.ts","webpack://CodexEditor/./src/components/modules/api-saver.ts","webpack://CodexEditor/./src/components/modules/api-selection.ts","webpack://CodexEditor/./src/components/modules/api-styles.ts","webpack://CodexEditor/./src/components/modules/api-toolbar.ts","webpack://CodexEditor/./src/components/modules/api.ts","webpack://CodexEditor/./src/components/modules/block-events.ts","webpack://CodexEditor/./src/components/modules/blockManager.js","webpack://CodexEditor/./src/components/modules/caret.js","webpack://CodexEditor/./src/components/modules/dragNDrop.ts","webpack://CodexEditor/./src/components/modules/events.js","webpack://CodexEditor/./src/components/modules/listeners.js","webpack://CodexEditor/./src/components/modules/modificationsObserver.ts","webpack://CodexEditor/./src/components/modules/paste.ts","webpack://CodexEditor/./src/components/modules/renderer.js","webpack://CodexEditor/./src/components/modules/sanitizer.js","webpack://CodexEditor/./src/components/modules/saver.js","webpack://CodexEditor/./src/components/modules/shortcuts.ts","webpack://CodexEditor/./src/components/modules/toolbar-blockSettings.js","webpack://CodexEditor/./src/components/modules/toolbar-inline.ts","webpack://CodexEditor/./src/components/modules/toolbar-toolbox.js","webpack://CodexEditor/./src/components/modules/toolbar.js","webpack://CodexEditor/./src/components/modules/tools.js","webpack://CodexEditor/./src/components/modules/ui.js","webpack://CodexEditor/./src/components/polyfills.ts","webpack://CodexEditor/./src/components/selection.ts","webpack://CodexEditor/./src/components/tools/paragraph/dist/bundle.js","webpack://CodexEditor/./src/components/utils.ts","webpack://CodexEditor/./src/styles/main.css"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default","revert","args","register","node","assign","arr","Array","isArray","arr2","length","self","ReferenceError","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","this","arguments","apply","err","undefined","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","configurable","writable","protoProps","staticProps","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","obj","iter","iterator","toString","from","_arr","_n","_d","_e","_s","_i","next","push","_typeof","assertThisInitialized","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof2","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","result","keys","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","pushTryEntry","locs","iteratorMethod","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","BACKSPACE","ENTER","ESCAPE","LEFT","UP","RIGHT","DOWN","INSERT","DELETE","u","CMD","SHIFT","ALT","commands","parseShortcutName","element","on","callback","executeShortcut","execute","addEventListener","split","toUpperCase","includes","ctrlKey","metaKey","shiftKey","altKey","a","keyCode","removeEventListener","useSourceMap","list","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","toComment","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","id","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","HTMLJanitor","config","tagDefinitions","tags","validConfigValues","k","every","blockElementNames","isBlockElement","nodeName","inlineElementNames","isInlineElement","getAllowedAttrs","shouldRejectNode","allowedAttrs","shouldRejectAttr","attr","attrName","toLowerCase","clean","html","sandbox","document","createElement","innerHTML","_sanitize","parentNode","treeWalker","createTreeWalker","NodeFilter","SHOW_TEXT","SHOW_ELEMENT","SHOW_COMMENT","firstChild","_sanitized","nodeType","Node","TEXT_NODE","COMMENT_NODE","removeChild","containsBlockElement","isInline","some","childNodes","isNotTopContainer","isNestedBlockElement","keepNestedBlockElements","insertBefore","attributes","removeAttribute","data","trim","previousElementSibling","nextElementSibling","nextSibling","CodexEditor","configuration","_this","_classCallCheck2","onReady","editor","Core","isReady","exportAPI","_this2","field","destroy","moduleInstances","Listeners","removeAll","UI","ModificationsObserver","API","methods","Module","_ref","Editor","DeleteTune","api","CSS","wrapper","button","buttonDelete","buttonConfirm","nodes","resetConfirmation","setConfirmation","$","make","appendChild","svg","listener","event","handleClick","needConfirmation","events","off","blocks","delete","stopPropagation","classList","add","MoveDownTune","animation","moveDownButton","currentBlockIndex","getCurrentBlockIndex","getBlocksCount","setTimeout","remove","nextBlockElement","getBlockByIndex","holder","nextBlockCoords","getBoundingClientRect","scrollOffset","Math","abs","innerHeight","offsetHeight","top","scrollY","scrollTo","swap","MoveUpTune","moveUpButton","scrollUpOffset","currentBlockElement","previousBlockElement","currentBlockCoords","previousBlockCoords","scrollBy","Block","toolName","toolInstance","toolClass","settings","apiMethods","inputIndex","tool","class","compose","tunes","makeTunes","methodName","params","merge","save","pluginsContent","extractedBlock","sanitize","sanitizeBlock","measuringStart","performance","now","finishedExtraction","measuringEnd","time","_utils","log","isValid","validate","_this3","tunesList","_blockTuneMoveUp","_blockTuneDelete","_blockTuneMoveDown","tune","tunesElement","createDocumentFragment","_dom","append","render","blockData","rules","_this4","cleanData","isEmpty","sanitizer","contentNode","selector","inputs","array","querySelectorAll","index","findIndex","input","contains","querySelector","contentless","emptyText","emptyMedia","hasMedia","selected","toggle","wrapperStretched","dropTarget","onFail","init","start","_","holderId","tools","isFunction","constructModules","configureModules","console","getModulesDiff","diff","moduleName","modulesToPrepare","reduce","promise","_asyncToGenerator2","_regenerator","_callee","_context","prepare","t0","Renderer","initialBlock","initialBlockData","placeholder","b","hideToolbar","onChange","Dom","tag","tagName","_el$classList","classNames","el","_toConsumableArray2","createTextNode","width","height","icon","createElementNS","setAttribute","parent","elements","prepend","el1","el2","temp","getElementById","atLast","child","sibling","ELEMENT_NODE","nodeChild","isSingleTag","isNativeInput","getDeepestNode","DOCUMENT_FRAGMENT_NODE","isElement","textContent","replace","leafs","isNodeEmpty","shift","isLeaf","leaf","str","childElementCount","BoldInlineTool","commandName","buttonActive","buttonModifier","range","execCommand","selection","isActive","queryCommandState","ItalicInlineTool","LinkInlineTool","commandLink","commandUnlink","ENTER_KEY","buttonUnlink","inputShowed","inputOpened","inlineToolbar","toolbar","_selection","enterPressed","parentAnchor","findParentTag","expandToTag","unlink","closeActions","checkState","close","toggleActions","anchorTag","openActions","hrefAttr","getAttribute","needFocus","focus","clearSavedSelection","clearSaved","restore","preventDefault","validateURL","prepareLink","insertLink","stopImmediatePropagation","test","link","addProtocol","isInternal","isAnchor","substring","isProtocolRelative","./api-blocks.ts","./api-caret.ts","./api-events.ts","./api-listener.ts","./api-sanitizer.ts","./api-saver.ts","./api-selection.ts","./api-styles.ts","./api-toolbar.ts","./api.ts","./block-events.ts","./blockManager.js","./caret.js","./dragNDrop.ts","./events.js","./listeners.js","./modificationsObserver.ts","./paste.ts","./renderer.js","./sanitizer.js","./saver.js","./shortcuts.ts","./toolbar-blockSettings.js","./toolbar-inline.ts","./toolbar-toolbox.js","./toolbar.js","./tools.js","./ui.js","webpackContext","req","webpackContextResolve","code","BlocksAPI","_possibleConstructorReturn2","_getPrototypeOf2","BlockManager","fromIndex","toIndex","Toolbar","move","blockIndex","removeBlock","insert","Caret","setToBlock","currentBlock","navigatePrevious","clear","status","block","stretched","newBlock","stretchBlock","insertNewBlock","CaretAPI","EventsAPI","eventName","Events","emit","ListenerAPI","eventType","handler","useCapture","SanitizerAPI","taintString","Sanitizer","SaverAPI","Saver","SelectionAPI","className","_module","StylesAPI","inlineToolButton","inlineToolButtonActive","loader","settingsButton","settingsButtonActive","ToolbarAPI","open","caret","saver","styles","classes","BlockEvents","beforeKeydownProcessing","keyCodes","backspace","enter","arrowRightAndDown","arrowLeftAndUp","TAB","tabPressed","defaultHandler","clearHighlightings","needToolbarClosing","InlineToolbar","handleShowingEvent","direction","opened","Toolbox","plusButton","show","getBlockByChildNode","Tools","toolsAvailable","apiSettings","IS_ENABLED_LINE_BREAKS","getActiveTool","toolButtonActivate","newCurrent","isInitial","BM","isFirstBlock","canMergeBlocks","isAtStart","targetBlock","blockToMerge","mergeable","createShadow","mergeBlocks","restoreCaret","normalize","navigateNext","toolboxItemSelected","flippingToolboxItems","_blocks","Blocks","redactor","Proxy","set","construct","available","bindEvents","keydown","mouseUp","keyup","dragOver","dragLeave","newIndex","composeBlock","blockToMergeIndex","blockToMergeInfo","mergeWith","firstInput","extractedFragment","extractFragmentFromCaretPosition","text","firstLevelBlock","closest","childNode","caretPosition","parentFirstLevelBlock","setToInput","find","needAddInitialBlock","dropPointer","isLastBlock","nextBlocks","previousBlocks","workingArea","first","second","secondBlock","deleteCount","splice","previousBlock","insertAdjacentElement","nextBlock","children","Number","position","positions","DEFAULT","offset","START","END","lastInput","currentInput","nodeToSet","contentLength","getContentLength","delay","setCurrentBlockByChildNode","createRange","Selection","selectionStart","selectionEnd","setStart","setEnd","removeAllRanges","addRange","_range$getBoundingCli","bottom","_window","lastBlock","insertAtEnd","rangeCount","selectRange","getRangeAt","currentBlockInput","deleteContents","cloneRange","selectNodeContents","endContainer","endOffset","extractContents","current","siblings","contentEditable","force","_this$Editor$BlockMan","nextContentfulBlock","nextInput","isAtEnd","_this$Editor$BlockMan2","previousContentfulBlock","_ref2","previousInput","shadowCaret","sel","newRange","selectNode","isCollapsed","anchorNode","firstNode","firstLetterPosition","search","leftSiblings","getHigherLevelSiblings","nothingAtLeft","anchorOffset","lastNode","nothingAtRight","rightTrimmedText","DragNDrop","isStartedAtEditor","processDrop","dropEvent","_this$Editor","Paste","isAtEditor","processDataTransfer","dataTransfer","_x","dragEvent","subscribers","previousData","currentHandler","newData","allListeners","assignedEventData","alreadyExist","findOne","existingListeners","findAll","listenersOnElement","listenersWithType","listenersWithHandler","foundListeners","foundByElements","findByElement","filter","mutationDebouncer","debounce","DebounceTimer","setObserver","toolsTags","toolsPatterns","toolsFiles","processTool","_ref3","_slicedToArray2","toolPasteConfig","onPaste","getTagsConfig","getFilesConfig","getPatternsConfig","handlePasteEvent","_ref4","_assertThisInitialize","_assertThisInitialize2","_assertThisInitialized2","isNativeBehaviour","clipboardData","types","setCallback","processTools","isDragNDrop","processFiles","items","plainData","getData","htmlData","customConfig","defaultConfig","isHTMLString","processText","blockTools","entries","fileHandler","_toolPasteConfig$file","files","extensions","mimeTypes","isValidMimeType","patternHandler","patterns","_ref5","_ref6","pattern","RegExp","getBlock","all","processFile","kind","file","getAsFile","extension","getFileExtension","foundConfig","_ref7","_ref8","_ref8$","_file$type$split","_file$type$split2","fileType","fileSubtype","foundExt","ext","foundMimeType","mime","_mime$split","_mime$split2","subtype","isHTML","dataToInsert","processHTML","processPlain","isBlock","processSingleBlock","splitBlock","_ref9","_callee6","_context6","_this5","insertBlock","_x6","_x7","_caret","_this6","_this$Editor3","initialTool","getNodes","_Tools$blockTools$too","toolTags","plain","PATTERN_PROCESSING_MAX_LENGTH","processPattern","insertedBlock","substitute","execResult","exec","canReplaceCurrentBlock","_this$Editor6","reducer","destNode","DocumentFragment","isFragment","blockElements","_ref10","chainData","_loop","function","sequence","_sanitizerInstance","sanitizerConfig","sanitizerInstance","newConfig","library","href","rel","newInstance","output","blocksData","allExtractedData","makeOutput","outputData","totalTime","groupCollapsed","extraction","groupEnd","Date","version","Shortcuts","registeredShortcuts","shortcut","newShortcut","_shortcuts","BlockSettings","toolSettings","defaultSettings","renderSettings","renderTunes","wrapperOpened","addToolSettings","addDefaultSettings","closed","inlineToolbarShowed","buttonsWrapper","actionsWrapper","inlineToolButtonLast","buttons","actions","toolbarVerticalMargin","addTools","allowedToShow","checkToolsState","selectionRect","rect","wrapperOffset","newCoords","x","left","y","floor","style","filterTools","currentSelection","selectedText","getToolSettings","IS_ENABLED_INLINE_TOOLBAR","inlineToolbarSettings","hidden","dataset","lastVisibleButton","addTool","renderActions","toolClicked","internalTools","SHORTCUT","enableShortcuts","surround","toolsInstances","size","allTools","externalTools","Map","bold","constructInline","_inlineToolBold","italic","_inlineToolItalic","_inlineToolLink","inline","toolbox","activeButtonIndex","displayedToolsCount","IS_DISPLAYED_IN_TOOLBOX","TOOLBAR_ICON","toolboxButton","title","toolboxIcon","enableShortcut","IS_IRREPLACEBLE_TOOL","toolsClasses","toolboxOpened","activeButton","toolboxButtonActive","blockActionsButtons","settingsToggler","plusButtonClicked","settingsIcon","forceClose","contentOffset","transform","offsetTop","toolbarOpened","settingsTogglerClicked","hide","plusButtonHidden","Paragraph","toolsSettings","toolsUnavailable","_inlineTools","paragraph","sequenceData","getListOfPrepareFunctions","success","fallback","toolPreparationList","CONFIG","plugin","constructorOptions","IS_INLINE","notImplementedMethods","IS_CONTENTLESS","IS_PASTE_DISALLOWED","appendSVGSprite","loadStyles","editorWrapper","editorZone","head","redactorClicked","documentKeydown","documentClicked","defaultBehaviour","keyDownOnEditor","hasPointerToBlock","highlightCurrentNode","clickedOnInlineToolbarButton","clickedInsideofEditor","clickedNode","setToTheLastBlock","isInitialBlock","isEmptyBlock","spriteHolder","display","sprite","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","ownerDocument","documentElement","parentElement","docFrag","isNode","String","SelectionUtils","savedSelectionRange","getSelection","searchDepth","parentTag","focusNode","boundNodes","searchDepthIterable","selectedNode","boundingLeft","boundingTop","boundingWidth","boundingHeight","span","insertNode","spanParent","_CSS","_data","_element","drawView","hmr","insertInto","locals","atob","HTMLIFrameElement","contentDocument","f","refs","parts","base","css","media","insertAt","before","h","attrs","v","singleton","URL","createObjectURL","revokeObjectURL","Blob","convertToAbsoluteUrls","styleSheet","cssText","DEBUG","Boolean","location","protocol","host","pathname","Util","msg","chains","waitNextBlock","_callee2","successCallback","fallbackCallback","_context2","previousValue","currentValue","_x5","collection","timeout","func","wait","immediate","_arguments","callNow","clearTimeout","CTRL","ESC","SPACE","META"],"mappings":"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","file":"codex-editor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CodexEditor\"] = factory();\n\telse\n\t\troot[\"CodexEditor\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<symbol id=\\\"arrow-down\\\" viewBox=\\\"0 0 14 14\\\">\\n  <path transform=\\\"matrix(1 0 0 -1 0 14)\\\" d=\\\"M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"arrow-up\\\" viewBox=\\\"0 0 14 14\\\">\\n    <path d=\\\"M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"bold\\\" viewBox=\\\"0 0 13 15\\\">\\n  <path d=\\\"M5.996 13.9H1.752c-.613 0-1.05-.137-1.312-.412-.262-.275-.393-.712-.393-1.312V1.737C.047 1.125.18.684.449.416.718.147 1.152.013 1.752.013h4.5a10.5 10.5 0 0 1 1.723.123c.487.082.922.24 1.308.474a3.43 3.43 0 0 1 1.449 1.738c.132.363.199.747.199 1.151 0 1.39-.695 2.406-2.084 3.05 1.825.581 2.737 1.712 2.737 3.391 0 .777-.199 1.477-.596 2.099a3.581 3.581 0 0 1-1.61 1.378c-.424.177-.91.301-1.46.374-.549.073-1.19.109-1.922.109zm-.209-6.167H2.86v4.055h3.022c1.9 0 2.851-.686 2.851-2.056 0-.7-.246-1.21-.739-1.525-.492-.316-1.228-.474-2.207-.474zM2.86 2.125v3.59h2.577c.7 0 1.242-.066 1.624-.198a1.55 1.55 0 0 0 .876-.758c.158-.265.237-.562.237-.89 0-.702-.25-1.167-.748-1.398-.499-.23-1.26-.346-2.283-.346H2.86z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"cross\\\" viewBox=\\\"0 0 237 237\\\">\\n  <path transform=\\\"rotate(45 280.675 51.325)\\\" d=\\\"M191 191V73c0-5.523 4.477-10 10-10h25c5.523 0 10 4.477 10 10v118h118c5.523 0 10 4.477 10 10v25c0 5.523-4.477 10-10 10H236v118c0 5.523-4.477 10-10 10h-25c-5.523 0-10-4.477-10-10V236H73c-5.523 0-10-4.477-10-10v-25c0-5.523 4.477-10 10-10h118z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"dots\\\" viewBox=\\\"0 0 18 4\\\">\\n  <g fill-rule=\\\"evenodd\\\">\\n    <circle cx=\\\"9\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    <circle cx=\\\"16\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n  </g>\\n\\n</symbol>\\n<symbol id=\\\"italic\\\" viewBox=\\\"0 0 6 15\\\">\\n  <path d=\\\"M4 5.2l-1.368 7.474c-.095.518-.29.91-.585 1.175a1.468 1.468 0 0 1-1.01.398c-.379 0-.662-.136-.85-.407-.186-.272-.234-.66-.141-1.166L1.4 5.276c.093-.511.282-.896.567-1.155a1.43 1.43 0 0 1 .994-.389c.38 0 .668.13.867.389.199.259.256.618.172 1.08zm-.79-2.67c-.36 0-.648-.111-.863-.332-.215-.221-.286-.534-.212-.938.067-.366.253-.668.559-.905A1.57 1.57 0 0 1 3.673 0c.334 0 .612.107.831.322.22.215.292.527.217.938-.073.398-.256.709-.55.933a1.55 1.55 0 0 1-.961.336z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"link\\\" viewBox=\\\"0 0 15 14\\\">\\n    <path transform=\\\"rotate(-45 11.83 6.678)\\\" d=\\\"M11.332 4.013a51.07 51.07 0 0 1-2.28.001A1.402 1.402 0 0 0 7.7 2.25H3.65a1.4 1.4 0 1 0 0 2.8h.848c.206.86.693 1.61 1.463 2.25H3.65a3.65 3.65 0 1 1 0-7.3H7.7a3.65 3.65 0 0 1 3.632 4.013zM10.9 0h2a3.65 3.65 0 0 1 0 7.3H8.85a3.65 3.65 0 0 1-3.632-4.011A62.68 62.68 0 0 1 7.5 3.273 1.401 1.401 0 0 0 8.85 5.05h4.05a1.4 1.4 0 0 0 0-2.8h-.48C12.274 1.664 11.694.785 10.9 0z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"plus\\\" viewBox=\\\"0 0 14 14\\\">\\n    <path d=\\\"M8.05 5.8h4.625a1.125 1.125 0 0 1 0 2.25H8.05v4.625a1.125 1.125 0 0 1-2.25 0V8.05H1.125a1.125 1.125 0 0 1 0-2.25H5.8V1.125a1.125 1.125 0 0 1 2.25 0V5.8z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"unlink\\\" viewBox=\\\"0 0 16 18\\\">\\n    <path transform=\\\"rotate(-45 8.358 11.636)\\\" d=\\\"M9.14 9.433c.008-.12-.087-.686-.112-.81a1.4 1.4 0 0 0-1.64-1.106l-3.977.772a1.4 1.4 0 0 0 .535 2.749l.935-.162s.019 1.093.592 2.223l-1.098.148A3.65 3.65 0 1 1 2.982 6.08l3.976-.773c1.979-.385 3.838.919 4.28 2.886.51 2.276-1.084 2.816-1.073 2.935.011.12-.394-1.59-1.026-1.696zm3.563-.875l2.105 3.439a3.65 3.65 0 0 1-6.19 3.868L6.47 12.431c-1.068-1.71-.964-2.295-.49-3.07.067-.107 1.16-1.466 1.48-.936-.12.036.9 1.33.789 1.398-.656.41-.28.76.13 1.415l2.145 3.435a1.4 1.4 0 0 0 2.375-1.484l-1.132-1.941c.42-.435 1.237-1.054.935-2.69zm1.88-2.256h3.4a1.125 1.125 0 0 1 0 2.25h-3.4a1.125 1.125 0 0 1 0-2.25zM11.849.038c.62 0 1.125.503 1.125 1.125v3.4a1.125 1.125 0 0 1-2.25 0v-3.4c0-.622.503-1.125 1.125-1.125z\\\"/>\\n\\n</symbol></svg>\"","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = register;\nexports.revert = revert;\n\nfunction register() {}\n\nfunction revert() {}","exports = module.exports = function (...args) {\n  return register(...args);\n};\n\nexports.__esModule = true;\n\nconst node = require(\"./node\");\n\nconst register = node.default;\nObject.assign(exports, node);","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","module.exports = require(\"regenerator-runtime\");\n","/*!\n * Library for handling keyboard shortcuts\n * @copyright undefined\n * @license MIT\n * @author CodeX (https://ifmo.su)\n * @version 1.0.0\n */\n!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)(\"object\"==typeof exports?exports:e)[r]=n[r]}}(\"undefined\"!=typeof self?self:this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=0)}([function(e,t,n){\"use strict\";function r(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(t,\"__esModule\",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i={0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,A:65,B:66,C:67,D:68,E:69,F:70,G:71,H:72,I:73,J:74,K:75,L:76,M:77,N:78,O:79,P:80,Q:81,R:82,S:83,T:84,U:85,V:86,W:87,X:88,Y:89,Z:90,BACKSPACE:8,ENTER:13,ESCAPE:27,LEFT:37,UP:38,RIGHT:39,DOWN:40,INSERT:45,DELETE:46},u={CMD:[\"CMD\",\"CONTROL\",\"COMMAND\",\"WINDOWS\",\"CTRL\"],SHIFT:[\"SHIFT\"],ALT:[\"ALT\",\"OPTION\"]},c=function(){function e(t){var n=this;r(this,e),this.commands={},this.keys={},this.parseShortcutName(t.name),this.element=t.on,this.callback=t.callback,this.executeShortcut=function(e){n.execute(e)},this.element.addEventListener(\"keydown\",this.executeShortcut,!1)}return o(e,[{key:\"parseShortcutName\",value:function(e){e=e.split(\"+\");for(var t=0;t<e.length;t++)if(e[t]=e[t].toUpperCase(),e[t].length>1)for(var n in u)u[n].includes(e[t])&&(this.commands[n]=!0);else this.keys[e[t]]=!0}},{key:\"execute\",value:function(e){var t=e.ctrlKey||e.metaKey,n=e.shiftKey,r=e.altKey,o={CMD:t,SHIFT:n,ALT:r},u=void 0,c=!0;for(u in this.commands)c=c&&o[u];var a=void 0,s=!0;for(a in this.keys)s=s&&e.keyCode===i[a];c&&s&&this.callback(e)}},{key:\"remove\",value:function(){this.element.removeEventListener(\"keydown\",this.executeShortcut)}}]),e}();t.default=c}])});","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n","'use strict';\n\n/**\n * Apply polyfills\n */\nimport '@babel/register';\nimport 'components/polyfills';\nimport Core from './components/core';\n\n/**\n * Codex Editor\n *\n * Short Description (눈_눈;)\n * @version 2.0\n *\n * @author CodeX-Team <https://ifmo.su>\n */\nexport default class CodexEditor {\n  /** Editor version */\n  static get version() {\n    return VERSION;\n  }\n\n  /**\n   * @constructor\n   *\n   * @param {EditorConfig|String} [configuration] - user configuration\n   */\n  constructor(configuration) {\n    /**\n     * Set default onReady function\n     */\n    let onReady = () => {};\n\n    /**\n     * If `onReady` was passed in `configuration` then redefine onReady function\n     */\n    if (typeof configuration === 'object' && typeof configuration.onReady === 'function') {\n      onReady = configuration.onReady;\n    }\n\n    /**\n     * Create a CodeX Editor instance\n     */\n    const editor = new Core(configuration);\n\n    /**\n     * We need to export isReady promise in the constructor\n     * as it can be used before other API methods are exported\n     * @type {Promise<any | never>}\n     */\n    this.isReady = editor.isReady.then(() => {\n      this.exportAPI(editor);\n      onReady();\n    });\n  }\n\n  /**\n   * Export external API methods\n   *\n   * @param editor\n   */\n  exportAPI(editor) {\n    const fieldsToExport = [ 'configuration' ];\n    const destroy = () => {\n      editor.moduleInstances.Listeners.removeAll();\n      editor.moduleInstances.UI.destroy();\n      editor.moduleInstances.ModificationsObserver.destroy();\n      editor = null;\n\n      for (const field in this) {\n        delete this[field];\n      }\n\n      Object.setPrototypeOf(this, null);\n    };\n\n    fieldsToExport.forEach(field => {\n      this[field] = editor[field];\n    });\n\n    this.destroy = destroy;\n\n    Object.setPrototypeOf(this, editor.moduleInstances.API.methods);\n\n    delete this['exportAPI'];\n  }\n}\n","import IEditor from './interfaces/editor';\nimport IEditorConfig from './interfaces/editor-config';\nimport IModuleConfig from './interfaces/module-config';\n\n/**\n * @abstract\n * @class      Module\n * @classdesc  All modules inherits from this class.\n *\n * @typedef {Module} Module\n * @property {Object} config - Editor user settings\n * @property {IEditorConfig} Editor - List of Editor modules\n */\nexport default class Module {\n\n  /**\n   * Editor modules list\n   * @type {IEditor}\n   */\n  protected Editor: IEditor;\n\n  /**\n   * Editor configuration object\n   * @type {IEditorConfig}\n   */\n  protected config: IEditorConfig;\n\n  /**\n   * @constructor\n   * @param {IModuleConfig}\n   */\n  constructor({config}: IModuleConfig) {\n    if (new.target === Module) {\n      throw new TypeError('Constructors for abstract class Module are not allowed.');\n    }\n\n    this.config = config;\n  }\n\n  /**\n   * Editor modules setter\n   * @param {IEditor} Editor\n   */\n  set state(Editor) {\n    this.Editor = Editor;\n  }\n}\n","/**\n * @class DeleteTune\n * @classdesc Editor's default tune that moves up selected block\n *\n * @copyright <CodeX Team> 2018\n */\nimport IBlockTune from '../interfaces/block-tune';\n\ndeclare var $: any;\ndeclare var _: any;\n\nexport default class DeleteTune implements IBlockTune {\n\n  /**\n   * Property that contains CodeX Editor API methods\n   * @see {docs/api.md}\n   */\n  private readonly api: any;\n\n  /**\n   * Styles\n   * @type {{wrapper: string}}\n   */\n  private CSS = {\n    wrapper: 'ass',\n    button: 'ce-settings__button',\n    buttonDelete: 'ce-settings__button--delete',\n    buttonConfirm: 'ce-settings__button--confirm',\n  };\n\n  /**\n   * Delete confirmation\n   */\n  private needConfirmation: boolean;\n\n  /**\n   * set false confirmation state\n   */\n  private resetConfirmation: () => void;\n\n  /**\n   * Tune nodes\n   */\n  private nodes = {\n    button: null,\n  };\n\n  /**\n   * DeleteTune constructor\n   *\n   * @param {Object} api\n   */\n  constructor({api}) {\n    this.api = api;\n\n    this.resetConfirmation = () => {\n      this.setConfirmation(false);\n    };\n  }\n\n  /**\n   * Create \"Delete\" button and add click event listener\n   * @returns [Element}\n   */\n  public render() {\n    this.nodes.button = $.make('div', [this.CSS.button, this.CSS.buttonDelete], {});\n    this.nodes.button.appendChild($.svg('cross', 12, 12));\n    this.api.listener.on(this.nodes.button, 'click', (event) => this.handleClick(event), false);\n    return this.nodes.button;\n  }\n\n  /**\n   * Delete block conditions passed\n   * @param {MouseEvent} event\n   */\n  public handleClick(event: MouseEvent): void {\n\n    /**\n     * if block is not waiting the confirmation, subscribe on block-settings-closing event to reset\n     * otherwise delete block\n     */\n    if (!this.needConfirmation) {\n      this.setConfirmation(true);\n\n      /**\n       * Subscribe on event.\n       * When toolbar block settings is closed but block deletion is not confirmed,\n       * then reset confirmation state\n       */\n      this.api.events.on('block-settings-closed', this.resetConfirmation);\n\n    } else {\n\n      /**\n       * Unsubscribe from block-settings closing event\n       */\n      this.api.events.off('block-settings-closed', this.resetConfirmation);\n\n      this.api.blocks.delete();\n\n      /**\n       * Prevent firing ui~documentClicked that can drop currentBlock pointer\n       */\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * change tune state\n   */\n  private setConfirmation(state): void {\n    this.needConfirmation = state;\n    this.nodes.button.classList.add(this.CSS.buttonConfirm);\n  }\n\n}\n","/**\n * @class MoveDownTune\n * @classdesc Editor's default tune - Moves down highlighted block\n *\n * @copyright <CodeX Team> 2018\n */\nimport IBlockTune from '../interfaces/block-tune';\n\ndeclare var $: any;\ndeclare var _: any;\n\nexport default class MoveDownTune implements IBlockTune {\n  /**\n   * Property that contains CodeX Editor API methods\n   * @see {api.md}\n   */\n  private readonly api: any;\n\n  /**\n   * Styles\n   * @type {{wrapper: string}}\n   */\n  private CSS = {\n    button: 'ce-settings__button',\n    wrapper: 'ce-tune-move-down',\n    animation: 'wobble',\n  };\n\n  /**\n   * MoveDownTune constructor\n   *\n   * @param {Object} api\n   */\n  public constructor({api}) {\n    this.api = api;\n  }\n\n  /**\n   * Return 'move down' button\n   */\n  public render() {\n    const moveDownButton = $.make('div', [this.CSS.button, this.CSS.wrapper], {});\n    moveDownButton.appendChild($.svg('arrow-down', 14, 14));\n    this.api.listener.on(moveDownButton, 'click', (event) => this.handleClick(event, moveDownButton), false);\n    return moveDownButton;\n  }\n\n  /**\n   * Handle clicks on 'move down' button\n   * @param {MouseEvent} event\n   * @param {HTMLElement} button\n   */\n  public handleClick(event: MouseEvent, button: HTMLElement) {\n\n    const currentBlockIndex = this.api.blocks.getCurrentBlockIndex();\n\n    // If Block is last do nothing\n    if (currentBlockIndex === this.api.blocks.getBlocksCount() - 1) {\n      button.classList.add(this.CSS.animation);\n\n      window.setTimeout( () => {\n        button.classList.remove(this.CSS.animation);\n      }, 500);\n      return;\n    }\n\n    const nextBlockElement = this.api.blocks.getBlockByIndex(currentBlockIndex + 1).holder,\n        nextBlockCoords = nextBlockElement.getBoundingClientRect();\n\n    let scrollOffset = Math.abs(window.innerHeight - nextBlockElement.offsetHeight);\n\n    /**\n     * Next block ends on screen.\n     * Increment scroll by next block's height to save element onscreen-position\n     */\n    if (nextBlockCoords.top < window.innerHeight) {\n\n      scrollOffset = window.scrollY + nextBlockElement.offsetHeight;\n\n    }\n\n    window.scrollTo(0, scrollOffset);\n\n    /** Change blocks positions */\n    this.api.blocks.swap(currentBlockIndex, currentBlockIndex + 1);\n\n  }\n}\n","/**\n * @class MoveUpTune\n * @classdesc Editor's default tune that moves up selected block\n *\n * @copyright <CodeX Team> 2018\n */\nimport IBlockTune from '../interfaces/block-tune';\n\ndeclare var $: any;\ndeclare var _: any;\n\nexport default class MoveUpTune implements IBlockTune {\n\n  /**\n   * Property that contains CodeX Editor API methods\n   * @see {api.md}\n   */\n  private readonly api: any;\n\n  /**\n   * Styles\n   * @type {{wrapper: string}}\n   */\n  private CSS = {\n    button: 'ce-settings__button',\n    wrapper: 'ce-tune-move-up',\n    animation: 'wobble',\n  };\n\n  /**\n   * MoveUpTune constructor\n   *\n   * @param {Object} api\n   */\n  public constructor({api}) {\n    this.api = api;\n  }\n\n  /**\n   * Create \"MoveUp\" button and add click event listener\n   * @returns [HTMLElement}\n   */\n  public render(): HTMLElement {\n    const moveUpButton = $.make('div', [this.CSS.button, this.CSS.wrapper], {});\n    moveUpButton.appendChild($.svg('arrow-up', 14, 14));\n    this.api.listener.on(moveUpButton, 'click', (event) => this.handleClick(event, moveUpButton), false);\n    return moveUpButton;\n  }\n\n  /**\n   * Move current block up\n   * @param {MouseEvent} event\n   * @param {HTMLElement} button\n   */\n  public handleClick(event: MouseEvent, button: HTMLElement): void {\n\n    const currentBlockIndex = this.api.blocks.getCurrentBlockIndex();\n\n    if (currentBlockIndex === 0) {\n      button.classList.add(this.CSS.animation);\n\n      window.setTimeout( () => {\n        button.classList.remove(this.CSS.animation);\n      }, 500);\n      return;\n    }\n\n    const currentBlockElement = this.api.blocks.getBlockByIndex(currentBlockIndex).holder,\n      previousBlockElement = this.api.blocks.getBlockByIndex(currentBlockIndex - 1).holder;\n\n    /**\n     * Here is two cases:\n     *  - when previous block has negative offset and part of it is visible on window, then we scroll\n     *  by window's height and add offset which is mathematically difference between two blocks\n     *\n     *  - when previous block is visible and has offset from the window,\n     *      than we scroll window to the difference between this offsets.\n     */\n    const currentBlockCoords = currentBlockElement.getBoundingClientRect(),\n      previousBlockCoords = previousBlockElement.getBoundingClientRect();\n\n    let scrollUpOffset;\n\n    if (previousBlockCoords.top > 0) {\n      scrollUpOffset = Math.abs(currentBlockCoords.top) - Math.abs(previousBlockCoords.top);\n    } else {\n      scrollUpOffset = window.innerHeight - Math.abs(currentBlockCoords.top) + Math.abs(previousBlockCoords.top);\n    }\n\n    window.scrollBy(0, -1 * scrollUpOffset);\n\n    /** Change blocks positions */\n    this.api.blocks.swap(currentBlockIndex, currentBlockIndex - 1);\n  }\n}\n","import IBlockTune, {IBlockTuneConstructor} from './interfaces/block-tune';\nimport $ from './dom';\nimport _ from './utils';\n\ntype Tool = any;\n\n/**\n * @class Block\n * @classdesc This class describes editor`s block, including block`s HTMLElement, data and tool\n *\n * @property {Tool} tool — current block tool (Paragraph, for example)\n * @property {Object} CSS — block`s css classes\n *\n */\n\n/** Import default tunes */\nimport MoveUpTune from './block-tunes/block-tune-move-up';\nimport DeleteTune from './block-tunes/block-tune-delete';\nimport MoveDownTune from './block-tunes/block-tune-move-down';\nimport {IAPI} from './interfaces/api';\n\n/**\n * @classdesc Abstract Block class that contains Block information, Tool name and Tool class instance\n *\n * @property tool - Tool instance\n * @property html - Returns HTML content of plugin\n * @property holder - Div element that wraps block content with Tool's content. Has `ce-block` CSS class\n * @property pluginsContent - HTML content that returns by Tool's render function\n */\nexport default class Block {\n\n  /**\n   * CSS classes for the Block\n   * @return {{wrapper: string, content: string}}\n   */\n  static get CSS(): {wrapper: string, wrapperStretched: string, content: string, selected: string, dropTarget: string} {\n    return {\n      wrapper: 'ce-block',\n      wrapperStretched: 'ce-block--stretched',\n      content: 'ce-block__content',\n      selected: 'ce-block--selected',\n      dropTarget: 'ce-block--drop-target',\n    };\n  }\n\n  /**\n   * Find and return all editable elements (contenteditables and native inputs) in the Tool HTML\n   *\n   * @returns {HTMLElement[]}\n   */\n  get inputs(): HTMLElement[] {\n    const content = this.holder;\n    const allowedInputTypes = ['text', 'password', 'email', 'number', 'search', 'tel', 'url'];\n\n    const selector = '[contenteditable], textarea, input, '\n      + allowedInputTypes.map((type) => `input[type=\"${type}\"]`).join(', ');\n\n    const inputs = _.array(content.querySelectorAll(selector));\n\n    /**\n     * If inputs amount was changed we need to check if input index is bigger then inputs array length\n     */\n    if (this.inputIndex > inputs.length - 1) {\n      this.inputIndex = inputs.length - 1;\n    }\n\n    return inputs;\n  }\n\n  /**\n   * Return current Tool`s input\n   *\n   * @returns {HTMLElement}\n   */\n  get currentInput(): HTMLElement {\n    return this.inputs[this.inputIndex];\n  }\n\n  /**\n   * Set input index to the passed element\n   *\n   * @param {HTMLElement} element\n   */\n  set currentInput(element: HTMLElement) {\n    const index = this.inputs.findIndex((input) => input === element || input.contains(element));\n\n    if (index !== -1) {\n      this.inputIndex = index;\n    }\n  }\n\n  /**\n   * Return first Tool`s input\n   *\n   * @returns {HTMLElement}\n   */\n  get firstInput(): HTMLElement {\n    return this.inputs[0];\n  }\n\n  /**\n   * Return first Tool`s input\n   *\n   * @returns {HTMLElement}\n   */\n  get lastInput(): HTMLElement {\n    const inputs = this.inputs;\n\n    return inputs[inputs.length - 1];\n  }\n\n  /**\n   * Return next Tool`s input or undefined if it doesn't exist\n   *\n   * @returns {HTMLElement}\n   */\n  get nextInput(): HTMLElement {\n    return this.inputs[this.inputIndex + 1];\n  }\n\n  /**\n   * Return previous Tool`s input or undefined if it doesn't exist\n   *\n   * @returns {HTMLElement}\n   */\n  get previousInput(): HTMLElement {\n    return this.inputs[this.inputIndex - 1];\n  }\n\n  /**\n   * Returns Plugins content\n   * @return {Node}\n   */\n  get pluginsContent(): Node {\n    const pluginsContent = this.holder.querySelector(`.${Block.CSS.content}`);\n\n    if (pluginsContent && pluginsContent.childNodes.length) {\n      return pluginsContent.childNodes[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Get Block's JSON data\n   * @return {Object}\n   */\n  get data(): object {\n    return this.save();\n  }\n\n  /**\n   * is block mergeable\n   * We plugin have merge function then we call it mergable\n   * @return {boolean}\n   */\n  get mergeable(): boolean {\n    return typeof this.tool.merge === 'function';\n  }\n\n  /**\n   * Check block for emptiness\n   * @return {Boolean}\n   */\n  get isEmpty(): boolean {\n    /**\n     * Allow Tool to represent decorative contentless blocks: for example \"* * *\"-tool\n     * That Tools are not empty\n     */\n    if (this.class.contentless) {\n      return false;\n    }\n\n    const emptyText = $.isEmpty(this.pluginsContent),\n      emptyMedia = !this.hasMedia;\n\n    return emptyText && emptyMedia;\n  }\n\n  /**\n   * Check if block has a media content such as images, iframes and other\n   * @return {Boolean}\n   */\n  get hasMedia(): boolean {\n    /**\n     * This tags represents media-content\n     * @type {string[]}\n     */\n    const mediaTags = [\n      'img',\n      'iframe',\n      'video',\n      'audio',\n      'source',\n      'input',\n      'textarea',\n      'twitterwidget',\n    ];\n\n    return !!this.holder.querySelector(mediaTags.join(','));\n  }\n\n  /**\n   * Set selected state\n   * @param {Boolean} state - 'true' to select, 'false' to remove selection\n   */\n  set selected(state: boolean) {\n    /**\n     * We don't need to mark Block as Selected when it is not empty\n     */\n    if (state === true && !this.isEmpty) {\n      this.holder.classList.add(Block.CSS.selected);\n    } else {\n      this.holder.classList.remove(Block.CSS.selected);\n    }\n  }\n\n  /**\n   * Set stretched state\n   * @param {Boolean} state - 'true' to enable, 'false' to disable stretched statte\n   */\n  set stretched(state: boolean) {\n    this.holder.classList.toggle(Block.CSS.wrapperStretched, state);\n  }\n\n  public name: string;\n  public tool: Tool;\n  public class: any;\n  public settings: object;\n  public holder: HTMLDivElement;\n  public tunes: IBlockTune[];\n  private readonly api: IAPI;\n  private inputIndex = 0;\n\n  /**\n   * @constructor\n   * @param {String} toolName - Tool name that passed on initialization\n   * @param {Object} toolInstance — passed Tool`s instance that rendered the Block\n   * @param {Object} toolClass — Tool's class\n   * @param {Object} settings - default settings\n   * @param {Object} apiMethods - Editor API\n   */\n  constructor(toolName: string, toolInstance: Tool, toolClass: object, settings: object, apiMethods: IAPI) {\n    this.name = toolName;\n    this.tool = toolInstance;\n    this.class = toolClass;\n    this.settings = settings;\n    this.api = apiMethods;\n    this.holder = this.compose();\n\n    /**\n     * @type {IBlockTune[]}\n     */\n    this.tunes = this.makeTunes();\n  }\n\n  /**\n   * Calls Tool's method\n   *\n   * Method checks tool property {MethodName}. Fires method with passes params If it is instance of Function\n   *\n   * @param {String} methodName\n   * @param {Object} params\n   */\n  public call(methodName: string, params: object) {\n    /**\n     * call Tool's method with the instance context\n     */\n    if (this.tool[methodName] && this.tool[methodName] instanceof Function) {\n      this.tool[methodName].call(this.tool, params);\n    }\n  }\n\n  /**\n   * Call plugins merge method\n   * @param {Object} data\n   */\n  public mergeWith(data: object): Promise<void> {\n    return Promise.resolve()\n      .then(() => {\n        this.tool.merge(data);\n      });\n  }\n  /**\n   * Extracts data from Block\n   * Groups Tool's save processing time\n   * @return {Object}\n   */\n  public async save(): Promise<void|{tool: string, data: any, time: number}> {\n    let extractedBlock = await this.tool.save(this.pluginsContent);\n\n    /**\n     * if Tool provides custom sanitizer config\n     * then use this config\n     */\n    if (this.tool.sanitize && typeof this.tool.sanitize === 'object') {\n      extractedBlock = this.sanitizeBlock(extractedBlock, this.tool.sanitize);\n    }\n\n    /**\n     * Measuring execution time\n     */\n    const measuringStart = window.performance.now();\n    let measuringEnd;\n\n    return Promise.resolve(extractedBlock)\n      .then((finishedExtraction) => {\n        /** measure promise execution */\n        measuringEnd = window.performance.now();\n\n        return {\n          tool: this.name,\n          data: finishedExtraction,\n          time : measuringEnd - measuringStart,\n        };\n      })\n      .catch(function(error) {\n        _.log(`Saving proccess for ${this.tool.name} tool failed due to the ${error}`, 'log', 'red');\n      });\n  }\n\n  /**\n   * Uses Tool's validation method to check the correctness of output data\n   * Tool's validation method is optional\n   *\n   * @description Method also can return data if it passed the validation\n   *\n   * @param {Object} data\n   * @returns {Boolean|Object} valid\n   */\n  public validateData(data: object): object|false {\n    let isValid = true;\n\n    if (this.tool.validate instanceof Function) {\n      isValid = this.tool.validate(data);\n    }\n\n    if (!isValid) {\n      return false;\n    }\n\n    return data;\n  }\n\n  /**\n   * Make an array with default settings\n   * Each block has default tune instance that have states\n   * @return {IBlockTune[]}\n   */\n  public makeTunes(): IBlockTune[] {\n    const tunesList = [MoveUpTune, DeleteTune, MoveDownTune];\n\n    // Pluck tunes list and return tune instances with passed Editor API and settings\n    return tunesList.map( (tune: IBlockTuneConstructor) => {\n      return new tune({\n        api: this.api,\n        settings: this.settings,\n      });\n    });\n  }\n\n  /**\n   * Enumerates initialized tunes and returns fragment that can be appended to the toolbars area\n   * @return {DocumentFragment}\n   */\n  public renderTunes(): DocumentFragment {\n    const tunesElement = document.createDocumentFragment();\n\n    this.tunes.forEach( (tune) => {\n      $.append(tunesElement, tune.render());\n    });\n\n    return tunesElement;\n  }\n\n  /**\n   * Method recursively reduces Block's data and cleans with passed rules\n   *\n   * @param {Object|string} blockData - taint string or object/array that contains taint string\n   * @param {Object} rules - object with sanitizer rules\n   */\n  private sanitizeBlock(blockData, rules) {\n\n    /**\n     * Case 1: Block data is Array\n     * Array's in JS can not be enumerated with for..in because result will be Object not Array\n     * which conflicts with Consistency\n     */\n    if (Array.isArray(blockData)) {\n      /**\n       * Create new \"cleanData\" array and fill in with sanitizer data\n       */\n      return blockData.map((item) => {\n        return this.sanitizeBlock(item, rules);\n      });\n    } else if (typeof blockData === 'object') {\n\n      /**\n       * Create new \"cleanData\" object and fill with sanitized objects\n       */\n      const cleanData = {};\n\n      /**\n       * Object's may have 3 cases:\n       *  1. When Data is Array. Then call again itself and recursively clean arrays items\n       *  2. When Data is Object that can have object's inside. Do the same, call itself and clean recursively\n       *  3. When Data is base type (string, int, bool, ...). Check if rule is passed\n       */\n      for (const data in blockData) {\n        if (Array.isArray(blockData[data]) || typeof blockData[data] === 'object') {\n          /**\n           * Case 1 & Case 2\n           */\n          if (rules[data]) {\n            cleanData[data] = this.sanitizeBlock(blockData[data], rules[data]);\n          } else if (_.isEmpty(rules)) {\n            cleanData[data] = this.sanitizeBlock(blockData[data], rules);\n          } else {\n            cleanData[data] = blockData[data];\n          }\n\n        } else {\n          /**\n           * Case 3.\n           */\n          if (rules[data]) {\n            cleanData[data] = this.api.sanitizer.clean(blockData[data], rules[data]);\n          } else {\n            cleanData[data] = this.api.sanitizer.clean(blockData[data], rules);\n          }\n        }\n      }\n\n      return cleanData;\n    } else {\n      /**\n       * In case embedded objects use parent rules\n       */\n      return this.api.sanitizer.clean(blockData, rules);\n    }\n  }\n\n  /**\n   * Toggle drop target state\n   * @param {boolean} state\n   */\n  public set dropTarget(state) {\n    this.holder.classList.toggle(Block.CSS.dropTarget, state);\n  }\n\n  /**\n   * Make default Block wrappers and put Tool`s content there\n   * @returns {HTMLDivElement}\n   */\n  private compose(): HTMLDivElement {\n    const wrapper = $.make('div', Block.CSS.wrapper) as HTMLDivElement,\n      contentNode = $.make('div', Block.CSS.content),\n      pluginsContent  = this.tool.render();\n\n    contentNode.appendChild(pluginsContent);\n    wrapper.appendChild(contentNode);\n    return wrapper;\n  }\n}\n","/**\n * @typedef {Core} Core - editor core class\n */\n\n/**\n * Dynamically imported utils\n *\n * @typedef {Dom}   $      - {@link components/dom.js}\n * @typedef {Util}  _      - {@link components/utils.js}\n */\n\n/**\n * Require Editor modules places in components/modules dir\n */\n// eslint-disable-next-line\nlet modules = editorModules.map( module => require('./modules/' + module ));\n\n/**\n * @class Core\n *\n * @classdesc CodeX Editor core class\n *\n * @property this.config - all settings\n * @property this.moduleInstances - constructed editor components\n *\n * @type {Core}\n */\nexport default class Core {\n  /**\n   * @param {EditorConfig} config - user configuration\n   *\n   */\n  constructor(config) {\n    /**\n     * Configuration object\n     * @type {EditorConfig}\n     */\n    this.config = {};\n\n    /**\n     * @typedef {Object} EditorComponents\n     * @property {BlockManager} BlockManager\n     * @property {Tools} Tools\n     * @property {Events} Events\n     * @property {UI} UI\n     * @property {Toolbar} Toolbar\n     * @property {Toolbox} Toolbox\n     * @property {BlockSettings} BlockSettings\n     * @property {Renderer} Renderer\n     * @property {InlineToolbar} InlineToolbar\n     */\n    this.moduleInstances = {};\n\n    /**\n     * Ready promise. Resolved if CodeX Editor is ready to work, rejected otherwise\n     */\n    let onReady, onFail;\n\n    this.isReady = new Promise((resolve, reject) => {\n      onReady = resolve;\n      onFail = reject;\n    });\n\n    Promise.resolve()\n      .then(() => {\n        this.configuration = config;\n      })\n      .then(() => this.validate())\n      .then(() => this.init())\n      .then(() => this.start())\n      .then(() => {\n        _.log('I\\'m ready! (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧');\n\n        setTimeout(() => {\n          /**\n           * Resolve this.isReady promise\n           */\n          onReady();\n        }, 500);\n      })\n      .catch(error => {\n        _.log(`CodeX Editor does not ready because of ${error}`, 'error');\n\n        /**\n         * Reject this.isReady promise\n         */\n        onFail(error);\n      });\n  }\n\n  /**\n   * Setting for configuration\n   * @param {IEditorConfig|string|null} config\n   */\n  set configuration(config) {\n    /**\n     * Process zero-configuration or with only holderId\n     */\n    if (typeof config === 'string' || typeof config === 'undefined') {\n      config = {\n        holderId: config\n      };\n    }\n\n    /**\n     * If initial Block's Tool was not passed, use the Paragraph Tool\n     */\n    this.config.initialBlock = config.initialBlock || 'paragraph';\n\n    /**\n     * Initial block type\n     * Uses in case when there is no blocks passed\n     * @type {{type: (*), data: {text: null}}}\n     */\n    let initialBlockData = {\n      type : this.config.initialBlock,\n      data : {}\n    };\n\n    this.config.holderId = config.holderId || 'codex-editor';\n    this.config.placeholder = config.placeholder || 'write your story...';\n    this.config.sanitizer = config.sanitizer || {\n      p: true,\n      b: true,\n      a: true\n    };\n\n    this.config.hideToolbar = config.hideToolbar ? config.hideToolbar : false;\n    this.config.tools = config.tools || {};\n    this.config.data = config.data || {};\n    this.config.onReady = config.onReady || function () {};\n    this.config.onChange = config.onChange || function () {};\n\n    /**\n     * Initialize Blocks to pass data to the Renderer\n     */\n    if (_.isEmpty(this.config.data)) {\n      this.config.data = {};\n      this.config.data.blocks = [ initialBlockData ];\n    } else {\n      if (!this.config.data.blocks || this.config.data.blocks.length === 0) {\n        this.config.data.blocks = [ initialBlockData ];\n      }\n    }\n  }\n\n  /**\n   * Returns private property\n   * @returns {EditorConfig}\n   */\n  get configuration() {\n    return this.config;\n  }\n\n  /**\n   * Checks for required fields in Editor's config\n   * @returns {void|Promise<string>}\n   */\n  validate() {\n    /**\n     * Check if holderId is not empty\n     */\n    if (!this.config.holderId) {\n      return Promise.reject('«holderId» param must being not empty');\n    }\n\n    /**\n     * Check for a holder element's existence\n     */\n    if (!$.get(this.config.holderId)) {\n      return Promise.reject(`element with ID «${this.config.holderId}» is missing. Pass correct holder's ID.`);\n    }\n\n    /**\n     * Check Tools for a class containing\n     */\n    for (let toolName in this.config.tools) {\n      const tool = this.config.tools[toolName];\n\n      if (!_.isFunction(tool) && !_.isFunction(tool.class)) {\n        return Promise.reject(`Tool «${toolName}» must be a constructor function or an object with that function in the «class» property`);\n      }\n    }\n  }\n\n  /**\n   * Initializes modules:\n   *  - make and save instances\n   *  - configure\n   */\n  init() {\n    /**\n     * Make modules instances and save it to the @property this.moduleInstances\n     */\n    this.constructModules();\n\n    /**\n     * Modules configuration\n     */\n    this.configureModules();\n  }\n\n  /**\n   * Make modules instances and save it to the @property this.moduleInstances\n   */\n  constructModules() {\n    modules.forEach( Module => {\n      try {\n        /**\n         * We use class name provided by displayName property\n         *\n         * On build, Babel will transform all Classes to the Functions so, name will always be 'Function'\n         * To prevent this, we use 'babel-plugin-class-display-name' plugin\n         * @see  https://www.npmjs.com/package/babel-plugin-class-display-name\n         */\n        this.moduleInstances[Module.displayName] = new Module({\n          config : this.configuration\n        });\n      } catch ( e ) {\n        console.log('Module %o skipped because %o', Module, e);\n      }\n    });\n  }\n\n  /**\n   * Modules instances configuration:\n   *  - pass other modules to the 'state' property\n   *  - ...\n   */\n  configureModules() {\n    for(let name in this.moduleInstances) {\n      /**\n       * Module does not need self-instance\n       */\n      this.moduleInstances[name].state = this.getModulesDiff( name );\n    }\n  }\n\n  /**\n   * Return modules without passed name\n   */\n  getModulesDiff( name ) {\n    let diff = {};\n\n    for(let moduleName in this.moduleInstances) {\n      /**\n       * Skip module with passed name\n       */\n      if (moduleName === name) {\n        continue;\n      }\n      diff[moduleName] = this.moduleInstances[moduleName];\n    }\n\n    return diff;\n  }\n\n  /**\n   * Start Editor!\n   *\n   * Get list of modules that needs to be prepared and return a sequence (Promise)\n   * @return {Promise}\n   */\n  async start() {\n    const modulesToPrepare = ['Tools', 'UI', 'BlockManager', 'Paste', 'DragNDrop', 'ModificationsObserver'];\n\n    await modulesToPrepare.reduce(\n      (promise, module) => promise.then(async () => {\n        _.log(`Preparing ${module} module`, 'time');\n\n        try {\n          await this.moduleInstances[module].prepare();\n        } catch (e) {\n          _.log(`Module ${module} was skipped because of %o`, 'warn', e);\n        }\n        _.log(`Preparing ${module} module`, 'timeEnd');\n      }),\n      Promise.resolve()\n    );\n\n    return this.moduleInstances.Renderer.render(this.config.data.blocks);\n  }\n};\n","/**\n * DOM manipulations helper\n */\nexport default class Dom {\n  /**\n   * Check if passed tag has no closed tag\n   * @param  {HTMLElement}  tag\n   * @return {Boolean}\n   */\n  public static isSingleTag(tag: HTMLElement): boolean {\n    return tag.tagName && [\n      'AREA',\n      'BASE',\n      'BR',\n      'COL',\n      'COMMAND',\n      'EMBED',\n      'HR',\n      'IMG',\n      'INPUT',\n      'KEYGEN',\n      'LINK',\n      'META',\n      'PARAM',\n      'SOURCE',\n      'TRACK',\n      'WBR',\n    ].includes(tag.tagName);\n  }\n\n  /**\n   * Helper for making Elements with classname and attributes\n   *\n   * @param  {string} tagName           - new Element tag name\n   * @param  {array|string} classNames  - list or name of CSS classname(s)\n   * @param  {Object} attributes        - any attributes\n   * @return {Element}\n   */\n  public static make(tagName: string, classNames: string|string[] = null, attributes: object = {}): Element {\n    const el = document.createElement(tagName);\n\n    if ( Array.isArray(classNames) ) {\n      el.classList.add(...classNames);\n    } else if ( classNames ) {\n      el.classList.add(classNames);\n    }\n\n    for (const attrName in attributes) {\n      if (attributes.hasOwnProperty(attrName)) {\n        el[attrName] = attributes[attrName];\n      }\n    }\n\n    return el;\n  }\n\n  /**\n   * Creates Text Node with the passed content\n   * @param {String} content - text content\n   * @return {Text}\n   */\n  public static text(content: string): Text {\n    return document.createTextNode(content);\n  }\n\n  /**\n   * Creates SVG icon linked to the sprite\n   * @param {string} name - name (id) of icon from sprite\n   * @param {number} width\n   * @param {number} height\n   * @return {SVGElement}\n   */\n  public static svg(name: string, width: number = 14, height: number = 14): SVGElement {\n    const icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n    icon.classList.add('icon', 'icon--' + name);\n    icon.setAttribute('width', width + 'px');\n    icon.setAttribute('height', height + 'px');\n    icon.innerHTML = `<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#${name}\"></use>`;\n\n    return icon;\n  }\n\n  /**\n   * Append one or several elements to the parent\n   *\n   * @param  {Element|DocumentFragment} parent    - where to append\n   * @param  {Element|Element[]} elements - element or elements list\n   */\n  public static append(parent: Element|DocumentFragment, elements: Element|Element[]): void {\n    if ( Array.isArray(elements) ) {\n      elements.forEach( (el) => parent.appendChild(el) );\n    } else {\n      parent.appendChild(elements);\n    }\n  }\n\n  /**\n   * Append element or a couple to the beginning of the parent elements\n   *\n   * @param {Element} parent - where to append\n   * @param {Element|Element[]} elements - element or elements list\n   */\n  public static prepend(parent: Element, elements: Element|Element[]): void {\n    if ( Array.isArray(elements) ) {\n      elements = elements.reverse();\n      elements.forEach( (el) => parent.prepend(el) );\n    } else {\n      parent.prepend(elements);\n    }\n  }\n\n  /**\n   * Swap two elements in parent\n   * @param {HTMLElement} el1 - from\n   * @param {HTMLElement} el2 - to\n   */\n  public static swap(el1: HTMLElement, el2: HTMLElement): void {\n    // create marker element and insert it where el1 is\n    const temp = document.createElement('div'),\n      parent = el1.parentNode;\n\n    parent.insertBefore(temp, el1);\n\n    // move el1 to right before el2\n    parent.insertBefore(el1, el2);\n\n    // move el2 to right before where el1 used to be\n    parent.insertBefore(el2, temp);\n\n    // remove temporary marker node\n    parent.removeChild(temp);\n  }\n\n  /**\n   * Selector Decorator\n   *\n   * Returns first match\n   *\n   * @param {Element} el - element we searching inside. Default - DOM Document\n   * @param {String} selector - searching string\n   *\n   * @returns {Element}\n   */\n  public static find(el: Element|Document = document, selector: string): Element {\n    return el.querySelector(selector);\n  }\n\n  /**\n   * Get Element by Id\n   *\n   * @param {string} id\n   * @returns {HTMLElement | null}\n   */\n  public static get(id: string): HTMLElement {\n    return document.getElementById(id);\n  }\n\n  /**\n   * Selector Decorator.\n   *\n   * Returns all matches\n   *\n   * @param {Element} el - element we searching inside. Default - DOM Document\n   * @param {String} selector - searching string\n   * @returns {NodeList}\n   */\n  public static findAll(el: Element|Document = document, selector: string): NodeList {\n    return el.querySelectorAll(selector);\n  }\n\n  /**\n   * Search for deepest node which is Leaf.\n   * Leaf is the vertex that doesn't have any child nodes\n   *\n   * @description Method recursively goes throw the all Node until it finds the Leaf\n   *\n   * @param {Node} node - root Node. From this vertex we start Deep-first search\n   *                      {@link https://en.wikipedia.org/wiki/Depth-first_search}\n   * @param {Boolean} atLast - find last text node\n   * @return {Node} - it can be text Node or Element Node, so that caret will able to work with it\n   */\n  public static getDeepestNode(node: Node, atLast: boolean = false): Node {\n    /**\n     * Current function have two directions:\n     *  - starts from first child and every time gets first or nextSibling in special cases\n     *  - starts from last child and gets last or previousSibling\n     * @type {string}\n     */\n    const child = atLast ? 'lastChild' : 'firstChild',\n      sibling = atLast ? 'previousSibling' : 'nextSibling';\n\n    if (node && node.nodeType === Node.ELEMENT_NODE && node[child]) {\n      let nodeChild = node[child];\n\n      /**\n       * special case when child is single tag that can't contain any content\n       */\n      if (Dom.isSingleTag(nodeChild as HTMLElement) && !Dom.isNativeInput(nodeChild)) {\n        /**\n         * 1) We need to check the next sibling. If it is Node Element then continue searching for deepest\n         * from sibling\n         *\n         * 2) If single tag's next sibling is null, then go back to parent and check his sibling\n         * In case of Node Element continue searching\n         *\n         * 3) If none of conditions above happened return parent Node Element\n         */\n        if (nodeChild[sibling]) {\n          nodeChild = nodeChild[sibling];\n        } else if (nodeChild.parentNode[sibling]) {\n          nodeChild = nodeChild.parentNode[sibling];\n        } else {\n          return nodeChild.parentNode;\n        }\n      }\n\n      return this.getDeepestNode(nodeChild, atLast);\n    }\n\n    return node;\n  }\n\n  /**\n   * Check if object is DOM node\n   *\n   * @param {Object} node\n   * @returns {boolean}\n   */\n  public static isElement(node: any): boolean {\n    return node && typeof node === 'object' && node.nodeType && node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  /**\n   * Check if object is DocumentFragmemt node\n   *\n   * @param {Object} node\n   * @returns {boolean}\n   */\n  public static isFragment(node: any): boolean {\n    return node && typeof node === 'object' && node.nodeType && node.nodeType === Node.DOCUMENT_FRAGMENT_NODE;\n  }\n\n  /**\n   * Checks target if it is native input\n   * @param {Element|String|Node} target - HTML element or string\n   * @return {Boolean}\n   */\n  public static isNativeInput(target: any): boolean {\n    const nativeInputs = [\n      'INPUT',\n      'TEXTAREA',\n    ];\n\n    return target && target.tagName ? nativeInputs.includes(target.tagName) : false;\n  }\n\n  /**\n   * Checks node if it is empty\n   *\n   * @description Method checks simple Node without any childs for emptiness\n   * If you have Node with 2 or more children id depth, you better use {@link Dom#isEmpty} method\n   *\n   * @param {Node} node\n   * @return {Boolean} true if it is empty\n   */\n  public static isNodeEmpty(node: Node): boolean {\n    let nodeText;\n\n    if ( this.isElement(node) && this.isNativeInput(node) ) {\n      nodeText = (node as HTMLInputElement).value;\n    } else {\n      nodeText = node.textContent.replace('\\u200B', '');\n    }\n\n    return nodeText.trim().length === 0;\n  }\n\n  /**\n   * checks node if it is doesn't have any child nodes\n   * @param {Node} node\n   * @return {boolean}\n   */\n  public static isLeaf(node: Node): boolean {\n    if (!node) {\n      return false;\n    }\n\n    return node.childNodes.length === 0;\n  }\n\n  /**\n   * breadth-first search (BFS)\n   * {@link https://en.wikipedia.org/wiki/Breadth-first_search}\n   *\n   * @description Pushes to stack all DOM leafs and checks for emptiness\n   *\n   * @param {Node} node\n   * @return {boolean}\n   */\n  public static isEmpty(node: Node): boolean {\n    const treeWalker = [],\n      leafs = [];\n\n    if (!node) {\n      return true;\n    }\n\n    if (!node.childNodes.length) {\n      return this.isNodeEmpty(node);\n    }\n\n    treeWalker.push(node.firstChild);\n\n    while ( treeWalker.length > 0 ) {\n      node = treeWalker.shift();\n\n      if (!node) { continue; }\n\n      if ( this.isLeaf(node) ) {\n        leafs.push(node);\n      } else {\n        treeWalker.push(node.firstChild);\n      }\n\n      while ( node && node.nextSibling ) {\n        node = node.nextSibling;\n\n        if (!node) { continue; }\n\n        treeWalker.push(node);\n      }\n\n      /**\n       * If one of childs is not empty, checked Node is not empty too\n       */\n      if (node && !this.isNodeEmpty(node)) {\n        return false;\n      }\n    }\n\n    return leafs.every( (leaf) => this.isNodeEmpty(leaf) );\n  }\n\n  /**\n   * Check if string contains html elements\n   *\n   * @returns {boolean}\n   * @param {String} str\n   */\n  public static isHTMLString(str: string): boolean {\n    const wrapper = Dom.make('div');\n\n    wrapper.innerHTML = str;\n\n    return wrapper.childElementCount > 0;\n  }\n\n  /**\n   * Return length of node`s text content\n   *\n   * @param {Node} node\n   * @returns {number}\n   */\n  public static getContentLength(node: Node): number {\n    if (Dom.isNativeInput(node)) {\n      return (node as HTMLInputElement).value.length;\n    }\n\n    if (node.nodeType === Node.TEXT_NODE) {\n      return (node as Text).length;\n    }\n\n    return node.textContent.length;\n  }\n\n  /**\n   * Return array of names of block html elements\n   *\n   * @returns {string[]}\n   */\n  static get blockElements(): string[] {\n    return [\n      'address',\n      'article',\n      'aside',\n      'blockquote',\n      'canvas',\n      'div',\n      'dl',\n      'dt',\n      'fieldset',\n      'figcaption',\n      'figure',\n      'footer',\n      'form',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'header',\n      'hgroup',\n      'hr',\n      'li',\n      'main',\n      'nav',\n      'noscript',\n      'ol',\n      'output',\n      'p',\n      'pre',\n      'ruby',\n      'section',\n      'table',\n      'tr',\n      'tfoot',\n      'ul',\n      'video',\n    ];\n  }\n}\n","import InlineTool from '../interfaces/tools/inline-tool';\nimport SelectionUtils from '../selection';\n\ndeclare var $: any;\n\n/**\n * Bold Tool\n *\n * Inline Toolbar Tool\n *\n * Makes selected text bolder\n */\nexport default class BoldInlineTool implements InlineTool {\n\n  /**\n   * Native Document's command that uses for Bold\n   */\n  private readonly commandName: string = 'bold';\n\n  /**\n   * Styles\n   */\n  private readonly CSS = {\n    button: 'ce-inline-tool',\n    buttonActive: 'ce-inline-tool--active',\n    buttonModifier: 'ce-inline-tool--bold',\n  };\n\n  /**\n   * Elements\n   */\n  private nodes = {\n    button: undefined,\n  };\n\n  /**\n   * @param {{api: IAPI}} - CodeX Editor API\n   */\n  constructor({api}) {\n  }\n\n  /**\n   * Create button for Inline Toolbar\n   */\n  public render(): HTMLElement {\n    this.nodes.button = document.createElement('button');\n    this.nodes.button.type = 'button';\n    this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier);\n    this.nodes.button.appendChild($.svg('bold', 13, 15));\n    return this.nodes.button;\n  }\n\n  /**\n   * Wrap range with <b> tag\n   * @param {Range} range\n   */\n  public surround(range: Range): void {\n    document.execCommand(this.commandName);\n  }\n\n  /**\n   * Check selection and set activated state to button if there are <b> tag\n   * @param {Selection} selection\n   */\n  public checkState(selection: Selection): boolean {\n    const isActive = document.queryCommandState(this.commandName);\n\n    this.nodes.button.classList.toggle(this.CSS.buttonActive, isActive);\n    return isActive;\n  }\n\n  /**\n   * Set a shortcut\n   */\n  public get shortcut(): string {\n    return 'CMD+B';\n  }\n}\n","import InlineTool from '../interfaces/tools/inline-tool';\n\ndeclare var $: any;\n\n/**\n * Italic Tool\n *\n * Inline Toolbar Tool\n *\n * Style selected text with italic\n */\nexport default class ItalicInlineTool implements InlineTool {\n\n  /**\n   * Native Document's command that uses for Italic\n   */\n  private readonly commandName: string = 'italic';\n\n  /**\n   * Styles\n   */\n  private readonly CSS = {\n    button: 'ce-inline-tool',\n    buttonActive: 'ce-inline-tool--active',\n    buttonModifier: 'ce-inline-tool--italic',\n  };\n\n  /**\n   * Elements\n   */\n  private nodes = {\n    button: null,\n  };\n\n  /**\n   * @param {{api: IAPI}} - CodeX Editor API\n   */\n  constructor({api}) {\n  }\n\n  /**\n   * Create button for Inline Toolbar\n   */\n  public render(): HTMLElement {\n    this.nodes.button = document.createElement('button');\n    this.nodes.button.type = 'button';\n    this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier);\n    this.nodes.button.appendChild($.svg('italic', 6, 15));\n    return this.nodes.button;\n  }\n\n  /**\n   * Wrap range with <i> tag\n   * @param {Range} range\n   */\n  public surround(range: Range): void {\n    document.execCommand(this.commandName);\n  }\n\n  /**\n   * Check selection and set activated state to button if there are <i> tag\n   * @param {Selection} selection\n   */\n  public checkState(selection: Selection): boolean {\n    const isActive = document.queryCommandState(this.commandName);\n\n    this.nodes.button.classList.toggle(this.CSS.buttonActive, isActive);\n    return isActive;\n  }\n\n  /**\n   * Set a shortcut\n   */\n  public get shortcut(): string {\n    return 'CMD+I';\n  }\n\n}\n","import InlineTool from '../interfaces/tools/inline-tool';\nimport SelectionUtils from '../selection';\n\ndeclare var $: any;\ndeclare var _: any;\n\n/**\n * Link Tool\n *\n * Inline Toolbar Tool\n *\n * Wrap selected text with <a> tag\n */\nexport default class LinkInlineTool implements InlineTool {\n  /**\n   * Native Document's commands for link/unlink\n   */\n  private readonly commandLink: string = 'createLink';\n  private readonly commandUnlink: string = 'unlink';\n\n  /**\n   * Enter key code\n   */\n  private readonly ENTER_KEY: number = 13;\n\n  /**\n   * Styles\n   */\n  private readonly CSS = {\n    button: 'ce-inline-tool',\n    buttonActive: 'ce-inline-tool--active',\n    buttonModifier: 'ce-inline-tool--link',\n    buttonUnlink: 'ce-inline-tool--unlink',\n    input: 'ce-inline-tool-input',\n    inputShowed: 'ce-inline-tool-input--showed',\n  };\n\n  /**\n   * Elements\n   */\n  private nodes = {\n    button: null,\n    input: null,\n  };\n\n  /**\n   * SelectionUtils instance\n   */\n  private selection: SelectionUtils;\n\n  /**\n   * Input opening state\n   */\n  private inputOpened: boolean = false;\n\n  /**\n   * Available Inline Toolbar methods (open/close)\n   */\n  private inlineToolbar: any;\n\n  /**\n   * @param {{api: IAPI}} - CodeX Editor API\n   */\n  constructor({api}) {\n    this.inlineToolbar = api.toolbar;\n    this.selection = new SelectionUtils();\n  }\n\n  /**\n   * Create button for Inline Toolbar\n   */\n  public render(): HTMLElement {\n    this.nodes.button = document.createElement('button');\n    this.nodes.button.type = 'button';\n    this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier);\n    this.nodes.button.appendChild($.svg('link', 15, 14));\n    this.nodes.button.appendChild($.svg('unlink', 16, 18));\n    return this.nodes.button;\n  }\n\n  /**\n   * Input for the link\n   */\n  public renderActions(): HTMLElement {\n    this.nodes.input = document.createElement('input');\n    this.nodes.input.placeholder = 'Add a link';\n    this.nodes.input.classList.add(this.CSS.input);\n    this.nodes.input.addEventListener('keydown', (event) => {\n      if (event.keyCode === this.ENTER_KEY ) {\n        this.enterPressed(event);\n      }\n    });\n    return this.nodes.input;\n  }\n\n  /**\n   * Handle clicks on the Inline Toolbar icon\n   * @param {Range} range\n   */\n  public surround(range: Range): void {\n    /**\n     * Range will be null when user makes second click on the 'link icon' to close opened input\n     */\n    if (range) {\n      /**\n       * Save selection before change focus to the input\n       */\n      this.selection.save();\n      const parentAnchor = this.selection.findParentTag('A');\n\n      /**\n       * Unlink icon pressed\n       */\n      if (parentAnchor) {\n        this.selection.expandToTag(parentAnchor);\n        this.unlink();\n        this.closeActions();\n        this.checkState();\n        this.inlineToolbar.close();\n        return;\n      }\n    }\n\n    this.toggleActions();\n  }\n\n  /**\n   * Check selection and set activated state to button if there are <a> tag\n   * @param {Selection} selection\n   */\n  public checkState(selection?: Selection): boolean {\n    const anchorTag = this.selection.findParentTag('A');\n\n    if (anchorTag) {\n      this.nodes.button.classList.add(this.CSS.buttonUnlink);\n      this.nodes.button.classList.add(this.CSS.buttonActive);\n      this.openActions();\n\n      /**\n       * Fill input value with link href\n       */\n      const hrefAttr = anchorTag.getAttribute('href');\n      this.nodes.input.value = hrefAttr !== 'null' ? hrefAttr : '';\n\n      this.selection.save();\n    } else {\n      this.nodes.button.classList.remove(this.CSS.buttonUnlink);\n      this.nodes.button.classList.remove(this.CSS.buttonActive);\n    }\n\n    return !!anchorTag;\n  }\n\n  /**\n   * Function called with Inline Toolbar closing\n   */\n  public clear(): void {\n    this.closeActions();\n  }\n\n  /**\n   * Set a shortcut\n   */\n  public get shortcut(): string {\n    return 'CMD+K';\n  }\n\n  private toggleActions(): void {\n    if (!this.inputOpened) {\n      this.openActions(true);\n    } else {\n      this.closeActions(false);\n    }\n  }\n\n  /**\n   * @param {boolean} needFocus - on link creation we need to focus input. On editing - nope.\n   */\n  private openActions(needFocus: boolean = false): void {\n    this.nodes.input.classList.add(this.CSS.inputShowed);\n    if (needFocus) {\n      this.nodes.input.focus();\n    }\n    this.inputOpened = true;\n  }\n\n  /**\n   * Close input\n   * @param {boolean} clearSavedSelection — we don't need to clear saved selection\n   *                                        on toggle-clicks on the icon of opened Toolbar\n   */\n  private closeActions(clearSavedSelection: boolean = true): void {\n    this.nodes.input.classList.remove(this.CSS.inputShowed);\n    this.nodes.input.value = '';\n    if (clearSavedSelection) {\n      this.selection.clearSaved();\n    }\n    this.inputOpened = false;\n  }\n\n  /**\n   * Enter pressed on input\n   * @param {KeyboardEvent} event\n   */\n  private enterPressed(event: KeyboardEvent): void {\n    let value = this.nodes.input.value || '';\n\n    if (!value.trim()) {\n      this.selection.restore();\n      this.unlink();\n      event.preventDefault();\n      this.closeActions();\n    }\n\n    if (!this.validateURL(value)) {\n      /**\n       * @todo show notification 'Incorrect Link'\n       */\n      _.log('Incorrect Link pasted', 'warn', value);\n      return;\n    }\n\n    value = this.prepareLink(value);\n\n    this.selection.restore();\n    this.insertLink(value);\n\n    /**\n     * Preventing events that will be able to happen\n     */\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n\n    this.closeActions();\n    this.inlineToolbar.close();\n    this.checkState();\n  }\n\n  /**\n   * Detects if passed string is URL\n   * @param  {string}  str\n   * @return {Boolean}\n   */\n  private validateURL(str: string): boolean {\n    /**\n     * Don't allow spaces\n     */\n    return !/\\s/.test(str);\n  }\n\n  /**\n   * Process link before injection\n   * - sanitize\n   * - add protocol for links like 'google.com'\n   * @param {string} link - raw user input\n   */\n  private prepareLink(link: string): string {\n    link = link.trim();\n    link = this.addProtocol(link);\n    return link;\n  }\n\n  /**\n   * Add 'http' protocol to the links like 'vc.ru', 'google.com'\n   * @param {String} link\n   */\n  private addProtocol(link: string): string {\n    /**\n     * If protocol already exists, do nothing\n     */\n    if (/^(\\w+):\\/\\//.test(link)) {\n      return link;\n    }\n\n    /**\n     * We need to add missed HTTP protocol to the link, but skip 2 cases:\n     *     1) Internal links like \"/general\"\n     *     2) Anchors looks like \"#results\"\n     *     3) Protocol-relative URLs like \"//google.com\"\n     */\n    const isInternal = /^\\/[^\\/\\s]/.test(link),\n      isAnchor = link.substring(0, 1) === '#',\n      isProtocolRelative = /^\\/\\/[^\\/\\s]/.test(link);\n\n    if (!isInternal && !isAnchor && !isProtocolRelative) {\n      link = 'http://' + link;\n    }\n\n    return link;\n  }\n\n  /**\n   * Inserts <a> tag with \"href\"\n   * @param {string} link - \"href\" value\n   */\n  private insertLink(link: string): void {\n\n    /**\n     * Edit all link, not selected part\n     */\n    const anchorTag = this.selection.findParentTag('A');\n\n    if (anchorTag) {\n      this.selection.expandToTag(anchorTag);\n    }\n\n    document.execCommand(this.commandLink, false, link);\n  }\n\n  /**\n   * Removes <a> tag\n   */\n  private unlink(): void {\n    document.execCommand(this.commandUnlink);\n  }\n}\n","var map = {\n\t\"./api-blocks.ts\": \"./src/components/modules/api-blocks.ts\",\n\t\"./api-caret.ts\": \"./src/components/modules/api-caret.ts\",\n\t\"./api-events.ts\": \"./src/components/modules/api-events.ts\",\n\t\"./api-listener.ts\": \"./src/components/modules/api-listener.ts\",\n\t\"./api-sanitizer.ts\": \"./src/components/modules/api-sanitizer.ts\",\n\t\"./api-saver.ts\": \"./src/components/modules/api-saver.ts\",\n\t\"./api-selection.ts\": \"./src/components/modules/api-selection.ts\",\n\t\"./api-styles.ts\": \"./src/components/modules/api-styles.ts\",\n\t\"./api-toolbar.ts\": \"./src/components/modules/api-toolbar.ts\",\n\t\"./api.ts\": \"./src/components/modules/api.ts\",\n\t\"./block-events.ts\": \"./src/components/modules/block-events.ts\",\n\t\"./blockManager.js\": \"./src/components/modules/blockManager.js\",\n\t\"./caret.js\": \"./src/components/modules/caret.js\",\n\t\"./dragNDrop.ts\": \"./src/components/modules/dragNDrop.ts\",\n\t\"./events.js\": \"./src/components/modules/events.js\",\n\t\"./listeners.js\": \"./src/components/modules/listeners.js\",\n\t\"./modificationsObserver.ts\": \"./src/components/modules/modificationsObserver.ts\",\n\t\"./paste.ts\": \"./src/components/modules/paste.ts\",\n\t\"./renderer.js\": \"./src/components/modules/renderer.js\",\n\t\"./sanitizer.js\": \"./src/components/modules/sanitizer.js\",\n\t\"./saver.js\": \"./src/components/modules/saver.js\",\n\t\"./shortcuts.ts\": \"./src/components/modules/shortcuts.ts\",\n\t\"./toolbar-blockSettings.js\": \"./src/components/modules/toolbar-blockSettings.js\",\n\t\"./toolbar-inline.ts\": \"./src/components/modules/toolbar-inline.ts\",\n\t\"./toolbar-toolbox.js\": \"./src/components/modules/toolbar-toolbox.js\",\n\t\"./toolbar.js\": \"./src/components/modules/toolbar.js\",\n\t\"./tools.js\": \"./src/components/modules/tools.js\",\n\t\"./ui.js\": \"./src/components/modules/ui.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/components/modules sync [^_](api-blocks.ts|api-caret.ts|api-events.ts|api-listener.ts|api-sanitizer.ts|api-saver.ts|api-selection.ts|api-styles.ts|api-toolbar.ts|api.ts|block-events.ts|blockManager.js|caret.js|dragNDrop.ts|events.js|listeners.js|modificationsObserver.ts|paste.ts|renderer.js|sanitizer.js|saver.js|shortcuts.ts|toolbar-blockSettings.js|toolbar-inline.ts|toolbar-toolbox.js|toolbar.js|tools.js|ui.js)$\";","import Module from '../__module';\nimport { IBlocksAPI } from '../interfaces/api';\nimport IInputOutputData from '../interfaces/input-output-data';\nimport IModuleConfig from '../interfaces/module-config';\n\n/**\n * @class BlocksAPI\n * provides with methods working with Block\n */\nexport default class BlocksAPI extends Module implements IBlocksAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {IBlocksAPI}\n   */\n  get methods(): IBlocksAPI {\n    return {\n      clear: () => this.clear(),\n      render: (data: IInputOutputData) => this.render(data),\n      delete: () => this.delete(),\n      swap: (fromIndex: number, toIndex: number) => this.swap(fromIndex, toIndex),\n      getBlockByIndex: (index: number) => this.getBlockByIndex(index),\n      getCurrentBlockIndex: () => this.getCurrentBlockIndex(),\n      getBlocksCount: () => this.getBlocksCount(),\n      stretchBlock: (index: number, status: boolean) => this.stretchBlock(index, status),\n      insertNewBlock: () => this.insertNewBlock(),\n    };\n  }\n\n  /**\n   * Returns Blocks count\n   * @return {number}\n   */\n  public getBlocksCount(): number {\n    return this.Editor.BlockManager.blocks.length;\n  }\n\n  /**\n   * Returns current block index\n   * @return {number}\n   */\n  public getCurrentBlockIndex(): number {\n    return this.Editor.BlockManager.currentBlockIndex;\n  }\n\n  /**\n   * Returns Current Block\n   * @param {Number} index\n   *\n   * @return {Object}\n   */\n  public getBlockByIndex(index: number): object {\n    return this.Editor.BlockManager.getBlockByIndex(index);\n  }\n\n  /**\n   * Call Block Manager method that swap Blocks\n   * @param {number} fromIndex - position of first Block\n   * @param {number} toIndex - position of second Block\n   */\n  public swap(fromIndex: number, toIndex: number): void {\n    this.Editor.BlockManager.swap(fromIndex, toIndex);\n\n    /**\n     * Move toolbar\n     * DO not close the settings\n     */\n    this.Editor.Toolbar.move(false);\n  }\n\n  /**\n   * Deletes Block\n   * @param blockIndex\n   */\n  public delete(blockIndex?: number): void {\n    this.Editor.BlockManager.removeBlock(blockIndex);\n\n    /**\n     * in case of last block deletion\n     * Insert new initial empty block\n     */\n    if (this.Editor.BlockManager.blocks.length === 0) {\n      this.Editor.BlockManager.insert();\n    }\n\n    /**\n     * In case of deletion first block we need to set caret to the current Block\n     */\n    if (this.Editor.BlockManager.currentBlockIndex === 0) {\n      this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock);\n    } else {\n      this.Editor.Caret.navigatePrevious(true);\n    }\n\n    this.Editor.Toolbar.close();\n  }\n\n  /**\n   * Clear Editor's area\n   */\n  public clear(): void {\n    this.Editor.BlockManager.clear(true);\n  }\n\n  /**\n   * Fills Editor with Blocks data\n   * @param {IInputOutputData} data — Saved Editor data\n   */\n  public render(data: IInputOutputData): void {\n    this.Editor.BlockManager.clear();\n    this.Editor.Renderer.render(data.blocks);\n  }\n\n  /**\n   * Stretch Block's content\n   * @param {number} index\n   * @param {boolean} status - true to enable, false to disable\n   */\n  public stretchBlock(index: number, status: boolean): void {\n    const block = this.Editor.BlockManager.getBlockByIndex(index);\n\n    if (!block) {\n      return;\n    }\n\n    block.stretched = status !== undefined ? status : true;\n  }\n\n  /**\n   * Insert new Block\n   * After set caret to this Block\n   */\n  public insertNewBlock() {\n    const newBlock = this.Editor.BlockManager.insert();\n    this.Editor.Caret.setToBlock(newBlock);\n  }\n}\n","import Module from '../__module';\n\nimport {ICaretAPI} from '../interfaces/api';\nimport IModuleConfig from '../interfaces/module-config';\n\n/**\n * @class CaretAPI\n * provides with methods to work with caret\n */\nexport default class CaretAPI extends Module implements ICaretAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {ICaretAPI}\n   */\n  get methods(): ICaretAPI {\n    return {};\n  }\n}\n","import Module from '../__module';\n\nimport {IEventsAPI} from '../interfaces/api';\nimport IModuleConfig from '../interfaces/module-config';\n\n/**\n * @class EventsAPI\n * provides with methods working with Toolbar\n */\nexport default class EventsAPI extends Module implements IEventsAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {IEventsAPI}\n   */\n  get methods(): IEventsAPI {\n    return {\n      emit: (eventName: string, data: object) => this.emit(eventName, data),\n      off: (eventName: string, callback: () => void) => this.off(eventName, callback),\n      on: (eventName: string, callback: () => void) => this.on(eventName, callback),\n    };\n  }\n\n  /**\n   * Subscribe on Events\n   * @param {String} eventName\n   * @param {Function} callback\n   */\n  public on(eventName, callback): void {\n    this.Editor.Events.on(eventName, callback);\n  }\n\n  /**\n   * Emit event with data\n   * @param {String} eventName\n   * @param {Object} data\n   */\n  public emit(eventName, data): void {\n    this.Editor.Events.emit(eventName, data);\n  }\n\n  /**\n   * Unsubscribe from Event\n   * @param {String} eventName\n   * @param {Function} callback\n   */\n  public off(eventName, callback): void {\n    this.Editor.Events.off(eventName, callback);\n  }\n\n}\n","import Module from '../__module';\n\nimport {IListenerAPI} from '../interfaces/api';\nimport IModuleConfig from '../interfaces/module-config';\n\n/**\n * @class API\n * Provides with methods working with DOM Listener\n */\nexport default class ListenerAPI extends Module implements IListenerAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {IToolbarAPI}\n   */\n  get methods(): IListenerAPI {\n    return {\n      on: (element, eventType, handler, useCapture) => this.on(element, eventType, handler, useCapture),\n      off: (element, eventType, handler) => this.off(element, eventType, handler),\n    };\n  }\n\n  /**\n   * adds DOM event listener\n   *\n   * @param {HTMLElement} element\n   * @param {string} eventType\n   * @param {() => void} handler\n   * @param {boolean} useCapture\n   */\n  public on(element: HTMLElement, eventType: string, handler: () => void, useCapture?: boolean): void {\n    this.Editor.Listeners.on(element, eventType, handler, useCapture);\n  }\n\n  /**\n   * Removes DOM listener from element\n   *\n   * @param element\n   * @param eventType\n   * @param handler\n   */\n  public off(element, eventType, handler): void {\n    this.Editor.Listeners.off(element, eventType, handler);\n  }\n}\n","import Module from '../__module';\n\nimport {ISanitizerAPI} from '../interfaces/api';\nimport IModuleConfig from '../interfaces/module-config';\n\n/**\n * @class API\n * Provides CodeX Editor Sanitizer that allows developers to clean their HTML\n */\nexport default class SanitizerAPI extends Module implements ISanitizerAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {ISanitizerAPI}\n   */\n  get methods(): ISanitizerAPI {\n    return {\n      clean: (taintString, config) => this.clean(taintString, config),\n    };\n  }\n\n  public clean(taintString, config) {\n    return this.Editor.Sanitizer.clean(taintString, config);\n  }\n\n}\n","import Module from '../__module';\n\nimport {ISaverAPI} from '../interfaces/api';\nimport IInputOutputData from '../interfaces/input-output-data';\nimport IModuleConfig from '../interfaces/module-config';\n\n/**\n * @class SaverAPI\n * provides with methods to save data\n */\nexport default class SaverAPI extends Module implements ISaverAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {ISaverAPI}\n   */\n  get methods(): ISaverAPI {\n    return {\n      save: () => this.save(),\n    };\n  }\n\n  /**\n   * Return Editor's data\n   */\n  public save(): IInputOutputData {\n    return this.Editor.Saver.save();\n  }\n}\n","import Module from '../__module';\n\nimport {ISelectionAPI} from '../interfaces/api';\nimport IModuleConfig from '../interfaces/module-config';\nimport Selection from '../selection';\n\n/**\n * @class API\n * Provides with methods working with SelectionUtils\n */\nexport default class SelectionAPI extends Module implements ISelectionAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {ISelectionAPI}\n   */\n  get methods(): ISelectionAPI {\n    return {\n      findParentTag: (tagName: string, className: string) => this.findParentTag(tagName, className),\n      expandToTag: (node: HTMLElement) => this.expandToTag(node),\n    };\n  }\n\n  /**\n   * Looks ahead from selection and find passed tag with class name\n   * @param {string} tagName - tag to find\n   * @param {string} className - tag's class name\n   * @return {HTMLElement|null}\n   */\n  public findParentTag(tagName: string, className: string): HTMLElement|null {\n    return new Selection().findParentTag(tagName, className);\n  }\n\n  /**\n   * Expand selection to passed tag\n   * @param {HTMLElement} node - tag that should contain selection\n   */\n  public expandToTag(node: HTMLElement): void {\n    new Selection().expandToTag(node);\n  }\n\n}\n","import Module from '../__module';\n\nimport IModuleConfig from '../interfaces/module-config';\nimport {IStylesAPI} from '../interfaces/api';\n\n/**\n *\n */\nexport default class StylesAPI extends Module {\n\n  /**\n   * Save Editor config\n   * API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  get classes(): IStylesAPI {\n    return {\n      /**\n       * Base Block styles\n       */\n      block: 'cdx-block',\n\n      /**\n       * Inline Tools styles\n       */\n      inlineToolButton: 'ce-inline-tool',\n      inlineToolButtonActive: 'ce-inline-tool--active',\n\n      /**\n       * UI elements\n       */\n      input: 'cdx-input',\n      loader: 'cdx-loader',\n\n      /**\n       * Settings styles\n       */\n      settingsButton: 'cdx-settings-button',\n      settingsButtonActive: 'cdx-settings-button--active',\n    };\n  }\n}\n","import Module from '../__module';\n\nimport {IToolbarAPI} from '../interfaces/api';\nimport IModuleConfig from '../interfaces/module-config';\n\n/**\n * @class ToolbarsAPI\n * provides with methods working with Toolbar\n */\nexport default class ToolbarAPI extends Module implements IToolbarAPI {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   */\n  constructor({config}: IModuleConfig) {\n    super({config});\n  }\n\n  /**\n   * Available methods\n   * @return {IToolbarAPI}\n   */\n  get methods(): IToolbarAPI {\n    return {\n      close: () => this.close(),\n      open: () => this.open(),\n    };\n  }\n\n  /**\n   * Open toolbar\n   */\n  public open(): void {\n    this.Editor.Toolbar.open();\n  }\n\n  /**\n   * Close toolbar and all included elements\n   */\n  public close(): void {\n    this.Editor.Toolbar.close();\n  }\n\n}\n","/**\n * @module API\n * @copyright <CodeX Team> 2018\n *\n * Each block has an Editor API instance to use provided public methods\n * if you cant to read more about how API works, please see docs\n */\nimport Module from '../__module';\ndeclare var $: any;\ndeclare var _: any;\n\nimport { IAPI } from '../interfaces/api';\n\n/**\n * @class API\n */\nexport default class API extends Module {\n\n  /**\n   * Save Editor config. API provides passed configuration to the Blocks\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  public get methods(): IAPI {\n    return {\n      blocks: this.Editor.BlocksAPI.methods,\n      caret: this.Editor.CaretAPI.methods,\n      events: this.Editor.EventsAPI.methods,\n      listener: this.Editor.ListenerAPI.methods,\n      sanitizer: this.Editor.SanitizerAPI.methods,\n      saver: this.Editor.SaverAPI.methods,\n      selection: this.Editor.SelectionAPI.methods,\n      styles: this.Editor.StylesAPI.classes,\n      toolbar: this.Editor.ToolbarAPI.methods,\n    };\n  }\n}\n","/**\n * Contains keyboard and mouse events binded on each Block by Block Manager\n */\nimport Module from '../__module';\ndeclare var $: any;\ndeclare var _: any;\n\nexport default class BlockEvents extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * All keydowns on Block\n   * @param {KeyboardEvent} event - keydown\n   */\n  public keydown(event: KeyboardEvent): void {\n    /**\n     * Run common method for all keydown events\n     */\n    this.beforeKeydownProcessing(event);\n\n    /**\n     * Fire keydown processor by event.keyCode\n     */\n    switch (event.keyCode) {\n      case _.keyCodes.BACKSPACE:\n        this.backspace(event);\n        break;\n\n      case _.keyCodes.ENTER:\n        this.enter(event);\n        break;\n\n      case _.keyCodes.DOWN:\n      case _.keyCodes.RIGHT:\n        this.arrowRightAndDown(event);\n        break;\n\n      case _.keyCodes.UP:\n      case _.keyCodes.LEFT:\n        this.arrowLeftAndUp(event);\n        break;\n\n      case _.keyCodes.TAB:\n        this.tabPressed(event);\n        break;\n\n      default:\n        this.defaultHandler();\n        break;\n    }\n  }\n\n  /**\n   * Fires on keydown before event processing\n   * @param {KeyboardEvent} event - keydown\n   */\n  public beforeKeydownProcessing(event): void {\n    /**\n     * Clear all highlightings\n     */\n    this.Editor.BlockManager.clearHighlightings();\n\n    /**\n     * Do not close Toolbox on Tabs or on Enter with opened Toolbox\n     */\n    if (!this.needToolbarClosing(event)) {\n      return;\n    }\n\n    this.Editor.Toolbar.close();\n  }\n\n  /**\n   * Key up on Block:\n   * - shows Inline Toolbar if something selected\n   */\n  public keyup(event): void {\n    this.Editor.InlineToolbar.handleShowingEvent(event);\n  }\n\n  /**\n   * Mouse up on Block:\n   * - shows Inline Toolbar if something selected\n   */\n  public mouseUp(event): void {\n    this.Editor.InlineToolbar.handleShowingEvent(event);\n  }\n\n  /**\n   * Open Toolbox to leaf Tools\n   * @param {KeyboardEvent} event\n   */\n  public tabPressed(event): void {\n\n    const {currentBlock} = this.Editor.BlockManager;\n\n    /** Prevent Default behaviour */\n    event.preventDefault();\n    event.stopPropagation();\n\n    /** this property defines leaf direction */\n    const shiftKey = event.shiftKey,\n      direction = shiftKey ? 'left' : 'right';\n\n    if (this.Editor.Toolbar.opened && currentBlock.isEmpty) {\n      this.Editor.Toolbox.open();\n    } else if (currentBlock.isEmpty) {\n      this.Editor.Toolbar.open();\n      this.Editor.Toolbar.plusButton.show();\n      this.Editor.Toolbox.open();\n    }\n\n    if (this.Editor.Toolbox.opened) {\n      this.Editor.Toolbox.leaf(direction);\n    }\n  }\n\n  /**\n   * Add drop target styles\n   *\n   * @param {DragEvent} e\n   */\n  public dragOver(e: DragEvent) {\n    const block = this.Editor.BlockManager.getBlockByChildNode(e.target);\n\n    block.dropTarget = true;\n  }\n\n  /**\n   * Remove drop target style\n   *\n   * @param {DragEvent} e\n   */\n  public dragLeave(e: DragEvent) {\n    const block = this.Editor.BlockManager.getBlockByChildNode(e.target);\n\n    block.dropTarget = false;\n  }\n\n  /**\n   * ENTER pressed on block\n   * @param {KeyboardEvent} event - keydown\n   */\n  private enter(event: KeyboardEvent): void {\n    const currentBlock = this.Editor.BlockManager.currentBlock,\n      tool = this.Editor.Tools.toolsAvailable[currentBlock.name];\n\n    /**\n     * Don't handle Enter keydowns when Tool sets enableLineBreaks to true.\n     * Uses for Tools like <code> where line breaks should be handled by default behaviour.\n     */\n    if (tool && tool[this.Editor.Tools.apiSettings.IS_ENABLED_LINE_BREAKS]) {\n      return;\n    }\n\n    if (this.Editor.Toolbox.opened && this.Editor.Toolbox.getActiveTool) {\n      event.preventDefault();\n      event.stopPropagation();\n      event.stopImmediatePropagation();\n      this.Editor.Toolbox.toolButtonActivate(event, this.Editor.Toolbox.getActiveTool);\n      return;\n    }\n\n    /**\n     * Allow to create linebreaks by Shift+Enter\n     */\n    if (event.shiftKey) {\n      return;\n    }\n    /**\n     * Split the Current Block into two blocks\n     * Renew local current node after split\n     */\n    const newCurrent = this.Editor.BlockManager.split();\n\n    this.Editor.Caret.setToBlock(newCurrent);\n\n    /**\n     * If new Block is empty\n     */\n    if (this.Editor.Tools.isInitial(newCurrent.tool) && newCurrent.isEmpty) {\n      /**\n       * Show Toolbar\n       */\n      this.Editor.Toolbar.open();\n\n      /**\n       * Show Plus Button\n       */\n      this.Editor.Toolbar.plusButton.show();\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n  }\n\n  /**\n   * Handle backspace keydown on Block\n   * @param {KeyboardEvent} event - keydown\n   */\n  private backspace(event: KeyboardEvent): void {\n    const BM = this.Editor.BlockManager;\n    const currentBlock = this.Editor.BlockManager.currentBlock,\n      tool = this.Editor.Tools.toolsAvailable[currentBlock.name];\n\n    /**\n     * Don't handle Backspaces when Tool sets enableLineBreaks to true.\n     * Uses for Tools like <code> where line breaks should be handled by default behaviour.\n     */\n    if (tool && tool[this.Editor.Tools.apiSettings.IS_ENABLED_LINE_BREAKS]) {\n      return;\n    }\n\n    const isFirstBlock = BM.currentBlockIndex === 0,\n      canMergeBlocks = this.Editor.Caret.isAtStart && !isFirstBlock;\n\n    /** If current Block is empty just remove this Block */\n    if (this.Editor.BlockManager.currentBlock.isEmpty) {\n      this.Editor.BlockManager.removeBlock();\n\n      /**\n       * in case of last block deletion\n       * Insert new initial empty block\n       */\n      if (this.Editor.BlockManager.blocks.length === 0) {\n        this.Editor.BlockManager.insert();\n      }\n\n      /**\n       * In case of deletion first block we need to set caret to the current Block\n       * After BlockManager removes the Block (which is current now),\n       * pointer that references to the current Block, now points to the Next\n       */\n      if (this.Editor.BlockManager.currentBlockIndex === 0) {\n        this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock);\n      } else {\n        this.Editor.Caret.navigatePrevious(true);\n      }\n\n      this.Editor.Toolbar.close();\n      return;\n    }\n\n    if (!canMergeBlocks) {\n      return;\n    }\n\n    // preventing browser default behaviour\n    event.preventDefault();\n\n    const targetBlock = BM.getBlockByIndex(BM.currentBlockIndex - 1),\n      blockToMerge = BM.currentBlock;\n\n    /**\n     * Blocks that can be merged:\n     * 1) with the same Name\n     * 2) Tool has 'merge' method\n     *\n     * other case will handle as usual ARROW LEFT behaviour\n     */\n    if (blockToMerge.name !== targetBlock.name || !targetBlock.mergeable) {\n      if (this.Editor.Caret.navigatePrevious()) {\n        this.Editor.Toolbar.close();\n      }\n\n      return;\n    }\n\n    this.Editor.Caret.createShadow(targetBlock.pluginsContent);\n    BM.mergeBlocks(targetBlock, blockToMerge)\n      .then( () => {\n        /** Restore caret position after merge */\n        this.Editor.Caret.restoreCaret(targetBlock.pluginsContent);\n        targetBlock.pluginsContent.normalize();\n        this.Editor.Toolbar.close();\n      });\n  }\n\n  /**\n   * Handle right and down keyboard keys\n   */\n  private arrowRightAndDown(event: KeyboardEvent): void {\n    if (this.Editor.Caret.navigateNext()) {\n      /**\n       * Default behaviour moves cursor by 1 character, we need to prevent it\n       */\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Handle left and up keyboard keys\n   */\n  private arrowLeftAndUp(event: KeyboardEvent): void {\n    if (this.Editor.Caret.navigatePrevious()) {\n      /**\n       * Default behaviour moves cursor by 1 character, we need to prevent it\n       */\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * Default keydown handler\n   */\n  private defaultHandler(): void {}\n\n  /**\n   * Cases when we need to close Toolbar\n   */\n  private needToolbarClosing(event) {\n    const toolboxItemSelected = (event.keyCode === _.keyCodes.ENTER && this.Editor.Toolbox.opened),\n      flippingToolboxItems = event.keyCode === _.keyCodes.TAB;\n\n    return !(event.shiftKey || flippingToolboxItems || toolboxItemSelected);\n  }\n\n}\n","/**\n * @class BlockManager\n * @classdesc Manage editor`s blocks storage and appearance\n *\n * @module BlockManager\n *\n * @version 2.0.0\n */\n\nimport Block from '../block';\nimport Module from '../__module';\n\n/**\n * @typedef {BlockManager} BlockManager\n * @property {Number} currentBlockIndex - Index of current working block\n * @property {Proxy} _blocks - Proxy for Blocks instance {@link Blocks}\n */\nexport default class BlockManager extends Module {\n  /**\n   * @constructor\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    /**\n     * Proxy for Blocks instance {@link Blocks}\n     *\n     * @type {Proxy}\n     * @private\n     */\n    this._blocks = null;\n\n    /**\n     * Index of current working block\n     *\n     * @type {number}\n     * @private\n     */\n    this.currentBlockIndex = -1;\n  }\n\n  /**\n   * Should be called after Editor.UI preparation\n   * Define this._blocks property\n   *\n   * @returns {Promise}\n   */\n  prepare() {\n    return new Promise(resolve => {\n      let blocks = new Blocks(this.Editor.UI.nodes.redactor);\n\n      /**\n       * We need to use Proxy to overload set/get [] operator.\n       * So we can use array-like syntax to access blocks\n       *\n       * @example\n       * this._blocks[0] = new Block(...);\n       *\n       * block = this._blocks[0];\n       *\n       * @todo proxy the enumerate method\n       *\n       * @type {Proxy}\n       * @private\n       */\n      this._blocks = new Proxy(blocks, {\n        set: Blocks.set,\n        get: Blocks.get\n      });\n\n      resolve();\n    });\n  }\n\n  /**\n   * Creates Block instance by tool name\n   *\n   * @param {String} toolName - tools passed in editor config {@link EditorConfig#tools}\n   * @param {Object} data - constructor params\n   * @param {Object} settings - block settings\n   *\n   * @return {Block}\n   */\n  composeBlock(toolName, data, settings) {\n    let toolInstance = this.Editor.Tools.construct(toolName, data),\n      toolClass = this.Editor.Tools.available[toolName],\n      block = new Block(toolName, toolInstance, toolClass, settings, this.Editor.API.methods);\n\n    this.bindEvents(block);\n    /**\n     * Apply callback before inserting html\n     */\n    block.call('appendCallback', {});\n\n    return block;\n  }\n\n  /**\n   * Bind Events\n   * @param {Object} block\n   */\n  bindEvents(block) {\n    this.Editor.Listeners.on(block.holder, 'keydown', (event) => this.Editor.BlockEvents.keydown(event), true);\n    this.Editor.Listeners.on(block.holder, 'mouseup', (event) => this.Editor.BlockEvents.mouseUp(event));\n    this.Editor.Listeners.on(block.holder, 'keyup', (event) => this.Editor.BlockEvents.keyup(event));\n    this.Editor.Listeners.on(block.holder, 'dragover', (event) => this.Editor.BlockEvents.dragOver(event));\n    this.Editor.Listeners.on(block.holder, 'dragleave', (event) => this.Editor.BlockEvents.dragLeave(event));\n  }\n\n  /**\n   * Insert new block into _blocks\n   *\n   * @param {String} toolName — plugin name, by default method inserts initial block type\n   * @param {Object} data — plugin data\n   * @param {Object} settings - default settings\n   *\n   * @return {Block}\n   */\n  insert(toolName = this.config.initialBlock, data = {}, settings = {}) {\n    // Increment index before construct,\n    // because developers can use API/Blocks/getCurrentInputIndex on the render() method\n    let newIndex = ++this.currentBlockIndex;\n    let block = this.composeBlock(toolName, data, settings);\n\n    this._blocks[newIndex] = block;\n    return block;\n  }\n\n  /**\n   * Always inserts at the end\n   * @return {Block}\n   */\n  insertAtEnd() {\n    /**\n     * Define new value for current block index\n     */\n    this.currentBlockIndex = this.blocks.length - 1;\n\n    /**\n     * Insert initial typed block\n     */\n    return this.insert();\n  }\n\n  /**\n   * Merge two blocks\n   * @param {Block} targetBlock - previous block will be append to this block\n   * @param {Block} blockToMerge - block that will be merged with target block\n   *\n   * @return {Promise} - the sequence that can be continued\n   */\n  mergeBlocks(targetBlock, blockToMerge) {\n    let blockToMergeIndex = this._blocks.indexOf(blockToMerge);\n\n    return Promise.resolve()\n      .then( () => {\n        if (blockToMerge.isEmpty) {\n          return;\n        }\n\n        return blockToMerge.data\n          .then((blockToMergeInfo) => {\n            targetBlock.mergeWith(blockToMergeInfo.data);\n          });\n      })\n      .then( () => {\n        this.removeBlock(blockToMergeIndex);\n        this.currentBlockIndex = this._blocks.indexOf(targetBlock);\n      });\n  }\n\n  /**\n   * Remove block with passed index or remove last\n   * @param {Number|null} index\n   */\n  removeBlock(index) {\n    if (!index) {\n      index = this.currentBlockIndex;\n    }\n    this._blocks.remove(index);\n\n    /**\n     * If first Block was removed, insert new Initial Block and set focus on it`s first input\n     */\n    if (!this.blocks.length) {\n      this.currentBlockIndex = -1;\n      this.insert();\n      this.currentBlock.firstInput.focus();\n    }\n  }\n\n  /**\n   * Split current Block\n   * 1. Extract content from Caret position to the Block`s end\n   * 2. Insert a new Block below current one with extracted content\n   *\n   * @return {Block}\n   */\n  split() {\n    let extractedFragment = this.Editor.Caret.extractFragmentFromCaretPosition(),\n      wrapper = $.make('div');\n\n    wrapper.append(extractedFragment);\n\n    /**\n     * @todo make object in accordance with Tool\n     */\n    let data = {\n      text: $.isEmpty(wrapper) ? '' : wrapper.innerHTML,\n    };\n\n    /**\n     * Renew current Block\n     * @type {Block}\n     */\n    return this.insert(this.config.initialBlock, data);\n  }\n\n  /**\n   * Replace current working block\n   *\n   * @param {String} toolName — plugin name\n   * @param {Object} data — plugin data\n   *\n   * @return {Block}\n   */\n  replace(toolName, data = {}) {\n    let block = this.composeBlock(toolName, data);\n\n    this._blocks.insert(this.currentBlockIndex, block, true);\n\n    return block;\n  }\n\n  /**\n   * returns last Block\n   * @return {Block}\n   */\n  get lastBlock() {\n    return this._blocks[this._blocks.length - 1];\n  }\n\n  /**\n   * Returns Block by passed index\n   * @param {Number} index\n   * @return {Block}\n   */\n  getBlockByIndex(index) {\n    return this._blocks[index];\n  }\n\n  /**\n   * Get Block instance by html element\n   * @param {Node} element\n   * @returns {Block}\n   */\n  getBlock(element) {\n    if (!$.isElement(element)) {\n      element = element.parentNode;\n    }\n\n    let nodes = this._blocks.nodes,\n      firstLevelBlock = element.closest(`.${Block.CSS.wrapper}`),\n      index = nodes.indexOf(firstLevelBlock);\n\n    if (index >= 0) {\n      return this._blocks[index];\n    }\n  }\n\n  /**\n   * Get current Block instance\n   *\n   * @return {Block}\n   */\n  get currentBlock() {\n    return this._blocks[this.currentBlockIndex];\n  }\n\n  /**\n   * Returns next Block instance\n   * @return {Block|null}\n   */\n  get nextBlock() {\n    let isLastBlock = this.currentBlockIndex === (this._blocks.length - 1);\n\n    if (isLastBlock) {\n      return null;\n    }\n\n    return this._blocks[this.currentBlockIndex + 1];\n  }\n\n  /**\n   * Return first Block with inputs after current Block\n   *\n   * @returns {Block | undefined}\n   */\n  get nextContentfulBlock() {\n    const nextBlocks = this.blocks.slice(this.currentBlockIndex + 1);\n\n    return nextBlocks.find(block => !!block.inputs.length);\n  }\n\n  /**\n   * Return first Block with inputs before current Block\n   *\n   * @returns {Block | undefined}\n   */\n  get previousContentfulBlock() {\n    const previousBlocks = this.blocks.slice(0, this.currentBlockIndex).reverse();\n\n    return previousBlocks.find(block => !!block.inputs.length);\n  }\n\n  /**\n   * Returns previous Block instance\n   * @return {Block|null}\n   */\n  get previousBlock() {\n    let isFirstBlock = this.currentBlockIndex === 0;\n\n    if (isFirstBlock) {\n      return null;\n    }\n\n    return this._blocks[this.currentBlockIndex - 1];\n  }\n\n  /**\n   * Remove selection from all Blocks then highlight only Current Block\n   */\n  highlightCurrentNode() {\n    /**\n     * Remove previous selected Block's state\n     */\n    this.clearHighlightings();\n\n    /**\n     * Mark current Block as selected\n     * @type {boolean}\n     */\n    this.currentBlock.selected = true;\n  }\n\n  /**\n   * Remove selection from all Blocks\n   */\n  clearHighlightings() {\n    this.blocks.forEach( block => block.selected = false);\n  }\n\n  /**\n   * Get array of Block instances\n   *\n   * @returns {Block[]} {@link Blocks#array}\n   */\n  get blocks() {\n    return this._blocks.array;\n  }\n\n  /**\n   * 1) Find first-level Block from passed child Node\n   * 2) Mark it as current\n   *\n   *  @param {Element|Text} childNode - look ahead from this node.\n   *  @param {string} caretPosition - position where to set caret\n   *  @throws Error  - when passed Node is not included at the Block\n   */\n  setCurrentBlockByChildNode(childNode, caretPosition = 'default') {\n    /**\n     * If node is Text TextNode\n     */\n    if (!$.isElement(childNode)) {\n      childNode = childNode.parentNode;\n    }\n\n    const parentFirstLevelBlock = childNode.closest(`.${Block.CSS.wrapper}`);\n\n    if (parentFirstLevelBlock) {\n      /**\n       * Update current Block's index\n       * @type {number}\n       */\n      this.currentBlockIndex = this._blocks.nodes.indexOf(parentFirstLevelBlock);\n\n      this.Editor.Caret.setToInput(childNode, caretPosition);\n    } else {\n      throw new Error('Can not find a Block from this child Node');\n    }\n  }\n\n  /**\n   * Return block which contents passed node\n   *\n   * @param {Node} childNode\n   * @return {Block}\n   */\n  getBlockByChildNode(childNode) {\n    /**\n     * If node is Text TextNode\n     */\n    if (!$.isElement(childNode)) {\n      childNode = childNode.parentNode;\n    }\n\n    const firstLevelBlock = childNode.closest(`.${Block.CSS.wrapper}`);\n\n    return this.blocks.find(block => block.holder === firstLevelBlock);\n  }\n\n  /**\n   * Swap Blocks Position\n   * @param {Number} fromIndex\n   * @param {Number} toIndex\n   */\n  swap(fromIndex, toIndex) {\n    /** Move up current Block */\n    this._blocks.swap(fromIndex, toIndex);\n\n    /** Now actual block moved up so that current block index decreased */\n    this.currentBlockIndex = toIndex;\n  }\n\n  /**\n   * Sets current Block Index -1 which means unknown\n   * and clear highlightings\n   */\n  dropPointer() {\n    this.currentBlockIndex = -1;\n    this.clearHighlightings();\n  }\n\n  /**\n   * Clears Editor\n   * @param {boolean} needAddInitialBlock - 1) in internal calls (for example, in api.blocks.render)\n   *                                        we don't need to add empty initial block\n   *                                        2) in api.blocks.clear we should add empty block\n   */\n  clear(needAddInitialBlock = false) {\n    this._blocks.removeAll();\n    this.dropPointer();\n\n    if (needAddInitialBlock) {\n      this.insert(this.config.initialBlock);\n    }\n  }\n};\n\n/**\n * @class Blocks\n * @classdesc Class to work with Block instances array\n *\n * @private\n *\n * @property {HTMLElement} workingArea — editor`s working node\n *\n */\nclass Blocks {\n  /**\n   * @constructor\n   *\n   * @param {HTMLElement} workingArea — editor`s working node\n   */\n  constructor(workingArea) {\n    this.blocks = [];\n    this.workingArea = workingArea;\n  }\n\n  /**\n   * Push back new Block\n   *\n   * @param {Block} block\n   */\n  push(block) {\n    this.blocks.push(block);\n    this.workingArea.appendChild(block.holder);\n  }\n\n  /**\n   * Swaps blocks with indexes first and second\n   * @param {Number} first - first block index\n   * @param {Number} second - second block index\n   */\n  swap(first, second) {\n    let secondBlock = this.blocks[second];\n\n    /**\n     * Change in DOM\n     */\n    $.swap(this.blocks[first].holder, secondBlock.holder);\n\n    /**\n     * Change in array\n     */\n    this.blocks[second] = this.blocks[first];\n    this.blocks[first] = secondBlock;\n  }\n\n  /**\n   * Insert new Block at passed index\n   *\n   * @param {Number} index — index to insert Block\n   * @param {Block} block — Block to insert\n   * @param {Boolean} replace — it true, replace block on given index\n   */\n  insert(index, block, replace = false) {\n    if (!this.length) {\n      this.push(block);\n      return;\n    }\n\n    if (index > this.length) {\n      index = this.length;\n    }\n\n    if (replace) {\n      this.blocks[index].holder.remove();\n    }\n\n    let deleteCount = replace ? 1 : 0;\n\n    this.blocks.splice(index, deleteCount, block);\n\n    if (index > 0) {\n      let previousBlock = this.blocks[index - 1];\n\n      previousBlock.holder.insertAdjacentElement('afterend', block.holder);\n    } else {\n      let nextBlock = this.blocks[index + 1];\n\n      if (nextBlock) {\n        nextBlock.holder.insertAdjacentElement('beforebegin', block.holder);\n      } else {\n        this.workingArea.appendChild(block.holder);\n      }\n    }\n  }\n\n  /**\n   * Remove block\n   * @param {Number|null} index\n   */\n  remove(index) {\n    if (isNaN(index)) {\n      index = this.length - 1;\n    }\n\n    this.blocks[index].holder.remove();\n    this.blocks.splice(index, 1);\n  }\n\n  /**\n   * Remove all blocks\n   */\n  removeAll() {\n    this.workingArea.innerHTML = '';\n    this.blocks.length = 0;\n  }\n\n  /**\n   * Insert Block after passed target\n   *\n   * @todo decide if this method is necessary\n   *\n   * @param {Block} targetBlock — target after wich Block should be inserted\n   * @param {Block} newBlock — Block to insert\n   */\n  insertAfter(targetBlock, newBlock) {\n    let index = this.blocks.indexOf(targetBlock);\n\n    this.insert(index + 1, newBlock);\n  }\n\n  /**\n   * Get Block by index\n   *\n   * @param {Number} index — Block index\n   * @returns {Block}\n   */\n  get(index) {\n    return this.blocks[index];\n  }\n\n  /**\n   * Return index of passed Block\n   *\n   * @param {Block} block\n   * @returns {Number}\n   */\n  indexOf(block) {\n    return this.blocks.indexOf(block);\n  }\n\n  /**\n   * Get length of Block instances array\n   *\n   * @returns {Number}\n   */\n  get length() {\n    return this.blocks.length;\n  }\n\n  /**\n   * Get Block instances array\n   *\n   * @returns {Block[]}\n   */\n  get array() {\n    return this.blocks;\n  }\n\n  /**\n   * Get blocks html elements array\n   *\n   * @returns {HTMLElement[]}\n   */\n  get nodes() {\n    return _.array(this.workingArea.children);\n  }\n\n  /**\n   * Proxy trap to implement array-like setter\n   *\n   * @example\n   * blocks[0] = new Block(...)\n   *\n   * @param {Blocks} instance — Blocks instance\n   * @param {Number|String} index — block index\n   * @param {Block} block — Block to set\n   * @returns {Boolean}\n   */\n  static set(instance, index, block) {\n    if (isNaN(Number(index))) {\n      return false;\n    }\n\n    instance.insert(index, block);\n\n    return true;\n  }\n\n  /**\n   * Proxy trap to implement array-like getter\n   *\n   * @param {Blocks} instance — Blocks instance\n   * @param {Number|String} index — Block index\n   * @returns {Block|*}\n   */\n  static get(instance, index) {\n    if (isNaN(Number(index))) {\n      return instance[index];\n    }\n\n    return instance.get(index);\n  }\n}\n","/**\n * @class Caret\n * @classdesc Contains methods for working Caret\n *\n * Uses Range methods to manipulate with caret\n *\n * @module Caret\n *\n * @version 2.0.0\n */\n\nimport Selection from '../selection';\nimport Module from '../__module';\n\n/**\n * @typedef {Caret} Caret\n */\nexport default class Caret extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * Elements styles that can be useful for Caret Module\n   */\n  static get CSS() {\n    return {\n      shadowCaret: 'cdx-shadow-caret'\n    };\n  };\n\n  /**\n   * Allowed caret positions in input\n   *\n   * @static\n   * @returns {{START: string, END: string, DEFAULT: string}}\n   */\n  static get positions() {\n    return {\n      START: 'start',\n      END: 'end',\n      DEFAULT: 'default'\n    };\n  }\n\n  /**\n   * Method gets Block instance and puts caret to the text node with offset\n   * There two ways that method applies caret position:\n   *   - first found text node: sets at the beginning, but you can pass an offset\n   *   - last found text node: sets at the end of the node. Also, you can customize the behaviour\n   *\n   * @param {Block} block - Block class\n   * @param {String} position - position where to set caret. If default - leave default behaviour and apply offset if it's passed\n   * @param {Number} offset - caret offset regarding to the text node\n   */\n  setToBlock(block, position = Caret.positions.DEFAULT, offset = 0) {\n    const {BlockManager} = this.Editor;\n    let element;\n\n    switch(position) {\n      case Caret.positions.START:\n        element = block.firstInput;\n        break;\n      case Caret.positions.END:\n        element = block.lastInput;\n        break;\n      default:\n        element = block.currentInput;\n    }\n\n    if (!element) {\n      return;\n    }\n\n    const nodeToSet = $.getDeepestNode(element, position === Caret.positions.END);\n    const contentLength = $.getContentLength(nodeToSet);\n\n    switch (true) {\n      case position === Caret.positions.START:\n        offset = 0;\n        break;\n      case position === Caret.positions.END:\n      case offset > contentLength:\n        offset = contentLength;\n        break;\n    }\n\n    /**\n     * @todo try to fix via Promises or use querySelectorAll to not to use timeout\n     */\n    _.delay( () => {\n      this.set(nodeToSet, offset);\n    }, 20)();\n\n    BlockManager.setCurrentBlockByChildNode(block.holder);\n    BlockManager.currentBlock.currentInput = element;\n  }\n\n  /**\n   * Set caret to the current input of current Block.\n   *\n   * @param {HTMLElement} input - input where caret should be set\n   * @param {String} position - position of the caret. If default - leave default behaviour and apply offset if it's passed\n   * @param {number} offset - caret offset regarding to the text node\n   */\n  setToInput(input, position = Caret.positions.DEFAULT, offset = 0) {\n    const {currentBlock} = this.Editor.BlockManager;\n    const nodeToSet = $.getDeepestNode(input);\n\n    switch (position) {\n      case Caret.positions.START:\n        this.set(nodeToSet, 0);\n        break;\n\n      case Caret.positions.END:\n        const contentLength = $.getContentLength(nodeToSet);\n\n        this.set(nodeToSet, contentLength);\n        break;\n\n      default:\n        if (offset) {\n          this.set(nodeToSet, offset);\n        }\n    }\n\n    currentBlock.currentInput = input;\n  }\n\n  /**\n   * Creates Document Range and sets caret to the element with offset\n   * @param {Element} element - target node.\n   * @param {Number} offset - offset\n   */\n  set( element, offset = 0) {\n    const range = document.createRange(),\n      selection = Selection.get();\n\n    /** if found deepest node is native input */\n    if ($.isNativeInput(element)) {\n      element.focus();\n      element.selectionStart = element.selectionEnd = offset;\n      return;\n    }\n\n    range.setStart(element, offset);\n    range.setEnd(element, offset);\n\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n\n    /** If new cursor position is not visible, scroll to it */\n    const {top, bottom} = range.getBoundingClientRect();\n    const {innerHeight} = window;\n\n    if (top < 0) window.scrollBy(0, top);\n    if (bottom > innerHeight) window.scrollBy(0, bottom - innerHeight);\n  };\n\n  /**\n   * Set Caret to the last Block\n   * If last block is not empty, append another empty block\n   */\n  setToTheLastBlock() {\n    let lastBlock = this.Editor.BlockManager.lastBlock;\n\n    if (!lastBlock) return;\n\n    /**\n     * If last block is empty and it is an initialBlock, set to that.\n     * Otherwise, append new empty block and set to that\n     */\n    if (lastBlock.isEmpty) {\n      this.setToBlock(lastBlock);\n    } else {\n      const newBlock = this.Editor.BlockManager.insertAtEnd();\n\n      this.setToBlock(newBlock);\n    }\n  }\n\n  /**\n   * Extract content fragment of current Block from Caret position to the end of the Block\n   */\n  extractFragmentFromCaretPosition() {\n    let selection = Selection.get();\n\n    if (selection.rangeCount) {\n      const selectRange = selection.getRangeAt(0);\n      const currentBlockInput = this.Editor.BlockManager.currentBlock.currentInput;\n\n\n      selectRange.deleteContents();\n\n      if (currentBlockInput) {\n        let range = selectRange.cloneRange(true);\n\n        range.selectNodeContents(currentBlockInput);\n        range.setStart(selectRange.endContainer, selectRange.endOffset);\n        return range.extractContents();\n      }\n    }\n  }\n\n  /**\n   * Get all first-level (first child of [contenteditabel]) siblings from passed node\n   * Then you can check it for emptiness\n   *\n   * @example\n   * <div contenteditable>\n   *     <p></p>                            |\n   *     <p></p>                            | left first-level siblings\n   *     <p></p>                            |\n   *     <blockquote><a><b>adaddad</b><a><blockquote>       <-- passed node for example <b>\n   *     <p></p>                            |\n   *     <p></p>                            | right first-level siblings\n   *     <p></p>                            |\n   * </div>\n   *\n   * @return {Element[]}\n   */\n  getHigherLevelSiblings(from, direction ) {\n    let current = from,\n      siblings = [];\n\n    /**\n     * Find passed node's firs-level parent (in example - blockquote)\n     */\n    while (current.parentNode && current.parentNode.contentEditable !== 'true') {\n      current = current.parentNode;\n    }\n\n    let sibling = direction === 'left' ? 'previousSibling' : 'nextSibling';\n\n    /**\n     * Find all left/right siblings\n     */\n    while (current[sibling]) {\n      current = current[sibling];\n      siblings.push(current);\n    }\n\n    return siblings;\n  }\n\n  /**\n   * Set's caret to the next Block or Tool`s input\n   * Before moving caret, we should check if caret position is at the end of Plugins node\n   * Using {@link Dom#getDeepestNode} to get a last node and match with current selection\n   *\n   * @param {Boolean} force - force navigation even if caret is not at the end\n   *\n   * @return {Boolean}\n   */\n  navigateNext(force = false) {\n    const {currentBlock, nextContentfulBlock} = this.Editor.BlockManager;\n    const {nextInput} = currentBlock;\n\n    if (!nextContentfulBlock && !nextInput) {\n      return false;\n    }\n\n    if (force) {\n      this.setToBlock(nextContentfulBlock, Caret.positions.START);\n      return true;\n    }\n\n    if (this.isAtEnd) {\n      /** If next Tool`s input exists, focus on it. Otherwise set caret to the next Block */\n      if (!nextInput) {\n        this.setToBlock(nextContentfulBlock, Caret.positions.START);\n      } else {\n        this.setToInput(nextInput, Caret.positions.START);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Set's caret to the previous Tool`s input or Block\n   * Before moving caret, we should check if caret position is start of the Plugins node\n   * Using {@link Dom#getDeepestNode} to get a last node and match with current selection\n   *\n   * @param {Boolean} force - force navigation even if caret is not at the start\n   *\n   * @return {Boolean}\n   */\n  navigatePrevious(force = false) {\n    const {currentBlock, previousContentfulBlock} = this.Editor.BlockManager;\n    const {previousInput} = currentBlock || {};\n\n    if (!previousContentfulBlock && !previousInput) {\n      return false;\n    }\n\n    if (force) {\n      this.setToBlock( previousContentfulBlock, Caret.positions.END );\n    }\n\n    if (this.isAtStart) {\n      /** If previous Tool`s input exists, focus on it. Otherwise set caret to the previous Block */\n      if (!previousInput) {\n        this.setToBlock( previousContentfulBlock, Caret.positions.END );\n      } else {\n        this.setToInput(previousInput, Caret.positions.END);\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Get's deepest first node and checks if offset is zero\n   * @return {boolean}\n   */\n  get isAtStart() {\n    /**\n     * Don't handle ranges\n     */\n    if (!Selection.isCollapsed) {\n      return false;\n    }\n\n    let selection = Selection.get(),\n      anchorNode = selection.anchorNode,\n      firstNode = $.getDeepestNode(this.Editor.BlockManager.currentBlock.currentInput);\n\n    /** In case lastNode is native input */\n    if ($.isNativeInput(firstNode)) {\n      return firstNode.selectionEnd === 0;\n    }\n\n    /**\n     * Workaround case when caret in the text like \" |Hello!\"\n     * selection.anchorOffset is 1, but real caret visible position is 0\n     * @type {number}\n     */\n    let firstLetterPosition = anchorNode.textContent.search(/\\S/);\n\n    if (firstLetterPosition === -1) { // empty text\n      firstLetterPosition = 0;\n    }\n\n    /**\n     * In case of\n     * <div contenteditable>\n     *     <p><b></b></p>   <-- first (and deepest) node is <b></b>\n     *     |adaddad         <-- anchor node\n     * </div>\n     */\n    if ($.isEmpty(firstNode)) {\n      let leftSiblings = this.getHigherLevelSiblings(anchorNode, 'left'),\n        nothingAtLeft = leftSiblings.every( node => $.isEmpty(node) );\n\n\n\n      if (nothingAtLeft && selection.anchorOffset === firstLetterPosition) {\n        return true;\n      }\n    }\n\n    /**\n     * We use <= comparison for case:\n     * \"| Hello\"  <--- selection.anchorOffset is 0, but firstLetterPosition is 1\n     */\n    return firstNode === null || anchorNode === firstNode && selection.anchorOffset <= firstLetterPosition;\n  }\n\n  /**\n   * Get's deepest last node and checks if offset is last node text length\n   * @return {boolean}\n   */\n  get isAtEnd() {\n    /**\n     * Don't handle ranges\n     */\n    if (!Selection.isCollapsed) {\n      return false;\n    }\n\n    let selection = Selection.get(),\n      anchorNode = selection.anchorNode,\n      lastNode = $.getDeepestNode(this.Editor.BlockManager.currentBlock.currentInput, true);\n\n    /** In case lastNode is native input */\n    if ($.isNativeInput(lastNode)) {\n      return lastNode.selectionEnd === lastNode.value.length;\n    }\n\n    /**\n     * In case of\n     * <div contenteditable>\n     *     adaddad|         <-- anchor node\n     *     <p><b></b></p>   <-- first (and deepest) node is <b></b>\n     * </div>\n     */\n    if ($.isEmpty(lastNode)) {\n      let leftSiblings = this.getHigherLevelSiblings(anchorNode, 'right'),\n        nothingAtRight = leftSiblings.every( node => $.isEmpty(node) );\n\n      if (nothingAtRight && selection.anchorOffset === anchorNode.textContent.length) {\n        return true;\n      }\n    }\n\n    /**\n     * Workaround case:\n     * hello |     <--- anchorOffset will be 5, but textContent.length will be 6.\n     * Why not regular .trim():\n     *  in case of ' hello |' trim() will also remove space at the beginning, so length will be lower than anchorOffset\n     */\n    let rightTrimmedText = lastNode.textContent.replace(/\\s+$/, '');\n\n    /**\n     * We use >= comparison for case:\n     * \"Hello |\"  <--- selection.anchorOffset is 7, but rightTrimmedText is 6\n     */\n    return anchorNode === lastNode && selection.anchorOffset >= rightTrimmedText.length;\n  }\n\n  /**\n   * Inserts shadow element after passed element where caret can be placed\n   * @param {Node} element\n   */\n  createShadow(element) {\n    let shadowCaret = document.createElement('span');\n\n    shadowCaret.classList.add(Caret.CSS.shadowCaret);\n    element.insertAdjacentElement('beforeEnd', shadowCaret);\n  }\n\n  /**\n   * Restores caret position\n   * @param {Node} element\n   */\n  restoreCaret(element) {\n    let shadowCaret = element.querySelector(`.${Caret.CSS.shadowCaret}`);\n\n    if (!shadowCaret) {\n      return;\n    }\n\n    /**\n     * After we set the caret to the required place\n     * we need to clear shadow caret\n     *\n     * - make new range\n     * - select shadowed span\n     * - use extractContent to remove it from DOM\n     */\n    let sel = new Selection();\n\n    sel.expandToTag(shadowCaret);\n\n    setTimeout(() => {\n      let newRange = document.createRange();\n\n      newRange.selectNode(shadowCaret);\n      newRange.extractContents();\n    }, 50);\n  }\n}\n","import SelectionUtils from '../selection';\n\nimport Module from '../__module';\n\nexport default class DragNDrop extends Module {\n\n  /**\n   * If drag has been started at editor, we save it\n   *\n   * @type Boolean\n   * @private\n   */\n  private isStartedAtEditor = false;\n\n  /**\n   * Bind events\n   *\n   * @private\n   */\n  public prepare(): void {\n    this.bindEvents();\n  }\n\n  /**\n   * Add drag events listeners to editor zone\n   * @private\n   */\n  private bindEvents(): void {\n    this.Editor.Listeners.on(this.Editor.UI.nodes.holder, 'drop', this.processDrop, true);\n\n    this.Editor.Listeners.on(this.Editor.UI.nodes.holder, 'dragstart', (dragEvent: DragEvent) => {\n\n      if (SelectionUtils.isAtEditor && !SelectionUtils.isCollapsed) {\n        this.isStartedAtEditor = true;\n      }\n\n      this.Editor.InlineToolbar.close();\n    });\n\n    /* Prevent default browser behavior to allow drop on non-contenteditable elements */\n    this.Editor.Listeners.on(this.Editor.UI.nodes.holder, 'dragover', (e) => e.preventDefault(), true);\n  }\n\n  /**\n   * Handle drop event\n   *\n   * @param {DragEvent} dropEvent\n   */\n  private processDrop = async (dropEvent: DragEvent): Promise<void> => {\n    const {\n      BlockManager,\n      Paste,\n    } = this.Editor;\n\n    dropEvent.preventDefault();\n\n    BlockManager.blocks.forEach((block) => block.dropTarget = false);\n\n    if (SelectionUtils.isAtEditor && !SelectionUtils.isCollapsed && this.isStartedAtEditor) {\n      document.execCommand('delete');\n    }\n\n    this.isStartedAtEditor = false;\n\n    /**\n     * Try to set current block by drop target.\n     * If drop target (error will be thrown) is not part of the Block, set last Block as current.\n     */\n    try {\n      BlockManager.setCurrentBlockByChildNode(dropEvent.target, 'end');\n    } catch (e) {\n      BlockManager.setCurrentBlockByChildNode(BlockManager.lastBlock.holder, 'end');\n    }\n\n    Paste.processDataTransfer(dropEvent.dataTransfer, true);\n  }\n}\n","import Module from '../__module';\n\n/**\n * @module eventDispatcher\n *\n * Has two important methods:\n *    - {Function} on - appends subscriber to the event. If event doesn't exist - creates new one\n *    - {Function} emit - fires all subscribers with data\n *    - {Function off - unsubsribes callback\n *\n * @version 1.0.0\n *\n * @typedef {Events} Events\n * @property {Object} subscribers - all subscribers grouped by event name\n */\nexport default class Events extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n    this.subscribers = {};\n  }\n\n  /**\n   * Subscribe any event on callback\n   *\n   * @param {String} eventName - event name\n   * @param {Function} callback - subscriber\n   */\n  on(eventName, callback) {\n    if (!(eventName in this.subscribers)) {\n      this.subscribers[eventName] = [];\n    }\n\n    // group by events\n    this.subscribers[eventName].push(callback);\n  }\n\n  /**\n   * Emit callbacks with passed data\n   *\n   * @param {String} eventName - event name\n   * @param {Object} data - subscribers get this data when they were fired\n   */\n  emit(eventName, data) {\n    if (!this.subscribers[eventName]) {\n      return;\n    }\n\n    this.subscribers[eventName].reduce(function (previousData, currentHandler) {\n      let newData = currentHandler(previousData);\n\n      return newData ? newData : previousData;\n    }, data);\n  }\n\n  /**\n   * Unsubsribe callback from event\n   *\n   * @param eventName\n   * @param callback\n   */\n  off(eventName, callback) {\n    for(let i = 0; i < this.subscribers[eventName].length; i++) {\n      if (this.subscribers[eventName][i] === callback) {\n        delete this.subscribers[eventName][i];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Destroyer\n   * clears subsribers list\n   */\n  destroy() {\n    this.subscribers = null;\n  }\n}\n","/**\n * Codex Editor Listeners module\n *\n * @module Listeners\n *\n * Module-decorator for event listeners assignment\n *\n * @author Codex Team\n * @version 2.0.0\n */\nimport Module from '../__module';\n\n/**\n * @typedef {Listeners} Listeners\n * @property {Array} allListeners\n */\nexport default class Listeners extends Module {\n  /**\n   * @constructor\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n    this.allListeners = [];\n  }\n\n  /**\n   * Assigns event listener on element\n   *\n   * @param {Element} element - DOM element that needs to be listened\n   * @param {String} eventType - event type\n   * @param {Function} handler - method that will be fired on event\n   * @param {Boolean} useCapture - use event bubbling\n   */\n  on(element, eventType, handler, useCapture = false) {\n    let assignedEventData = {\n      element,\n      eventType,\n      handler,\n      useCapture\n    };\n\n    let alreadyExist = this.findOne(element, eventType, handler);\n\n    if (alreadyExist) return;\n\n    this.allListeners.push(assignedEventData);\n    element.addEventListener(eventType, handler, useCapture);\n  }\n\n  /**\n   * Removes event listener from element\n   *\n   * @param {Element} element - DOM element that we removing listener\n   * @param {String} eventType - event type\n   * @param {Function} handler - remove handler, if element listens several handlers on the same event type\n   * @param {Boolean} useCapture - use event bubbling\n   */\n  off(element, eventType, handler, useCapture = false) {\n    let existingListeners = this.findAll(element, eventType, handler);\n\n    for (let i = 0; i < existingListeners.length; i++) {\n      let index = this.allListeners.indexOf(existingListeners[i]);\n\n      if (index > 0) {\n        this.allListeners.splice(index, 1);\n      }\n    }\n\n    element.removeEventListener(eventType, handler, useCapture);\n  }\n\n  /**\n   * Search method: looks for listener by passed element\n   * @param {Element} element - searching element\n   * @returns {Array} listeners that found on element\n   */\n  findByElement(element) {\n    let listenersOnElement = [];\n\n    for (let i = 0; i < this.allListeners.length; i++) {\n      let listener = this.allListeners[i];\n\n      if (listener.element === element) {\n        listenersOnElement.push(listener);\n      }\n    }\n\n    return listenersOnElement;\n  }\n\n  /**\n   * Search method: looks for listener by passed event type\n   * @param {String} eventType\n   * @return {Array} listeners that found on element\n   */\n  findByType(eventType) {\n    let listenersWithType = [];\n\n    for (let i = 0; i < this.allListeners.length; i++) {\n      let listener = this.allListeners[i];\n\n      if (listener.type === eventType) {\n        listenersWithType.push(listener);\n      }\n    }\n\n    return listenersWithType;\n  }\n\n  /**\n   * Search method: looks for listener by passed handler\n   * @param {Function} handler\n   * @return {Array} listeners that found on element\n   */\n  findByHandler(handler) {\n    let listenersWithHandler = [];\n\n    for (let i = 0; i < this.allListeners.length; i++) {\n      let listener = this.allListeners[i];\n\n      if (listener.handler === handler) {\n        listenersWithHandler.push(listener);\n      }\n    }\n\n    return listenersWithHandler;\n  }\n\n  /**\n   * @param {Element} element\n   * @param {String} eventType\n   * @param {Function} handler\n   * @return {Element|null}\n   */\n  findOne(element, eventType, handler) {\n    let foundListeners = this.findAll(element, eventType, handler);\n\n    return foundListeners.length > 0 ? foundListeners[0] : null;\n  }\n\n  /**\n   * @param {Element} element\n   * @param {String} eventType\n   * @param {Function} handler\n   * @return {Array}\n   */\n  findAll(element, eventType, handler) {\n    let found,\n      foundByElements = element ? this.findByElement(element) : [];\n      // foundByEventType = eventType ? this.findByType(eventType) : [],\n      // foundByHandler = handler ? this.findByHandler(handler) : [];\n\n    if (element && eventType && handler) {\n      found = foundByElements.filter( event => event.eventType === eventType && event.handler === handler );\n    } else if (element && eventType) {\n      found = foundByElements.filter( event => event.eventType === eventType);\n    } else {\n      found = foundByElements;\n    }\n\n    return found;\n  }\n\n  /**\n   * Removes all listeners\n   */\n  removeAll() {\n    this.allListeners.map( (current) => {\n      current.element.removeEventListener(current.eventType, current.handler);\n    });\n\n    this.allListeners = [];\n  }\n}\n","/**\n * @module ModificationsObserver\n *\n * Handles any mutations\n * and gives opportunity to handle outside\n */\n\nimport IEditorConfig from '../interfaces/editor-config';\n\nimport Module from '../__module';\ndeclare const _: any;\n\nexport default class ModificationsObserver extends Module {\n\n  /**\n   * Debounce Timer\n   * @type {number}\n   */\n  public static readonly DebounceTimer = 450;\n\n  /**\n   * Used to prevent several mutation callback execution\n   * @type {Function}\n   */\n  private mutationDebouncer = _.debounce( () => {\n    this.config.onChange.call();\n  }, ModificationsObserver.DebounceTimer);\n\n  /**\n   * Constructor\n   * @param {IEditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * Clear timeout and set null to mutationDebouncer property\n   */\n  public destroy() {\n    this.mutationDebouncer = null;\n  }\n\n  /**\n   * Preparation method\n   * @return {Promise<void>}\n   */\n  public async prepare(): Promise<void> {\n    /**\n     * wait till Browser render Editor's Blocks\n     */\n    window.setTimeout( () => {\n      this.setObserver();\n    }, 1000);\n  }\n\n  /**\n   * setObserver\n   *\n   * sets 'DOMSubtreeModified' listener on Editor's UI.nodes.redactor\n   * so that User can handle outside from API\n   */\n  private setObserver(): void {\n    const {Listeners, UI} = this.Editor;\n\n    /**\n     * Set Listener to the Editor <div> element that holds only Blocks\n     */\n    Listeners.on(UI.nodes.redactor, 'DOMSubtreeModified', () => {\n      this.mutationDebouncer();\n    }, false);\n  }\n}\n","import IBlockToolData from '../interfaces/tools/block-tool';\nimport IEditorConfig from '../interfaces/editor-config';\nimport CaretClass from './caret';\nimport SelectionUtils from '../selection';\n\nimport Module from '../__module';\ndeclare const $: any;\ndeclare const _: any;\n\n/**\n * Tag substitute object.\n *\n * @param {string} tool - name of related Tool\n * @param {Function} handler - callback to handle pasted element\n */\ninterface ITagSubstitute {\n  tool: string;\n  handler: (element: HTMLElement) => IBlockToolData;\n}\n\n/**\n * Pattern substitute object.\n *\n * @param {string} key - pattern`s key\n * @param {RegExp} pattern - pasted pattern\n * @param {Function} handler - callback to handle pasted pattern\n * @param {string} tool - name of related Tool\n */\ninterface IPatternSubstitute {\n  key: string;\n  pattern: RegExp;\n  handler: (text: string, key: string) => IBlockToolData;\n  tool: string;\n}\n\n/**\n * Files` types substitutions object.\n *\n * @param {string[]} extensions - array of extenstions Tool can handle\n * @param {string[]} mimeTypes - array of MIME types Tool can handle\n * @param {Function} handler - callback to handle pasted File\n */\ninterface IFilesSubstitution {\n  extensions: string[];\n  mimeTypes: string[];\n  handler: (file: File) => IBlockToolData;\n}\n\n/**\n * Processed paste data object.\n *\n * @param {string} tool - name of related Tool\n * @param {HTMLElement} content - processed pasted content\n * @param {boolean} isBlock - true if content should be inserted as new Block\n * @param {Function} handler - callback that returns pasted data in IBlockToolData format\n */\ninterface IPasteData {\n  tool: string;\n  content: HTMLElement;\n  isBlock: boolean;\n  handler: (content: HTMLElement|string, patten?: RegExp) => IBlockToolData;\n}\n\n/**\n * Tool onPaste configuration object\n */\ninterface IPasteConfig {\n  tags?: string[];\n  handler?: (element: HTMLElement) => IBlockToolData;\n  patterns?: {[key: string]: RegExp};\n  patternHandler?: (text: string, key: string) => IBlockToolData;\n  files?: {extensions?: string[], mimeTypes?: string[]};\n  fileHandler?: (file: File) => IBlockToolData;\n}\n\n/**\n * @class Paste\n * @classdesc Contains methods to handle paste on editor\n *\n * @module Paste\n *\n * @version 2.0.0\n */\nexport default class Paste extends Module {\n\n  /** If string`s length is greater than this number we don't check paste patterns */\n  public static readonly PATTERN_PROCESSING_MAX_LENGTH = 450;\n\n  /**\n   * Tags` substitutions parameters\n   */\n  private toolsTags: {[tag: string]: ITagSubstitute} = {};\n\n  /** Patterns` substitutions parameters */\n  private toolsPatterns: IPatternSubstitute[] = [];\n\n  /** Files` substitutions parameters */\n  private toolsFiles: {\n    [tool: string]: IFilesSubstitution,\n  } = {};\n\n  /**\n   * @constructor\n   * @param {IEditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * Set onPaste callback and collect tools` paste configurations\n   *\n   * @public\n   */\n  public async prepare(): Promise<void> {\n    this.setCallback();\n    this.processTools();\n  }\n\n  /**\n   * Handle pasted or dropped data transfer object\n   *\n   * @param {DataTransfer} dataTransfer - pasted or dropped data transfer object\n   */\n  public async processDataTransfer(dataTransfer: DataTransfer, isDragNDrop = false): Promise<void> {\n    const { Sanitizer } = this.Editor;\n\n    if (dataTransfer.types.includes('Files')) {\n      await this.processFiles(dataTransfer.items);\n      return;\n    }\n\n    const plainData = dataTransfer.getData('text/plain');\n    let htmlData  = dataTransfer.getData('text/html');\n\n    /**\n     *  If text was drag'n'dropped, wrap content with P tag to insert it as the new Block\n     */\n    if (isDragNDrop && plainData.trim() && htmlData.trim()) {\n      htmlData = '<p>' + ( htmlData.trim() ? htmlData : plainData ) + '</p>';\n    }\n\n    /** Add all tags that can be substituted to sanitizer configuration */\n    const toolsTags = Object.keys(this.toolsTags).reduce((result, tag) => {\n      result[tag.toLowerCase()] = true;\n\n      return result;\n    }, {});\n\n    const customConfig = {tags: Object.assign({}, toolsTags, Sanitizer.defaultConfig.tags)};\n    const cleanData = Sanitizer.clean(htmlData, customConfig);\n\n    /** If there is no HTML or HTML string is equal to plain one, process it as plain text */\n    if (!cleanData.trim() || cleanData.trim() === plainData || !$.isHTMLString(cleanData)) {\n      await this.processText(plainData);\n    } else {\n      await this.processText(cleanData, true);\n    }\n  }\n\n  /**\n   * Set onPaste callback handler\n   */\n  private setCallback(): void {\n    const {Listeners, UI} = this.Editor;\n\n    Listeners.on(UI.nodes.redactor, 'paste', this.handlePasteEvent);\n  }\n\n  /**\n   * Get and process tool`s paste configs\n   */\n  private processTools(): void {\n    const tools = this.Editor.Tools.blockTools;\n\n    Object.entries(tools).forEach(this.processTool);\n  }\n\n  /**\n   * Process paste config for each tool\n   *\n   * @param {string} name\n   * @param {Tool} tool\n   */\n  private processTool = ([name, tool]) => {\n    try {\n      const toolPasteConfig = tool.onPaste || {};\n\n      this.getTagsConfig(name, toolPasteConfig);\n      this.getFilesConfig(name, toolPasteConfig);\n      this.getPatternsConfig(name, toolPasteConfig);\n    } catch (e) {\n      _.log(\n        `Paste handling for «${name}» Tool hasn't been set up because of the error`,\n        'warn',\n        e,\n      );\n    }\n  }\n\n  /**\n   * Get tags to substitute by Tool\n   *\n   * @param {string} name - Tool name\n   * @param {IPasteConfig} toolPasteConfig - Tool onPaste configuration\n   */\n  private getTagsConfig(name: string, toolPasteConfig: IPasteConfig): void {\n    if (this.config.initialBlock === name && !toolPasteConfig.handler) {\n      _.log(\n        `«${name}» Tool must provide a paste handler.`,\n        'warn',\n      );\n    }\n\n    if (!toolPasteConfig.handler) {\n      return;\n    }\n\n    if (typeof toolPasteConfig.handler !== 'function') {\n      _.log(\n        `Paste handler for «${name}» Tool should be a function.`,\n        'warn',\n      );\n\n      return;\n    }\n\n    const tags = toolPasteConfig.tags || [];\n\n    tags.forEach((tag) => {\n      if (this.toolsTags.hasOwnProperty(tag)) {\n        _.log(\n          `Paste handler for «${name}» Tool on «${tag}» tag is skipped ` +\n          `because it is already used by «${this.toolsTags[tag].tool}» Tool.`,\n          'warn',\n        );\n        return;\n      }\n\n      this.toolsTags[tag.toUpperCase()] = {\n        handler: toolPasteConfig.handler,\n        tool: name,\n      };\n    });\n  }\n\n  /**\n   * Get files` types and extensions to substitute by Tool\n   *\n   * @param {string} name - Tool name\n   * @param {IPasteConfig} toolPasteConfig - Tool onPaste configuration\n   */\n  private getFilesConfig(name: string, toolPasteConfig: IPasteConfig): void {\n\n    const {fileHandler, files = {}} = toolPasteConfig;\n    let {extensions, mimeTypes} = files;\n\n    if (!fileHandler || (!extensions && !mimeTypes)) {\n      return;\n    }\n\n    if (typeof fileHandler !== 'function') {\n      _.log(`Drop handler for «${name}» Tool should be a function.`);\n      return;\n    }\n\n    if (extensions && !Array.isArray(extensions)) {\n      _.log(`«extensions» property of the onDrop config for «${name}» Tool should be an array`);\n      extensions = [];\n    }\n\n    if (mimeTypes && !Array.isArray(mimeTypes)) {\n      _.log(`«mimeTypes» property of the onDrop config for «${name}» Tool should be an array`);\n      mimeTypes = [];\n    }\n\n    if (mimeTypes) {\n      mimeTypes = mimeTypes.filter((type) => {\n        if (!_.isValidMimeType(type)) {\n          _.log(`MIME type value «${type}» for the «${name}» Tool is not a valid MIME type`, 'warn');\n          return false;\n        }\n\n        return true;\n      });\n    }\n\n    this.toolsFiles[name] = {\n      extensions: extensions || [],\n      mimeTypes: mimeTypes || [],\n      handler: fileHandler,\n    };\n  }\n\n  /**\n   * Get RegExp patterns to substitute by Tool\n   *\n   * @param {string} name - Tool name\n   * @param {IPasteConfig} toolPasteConfig - Tool onPaste configuration\n   */\n  private getPatternsConfig(name: string, toolPasteConfig: IPasteConfig): void {\n    if (!toolPasteConfig.patternHandler || _.isEmpty(toolPasteConfig.patterns)) {\n      return;\n    }\n\n    if (typeof toolPasteConfig.patternHandler !== 'function') {\n      _.log(\n        `Pattern parser for «${name}» Tool should be a function.`,\n        'warn',\n      );\n\n      return;\n    }\n\n    Object.entries(toolPasteConfig.patterns).forEach(([key, pattern]: [string, RegExp]) => {\n      /** Still need to validate pattern as it provided by user */\n      if (!(pattern instanceof RegExp)) {\n        _.log(\n          `Pattern ${pattern} for «${name}» Tool is skipped because it should be a Regexp instance.`,\n          'warn',\n        );\n      }\n\n      this.toolsPatterns.push({\n        key,\n        pattern,\n        handler: toolPasteConfig.patternHandler,\n        tool: name,\n      });\n    });\n  }\n\n  /**\n   * Check if browser behavior suits better\n   *\n   * @param {EventTarget} element - element where content has been pasted\n   * @returns {boolean}\n   */\n  private isNativeBehaviour(element: EventTarget): boolean {\n    const {Editor: {BlockManager}} = this;\n\n    if ( $.isNativeInput(element) ) {\n      return true;\n    }\n\n    const block = BlockManager.getBlock(element);\n\n    return !block;\n  }\n\n  /**\n   * Check if Editor should process pasted data and pass data transfer object to handler\n   *\n   * @param {ClipboardEvent} event\n   */\n  private handlePasteEvent = async (event: ClipboardEvent): Promise<void> => {\n    const {\n      Editor: {Sanitizer, BlockManager, Tools, Caret},\n    } = this;\n\n    /** If target is native input or is not Block, use browser behaviour */\n    if (\n      this.isNativeBehaviour(event.target) && !event.clipboardData.types.includes('Files')\n    ) {\n      return;\n    }\n\n    event.preventDefault();\n    this.processDataTransfer(event.clipboardData);\n  }\n\n  /**\n   * Get files from data transfer object and insert related Tools\n   *\n   * @param {DataTransferItemList} items - pasted or dropped items\n   */\n  private async processFiles(items: DataTransferItemList) {\n    const {BlockManager} = this.Editor;\n\n    let dataToInsert: Array<{type: string, data: IBlockToolData}>;\n\n    dataToInsert = await Promise.all(\n      Array\n        .from(items)\n        .map((item) => this.processFile(item)),\n    );\n    dataToInsert = dataToInsert.filter((data) => !!data);\n\n    dataToInsert.forEach(\n      (data, i) => {\n        if (i === 0 && BlockManager.currentBlock && BlockManager.currentBlock.isEmpty) {\n          BlockManager.replace(data.type, data.data);\n          return;\n        }\n\n        BlockManager.insert(data.type, data.data);\n      },\n    );\n  }\n\n  /**\n   * Get information about file and find Tool to handle it\n   *\n   * @param {DataTransferItem} item\n   */\n  private async processFile(item: DataTransferItem) {\n    if (item.kind === 'string') {\n      return;\n    }\n\n    const file = item.getAsFile();\n    const extension = _.getFileExtension(file);\n\n    const foundConfig = Object\n      .entries(this.toolsFiles)\n      .find(([toolName, {mimeTypes, extensions}]) => {\n        const [fileType, fileSubtype] = file.type.split('/');\n\n        const foundExt = extensions.find((ext) => ext.toLowerCase() === extension.toLowerCase());\n        const foundMimeType = mimeTypes.find((mime) => {\n          const [type, subtype] = mime.split('/');\n\n          return type === fileType && (subtype === fileSubtype || subtype === '*');\n        });\n\n        return !!foundExt || !!foundMimeType;\n      });\n\n    if (!foundConfig) {\n      return;\n    }\n\n    const [tool, {handler}] = foundConfig;\n    return {\n      data: await handler(file),\n      type: tool,\n    };\n  }\n\n  /**\n   * Process pasted text and divide them into Blocks\n   *\n   * @param {string} data - text to process. Can be HTML or plain.\n   * @param {boolean} isHTML - if passed string is HTML, this parameter should be true\n   */\n  private async processText(data: string, isHTML: boolean = false) {\n    const {Caret, BlockManager} = this.Editor;\n    const dataToInsert = isHTML ? this.processHTML(data) : this.processPlain(data);\n\n    if (!dataToInsert.length) {\n      return;\n    }\n\n    if (dataToInsert.length === 1 && !dataToInsert[0].isBlock) {\n      this.processSingleBlock(dataToInsert.pop());\n      return;\n    }\n\n    /**\n     * If caret not at the end of of the Block and there is no selection,\n     * we split the Block and insert content at the middle.\n     */\n    if (SelectionUtils.isAtEditor && !Caret.isAtEnd && SelectionUtils.isCollapsed) {\n      this.splitBlock();\n    }\n\n    await Promise.all(dataToInsert.map(\n      async (content, i) => await this.insertBlock(content, i === 0),\n    ));\n\n    Caret.setToBlock(BlockManager.currentBlock, CaretClass.positions.END);\n  }\n\n  /**\n   * Split HTML string to blocks and return it as array of Block data\n   *\n   * @param {string} innerHTML\n   * @returns {IPasteData[]}\n   */\n  private processHTML(innerHTML: string): IPasteData[] {\n    const {Tools, Sanitizer} = this.Editor,\n      initialTool = this.config.initialBlock,\n      wrapper = $.make('DIV');\n\n    wrapper.innerHTML = innerHTML;\n\n    const nodes = this.getNodes(wrapper);\n\n    return nodes\n      .map((node) => {\n        let content, tool = initialTool, isBlock = false;\n\n        switch (node.nodeType) {\n          /** If node is a document fragment, use temp wrapper to get innerHTML */\n          case Node.DOCUMENT_FRAGMENT_NODE:\n            content = $.make('div');\n            content.appendChild(node);\n            break;\n\n          /** If node is an element, then there might be a substitution */\n          case Node.ELEMENT_NODE:\n            content = node as HTMLElement;\n            isBlock = true;\n\n            if (this.toolsTags[content.tagName]) {\n              tool = this.toolsTags[content.tagName].tool;\n            }\n            break;\n        }\n\n        const {handler, tags} = Tools.blockTools[tool].onPaste;\n\n        const toolTags = tags.reduce((result, tag) => {\n          result[tag.toLowerCase()] = {};\n\n          return result;\n        }, {});\n        const customConfig = {tags: Object.assign({}, toolTags, Sanitizer.defaultConfig.tags)};\n\n        content.innerHTML = Sanitizer.clean(content.innerHTML, customConfig);\n\n        return {content, isBlock, handler, tool};\n      })\n      .filter((data) => !$.isNodeEmpty(data.content) || $.isSingleTag(data.content));\n  }\n\n  /**\n   * Split plain text by new line symbols and return it as array of Block data\n   *\n   * @param {string} plain\n   * @returns {IPasteData[]}\n   */\n  private processPlain(plain: string): IPasteData[] {\n    const {initialBlock} = this.config as {initialBlock: string},\n      {Tools} = this.Editor;\n\n    if (!plain) {\n      return [];\n    }\n\n    const tool = initialBlock,\n      handler = Tools.blockTools[tool].onPaste.handler;\n\n    return plain\n      .split(/\\r?\\n/)\n      .filter((text) => text.trim())\n      .map((text) => {\n        const content = $.make('div');\n\n        content.innerHTML = text;\n\n        return {content, tool, isBlock: false, handler};\n      });\n  }\n\n  /**\n   * Process paste to single Block:\n   * 1. Find patterns` matches\n   * 2. Insert new block if it is not the same type as current one\n   * 3. Just insert text if there is no substitutions\n   *\n   * @param {IPasteData} dataToInsert\n   */\n  private async processSingleBlock(dataToInsert: IPasteData): Promise<void> {\n    const initialTool = this.config.initialBlock,\n      {BlockManager, Caret} = this.Editor,\n      {content, tool} = dataToInsert;\n\n    if (tool === initialTool && content.textContent.length < Paste.PATTERN_PROCESSING_MAX_LENGTH) {\n      const blockData = await this.processPattern(content.textContent);\n\n      if (blockData) {\n        this.splitBlock();\n        let insertedBlock;\n\n        if (BlockManager.currentBlock && BlockManager.currentBlock.isEmpty) {\n          insertedBlock = BlockManager.replace(blockData.tool, blockData.data);\n        } else {\n          insertedBlock = BlockManager.insert(blockData.tool, blockData.data);\n        }\n        Caret.setToBlock(insertedBlock, CaretClass.positions.END);\n        return;\n      }\n    }\n\n    /** If there is no pattern substitute - insert string as it is */\n    document.execCommand('insertHTML', false, content.innerHTML);\n  }\n\n  /**\n   * Get patterns` matches\n   *\n   * @param {string} text\n   * @returns Promise<{data: IBlockToolData, tool: string}>\n   */\n  private async processPattern(text: string): Promise<{data: IBlockToolData, tool: string}> {\n    const pattern =  this.toolsPatterns.find((substitute) => {\n      const execResult = substitute.pattern.exec(text);\n\n      if (!execResult) {\n        return false;\n      }\n\n      return text === execResult.shift();\n    });\n\n    const data = pattern && await pattern.handler(text, pattern.key);\n\n    return data && {\n      data,\n      tool: pattern.tool,\n    };\n  }\n\n  /**\n   *\n   * @param {IPasteData} data\n   * @param {Boolean} canReplaceCurrentBlock - if true and is current Block is empty, will replace current Block\n   * @returns {Promise<void>}\n   */\n  private async insertBlock(data: IPasteData, canReplaceCurrentBlock: boolean = false): Promise<void> {\n    const blockData = await data.handler(data.content),\n      {BlockManager, Caret} = this.Editor,\n      {currentBlock} = BlockManager;\n\n    if (canReplaceCurrentBlock && currentBlock && currentBlock.isEmpty) {\n      BlockManager.replace(data.tool, blockData);\n      return;\n    }\n\n    const Block = BlockManager.insert(data.tool, blockData);\n\n    Caret.setToBlock(Block);\n  }\n\n  /**\n   * Split current block if paste isn't in the end of the block\n   */\n  private splitBlock() {\n    const {BlockManager, Caret} = this.Editor;\n\n    if (!BlockManager.currentBlock) {\n      return;\n    }\n\n    /** If we paste into middle of the current block:\n     *  1. Split\n     *  2. Navigate to the first part\n     */\n    if (!BlockManager.currentBlock.isEmpty && !Caret.isAtEnd) {\n      BlockManager.split();\n      BlockManager.currentBlockIndex--;\n    }\n  }\n\n  /**\n   * Recursively divide HTML string to two types of nodes:\n   * 1. Block element\n   * 2. Document Fragments contained text and markup tags like a, b, i etc.\n   *\n   * @param {Node} wrapper\n   * @returns {Node[]}\n   */\n  private getNodes(wrapper: Node): Node[] {\n    const children = Array.from(wrapper.childNodes),\n      tags = Object.keys(this.toolsTags);\n\n    const reducer = (nodes: Node[], node: Node): Node[] => {\n      if ($.isEmpty(node) && !$.isSingleTag(node as HTMLElement)) {\n        return nodes;\n      }\n\n      const lastNode = nodes[nodes.length - 1];\n\n      let destNode: Node = new DocumentFragment();\n\n      if (lastNode && $.isFragment(lastNode)) {\n        destNode = nodes.pop();\n      }\n\n      switch (node.nodeType) {\n        /**\n         * If node is HTML element:\n         * 1. Check if it is inline element\n         * 2. Check if it contains another block or substitutable elements\n         */\n        case Node.ELEMENT_NODE:\n          const element = node as HTMLElement;\n\n          /** Append inline elements to previous fragment */\n          if (\n            !$.blockElements.includes(element.tagName.toLowerCase()) &&\n            !tags.includes(element.tagName)\n          ) {\n            destNode.appendChild(element);\n            return [...nodes, destNode];\n          }\n\n          if (tags.includes(element.tagName) || (\n              $.blockElements.includes(element.tagName.toLowerCase()) &&\n              Array.from(element.children).every(\n                ({tagName}) => !$.blockElements.includes(tagName.toLowerCase()),\n              )\n            )\n          ) {\n            return [...nodes, element];\n          }\n          break;\n\n        /**\n         * If node is text node, wrap it with DocumentFragment\n         */\n        case Node.TEXT_NODE:\n          destNode.appendChild(node);\n          return [...nodes, destNode];\n\n        default:\n          return [...nodes, destNode];\n      }\n\n      return [...nodes, ...Array.from(node.childNodes).reduce(reducer, [])];\n    };\n\n    return children.reduce(reducer, []);\n  }\n}\n","import Module from '../__module';\n\n/**\n * Codex Editor Renderer Module\n *\n * @module Renderer\n * @author CodeX Team\n *\n * @version 2.0.0\n */\nexport default class Renderer extends Module {\n  /**\n   * @constructor\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * @typedef {Object} RendererBlocks\n   * @property {String} type - tool name\n   * @property {Object} data - tool data\n   */\n\n  /**\n   * @example\n   *\n   * blocks: [\n   *   {\n   *     type : 'paragraph',\n   *     data : {\n   *       text : 'Hello from Codex!'\n   *     }\n   *   },\n   *   {\n   *     type : 'paragraph',\n   *     data : {\n   *       text : 'Leave feedback if you like it!'\n   *     }\n   *   },\n   * ]\n   *\n   */\n\n  /**\n   * Make plugin blocks from array of plugin`s data\n   * @param {RendererBlocks[]} blocks\n   */\n  render(blocks) {\n    let chainData = [];\n\n    for (let i = 0; i < blocks.length; i++) {\n      chainData.push({\n        function: () => this.insertBlock(blocks[i])\n      });\n    }\n\n    return _.sequence(chainData);\n  }\n\n  /**\n   * Get plugin instance\n   * Add plugin instance to BlockManager\n   * Insert block to working zone\n   *\n   * @param {Object} item\n   * @returns {Promise.<T>}\n   * @private\n   */\n  insertBlock(item) {\n    let tool = item.type,\n      data = item.data,\n      settings = item.settings;\n\n    if (tool in this.Editor.Tools.available) {\n      try {\n        this.Editor.BlockManager.insert(tool, data, settings);\n      } catch (error) {\n        _.log(`Block «${tool}» skipped because of plugins error`, 'warn', data);\n        Promise.reject(error);\n      }\n    } else {\n      /**\n       * @todo show warning notification message\n       *\n       * `${tool} blocks was skipped.`\n       */\n      _.log(`Tool «${tool}» is not found. Check 'tools' property at your initial CodeX Editor config.`, 'warn');\n    }\n\n    return Promise.resolve();\n  }\n}\n","/**\n * CodeX Sanitizer\n *\n * @module Sanitizer\n * Clears HTML from taint tags\n *\n * @version 2.0.0\n *\n * @example\n *  Module can be used within two ways:\n *     1) When you have an instance\n *         - this.Editor.Sanitizer.clean(yourTaintString);\n *     2) As static method\n *         - CodexEditor.Sanitizer.clean(yourTaintString, yourCustomConfiguration);\n *\n * {@link SanitizerConfig}\n */\n\nimport Module from '../__module';\n/**\n * @typedef {Object} SanitizerConfig\n * @property {Object} tags - define tags restrictions\n *\n * @example\n *\n * tags : {\n *     p: true,\n *     a: {\n *       href: true,\n *       rel: \"nofollow\",\n *       target: \"_blank\"\n *     }\n * }\n */\nexport default class Sanitizer extends Module {\n  /**\n   * Initializes Sanitizer module\n   * Sets default configuration if custom not exists\n   *\n   * @property {SanitizerConfig} this.defaultConfig\n   * @property {HTMLJanitor} this._sanitizerInstance - Sanitizer library\n   *\n   * @param {SanitizerConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    this._sanitizerInstance = null;\n\n    /** Custom configuration */\n    this.sanitizerConfig = config.settings ? config.settings.sanitizer : null;\n\n    /** HTML Janitor library */\n    this.sanitizerInstance = require('html-janitor');\n  }\n\n  /**\n   * If developer uses editor's API, then he can customize sanitize restrictions.\n   * Or, sanitizing config can be defined globally in editors initialization. That config will be used everywhere\n   * At least, if there is no config overrides, that API uses Default configuration\n   *\n   * @uses https://www.npmjs.com/package/html-janitor\n   *\n   * @param {HTMLJanitor} library - sanitizer extension\n   */\n  set sanitizerInstance(library) {\n    if (this.sanitizerConfig) {\n      this._sanitizerInstance = new library(this.sanitizerConfig);\n    }\n\n    return this._sanitizerInstance;\n  }\n\n  /**\n   * Sets sanitizer configuration. Uses default config if user didn't pass the restriction\n   */\n  get defaultConfig() {\n    return {\n      tags: {\n        p: {},\n        a: {\n          href: true,\n          target: '_blank',\n          rel: 'nofollow'\n        },\n        b: {},\n        i: {}\n      }\n    };\n  }\n\n  /**\n   * Return sanitizer instance\n   * @return {null|library}\n   */\n  get sanitizerInstance() {\n    return this._sanitizerInstance;\n  }\n\n  /**\n   * Cleans string from unwanted tags\n   * @param {String} taintString - HTML string\n   * @param {Object} customConfig - custom sanitizer configuration. Method uses default if param is empty\n   * @return {String} clean HTML\n   */\n  clean(taintString, customConfig) {\n    if (customConfig && typeof customConfig === 'object') {\n      /**\n       * API client can use custom config to manage sanitize process\n       */\n      let newConfig = {\n        tags: customConfig\n      };\n\n      return Sanitizer.clean(taintString, newConfig);\n    } else {\n      /**\n       * Ignore sanitizing when nothing passed in config\n       */\n      if (!this.sanitizerInstance) {\n        return taintString;\n      } else {\n        return this.sanitizerInstance.clean(taintString);\n      }\n    }\n  }\n\n  /**\n   * Cleans string from unwanted tags\n   * @static\n   *\n   * Method allows to use default config\n   *\n   * @param {String} taintString - taint string\n   * @param {SanitizerConfig} customConfig - allowed tags\n   *\n   * @return {String} clean HTML\n   */\n  static clean(taintString, customConfig) {\n    let newInstance = new Sanitizer({\n      config: {\n        settings: {\n          sanitizer: customConfig\n        }\n      }\n    });\n\n    return newInstance.clean(taintString);\n  }\n}\n","/**\n * Codex Editor Saver\n *\n * @module Saver\n * @author Codex Team\n * @version 2.0.0\n */\n\nimport Module from '../__module';\n/**\n * @typedef {Object} SavedData\n * @property {Date} time - saving proccess time\n * @property {Object} items - extracted data\n * @property {String} version - CodexEditor version\n */\n\n/**\n * @classdesc This method reduces all Blocks asyncronically and calls Block's save method to extract data\n *\n * @typedef {Saver} Saver\n * @property {Element} html - Editor HTML content\n * @property {String} json - Editor JSON output\n */\nexport default class Saver extends Module {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor({config}) {\n    super({config});\n\n    this.output = null;\n    this.blocksData = [];\n  }\n\n  /**\n   * Composes new chain of Promises to fire them alternatelly\n   * @return {SavedData}\n   */\n  save() {\n    let blocks = this.Editor.BlockManager.blocks,\n      chainData = [];\n\n    blocks.forEach((block) => {\n      chainData.push(block.data);\n    });\n\n    return Promise.all(chainData)\n      .then((allExtractedData) => this.makeOutput(allExtractedData))\n      .then((outputData) => {\n        return outputData;\n      });\n  }\n\n  /**\n   * Creates output object with saved data, time and version of editor\n   * @param {Object} allExtractedData\n   * @return {SavedData}\n   */\n  makeOutput(allExtractedData) {\n    let blocks = [],\n      totalTime = 0;\n\n    console.groupCollapsed('[CodexEditor saving]:');\n\n    allExtractedData.forEach((extraction) => {\n      /** Group process info */\n      console.log(`«${extraction.tool}» saving info`, extraction);\n      totalTime += extraction.time;\n      blocks.push({\n        type: extraction.tool,\n        data: extraction.data\n      });\n    });\n\n    console.log('Total', totalTime);\n    console.groupEnd();\n\n    return {\n      time: +new Date(),\n      blocks: blocks,\n      version: VERSION,\n    };\n  }\n}\n\n// module.exports = (function (saver) {\n//\n//     let editor = codex.editor;\n//\n//     /**\n//      * @public\n//      * Save blocks\n//      */\n//     saver.save = function () {\n//\n//         /** Save html content of redactor to memory */\n//         editor.state.html = editor.nodes.redactor.innerHTML;\n//\n//         /** Clean jsonOutput state */\n//         editor.state.jsonOutput = [];\n//\n//         return saveBlocks(editor.nodes.redactor.childNodes);\n//\n//     };\n//\n//     /**\n//      * @private\n//      * Save each block data\n//      *\n//      * @param blocks\n//      * @returns {Promise.<TResult>}\n//      */\n//     let saveBlocks = function (blocks) {\n//\n//         let data = [];\n//\n//         for(let index = 0; index < blocks.length; index++) {\n//\n//             data.push(getBlockData(blocks[index]));\n//\n//         }\n//\n//         return Promise.all(data)\n//             .then(makeOutput)\n//             .catch(editor.core.log);\n//\n//     };\n//\n//     /** Save and validate block data */\n//     let getBlockData = function (block) {\n//\n//         return saveBlockData(block)\n//             .then(validateBlockData)\n//             .catch(editor.core.log);\n//\n//     };\n//\n//     /**\n//     * @private\n//     * Call block`s plugin save method and return saved data\n//     *\n//     * @param block\n//     * @returns {Object}\n//     */\n//     let saveBlockData = function (block) {\n//\n//         let pluginName = block.dataset.tool;\n//\n//         /** Check for plugin existence */\n//         if (!editor.tools[pluginName]) {\n//\n//             editor.core.log(`Plugin «${pluginName}» not found`, 'error');\n//             return {data: null, pluginName: null};\n//\n//         }\n//\n//         /** Check for plugin having save method */\n//         if (typeof editor.tools[pluginName].save !== 'function') {\n//\n//             editor.core.log(`Plugin «${pluginName}» must have save method`, 'error');\n//             return {data: null, pluginName: null};\n//\n//         }\n//\n//         /** Result saver */\n//         let blockContent   = block.childNodes[0],\n//             pluginsContent = blockContent.childNodes[0],\n//             position = pluginsContent.dataset.inputPosition;\n//\n//         /** If plugin wasn't available then return data from cache */\n//         if ( editor.tools[pluginName].available === false ) {\n//\n//             return Promise.resolve({data: codex.editor.state.blocks.items[position].data, pluginName});\n//\n//         }\n//\n//         return Promise.resolve(pluginsContent)\n//             .then(editor.tools[pluginName].save)\n//             .then(data => Object({data, pluginName}));\n//\n//     };\n//\n//     /**\n//     * Call plugin`s validate method. Return false if validation failed\n//     *\n//     * @param data\n//     * @param pluginName\n//     * @returns {Object|Boolean}\n//     */\n//     let validateBlockData = function ({data, pluginName}) {\n//\n//         if (!data || !pluginName) {\n//\n//             return false;\n//\n//         }\n//\n//         if (editor.tools[pluginName].validate) {\n//\n//             let result = editor.tools[pluginName].validate(data);\n//\n//             /**\n//              * Do not allow invalid data\n//              */\n//             if (!result) {\n//\n//                 return false;\n//\n//             }\n//\n//         }\n//\n//         return {data, pluginName};\n//\n//\n//     };\n//\n//     /**\n//     * Compile article output\n//     *\n//     * @param savedData\n//     * @returns {{time: number, version, items: (*|Array)}}\n//     */\n//     let makeOutput = function (savedData) {\n//\n//         savedData = savedData.filter(blockData => blockData);\n//\n//         let items = savedData.map(blockData => Object({type: blockData.pluginName, data: blockData.data}));\n//\n//         editor.state.jsonOutput = items;\n//\n//         return {\n//             id: editor.state.blocks.id || null,\n//             time: +new Date(),\n//             version: editor.version,\n//             items\n//         };\n//\n//     };\n//\n//     return saver;\n//\n// })({});\n","\nimport Shortcut from '@codexteam/shortcuts';\nimport {IShortcut, IShortcuts} from '../interfaces/shortcuts';\nimport IEditorConfig from '../interfaces/editor-config';\n\n/**\n * Contains keyboard and mouse events binded on each Block by Block Manager\n */\nimport Module from '../__module';\n\n/**\n * @class Shortcut\n * @classdesc Allows to register new shortcut\n *\n * Internal Shortcuts Module\n */\nexport default class Shortcuts extends Module implements IShortcuts {\n  /**\n   * All registered shortcuts\n   * @type {IShortcut[]}\n   */\n  private registeredShortcuts: IShortcut[];\n\n  /**\n   * @constructor\n   * @param {IEditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n    this.registeredShortcuts = [];\n  }\n\n  /**\n   * Register shortcut\n   * @param {IShortcut} shortcut\n   */\n  public add(shortcut: IShortcut): void {\n    const newShortcut = new Shortcut({\n      name: shortcut.name,\n      on: document,\n      callback: shortcut.handler,\n    });\n\n    this.registeredShortcuts.push(newShortcut);\n  }\n\n  /**\n   * Remove shortcut\n   * @param {IShortcut} shortcut\n   */\n  public remove(shortcut: string): void {\n    // Remove\n  }\n}\n","import Module from '../__module';\n\n/**\n * Block Settings\n *\n *   ____ Settings Panel ____\n *  | ...................... |\n *  | .   Tool Settings    . |\n *  | ...................... |\n *  | .  Default Settings  . |\n *  | ...................... |\n *  |________________________|\n */\nexport default class BlockSettings extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      wrapper: null,\n      toolSettings: null,\n      defaultSettings: null\n    };\n  }\n\n  /**\n   * Module Events\n   * @return {{opened: string, closed: string}}\n   */\n  get events() {\n    return {\n      opened: 'block-settings-opened',\n      closed: 'block-settings-closed',\n    };\n  }\n\n  /**\n   * Block Settings CSS\n   * @return {{wrapper, wrapperOpened, toolSettings, defaultSettings, button}}\n   */\n  static get CSS() {\n    return {\n      // Settings Panel\n      wrapper: 'ce-settings',\n      wrapperOpened: 'ce-settings--opened',\n      toolSettings: 'ce-settings__plugin-zone',\n      defaultSettings: 'ce-settings__default-zone',\n\n      button: 'ce-settings__button'\n    };\n  }\n\n  /**\n   * Panel with block settings with 2 sections:\n   *  - Tool's Settings\n   *  - Default Settings [Move, Remove, etc]\n   *\n   * @return {Element}\n   */\n  make() {\n    this.nodes.wrapper = $.make('div', BlockSettings.CSS.wrapper);\n\n    this.nodes.toolSettings = $.make('div', BlockSettings.CSS.toolSettings);\n    this.nodes.defaultSettings = $.make('div', BlockSettings.CSS.defaultSettings);\n\n    $.append(this.nodes.wrapper, [this.nodes.toolSettings, this.nodes.defaultSettings]);\n  }\n\n  /**\n   * Add Tool's settings\n   */\n  addToolSettings() {\n    if (typeof this.Editor.BlockManager.currentBlock.tool.renderSettings === 'function') {\n      $.append(this.nodes.toolSettings, this.Editor.BlockManager.currentBlock.tool.renderSettings());\n    }\n  }\n\n  /**\n   * Add default settings\n   */\n  addDefaultSettings() {\n    $.append(this.nodes.defaultSettings, this.Editor.BlockManager.currentBlock.renderTunes());\n  }\n\n  /**\n   * Is Block Settings opened or not\n   * @returns {boolean}\n   */\n  get opened() {\n    return this.nodes.wrapper.classList.contains(BlockSettings.CSS.wrapperOpened);\n  }\n\n  /**\n   * Open Block Settings pane\n   */\n  open() {\n    this.nodes.wrapper.classList.add(BlockSettings.CSS.wrapperOpened);\n\n    /**\n     * Fill Tool's settings\n     */\n    this.addToolSettings();\n\n    /**\n     * Add default settings that presents for all Blocks\n     */\n    this.addDefaultSettings();\n\n    /** Tell to subscribers that block settings is opened */\n    this.Editor.Events.emit(this.events.opened);\n  }\n\n  /**\n   * Close Block Settings pane\n   */\n  close() {\n    this.nodes.wrapper.classList.remove(BlockSettings.CSS.wrapperOpened);\n\n    /** Clear settings */\n    this.nodes.toolSettings.innerHTML = '';\n    this.nodes.defaultSettings.innerHTML = '';\n\n    /** Tell to subscribers that block settings is closed */\n    this.Editor.Events.emit(this.events.closed);\n  }\n}\n","import Module from '../__module';\ndeclare var $: any;\n\nimport BoldInlineTool from '../inline-tools/inline-tool-bold';\nimport ItalicInlineTool from '../inline-tools/inline-tool-italic';\nimport LinkInlineTool from '../inline-tools/inline-tool-link';\nimport EditorConfig from '../interfaces/editor-config';\nimport InlineTool from '../interfaces/tools/inline-tool';\nimport SelectionUtils from '../selection';\nimport _ from '../utils';\n\n/**\n * Inline toolbar with actions that modifies selected text fragment\n *\n * |¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯|\n * |   B  i [link] [mark]   |\n * |________________________|\n */\nexport default class InlineToolbar extends Module {\n\n  /**\n   * CSS styles\n   */\n  public CSS = {\n    inlineToolbar: 'ce-inline-toolbar',\n    inlineToolbarShowed: 'ce-inline-toolbar--showed',\n    buttonsWrapper: 'ce-inline-toolbar__buttons',\n    actionsWrapper: 'ce-inline-toolbar__actions',\n    inlineToolButton: 'ce-inline-tool',\n    inlineToolButtonLast: 'ce-inline-tool--last',\n  };\n\n  /**\n   * Inline Toolbar elements\n   */\n  private nodes = {\n    wrapper: null,\n    buttons: null,\n    /**\n     * Zone below the buttons where Tools can create additional actions by 'renderActions()' method\n     * For example, input for the 'link' tool or textarea for the 'comment' tool\n     */\n    actions: null,\n  };\n\n  /**\n   * Margin above/below the Toolbar\n   */\n  private readonly toolbarVerticalMargin: number = 20;\n\n  /**\n   * Tools instances\n   */\n  private toolsInstances: Map<string, InlineTool>;\n\n  /**\n   * @constructor\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * Inline Toolbar Tools\n   * includes internal and external tools\n   *\n   * @returns Map<string, InlineTool>\n   */\n  get tools(): Map<string, InlineTool> {\n    if (!this.toolsInstances || this.toolsInstances.size === 0) {\n      const allTools = {...this.internalTools, ...this.externalTools};\n\n      this.toolsInstances = new Map();\n      for (const tool in allTools) {\n        if (allTools.hasOwnProperty(tool)) {\n          this.toolsInstances.set(tool, allTools[tool]);\n        }\n      }\n    }\n\n    return this.toolsInstances;\n  }\n\n  /**\n   * Making DOM\n   */\n  public make() {\n    this.nodes.wrapper = $.make('div', this.CSS.inlineToolbar);\n    this.nodes.buttons = $.make('div', this.CSS.buttonsWrapper);\n    this.nodes.actions = $.make('div', this.CSS.actionsWrapper);\n\n    /**\n     * Append Inline Toolbar to the Editor\n     */\n    $.append(this.nodes.wrapper, [this.nodes.buttons, this.nodes.actions]);\n    $.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);\n\n    /**\n     * Append Inline Toolbar Tools\n     */\n    this.addTools();\n\n  }\n\n  /**\n   *  Moving / appearance\n   *  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   */\n\n  /**\n   * Shows Inline Toolbar by keyup/mouseup\n   * @param {KeyboardEvent|MouseEvent} event\n   */\n  public handleShowingEvent(event): void {\n    if (!this.allowedToShow(event)) {\n      this.close();\n      return;\n    }\n\n    this.move();\n    this.open();\n\n    /** Check Tools state for selected fragment */\n    this.checkToolsState();\n  }\n\n  /**\n   * Move Toolbar to the selected text\n   */\n  public move(): void {\n    const selectionRect = SelectionUtils.rect as DOMRect;\n    const wrapperOffset = this.Editor.UI.nodes.wrapper.getBoundingClientRect();\n    const newCoords = {\n      x: selectionRect.x - wrapperOffset.left,\n      y: selectionRect.y\n          + selectionRect.height\n          // + window.scrollY\n          - wrapperOffset.top\n          + this.toolbarVerticalMargin,\n    };\n\n    /**\n     * If we know selections width, place InlineToolbar to center\n     */\n    if (selectionRect.width) {\n      newCoords.x += Math.floor(selectionRect.width / 2);\n    }\n\n    this.nodes.wrapper.style.left = Math.floor(newCoords.x) + 'px';\n    this.nodes.wrapper.style.top = Math.floor(newCoords.y) + 'px';\n  }\n\n  /**\n   * Shows Inline Toolbar\n   */\n  private open() {\n    /**\n     * Filter inline-tools and show only allowed by Block's Tool\n     */\n    this.filterTools();\n\n    /**\n     * Show Inline Toolbar\n     */\n    this.nodes.wrapper.classList.add(this.CSS.inlineToolbarShowed);\n\n    /**\n     * Call 'clear' method for Inline Tools (for example, 'link' want to clear input)\n     */\n    this.tools.forEach( (toolInstance, toolName) => {\n      if (typeof toolInstance.clear === 'function') {\n        toolInstance.clear();\n      }\n    });\n  }\n\n  /**\n   * Hides Inline Toolbar\n   */\n  private close() {\n    this.nodes.wrapper.classList.remove(this.CSS.inlineToolbarShowed);\n    this.tools.forEach( (toolInstance, toolName) => {\n      if (typeof toolInstance.clear === 'function') {\n        toolInstance.clear();\n      }\n    });\n  }\n\n  /**\n   * Need to show Inline Toolbar or not\n   * @param {KeyboardEvent|MouseEvent} event\n   */\n  private allowedToShow(event): boolean {\n    /**\n     * Tags conflicts with window.selection function.\n     * Ex. IMG tag returns null (Firefox) or Redactors wrapper (Chrome)\n     */\n    const tagsConflictsWithSelection = ['IMG', 'INPUT'];\n\n    if (event && tagsConflictsWithSelection.includes(event.target.tagName)) {\n      return false;\n    }\n\n    const currentSelection = SelectionUtils.get(),\n      selectedText = SelectionUtils.text;\n\n    // old browsers\n    if (!currentSelection || !currentSelection.anchorNode) {\n      return false;\n    }\n\n    // empty selection\n    if (currentSelection.isCollapsed || selectedText.length < 1) {\n      return false;\n    }\n\n    // is enabled by current Block's Tool\n    const currentBlock = this.Editor.BlockManager.getBlock(currentSelection.anchorNode);\n\n    if (!currentBlock) {\n      return false;\n    }\n\n    const toolSettings = this.Editor.Tools.getToolSettings(currentBlock.name);\n\n    return toolSettings && toolSettings[this.Editor.Tools.apiSettings.IS_ENABLED_INLINE_TOOLBAR];\n  }\n\n  /**\n   * Show only allowed Tools\n   */\n  private filterTools(): void {\n    const currentSelection = SelectionUtils.get(),\n      currentBlock = this.Editor.BlockManager.getBlock(currentSelection.anchorNode);\n\n    const toolSettings = this.Editor.Tools.getToolSettings(currentBlock.name),\n      inlineToolbarSettings = toolSettings && toolSettings[this.Editor.Tools.apiSettings.IS_ENABLED_INLINE_TOOLBAR];\n\n    /**\n     * All Inline Toolbar buttons\n     * @type {HTMLElement[]}\n     */\n    const buttons = Array.from(this.nodes.buttons.querySelectorAll(`.${this.CSS.inlineToolButton}`)) as HTMLElement[];\n\n    /**\n     * Show previously hided\n     */\n    buttons.forEach((button) => {\n      button.hidden = false;\n      button.classList.remove(this.CSS.inlineToolButtonLast);\n    });\n\n    /**\n     * Filter buttons if Block Tool pass config like inlineToolbar=['link']\n     */\n    if (Array.isArray(inlineToolbarSettings)) {\n      buttons.forEach((button) => {\n        button.hidden = !inlineToolbarSettings.includes(button.dataset.tool);\n      });\n    }\n\n    /**\n     * Tick for removing right-margin from last visible button.\n     * Current generation of CSS does not allow to filter :visible elements\n     */\n    const lastVisibleButton = buttons.filter((button) => !button.hidden).pop();\n\n    if (lastVisibleButton) {\n      lastVisibleButton.classList.add(this.CSS.inlineToolButtonLast);\n    }\n  }\n\n  /**\n   *  Working with Tools\n   *  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   */\n\n  /**\n   * Fill Inline Toolbar with Tools\n   */\n  private addTools(): void {\n    this.tools.forEach( (toolInstance, toolName) => {\n      this.addTool(toolName, toolInstance);\n    });\n  }\n\n  /**\n   * Add tool button and activate clicks\n   */\n  private addTool(toolName: string, tool: InlineTool): void {\n    const button = tool.render();\n\n    if (!button) {\n      _.log('Render method must return an instance of Node', 'warn', toolName);\n      return;\n    }\n\n    button.dataset.tool = toolName;\n    this.nodes.buttons.appendChild(button);\n\n    if (typeof tool.renderActions === 'function') {\n      const actions = tool.renderActions();\n      this.nodes.actions.appendChild(actions);\n    }\n\n    this.Editor.Listeners.on(button, 'click', (event) => {\n      this.toolClicked(tool);\n      event.preventDefault();\n    });\n\n    /**\n     * Enable shortcuts\n     * Ignore tool that doesn't have shortcut or empty string\n     */\n    const toolSettings = this.Editor.Tools.getToolSettings(toolName);\n\n    let shortcut = null;\n\n    /**\n     * 1) For internal tools, check public getter 'shortcut'\n     * 2) For external tools, check tool's settings\n     */\n    if (this.internalTools[toolName]) {\n      shortcut = this.internalTools[toolName].shortcut;\n    } else if (toolSettings && toolSettings[this.Editor.Tools.apiSettings.SHORTCUT]) {\n      shortcut = toolSettings[this.Editor.Tools.apiSettings.SHORTCUT];\n    }\n\n    if (shortcut) {\n      this.enableShortcuts(tool, shortcut);\n    }\n  }\n\n  /**\n   * Enable Tool shortcut with Editor Shortcuts Module\n   * @param {InlineTool} tool - Tool instance\n   * @param {string} shortcut - shortcut according to the Shortcut Module format\n   */\n  private enableShortcuts(tool: InlineTool, shortcut: string): void {\n    this.Editor.Shortcuts.add({\n      name: shortcut,\n      handler: (event) => {\n        const {currentBlock} = this.Editor.BlockManager;\n\n        /**\n         * Editor is not focused\n         */\n        if (!currentBlock) {\n          return;\n        }\n\n        /**\n         * We allow to fire shortcut with empty selection (isCollapsed=true)\n         * it can be used by tools like «Mention» that works without selection:\n         * Example: by SHIFT+@ show dropdown and insert selected username\n         */\n        // if (SelectionUtils.isCollapsed) return;\n\n        const toolSettings =  this.Editor.Tools.getToolSettings(currentBlock.name);\n\n        if (!toolSettings || !toolSettings[this.Editor.Tools.apiSettings.IS_ENABLED_INLINE_TOOLBAR]) {\n          return;\n        }\n\n        event.preventDefault();\n        this.toolClicked(tool);\n      },\n    });\n  }\n\n  /**\n   * Inline Tool button clicks\n   * @param {InlineTool} tool - Tool's instance\n   */\n  private toolClicked(tool: InlineTool): void {\n    const range = SelectionUtils.range;\n\n    tool.surround(range);\n    this.checkToolsState();\n  }\n\n  /**\n   * Check Tools` state by selection\n   */\n  private checkToolsState(): void {\n    this.tools.forEach( (toolInstance, toolName) => {\n      toolInstance.checkState(SelectionUtils.get());\n    });\n  }\n\n  /**\n   * Returns internal inline tools\n   * Includes Bold, Italic, Link\n   */\n  private get internalTools(): {[name: string]: InlineTool} {\n    return {\n      bold: this.Editor.Tools.constructInline(BoldInlineTool),\n      italic: this.Editor.Tools.constructInline(ItalicInlineTool),\n      link: this.Editor.Tools.constructInline(LinkInlineTool),\n    };\n  }\n\n  /**\n   * Get external tools\n   * Tools that has isInline is true\n   */\n  private get externalTools(): {[name: string]: InlineTool} {\n    const result = {};\n\n    for (const tool in this.Editor.Tools.inline) {\n      if (this.Editor.Tools.inline.hasOwnProperty(tool)) {\n        result[tool] = this.Editor.Tools.constructInline(this.Editor.Tools.inline[tool]);\n      }\n    }\n\n    return result;\n  }\n}\n","import IEditorConfig from '../interfaces/editor-config';\nimport Module from '../__module';\n\n/**\n * @class Toolbox\n * @classdesc Holder for Tools\n *\n * @typedef {Toolbox} Toolbox\n * @property {Boolean} opened - opening state\n * @property {Object} nodes   - Toolbox nodes\n * @property {Object} CSS     - CSS class names\n *\n */\nexport default class Toolbox extends Module {\n  /**\n   * @constructor\n   * @param {IEditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      toolbox: null,\n      buttons: []\n    };\n\n    /**\n     * Opening state\n     * @type {boolean}\n     */\n    this.opened = false;\n\n    /**\n     * Active button index\n     * -1 equals no chosen Tool\n     * @type {number}\n     */\n    this.activeButtonIndex = -1;\n\n    /**\n     * How many tools displayed in Toolbox\n     * @type {number}\n     */\n    this.displayedToolsCount = 0;\n  }\n\n  /**\n   * CSS styles\n   * @return {{toolbox: string, toolboxButton: string, toolboxOpened: string}}\n   */\n  static get CSS() {\n    return  {\n      toolbox: 'ce-toolbox',\n      toolboxButton: 'ce-toolbox__button',\n      toolboxButtonActive : 'ce-toolbox__button--active',\n      toolboxOpened: 'ce-toolbox--opened',\n    };\n  }\n\n  /**\n   * Makes the Toolbox\n   */\n  make() {\n    this.nodes.toolbox = $.make('div', Toolbox.CSS.toolbox);\n    $.append(this.Editor.Toolbar.nodes.content, this.nodes.toolbox);\n\n    this.addTools();\n  }\n\n  /**\n   * Iterates available tools and appends them to the Toolbox\n   */\n  addTools() {\n    let tools = this.Editor.Tools.toolsAvailable;\n\n    for (let toolName in tools) {\n      this.addTool(toolName, tools[toolName]);\n    }\n  }\n\n  /**\n   * Append Tool to the Toolbox\n   *\n   * @param {string} toolName - tool name\n   * @param {IBlockTool} tool - tool class\n   */\n  addTool(toolName, tool) {\n    const api = this.Editor.Tools.apiSettings;\n\n    if (tool[api.IS_DISPLAYED_IN_TOOLBOX] && !tool[api.TOOLBAR_ICON]) {\n      _.log('Toolbar icon is missed. Tool %o skipped', 'warn', toolName);\n      return;\n    }\n\n    /**\n     * @todo Add checkup for the render method\n     */\n    // if (typeof tool.render !== 'function') {\n    //   _.log('render method missed. Tool %o skipped', 'warn', tool);\n    //   return;\n    // }\n\n    /**\n     * Skip tools that pass 'displayInToolbox=false'\n     */\n    if (!tool[api.IS_DISPLAYED_IN_TOOLBOX]) {\n      return;\n    }\n\n    let button = $.make('li', [ Toolbox.CSS.toolboxButton ], {\n      title: toolName\n    });\n\n    button.innerHTML = tool.toolboxIcon;\n\n    $.append(this.nodes.toolbox, button);\n\n    this.nodes.toolbox.appendChild(button);\n    this.nodes.buttons.push(button);\n\n    /**\n     * Add click listener\n     */\n    this.Editor.Listeners.on(button, 'click', (event) => {\n      this.toolButtonActivate(event, toolName);\n    });\n\n    /**\n     * Enable shortcut\n     */\n    const toolSettings = this.Editor.Tools.getToolSettings(toolName);\n\n    if (toolSettings && toolSettings[this.Editor.Tools.apiSettings.SHORTCUT]) {\n      this.enableShortcut(tool, toolName, toolSettings[this.Editor.Tools.apiSettings.SHORTCUT]);\n    }\n\n    /** Increment Tools count */\n    this.displayedToolsCount++;\n  }\n\n  /**\n   * Enable shortcut Block Tool implemented shortcut\n   * @param {IBlockTool} tool - Tool class\n   * @param {String} toolName - Tool name\n   * @param {String} shortcut - shortcut according to the Shortcut Module format\n   */\n  enableShortcut(tool, toolName, shortcut) {\n    this.Editor.Shortcuts.add({\n      name: shortcut,\n      handler: (event) => {\n        event.preventDefault();\n        this.insertNewBlock(tool, toolName);\n      }\n    });\n  }\n\n  /**\n   * Inserts new block\n   * Can be called when button clicked on Toolbox or by Shortcut\n   *\n   * @param {IBlockTool} tool - Tool Class\n   * @param {String} toolName - Tool name\n   */\n  insertNewBlock(tool, toolName) {\n    /**\n     * @type {Block}\n     */\n    const currentBlock = this.Editor.BlockManager.currentBlock;\n\n    /**\n     * We do replace if:\n     * - block is empty\n     * - block is not irreplaceable\n     * @type {Array}\n     */\n    let newBlock;\n\n    if (!tool[this.Editor.Tools.apiSettings.IS_IRREPLACEBLE_TOOL] && currentBlock.isEmpty) {\n      newBlock = this.Editor.BlockManager.replace(toolName);\n    } else {\n      newBlock = this.Editor.BlockManager.insert(toolName);\n    }\n\n    this.Editor.Caret.setToBlock(newBlock);\n\n    /**\n     * close toolbar when node is changed\n     */\n    this.Editor.Toolbar.close();\n  }\n\n  /**\n   * Toolbox Tool's button click handler\n   *\n   * @param {MouseEvent|KeyboardEvent} event\n   * @param {string} toolName\n   */\n  toolButtonActivate(event, toolName) {\n    const tool = this.Editor.Tools.toolsClasses[toolName];\n\n    this.insertNewBlock(tool, toolName);\n  }\n\n  /**\n   * Open Toolbox with Tools\n   */\n  open() {\n    if (this.isEmpty) {\n      return;\n    }\n\n    this.nodes.toolbox.classList.add(Toolbox.CSS.toolboxOpened);\n    this.opened = true;\n  }\n\n  /**\n   * Close Toolbox\n   */\n  close() {\n    this.nodes.toolbox.classList.remove(Toolbox.CSS.toolboxOpened);\n    this.opened = false;\n\n    /** remove active item pointer */\n    this.activeButtonIndex = -1;\n    const activeButton = this.nodes.toolbox.querySelector(`.${Toolbox.CSS.toolboxButtonActive}`);\n\n    if (activeButton) {\n      activeButton.classList.remove(Toolbox.CSS.toolboxButtonActive);\n    }\n  }\n\n  /**\n   * Close Toolbox\n   */\n  toggle() {\n    if (!this.opened) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Leaf\n   * flip through the toolbox items\n   * @param {String} direction - leaf direction, right is default\n   */\n  leaf(direction = 'right') {\n    const childNodes = this.nodes.toolbox.childNodes;\n\n    /**\n     * If activeButtonIndex === -1 then we have no chosen Tool in Toolbox\n     */\n    if (this.activeButtonIndex === -1) {\n      /**\n       * Normalize \"previous\" Tool index depending on direction.\n       * We need to do this to highlight \"first\" Tool correctly\n       *\n       * Order of Tools: [0] [1] ... [n - 1]\n       *   [0 = n] because of: n % n = 0 % n\n       *\n       * Direction 'right': for [0] the [n - 1] is a previous index\n       *   [n - 1] -> [0]\n       *\n       * Direction 'left': for [n - 1] the [0] is a previous index\n       *   [n - 1] <- [0]\n       *\n       * @type {number}\n       */\n      this.activeButtonIndex = direction === 'right' ? -1 : 0;\n    } else {\n      /**\n       * If we have chosen Tool then remove highlighting\n       */\n      childNodes[this.activeButtonIndex].classList.remove(Toolbox.CSS.toolboxButtonActive);\n    }\n\n    /**\n     * Count index for next Tool\n     */\n    if (direction === 'right') {\n      /**\n       * If we go right then choose next (+1) Tool\n       * @type {number}\n       */\n      this.activeButtonIndex = (this.activeButtonIndex + 1) % childNodes.length;\n    } else {\n      /**\n       * If we go left then choose previous (-1) Tool\n       * Before counting module we need to add length before because of \"The JavaScript Modulo Bug\"\n       * @type {number}\n       */\n      this.activeButtonIndex = (childNodes.length + this.activeButtonIndex - 1) % childNodes.length;\n    }\n\n    /**\n     * Highlight new chosen Tool\n     */\n    childNodes[this.activeButtonIndex].classList.add(Toolbox.CSS.toolboxButtonActive);\n  }\n\n  /**\n   * get tool name when it is selected\n   * In case when nothing selection returns null\n   *\n   * @return {String|null}\n   */\n  get getActiveTool() {\n    const childNodes = this.nodes.toolbox.childNodes;\n\n    if (this.activeButtonIndex === -1) {\n      return null;\n    }\n\n    return childNodes[this.activeButtonIndex].title;\n  }\n\n  /**\n   * Returns True if Toolbox is Empty and nothing to show\n   * @return {boolean}\n   */\n  get isEmpty() {\n    return this.displayedToolsCount === 0;\n  }\n}\n","import Module from '../__module';\n\n/**\n *\n * «Toolbar» is the node that moves up/down over current block\n *\n *  ______________________________________ Toolbar ____________________________________________\n * |                                                                                           |\n * |  ..................... Content ....................   ......... Block Actions ..........  |\n * |  .                                                .   .                                .  |\n * |  .                                                .   .        [Open Settings]         .  |\n * |  .  [Plus Button]  [Toolbox: {Tool1}, {Tool2}]    .   .                                .  |\n * |  .                                                .   .        [Settings Panel]        .  |\n * |  ..................................................   ..................................  |\n * |                                                                                           |\n * |___________________________________________________________________________________________|\n *\n *\n * Toolbox — its an Element contains tools buttons. Can be shown by Plus Button.\n *\n *  _______________ Toolbox _______________\n * |                                       |\n * | [Header] [Image] [List] [Quote] ...   |\n * |_______________________________________|\n *\n *\n * Settings Panel — is an Element with block settings:\n *\n *   ____ Settings Panel ____\n *  | ...................... |\n *  | .   Tool Settings    . |\n *  | ...................... |\n *  | .  Default Settings  . |\n *  | ...................... |\n *  |________________________|\n *\n *\n * @class\n * @classdesc Toolbar module\n *\n * @typedef {Toolbar} Toolbar\n * @property {Object} nodes\n * @property {Element} nodes.wrapper        - Toolbar main element\n * @property {Element} nodes.content        - Zone with Plus button and toolbox.\n * @property {Element} nodes.actions        - Zone with Block Settings and Remove Button\n * @property {Element} nodes.blockActionsButtons   - Zone with Block Buttons: [Settings]\n * @property {Element} nodes.plusButton     - Button that opens or closes Toolbox\n * @property {Element} nodes.toolbox        - Container for tools\n * @property {Element} nodes.settingsToggler - open/close Settings Panel button\n * @property {Element} nodes.settings          - Settings Panel\n * @property {Element} nodes.pluginSettings    - Plugin Settings section of Settings Panel\n * @property {Element} nodes.defaultSettings   - Default Settings section of Settings Panel\n */\nexport default class Toolbar extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      wrapper : null,\n      content : null,\n      actions : null,\n\n      // Content Zone\n      plusButton : null,\n\n      // Actions Zone\n      blockActionsButtons: null,\n      settingsToggler : null,\n    };\n  }\n\n  /**\n   * CSS styles\n   * @return {Object}\n   * @constructor\n   */\n  static get CSS() {\n    return {\n      toolbar: 'ce-toolbar',\n      content: 'ce-toolbar__content',\n      actions: 'ce-toolbar__actions',\n\n      toolbarOpened: 'ce-toolbar--opened',\n\n      // Content Zone\n      plusButton: 'ce-toolbar__plus',\n      plusButtonHidden: 'ce-toolbar__plus--hidden',\n\n      // Actions Zone\n      blockActionsButtons: 'ce-toolbar__actions-buttons',\n      settingsToggler: 'ce-toolbar__settings-btn',\n    };\n  }\n\n  /**\n   * Makes toolbar\n   */\n  make() {\n    this.nodes.wrapper = $.make('div', Toolbar.CSS.toolbar);\n\n    /**\n     * Make Content Zone and Actions Zone\n     */\n    ['content',  'actions'].forEach( el => {\n      this.nodes[el] = $.make('div', Toolbar.CSS[el]);\n      $.append(this.nodes.wrapper, this.nodes[el]);\n    });\n\n\n    /**\n     * Fill Content Zone:\n     *  - Plus Button\n     *  - Toolbox\n     */\n    this.nodes.plusButton = $.make('div', Toolbar.CSS.plusButton);\n    $.append(this.nodes.plusButton, $.svg('plus', 14, 14));\n    $.append(this.nodes.content, this.nodes.plusButton);\n    this.nodes.plusButton.addEventListener('click', event => this.plusButtonClicked(event), false);\n\n\n    /**\n     * Make a Toolbox\n     */\n    this.Editor.Toolbox.make();\n\n    /**\n     * Fill Actions Zone:\n     *  - Settings Toggler\n     *  - Remove Block Button\n     *  - Settings Panel\n     */\n    this.nodes.blockActionsButtons = $.make('div', Toolbar.CSS.blockActionsButtons);\n    this.nodes.settingsToggler  = $.make('span', Toolbar.CSS.settingsToggler);\n    const settingsIcon = $.svg('dots', 18, 4);\n\n    $.append(this.nodes.settingsToggler, settingsIcon);\n    $.append(this.nodes.blockActionsButtons, this.nodes.settingsToggler);\n    $.append(this.nodes.actions, this.nodes.blockActionsButtons);\n\n    /**\n     * Make and append Settings Panel\n     */\n    this.Editor.BlockSettings.make();\n    $.append(this.nodes.actions, this.Editor.BlockSettings.nodes.wrapper);\n\n    /**\n     * Append toolbar to the Editor\n     */\n    $.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);\n\n    /**\n     * Bind events on the Toolbar elements\n     */\n    this.bindEvents();\n  }\n\n  /**\n   * Move Toolbar to the Current Block\n   * @param {Boolean} forceClose - force close Toolbar Settings and Toolbar\n   */\n  move(forceClose = true) {\n    if (forceClose) {\n      /** Close Toolbox when we move toolbar */\n      this.Editor.Toolbox.close();\n      this.Editor.BlockSettings.close();\n    }\n\n    let currentBlock = this.Editor.BlockManager.currentBlock.holder;\n\n    /**\n     * If no one Block selected as a Current\n     */\n    if (!currentBlock) {\n      return;\n    }\n\n    /**\n     * Set Toolbar Min Height as Block's height\n     * Plus Button and Toolbox positioned at the center of the Toolbar\n     */\n    const contentOffset = Math.floor(currentBlock.offsetHeight / 2);\n\n    this.nodes.plusButton.style.transform = `translate3d(0, calc(${contentOffset}px - 50%), 0)`;\n    this.Editor.Toolbox.nodes.toolbox.style.transform = `translate3d(0, calc(${contentOffset}px - 50%), 0)`;\n    /**\n     * Move Toolbar to the Top coordinate of Block\n     */\n    this.nodes.wrapper.style.transform = `translate3D(0, ${Math.floor(currentBlock.offsetTop)}px, 0)`;\n  }\n\n  /**\n   * Open Toolbar with Plus Button\n   */\n  open() {\n    /**\n     * Wait Block rendering for correct height computing\n     */\n    setTimeout(() => {\n      this.move();\n      this.nodes.wrapper.classList.add(Toolbar.CSS.toolbarOpened);\n    }, 50);\n  }\n\n  /**\n   * returns toolbar opened state\n   * @return {Boolean}\n   */\n  get opened() {\n    return this.nodes.wrapper.classList.contains(Toolbar.CSS.toolbarOpened);\n  }\n\n  /**\n   * Close the Toolbar\n   */\n  close() {\n    this.nodes.wrapper.classList.remove(Toolbar.CSS.toolbarOpened);\n\n    /** Close components */\n    this.Editor.Toolbox.close();\n    this.Editor.BlockSettings.close();\n  }\n\n  /**\n   * Plus Button public methods\n   * @return {{hide: function(): void, show: function(): void}}\n   */\n  get plusButton() {\n    return {\n      hide: () => this.nodes.plusButton.classList.add(Toolbar.CSS.plusButtonHidden),\n      show: () => {\n        if (this.Editor.Toolbox.isEmpty) {\n          return;\n        }\n        this.nodes.plusButton.classList.remove(Toolbar.CSS.plusButtonHidden);\n      }\n    };\n  }\n\n  /**\n   * Handler for Plus Button\n   * @param {MouseEvent} event\n   */\n  plusButtonClicked() {\n    this.Editor.Toolbox.toggle();\n  }\n\n  /**\n   * Bind events on the Toolbar Elements:\n   * - Block Settings\n   */\n  bindEvents() {\n    /**\n     * Settings toggler\n     */\n    this.Editor.Listeners.on(this.nodes.settingsToggler, 'click', (event) => {\n      this.settingsTogglerClicked(event);\n    });\n  }\n\n  /**\n   * Clicks on the Block Settings toggler\n   */\n  settingsTogglerClicked() {\n    if (this.Editor.BlockSettings.opened) {\n      this.Editor.BlockSettings.close();\n    } else {\n      this.Editor.BlockSettings.open();\n    }\n  }\n}\n","const Paragraph = require('../tools/paragraph/dist/bundle');\n\nimport Module from '../__module';\n\n/**\n * @module Codex Editor Tools Submodule\n *\n * Creates Instances from Plugins and binds external config to the instances\n */\n\n/**\n * Each Tool must contain the following important objects:\n *\n * @typedef {Object} ToolConfig {@link docs/tools.md}\n * @property {String} iconClassname - this a icon in toolbar\n * @property {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n * @property {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n * @property {Boolean|String[]} inlineToolbar - Pass `true` to enable the Inline Toolbar with all Tools, all pass an array with specified Tools list |\n * @property render @todo add description\n * @property save @todo add description\n * @property settings @todo add description\n * @property validate - method that validates output data before saving\n */\n\n/**\n * @typedef {Function} Tool {@link docs/tools.md}\n * @property {Boolean}      displayInToolbox      - By default, tools won't be added in the Toolbox. Pass true to add.\n * @property {String}       iconClassName         - CSS class name for the Toolbox button\n * @property {Boolean}      irreplaceable         - Toolbox behaviour: replace or add new block below\n * @property render\n * @property save\n * @property settings\n * @property validate\n *\n * @todo update according to current API\n * @todo describe Tool in the {@link docs/tools.md}\n */\n\n/**\n * Class properties:\n *\n * @typedef {Tools} Tools\n * @property {Tools[]} toolsAvailable - available Tools\n * @property {Tools[]} toolsUnavailable - unavailable Tools\n * @property {object} toolsClasses - all classes\n * @property {object} toolsSettings - Tools settings\n * @property {EditorConfig} config - Editor config\n */\nexport default class Tools extends Module {\n  /**\n   * @constructor\n   *\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    /**\n     * Map {name: Class, ...} where:\n     *  name — block type name in JSON. Got from EditorConfig.tools keys\n     * @type {Object}\n     */\n    this.toolsClasses = {};\n\n    /**\n     * Tools settings in a map {name: settings, ...}\n     * @type {Object}\n     */\n    this.toolsSettings = {};\n\n    /**\n     * Available tools list\n     * {name: Class, ...}\n     * @type {Object}\n     */\n    this.toolsAvailable = {};\n\n    /**\n     * Tools that rejected a prepare method\n     * {name: Class, ... }\n     * @type {Object}\n     */\n    this.toolsUnavailable = {};\n\n    /**\n     * Cache for the prepared inline tools\n     * @type {null|object}\n     * @private\n     */\n    this._inlineTools = null;\n  }\n\n  /**\n   * Returns available Tools\n   * @return {Tool[]}\n   */\n  get available() {\n    return this.toolsAvailable;\n  }\n\n  /**\n   * Returns unavailable Tools\n   * @return {Tool[]}\n   */\n  get unavailable() {\n    return this.toolsUnavailable;\n  }\n\n  /**\n   * Return Tools for the Inline Toolbar\n   * @return {Object} - object of Inline Tool's classes\n   */\n  get inline() {\n    if (this._inlineTools) {\n      return this._inlineTools;\n    }\n\n    const tools = Object.entries(this.available).filter( ([name, tool]) => {\n      if (!tool[this.apiSettings.IS_INLINE]) {\n        return false;\n      }\n\n      /**\n       * Some Tools validation\n       */\n      const inlineToolRequiredMethods = ['render', 'surround', 'checkState'];\n      const notImplementedMethods = inlineToolRequiredMethods.filter( method => !this.constructInline(tool)[method]);\n\n      if (notImplementedMethods.length) {\n        _.log(`Incorrect Inline Tool: ${tool.name}. Some of required methods is not implemented %o`, 'warn', notImplementedMethods);\n        return false;\n      }\n\n      return true;\n    });\n\n    /**\n     * collected inline tools with key of tool name\n     */\n    const result = {};\n\n    tools.forEach(([name, tool]) => result[name] = tool);\n\n    /**\n     * Cache prepared Tools\n     */\n    this._inlineTools = result;\n\n    return this._inlineTools;\n  }\n\n  /**\n   * Return editor block tools\n   */\n  get blockTools() {\n    // eslint-disable-next-line no-unused-vars\n    const tools = Object.entries(this.available).filter( ([name, tool]) => {\n      if (tool[this.apiSettings.IS_INLINE]) {\n        return false;\n      }\n\n      return true;\n    });\n\n    /**\n     * collected block tools with key of tool name\n     */\n    const result = {};\n\n    tools.forEach(([name, tool]) => result[name] = tool);\n\n    return result;\n  }\n\n  /**\n   * Constant for available Tools Settings\n   * @return {object}\n   */\n  get apiSettings() {\n    return {\n      CONFIG: 'config',\n      IS_CONTENTLESS: 'contentless',\n      IS_DISPLAYED_IN_TOOLBOX: 'displayInToolbox',\n      IS_ENABLED_INLINE_TOOLBAR: 'inlineToolbar',\n      IS_ENABLED_LINE_BREAKS: 'enableLineBreaks',\n      IS_INLINE: 'isInline',\n      IS_IRREPLACEBLE_TOOL: 'irreplaceable',\n      IS_PASTE_DISALLOWED: 'disallowPaste',\n      SHORTCUT: 'shortcut',\n      TOOLBAR_ICON: 'toolboxIcon',\n    };\n  }\n\n  /**\n   * Creates instances via passed or default configuration\n   * @return {Promise}\n   */\n  prepare() {\n    this.config.tools.paragraph = {\n      class: Paragraph,\n      inlineToolbar: true\n    };\n\n    if (!this.config.hasOwnProperty('tools') || Object.keys(this.config.tools).length === 0) {\n      return Promise.reject('Can\\'t start without tools');\n    }\n\n    /**\n     * Save Tools settings to a map\n     */\n    for(let toolName in this.config.tools) {\n      /**\n       * If Tool is an object not a Tool's class then\n       * save class and settings separately\n       */\n      if (typeof this.config.tools[toolName] === 'object') {\n        /**\n         * Save Tool's class from 'class' field\n         * @type {ITool}\n         */\n        this.toolsClasses[toolName] = this.config.tools[toolName].class;\n\n        /**\n         * Save Tool's settings\n         * @type {IToolSettings}\n         */\n        this.toolsSettings[toolName] = this.config.tools[toolName];\n\n        /**\n         * Remove Tool's class from settings\n         */\n        delete this.toolsSettings[toolName].class;\n      } else {\n        /**\n         * Save Tool's class\n         * @type {ITool}\n         */\n        this.toolsClasses[toolName] = this.config.tools[toolName];\n\n        /**\n         * Set empty settings for Block by default\n         * @type {{}}\n         */\n        this.toolsSettings[toolName] = {};\n      }\n    }\n\n    /**\n     * getting classes that has prepare method\n     */\n    let sequenceData = this.getListOfPrepareFunctions();\n\n    /**\n     * if sequence data contains nothing then resolve current chain and run other module prepare\n     */\n    if (sequenceData.length === 0) {\n      return Promise.resolve();\n    }\n\n    /**\n     * to see how it works {@link Util#sequence}\n     */\n    return _.sequence(sequenceData, (data) => {\n      this.success(data);\n    }, (data) => {\n      this.fallback(data);\n    });\n  }\n\n  /**\n   * Binds prepare function of plugins with user or default config\n   * @return {Array} list of functions that needs to be fired sequentially\n   */\n  getListOfPrepareFunctions() {\n    let toolPreparationList = [];\n\n    for(let toolName in this.toolsClasses) {\n      let toolClass = this.toolsClasses[toolName];\n\n      if (typeof toolClass.prepare === 'function') {\n        toolPreparationList.push({\n          function : toolClass.prepare,\n          data : {\n            toolName,\n            config:  this.toolsSettings[toolName][this.apiSettings.CONFIG]\n          }\n        });\n      } else {\n        /**\n         * If Tool hasn't a prepare method, mark it as available\n         */\n        this.toolsAvailable[toolName] = toolClass;\n      }\n    }\n\n    return toolPreparationList;\n  }\n\n  /**\n   * @param {ChainData.data} data - append tool to available list\n   */\n  success(data) {\n    this.toolsAvailable[data.toolName] = this.toolsClasses[data.toolName];\n  }\n\n  /**\n   * @param {ChainData.data} data - append tool to unavailable list\n   */\n  fallback(data) {\n    this.toolsUnavailable[data.toolName] = this.toolsClasses[data.toolName];\n  }\n\n  /**\n   * Return Tool`s instance\n   *\n   * @param {String} tool — tool name\n   * @param {IBlockToolData} data — initial data\n   * @return {IBlockTool}\n   */\n  construct(tool, data) {\n    const plugin = this.toolsClasses[tool];\n\n    /**\n     * Configuration to be passed to the Tool's constructor\n     */\n    const config = this.toolsSettings[tool][this.apiSettings.CONFIG];\n\n    /**\n     * @type {{api: IAPI, config: ({}), data: IBlockToolData}}\n     */\n    const constructorOptions = {\n      api: this.Editor.API.methods,\n      config: config || {},\n      data: data\n    };\n\n    return new plugin(constructorOptions);\n  }\n\n  /**\n   * Return Inline Tool's instance\n   *\n   * @param {IInlineTool} tool\n   * @return {IInlineTool} — instance\n   */\n  constructInline(tool) {\n    /**\n     * @type {{api: IAPI}}\n     */\n    const constructorOptions = {\n      api: this.Editor.API.methods\n    };\n\n    return new tool(constructorOptions);\n  }\n\n  /**\n   * Check if passed Tool is an instance of Initial Block Tool\n   * @param {Tool} tool - Tool to check\n   * @return {Boolean}\n   */\n  isInitial(tool) {\n    return tool instanceof this.available[this.config.initialBlock];\n  }\n\n  /**\n   * Return Tool's config by name\n   * @param {string} toolName\n   * @return {IToolSettings}\n   */\n  getToolSettings(toolName) {\n    return this.toolsSettings[toolName];\n  }\n}\n","/**\n * Module UI\n *\n * @type {UI}\n */\n\n/**\n * Prebuilded sprite of SVG icons\n */\nimport sprite from '../../../build/sprite.svg';\n\nimport Selection from '../selection';\nimport Module from '../__module';\n\n/**\n * @class\n *\n * @classdesc Makes CodeX Editor UI:\n *                <codex-editor>\n *                    <ce-redactor />\n *                    <ce-toolbar />\n *                    <ce-inline-toolbar />\n *                </codex-editor>\n *\n * @typedef {UI} UI\n * @property {EditorConfig} config   - editor configuration {@link CodexEditor#configuration}\n * @property {Object} Editor         - available editor modules {@link CodexEditor#moduleInstances}\n * @property {Object} nodes          -\n * @property {Element} nodes.holder  - element where we need to append redactor\n * @property {Element} nodes.wrapper  - <codex-editor>\n * @property {Element} nodes.redactor - <ce-redactor>\n */\nexport default class UI extends Module {\n  /**\n   * @constructor\n   *\n   * @param  {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      holder: null,\n      wrapper: null,\n      redactor: null\n    };\n  }\n\n  /**\n   * Making main interface\n   */\n  async prepare() {\n    await this.make();\n\n    /**\n     * Append SVG sprite\n     */\n    await this.appendSVGSprite();\n\n    /**\n     * Make toolbar\n     */\n    await this.Editor.Toolbar.make();\n\n    /**\n     * Make the Inline toolbar\n     */\n    await this.Editor.InlineToolbar.make();\n\n    /**\n     * Load and append CSS\n     */\n    await this.loadStyles();\n\n    /**\n     * Bind events for the UI elements\n     */\n    await this.bindEvents();\n  }\n\n  /**\n   * CodeX Editor UI CSS class names\n   * @return {{editorWrapper: string, editorZone: string, block: string}}\n   */\n  get CSS() {\n    return {\n      editorWrapper : 'codex-editor',\n      editorZone    : 'codex-editor__redactor',\n    };\n  }\n\n  /**\n     * Makes CodeX Editor interface\n     * @return {Promise<any>}\n     */\n  async make() {\n    /**\n     * Element where we need to append CodeX Editor\n     * @type {Element}\n     */\n    this.nodes.holder = document.getElementById(this.config.holderId);\n\n    if (!this.nodes.holder) {\n      throw Error(\"Holder wasn't found by ID: #\" + this.config.holderId);\n    }\n\n    /**\n     * Create and save main UI elements\n     */\n    this.nodes.wrapper  = $.make('div', this.CSS.editorWrapper);\n    this.nodes.redactor = $.make('div', this.CSS.editorZone);\n\n    this.nodes.wrapper.appendChild(this.nodes.redactor);\n    this.nodes.holder.appendChild(this.nodes.wrapper);\n  }\n\n  /**\n   * Appends CSS\n   */\n  loadStyles() {\n    /**\n     * Load CSS\n     */\n    let styles = require('../../styles/main.css');\n\n    /**\n     * Make tag\n     */\n    let tag = $.make('style', null, {\n      textContent: styles.toString()\n    });\n\n    /**\n     * Append styles at the top of HEAD tag\n     */\n    $.prepend(document.head, tag);\n  }\n\n  /**\n   * Bind events on the CodeX Editor interface\n   */\n  bindEvents() {\n    this.Editor.Listeners.on(this.nodes.redactor, 'click', event => this.redactorClicked(event), false );\n    this.Editor.Listeners.on(document, 'keydown', event => this.documentKeydown(event), true );\n    this.Editor.Listeners.on(document, 'click', event => this.documentClicked(event), false );\n  }\n\n  /**\n   * All keydowns on document\n   * @param {Event} event\n   */\n  documentKeydown(event) {\n    switch (event.keyCode) {\n      case _.keyCodes.ENTER:\n        this.enterPressed(event);\n        break;\n      default:\n        this.defaultBehaviour(event);\n        break;\n    }\n  }\n\n  /**\n   * Ignore all other document's keydown events\n   * @param {KeyboardEvent} event\n   */\n  defaultBehaviour(event) {\n    const keyDownOnEditor = event.target.closest(`.${this.CSS.editorWrapper}`);\n\n    /**\n     * Ignore keydowns on document\n     * clear pointer and close toolbar\n     */\n    if (!keyDownOnEditor) {\n      /**\n       * Remove all highlights and remove caret\n       */\n      this.Editor.BlockManager.dropPointer();\n\n      /**\n       * Close Toolbar\n       */\n      this.Editor.Toolbar.close();\n    }\n  }\n\n  /**\n   * Enter pressed on document\n   * @param event\n   */\n  enterPressed(event) {\n    let hasPointerToBlock = this.Editor.BlockManager.currentBlockIndex >= 0;\n\n    /**\n     * If Caret is not set anywhere, event target on Enter is always Element that we handle\n     * In our case it is document.body\n     *\n     * So, BlockManager points some Block and Enter press is on Body\n     * We can create a new block\n     */\n    if (hasPointerToBlock && event.target.tagName === 'BODY') {\n      /**\n       * Insert initial typed Block\n       */\n      const newBlock = this.Editor.BlockManager.insert();\n\n      this.Editor.Caret.setToBlock(newBlock);\n\n      /**\n       * And highlight\n       */\n      this.Editor.BlockManager.highlightCurrentNode();\n\n      /**\n       * Move toolbar and show plus button because new Block is empty\n       */\n      this.Editor.Toolbar.move();\n      this.Editor.Toolbar.plusButton.show();\n    }\n  }\n\n  /**\n   * All clicks on document\n   * @param {MouseEvent} event - Click\n   */\n  documentClicked(event) {\n    /**\n     * Close Inline Toolbar when nothing selected\n     * Do not fire check on clicks at the Inline Toolbar buttons\n     */\n    const clickedOnInlineToolbarButton = event.target.closest(`.${this.Editor.InlineToolbar.CSS.inlineToolbar}`);\n    const clickedInsideofEditor = event.target.closest(`.${this.CSS.editorWrapper}`);\n\n    /** Clear highlightings and pointer on BlockManager */\n    if (!clickedInsideofEditor && !Selection.isAtEditor) {\n      this.Editor.BlockManager.dropPointer();\n      this.Editor.Toolbar.close();\n    }\n\n    if (!clickedOnInlineToolbarButton) {\n      this.Editor.InlineToolbar.handleShowingEvent(event);\n    }\n\n    if (Selection.isAtEditor) {\n      this.Editor.BlockManager.setCurrentBlockByChildNode(Selection.anchorNode);\n    }\n  }\n\n  /**\n   * All clicks on the redactor zone\n   *\n   * @param {MouseEvent} event\n   *\n   * @description\n   * 1. Save clicked Block as a current {@link BlockManager#currentNode}\n   *      it uses for the following:\n   *      - add CSS modifier for the selected Block\n   *      - on Enter press, we make a new Block under that\n   *\n   * 2. Move and show the Toolbar\n   *\n   * 3. Set a Caret\n   *\n   * 4. By clicks on the Editor's bottom zone:\n   *      - if last Block is empty, set a Caret to this\n   *      - otherwise, add a new empty Block and set a Caret to that\n   *\n   * 5. Hide the Inline Toolbar\n   *\n   * @see selectClickedBlock\n   *\n   */\n  redactorClicked(event) {\n    const clickedNode = event.target;\n\n    /**\n     * Select clicked Block as Current\n     */\n    try {\n      /**\n       * Renew Current Block\n       */\n      this.Editor.BlockManager.setCurrentBlockByChildNode(clickedNode);\n\n      /**\n       * Highlight Current Node\n       */\n      this.Editor.BlockManager.highlightCurrentNode();\n    } catch (e) {\n      /**\n       * If clicked outside first-level Blocks, set Caret to the last empty Block\n       */\n      this.Editor.Caret.setToTheLastBlock();\n    }\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n\n    /**\n     * Move and open toolbar\n     */\n    this.Editor.Toolbar.open();\n\n    /**\n     * Hide the Plus Button\n     */\n    this.Editor.Toolbar.plusButton.hide();\n\n    if (!this.Editor.BlockManager.currentBlock) {\n      this.Editor.BlockManager.insert();\n    }\n\n    /**\n     * Show the Plus Button if:\n     * - Block is an initial-block (Text)\n     * - Block is empty\n     */\n    let isInitialBlock = this.Editor.Tools.isInitial(this.Editor.BlockManager.currentBlock.tool),\n      isEmptyBlock = this.Editor.BlockManager.currentBlock.isEmpty;\n\n    if (isInitialBlock && isEmptyBlock) {\n      this.Editor.Toolbar.plusButton.show();\n    }\n  }\n\n  /**\n   * Append prebuilded sprite with SVG icons\n   */\n  appendSVGSprite() {\n    let spriteHolder = $.make('div');\n\n    spriteHolder.hidden = true;\n    spriteHolder.style.display = 'none';\n    spriteHolder.innerHTML = sprite;\n\n    $.append(this.nodes.wrapper, spriteHolder);\n  }\n\n  /**\n   * Clean editor`s UI\n   */\n  destroy() {\n    this.nodes.holder.innerHTML = '';\n  }\n}\n","'use strict';\n\n/**\n * Extend Element interface to include prefixed and experimental properties\n */\ninterface Element {\n  matchesSelector: (selector: string) => boolean;\n  mozMatchesSelector: (selector: string) => boolean;\n  oMatchesSelector: (selector: string) => boolean;\n\n  prepend: (nodes: Node|Node[]|any) => void;\n}\n\n/**\n * The Element.matches() method returns true if the element\n * would be selected by the specified selector string;\n * otherwise, returns false.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill}\n */\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.matchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.oMatchesSelector ||\n    Element.prototype.webkitMatchesSelector ||\n    function(s) {\n      const matches = (this.document || this.ownerDocument).querySelectorAll(s);\n      let i = matches.length;\n\n      while (--i >= 0 && matches.item(i) !== this) {\n      }\n\n      return i > -1;\n    };\n}\n\n/**\n * The Element.closest() method returns the closest ancestor\n * of the current element (or the current element itself) which\n * matches the selectors given in parameter.\n * If there isn't such an ancestor, it returns null.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill}\n */\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function(s) {\n    let el = this;\n\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = el.parentElement || el.parentNode;\n    } while (el !== null);\n\n    return null;\n  };\n}\n\n/**\n * The ParentNode.prepend method inserts a set of Node objects\n * or DOMString objects before the first child of the ParentNode.\n * DOMString objects are inserted as equivalent Text nodes.\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/prepend#Polyfill}\n */\nif (!Element.prototype.prepend) {\n  Element.prototype.prepend = function prepend(nodes: Node|Node[]|any) {\n    const docFrag = document.createDocumentFragment();\n\n    if (!Array.isArray(nodes)) {\n      nodes = [ nodes ];\n    }\n\n    nodes.forEach((node: Node|any) => {\n      const isNode = node instanceof Node;\n\n      docFrag.appendChild(isNode ? node : document.createTextNode(String(node)));\n    });\n\n    this.insertBefore(docFrag, this.firstChild);\n  };\n}\n","/**\n * TextRange interface fot IE9-\n */\nimport _ from './utils';\n\ninterface TextRange {\n  boundingTop: number;\n  boundingLeft: number;\n  boundingBottom: number;\n  boundingRight: number;\n  boundingHeight: number;\n  boundingWidth: number;\n}\n\n/**\n * Interface for object returned by document.selection in IE9-\n */\ninterface MSSelection {\n  createRange: () => TextRange;\n  type: string;\n}\n\n/**\n * Extends Document interface for IE9-\n */\ninterface Document {\n  selection?: MSSelection;\n}\n\n/**\n * Working with selection\n * @typedef {Selection} Selection\n */\nexport default class SelectionUtils {\n\n  /**\n   * Editor styles\n   * @return {{editorWrapper: string, editorZone: string}}\n   * @constructor\n   */\n  static get CSS(): {editorWrapper: string, editorZone: string} {\n    return {\n      editorWrapper : 'codex-editor',\n      editorZone    : 'codex-editor__redactor',\n    };\n  }\n\n  /**\n   * Returns selected anchor\n   * {@link https://developer.mozilla.org/ru/docs/Web/API/Selection/anchorNode}\n   * @return {Node|null}\n   */\n  static get anchorNode(): Node|null {\n    const selection = window.getSelection();\n\n    return selection ? selection.anchorNode : null;\n  }\n\n  /**\n   * Returns selection offset according to the anchor node\n   * {@link https://developer.mozilla.org/ru/docs/Web/API/Selection/anchorOffset}\n   * @return {Number|null}\n   */\n  static get anchorOffset(): number|null {\n    const selection = window.getSelection();\n\n    return selection ? selection.anchorOffset : null;\n  }\n\n  /**\n   * Is current selection range collapsed\n   * @return {boolean|null}\n   */\n  static get isCollapsed(): boolean|null {\n    const selection = window.getSelection();\n\n    return selection ? selection.isCollapsed : null;\n  }\n\n  /**\n   * Check current selection if it is at Editor's zone\n   * @return {boolean}\n   */\n  static get isAtEditor(): boolean {\n    const selection = SelectionUtils.get();\n\n    /**\n     * Something selected on document\n     */\n    let selectedNode = (selection.anchorNode || selection.focusNode) as HTMLElement;\n\n    if (selectedNode && selectedNode.nodeType === Node.TEXT_NODE) {\n      selectedNode = selectedNode.parentNode as HTMLElement;\n    }\n\n    let editorZone = null;\n    if (selectedNode) {\n      editorZone = selectedNode.closest(`.${SelectionUtils.CSS.editorZone}`);\n    }\n\n    /**\n     * SelectionUtils is not out of Editor because Editor's wrapper was found\n     */\n    return editorZone && editorZone.nodeType === Node.ELEMENT_NODE;\n  }\n\n  /**\n   * Return first range\n   * @return {Range|null}\n   */\n  static get range(): Range {\n    const selection = window.getSelection();\n\n    return selection && selection.rangeCount ? selection.getRangeAt(0) : null;\n  }\n\n  /**\n   * Calculates position and size of selected text\n   * @return {{x, y, width, height, top?, left?, bottom?, right?}}\n   */\n  static get rect(): DOMRect|ClientRect {\n    let sel: Selection|MSSelection = (document as Document).selection,\n      range: TextRange|Range;\n\n    let rect = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    } as DOMRect;\n\n    if (sel && sel.type !== 'Control') {\n      sel = sel as MSSelection;\n      range = sel.createRange() as TextRange;\n      rect.x = range.boundingLeft;\n      rect.y = range.boundingTop;\n      rect.width = range.boundingWidth;\n      rect.height = range.boundingHeight;\n\n      return rect;\n    }\n\n    if (!window.getSelection) {\n      _.log('Method window.getSelection is not supported', 'warn');\n      return rect;\n    }\n\n    sel = window.getSelection();\n\n    if (!sel.rangeCount) {\n      _.log('Method SelectionUtils.rangeCount() is not supported', 'warn');\n      return rect;\n    }\n\n    range = sel.getRangeAt(0).cloneRange() as Range;\n\n    if (range.getBoundingClientRect) {\n      rect = range.getBoundingClientRect() as DOMRect;\n    }\n    // Fall back to inserting a temporary element\n    if (rect.x === 0 && rect.y === 0) {\n      const span = document.createElement('span');\n\n      if (span.getBoundingClientRect) {\n        // Ensure span has dimensions and position by\n        // adding a zero-width space character\n        span.appendChild( document.createTextNode('\\u200b') );\n        range.insertNode(span);\n        rect = span.getBoundingClientRect() as DOMRect;\n\n        const spanParent = span.parentNode;\n\n        spanParent.removeChild(span);\n\n        // Glue any broken text nodes back together\n        spanParent.normalize();\n      }\n    }\n\n    return rect;\n  }\n\n  /**\n   * Returns selected text as String\n   * @returns {string}\n   */\n  static get text(): string {\n    return window.getSelection ? window.getSelection().toString() : '';\n  }\n\n  /**\n   * Returns window SelectionUtils\n   * {@link https://developer.mozilla.org/ru/docs/Web/API/Window/getSelection}\n   * @return {Selection}\n   */\n  public static get(): Selection {\n    return window.getSelection();\n  }\n\n  public instance: Selection = null;\n  public selection: Selection = null;\n\n  /**\n   * This property can store SelectionUtils's range for restoring later\n   * @type {Range|null}\n   */\n  public savedSelectionRange: Range = null;\n\n  /**\n   * Save SelectionUtils's range\n   */\n  public save(): void {\n    this.savedSelectionRange = SelectionUtils.range;\n  }\n\n  /**\n   * Restore saved SelectionUtils's range\n   */\n  public restore(): void {\n    if (!this.savedSelectionRange) {\n      return;\n    }\n\n    const sel = window.getSelection();\n\n    sel.removeAllRanges();\n    sel.addRange(this.savedSelectionRange);\n  }\n\n  /**\n   * Clears saved selection\n   */\n  public clearSaved(): void {\n    this.savedSelectionRange = null;\n  }\n\n  /**\n   * Looks ahead to find passed tag from current selection\n   *\n   * @param  {String} tagName       - tag to found\n   * @param  {String} [className]   - tag's class name\n   * @param  {Number} [searchDepth] - count of tags that can be included. For better performance.\n   * @return {HTMLElement|null}\n   */\n  public findParentTag(tagName: string, className?: string, searchDepth = 10): HTMLElement|null {\n    const selection = window.getSelection();\n    let parentTag = null;\n\n    /**\n     * If selection is missing or no anchorNode or focusNode were found then return null\n     */\n    if (!selection || !selection.anchorNode || !selection.focusNode) {\n      return null;\n    }\n\n    /**\n     * Define Nodes for start and end of selection\n     */\n    const boundNodes = [\n      /** the Node in which the selection begins */\n      selection.anchorNode as HTMLElement,\n      /** the Node in which the selection ends */\n      selection.focusNode as HTMLElement,\n    ];\n\n    /**\n     * For each selection parent Nodes we try to find target tag [with target class name]\n     * It would be saved in parentTag variable\n     */\n    boundNodes.forEach((parent) => {\n      /** Reset tags limit */\n      let searchDepthIterable = searchDepth;\n\n      while (searchDepthIterable > 0 && parent.parentNode) {\n        /**\n         * Check tag's name\n         */\n        if (parent.tagName === tagName) {\n          /**\n           * Save the result\n           */\n          parentTag = parent;\n\n          /**\n           * Optional additional check for class-name mismatching\n           */\n          if (className && parent.classList && !parent.classList.contains(className)) {\n            parentTag = null;\n          }\n\n          /**\n           * If we have found required tag with class then go out from the cycle\n           */\n          if (parentTag) {\n            break;\n          }\n        }\n\n        /**\n         * Target tag was not found. Go up to the parent and check it\n         */\n        parent = parent.parentNode as HTMLElement;\n        searchDepthIterable--;\n      }\n    });\n\n    /**\n     * Return found tag or null\n     */\n    return parentTag;\n  }\n\n  /**\n   * Expands selection range to the passed parent node\n   *\n   * @param {HTMLElement} element\n   */\n  public expandToTag(element: HTMLElement): void {\n    const selection = window.getSelection();\n\n    selection.removeAllRanges();\n    const range = document.createRange();\n\n    range.selectNodeContents(element);\n    selection.addRange(range);\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Paragraph=e():t.Paragraph=e()}(window,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"/\",n(n.s=0)}([function(t,e,n){\"use strict\";var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}();n(1).toString();\n/**\n * Base Paragraph Block for the CodeX Editor.\n * Represents simple paragraph\n *\n * @author CodeX (team@ifmo.su)\n * @copyright CodeX 2018\n * @license The MIT License (MIT)\n * @version 2.0.0\n */\nvar o=function(){function t(e){var n=e.data,r=(e.config,e.api);!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.api=r,this._CSS={block:this.api.styles.block,wrapper:\"ce-paragraph\"},this._data={},this._element=this.drawView(),this.data=n}return r(t,null,[{key:\"displayInToolbox\",get:function(){return!1}}]),r(t,[{key:\"drawView\",value:function(){var t=document.createElement(\"DIV\");return t.classList.add(this._CSS.wrapper,this._CSS.block),t.contentEditable=!0,t}},{key:\"render\",value:function(){return this._element}},{key:\"merge\",value:function(t){var e={text:this.data.text+t.text};this.data=e}},{key:\"validate\",value:function(t){return\"\"!==t.text.trim()}},{key:\"save\",value:function(t){return{text:t.innerHTML}}},{key:\"data\",get:function(){var t=this._element.innerHTML;return this._data.text=t,this._data},set:function(t){this._data=t||{},this._element.innerHTML=this._data.text||\"\"}}],[{key:\"onPaste\",get:function(){return{tags:[\"P\"],handler:function(t){return{text:t.innerHTML}}}}}]),t}();t.exports=o},function(t,e,n){var r=n(2);\"string\"==typeof r&&(r=[[t.i,r,\"\"]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(4)(r,o);r.locals&&(t.exports=r.locals)},function(t,e,n){(t.exports=n(3)(!1)).push([t.i,\".ce-paragraph {\\n    line-height: 1.6em;\\n    outline: none;\\n}\\n\\n.ce-paragraph p:first-of-type{\\n    margin-top: 0;\\n}\\n\\n.ce-paragraph p:last-of-type{\\n    margin-bottom: 0;\\n}\\n\",\"\"])},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||\"\",r=t[3];if(!r)return n;if(e&&\"function\"==typeof btoa){var o=function(t){return\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+\" */\"}(r),i=r.sources.map(function(t){return\"/*# sourceURL=\"+r.sourceRoot+t+\" */\"});return[n].concat(i).concat([o]).join(\"\\n\")}return[n].join(\"\\n\")}(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n}).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];\"number\"==typeof i&&(r[i]=!0)}for(o=0;o<t.length;o++){var a=t[o];\"number\"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]=\"(\"+a[2]+\") and (\"+n+\")\"),e.push(a))}},e}},function(t,e,n){var r={},o=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),i=function(t){var e={};return function(t){if(\"function\"==typeof t)return t();if(void 0===e[t]){var n=function(t){return document.querySelector(t)}.call(this,t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}}(),a=null,s=0,u=[],f=n(5);function c(t,e){for(var n=0;n<t.length;n++){var o=t[n],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(b(o.parts[a],e))}else{var s=[];for(a=0;a<o.parts.length;a++)s.push(b(o.parts[a],e));r[o.id]={id:o.id,refs:1,parts:s}}}}function l(t,e){for(var n=[],r={},o=0;o<t.length;o++){var i=t[o],a=e.base?i[0]+e.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}function p(t,e){var n=i(t.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var r=u[u.length-1];if(\"top\"===t.insertAt)r?r.nextSibling?n.insertBefore(e,r.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),u.push(e);else if(\"bottom\"===t.insertAt)n.appendChild(e);else{if(\"object\"!=typeof t.insertAt||!t.insertAt.before)throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");var o=i(t.insertInto+\" \"+t.insertAt.before);n.insertBefore(e,o)}}function d(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=u.indexOf(t);e>=0&&u.splice(e,1)}function h(t){var e=document.createElement(\"style\");return void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),v(e,t.attrs),p(t,e),e}function v(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function b(t,e){var n,r,o,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var u=s++;n=a||(a=h(e)),r=m.bind(null,n,u,!1),o=m.bind(null,n,u,!0)}else t.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=function(t){var e=document.createElement(\"link\");return void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),t.attrs.rel=\"stylesheet\",v(e,t.attrs),p(t,e),e}(e),r=function(t,e,n){var r=n.css,o=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\");var a=new Blob([r],{type:\"text/css\"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,n,e),o=function(){d(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(e),r=function(t,e){var n=e.css,r=e.media;r&&t.setAttribute(\"media\",r);if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){d(n)});return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");(e=e||{}).attrs=\"object\"==typeof e.attrs?e.attrs:{},e.singleton||\"boolean\"==typeof e.singleton||(e.singleton=o()),e.insertInto||(e.insertInto=\"head\"),e.insertAt||(e.insertAt=\"bottom\");var n=l(t,e);return c(n,e),function(t){for(var o=[],i=0;i<n.length;i++){var a=n[i];(s=r[a.id]).refs--,o.push(s)}t&&c(l(t,e),e);for(i=0;i<o.length;i++){var s;if(0===(s=o[i]).refs){for(var u=0;u<s.parts.length;u++)s.parts[u]();delete r[s.id]}}}};var y=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join(\"\\n\")}}();function m(t,e,n,r){var o=n?\"\":r.css;if(t.styleSheet)t.styleSheet.cssText=y(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}},function(t,e){t.exports=function(t){var e=\"undefined\"!=typeof window&&window.location;if(!e)throw new Error(\"fixUrls requires window.location\");if(!t||\"string\"!=typeof t)return t;var n=e.protocol+\"//\"+e.host,r=n+e.pathname.replace(/\\/[^\\/]*$/,\"/\");return t.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(t,e){var o,i=e.trim().replace(/^\"(.*)\"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(i)?t:(o=0===i.indexOf(\"//\")?i:0===i.indexOf(\"/\")?n+i:r+i.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(o)+\")\")})}}])});","/**\n * @typedef {Object} ChainData\n * @property {Object} data - data that will be passed to the success or fallback\n * @property {Function} function - function's that must be called asynchronically\n */\ninterface ChainData {\n  data: any;\n  function: (...args: any[]) => any;\n}\n\n/**\n * Codex Editor Util\n */\nexport default class Util {\n  /**\n   * Custom logger\n   *\n   * @param {string} msg  - message\n   * @param {string} type - logging type 'log'|'warn'|'error'|'info'\n   * @param {*} args      - argument to log with a message\n   */\n  public static log(msg: string, type: string = 'log', args?: any): void {\n\n    if (!args) {\n      if (['time', 'timeEnd'].includes(type)) {\n        msg = `[codex-editor]: ${msg}`;\n      } else {\n        args = msg || 'undefined';\n        msg = '[codex-editor]: %o';\n      }\n    } else {\n      msg  = '[codex-editor]: ' + msg;\n    }\n\n    try {\n      if ( 'console' in window && window.console[ type ] ) {\n        if ( args ) { window.console[ type ]( msg, args ); } else { window.console[ type ]( msg ); }\n      }\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  /**\n   * Returns basic keycodes as constants\n   * @return {{}}\n   */\n  static get keyCodes(): object {\n    return {\n      BACKSPACE: 8,\n      TAB: 9,\n      ENTER: 13,\n      SHIFT: 16,\n      CTRL: 17,\n      ALT: 18,\n      ESC: 27,\n      SPACE: 32,\n      LEFT: 37,\n      UP: 38,\n      DOWN: 40,\n      RIGHT: 39,\n      DELETE: 46,\n      META: 91,\n    };\n  }\n\n  /**\n   * Fires a promise sequence asyncronically\n   *\n   * @param {ChainData[]} chains - list or ChainData's\n   * @param {Function} success - success callback\n   * @param {Function} fallback - callback that fires in case of errors\n   *\n   * @return {Promise}\n   */\n  public static async sequence(chains: ChainData[], success = () => {}, fallback = () => {}): Promise<void> {\n    /**\n     * Decorator\n     *\n     * @param {ChainData} chainData\n     *\n     * @param {Function} successCallback\n     * @param {Function} fallbackCallback\n     *\n     * @return {Promise}\n     */\n    async function waitNextBlock(\n      chainData: ChainData,\n      successCallback: (data: any) => void,\n      fallbackCallback: (data: any) => void,\n    ): Promise<void> {\n      try {\n        await chainData.function(chainData.data);\n        await successCallback(typeof chainData.data !== 'undefined' ? chainData.data : {});\n      } catch (e) {\n        fallbackCallback(typeof chainData.data !== 'undefined' ? chainData.data : {});\n      }\n    }\n\n    /**\n     * pluck each element from queue\n     * First, send resolved Promise as previous value\n     * Each plugins \"prepare\" method returns a Promise, that's why\n     * reduce current element will not be able to continue while can't get\n     * a resolved Promise\n     */\n    return await chains.reduce(async (previousValue, currentValue) => {\n      await previousValue;\n      return waitNextBlock(currentValue, success, fallback);\n    }, Promise.resolve());\n  }\n\n  /**\n   * Make array from array-like collection\n   *\n   * @param {ArrayLike} collection\n   *\n   * @return {Array}\n   */\n  public static array(collection: ArrayLike<any>): any[] {\n    return Array.prototype.slice.call(collection);\n  }\n\n  /**\n   * Check if passed variable is a function\n   * @param {*} fn\n   * @return {boolean}\n   */\n  public static isFunction(fn: any): boolean {\n    return typeof fn === 'function';\n  }\n\n  /**\n   * Check if passed function is a class\n   * @param {function} fn\n   * @return {boolean}\n   */\n  public static isClass(fn: any): boolean {\n    return typeof fn === 'function' && /^\\s*class\\s+/.test(fn.toString());\n  }\n\n  /**\n   * Checks if object is empty\n   *\n   * @param {Object} object\n   * @return {boolean}\n   */\n  public static isEmpty(object: object): boolean {\n    return Object.keys(object).length === 0 && object.constructor === Object;\n  }\n\n  /**\n   * Check if passed object is a Promise\n   * @param  {*}  object - object to check\n   * @return {Boolean}\n   */\n  public static isPromise(object: any): boolean {\n    return Promise.resolve(object) === object;\n  }\n\n  /**\n   * Check if passed element is contenteditable\n   * @param {HTMLElement} element\n   * @return {boolean}\n   */\n  public static isContentEditable(element: HTMLElement): boolean {\n    return element.contentEditable === 'true';\n  }\n\n  /**\n   * Delays method execution\n   *\n   * @param {Function} method\n   * @param {Number} timeout\n   */\n  public static delay(method: (...args: any[]) => any, timeout: number) {\n    return function() {\n      const context = this,\n        args = arguments;\n\n      window.setTimeout(() => method.apply(context, args), timeout);\n    };\n  }\n\n  /**\n   * Get file extension\n   *\n   * @param {File} file\n   * @return string\n   */\n  public static getFileExtension(file: File): string {\n    return file.name.split('.').pop();\n  }\n\n  /**\n   * Check if string is MIME type\n   *\n   * @param {string} type\n   * @return boolean\n   */\n  public static isValidMimeType(type: string): boolean {\n    return /^[-\\w]+\\/([-+\\w]+|\\*)$/.test(type);\n  }\n\n  /**\n   * Debouncing method\n   * Call method after passed time\n   *\n   * Note that this method returns Function and declared variable need to be called\n   *\n   * @param {Function} func - function that we're throttling\n   * @param {Number} wait - time in milliseconds\n   * @param {Boolean} immediate - call now\n   * @return {Function}\n   */\n  public static debounce(func: () => void, wait: number , immediate: boolean): () => void {\n    let timeout;\n\n    return () => {\n      const context = this,\n        args = arguments;\n\n      const later = () => {\n        timeout = null;\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n\n      const callNow = immediate && !timeout;\n\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(later, wait);\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  }\n}\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":root {\\n  /**\\n   * Selection color\\n   */\\n  --selectionColor: rgba(61,166,239,0.63);\\n\\n  /**\\n   * Toolbar buttons\\n   */\\n  --bg-light: #eff2f5;\\n\\n  /**\\n   * All gray texts: placeholders, settings\\n   */\\n  --grayText: #707684;\\n\\n  /**\\n   * Blue icons\\n   */\\n  --color-active-icon: #388AE5;\\n\\n  /**\\n   * Gray border, loaders\\n   */\\n  --color-gray-border: #E8E8EB;\\n\\n  /**\\n   * Block content width\\n   */\\n  --content-width: 650px;\\n\\n  /**\\n   * Toolbar buttons height and width\\n   */\\n  --toolbar-buttons-size: 34px;\\n\\n  /**\\n   * Toolbar Plus Button and Toolbox buttons height and width\\n   */\\n  --toolbox-buttons-size: 24px;\\n\\n  /**\\n   * Confirm deletion bg\\n   */\\n  --color-confirm: #E24A4A;\\n}\\n/**\\n* Editor wrapper\\n*/\\n.codex-editor {\\n  position: relative;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n}\\n.codex-editor .hide {\\n    display: none;\\n  }\\n.codex-editor__redactor {\\n    padding-bottom: 300px;\\n  }\\n.codex-editor svg {\\n    fill: currentColor;\\n    vertical-align: middle;\\n    max-height: 100%;\\n  }\\n/**\\n * Set color for native selection\\n */\\n::-moz-selection{\\n  background-color: rgba(61,166,239,0.63);\\n  background-color: var(--selectionColor);\\n}\\n::selection{\\n  background-color: rgba(61,166,239,0.63);\\n  background-color: var(--selectionColor);\\n}\\n/**\\n * Add placeholder to content editable elements with data attribute\\n * data-placeholder=\\\"Hello world!\\\"\\n */\\n[contentEditable=true][data-placeholder]:empty::before{\\n  content: attr(data-placeholder);\\n  color: #707684;\\n  color: var(--grayText);\\n  font-weight: normal;\\n}\\n[contentEditable=true][data-placeholder]:empty:focus::before {\\n  opacity: 0.3;\\n}\\n.ce-toolbar {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  /*opacity: 0;*/\\n  /*visibility: hidden;*/\\n  -webkit-transition: opacity 100ms ease;\\n  transition: opacity 100ms ease;\\n  will-change: opacity, transform;\\n  display: none;\\n}\\n.ce-toolbar--opened {\\n    display: block;\\n    /*opacity: 1;*/\\n    /*visibility: visible;*/\\n  }\\n.ce-toolbar__content {\\n    max-width: 650px;\\n    max-width: var(--content-width);\\n    margin: 0 auto;\\n    position: relative;\\n  }\\n.ce-toolbar__plus {\\n  color: #707684;\\n  color: var(--grayText);\\n  cursor: pointer;\\n  width: 24px;\\n  width: var(--toolbox-buttons-size);\\n  height: 24px;\\n  height: var(--toolbox-buttons-size);\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center\\n  }\\n.ce-toolbar__plus:not(:last-of-type){\\n  margin-right: 10px;\\n    }\\n.ce-toolbar__plus {\\n\\n    position: absolute;\\n    left: calc(calc(24px + 10px) * -1);\\n    left: calc(calc(var(--toolbox-buttons-size) + 10px) * -1);\\n  }\\n.ce-toolbar__plus:hover,\\n    .ce-toolbar__plus--active {\\n  color: #388AE5;\\n  color: var(--color-active-icon);\\n    }\\n.ce-toolbar__plus--active{\\n  -webkit-animation: bounceIn 0.75s 1;\\n          animation: bounceIn 0.75s 1;\\n  -webkit-animation-fill-mode: forwards;\\n          animation-fill-mode: forwards;\\n    }\\n.ce-toolbar__plus--hidden {\\n      display: none;\\n    }\\n.ce-toolbar__plus,\\n  .ce-toolbar .ce-toolbox {\\n    top: 50%;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%);\\n  }\\n/**\\n   * Block actions Zone\\n   * -------------------------\\n   */\\n.ce-toolbar__actions {\\n    position: absolute;\\n    right: 0;\\n    top: 10px;\\n    padding-right: 16px;\\n  }\\n.ce-toolbar__actions-buttons {\\n      text-align: right;\\n    }\\n.ce-toolbar__settings-btn {\\n    display: inline-block;\\n    width: 24px;\\n    height: 24px;\\n    color: #707684;\\n    color: var(--grayText);\\n    cursor: pointer;\\n  }\\n.ce-toolbox {\\n    position: absolute;\\n    visibility: hidden;\\n    -webkit-transition: opacity 100ms ease;\\n    transition: opacity 100ms ease;\\n    will-change: opacity;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: horizontal;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: row;\\n            flex-direction: row;\\n}\\n.ce-toolbox--opened {\\n        opacity: 1;\\n        visibility: visible;\\n    }\\n.ce-toolbox__button {\\n  color: #707684;\\n  color: var(--grayText);\\n  cursor: pointer;\\n  width: 24px;\\n  width: var(--toolbox-buttons-size);\\n  height: 24px;\\n  height: var(--toolbox-buttons-size);\\n  display: -webkit-inline-box;\\n  display: -ms-inline-flexbox;\\n  display: inline-flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n    }\\n.ce-toolbox__button:not(:last-of-type){\\n  margin-right: 10px;\\n    }\\n.ce-toolbox__button:hover,\\n    .ce-toolbox__button--active {\\n  color: #388AE5;\\n  color: var(--color-active-icon);\\n    }\\n.ce-toolbox__button--active{\\n  -webkit-animation: bounceIn 0.75s 1;\\n          animation: bounceIn 0.75s 1;\\n  -webkit-animation-fill-mode: forwards;\\n          animation-fill-mode: forwards;\\n    }\\n.ce-inline-toolbar {\\n  position: absolute;\\n  background-color: #FFFFFF;\\n  -webkit-box-shadow: 0 8px 23px -6px rgba(21,40,54,0.31), 22px -14px 34px -18px rgba(33,48,73,0.26);\\n          box-shadow: 0 8px 23px -6px rgba(21,40,54,0.31), 22px -14px 34px -18px rgba(33,48,73,0.26);\\n  border-radius: 4px;\\n  z-index: 2\\n}\\n.ce-inline-toolbar::before {\\n  content: '';\\n  width: 15px;\\n  height: 15px;\\n  position: absolute;\\n  top: -7px;\\n  left: 50%;\\n  margin-left: -7px;\\n  -webkit-transform: rotate(-45deg);\\n          transform: rotate(-45deg);\\n  background-color: #fff;\\n  z-index: -1;\\n    }\\n.ce-inline-toolbar {\\n  padding: 6px;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%);\\n  display: none;\\n  -webkit-box-shadow: 0 6px 12px -6px rgba(131, 147, 173, 0.46),\\n              5px -12px 34px -13px rgba(97, 105, 134, 0.6),\\n              0 26px 52px 3px rgba(147, 165, 186, 0.24);\\n          box-shadow: 0 6px 12px -6px rgba(131, 147, 173, 0.46),\\n              5px -12px 34px -13px rgba(97, 105, 134, 0.6),\\n              0 26px 52px 3px rgba(147, 165, 186, 0.24);\\n}\\n.ce-inline-toolbar--showed {\\n    display: block;\\n  }\\n.ce-inline-toolbar [hidden] {\\n    display: none !important;\\n  }\\n.ce-inline-tool {\\n  display: inline-block;\\n  width: 34px;\\n  height: 34px;\\n  line-height: 34px;\\n  text-align: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  border: 0;\\n  outline: none;\\n  background-color: transparent;\\n  vertical-align: bottom;\\n  color: #707684;\\n  color: var(--grayText)\\n}\\n.ce-inline-tool:not(:last-of-type){\\n  margin-right: 5px;\\n    }\\n.ce-inline-tool:hover {\\n  background-color: #eff2f5;\\n  background-color: var(--bg-light);\\n    }\\n.ce-inline-tool {\\n  line-height: normal;\\n}\\n.ce-inline-tool--active {\\n  color: #388AE5;\\n  color: var(--color-active-icon);\\n    }\\n.ce-inline-tool--last {\\n    margin-right: 0 !important;\\n  }\\n.ce-inline-tool--link .icon {\\n      margin-top: -2px;\\n    }\\n.ce-inline-tool--link .icon--unlink {\\n      display: none;\\n    }\\n.ce-inline-tool--unlink .icon--link {\\n      display: none;\\n    }\\n.ce-inline-tool--unlink .icon--unlink {\\n      display: inline-block;\\n    }\\n.ce-inline-tool-input {\\n    background-color: #eff2f5;\\n    background-color: var(--bg-light);\\n    outline: none;\\n    border: 0;\\n    border-radius: 3px;\\n    margin: 6px 0 0;\\n    font-size: 13px;\\n    padding: 8px;\\n    width: 100%;\\n    -webkit-box-sizing: border-box;\\n            box-sizing: border-box;\\n    display: none\\n  }\\n.ce-inline-tool-input::-webkit-input-placeholder {\\n      color: #707684;\\n      color: var(--grayText);\\n    }\\n.ce-inline-tool-input:-ms-input-placeholder {\\n      color: #707684;\\n      color: var(--grayText);\\n    }\\n.ce-inline-tool-input::-ms-input-placeholder {\\n      color: #707684;\\n      color: var(--grayText);\\n    }\\n.ce-inline-tool-input::placeholder {\\n      color: #707684;\\n      color: var(--grayText);\\n    }\\n.ce-inline-tool-input--showed {\\n      display: block;\\n    }\\n.ce-settings {\\n  position: absolute;\\n  background-color: #FFFFFF;\\n  -webkit-box-shadow: 0 8px 23px -6px rgba(21,40,54,0.31), 22px -14px 34px -18px rgba(33,48,73,0.26);\\n          box-shadow: 0 8px 23px -6px rgba(21,40,54,0.31), 22px -14px 34px -18px rgba(33,48,73,0.26);\\n  border-radius: 4px;\\n  z-index: 2\\n}\\n.ce-settings::before {\\n  content: '';\\n  width: 15px;\\n  height: 15px;\\n  position: absolute;\\n  top: -7px;\\n  left: 50%;\\n  margin-left: -7px;\\n  -webkit-transform: rotate(-45deg);\\n          transform: rotate(-45deg);\\n  background-color: #fff;\\n  z-index: -1;\\n    }\\n.ce-settings {\\n  right: 5px;\\n  top: 35px;\\n  min-width: 124px\\n}\\n.ce-settings::before{\\n    left: auto;\\n    right: 12px;\\n  }\\n.ce-settings {\\n\\n  display: none;\\n}\\n.ce-settings--opened {\\n    display: block;\\n  }\\n.ce-settings__plugin-zone:not(:empty){\\n      padding: 6px 6px 0;\\n    }\\n.ce-settings__default-zone:not(:empty){\\n      padding: 6px;\\n    }\\n.ce-settings__button {\\n  display: inline-block;\\n  width: 34px;\\n  height: 34px;\\n  line-height: 34px;\\n  text-align: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  border: 0;\\n  outline: none;\\n  background-color: transparent;\\n  vertical-align: bottom;\\n  color: #707684;\\n  color: var(--grayText)\\n  }\\n.ce-settings__button:not(:last-of-type){\\n  margin-right: 5px;\\n    }\\n.ce-settings__button:hover {\\n  background-color: #eff2f5;\\n  background-color: var(--bg-light);\\n    }\\n.ce-settings__button {\\n    line-height: 32px;\\n  }\\n.ce-settings__button--active {\\n  color: #388AE5;\\n  color: var(--color-active-icon);\\n    }\\n.ce-settings__button--disabled {\\n        cursor: not-allowed !important;\\n        opacity: .3;\\n    }\\n.ce-settings__button--selected {\\n      color: #388AE5;\\n      color: var(--color-active-icon);\\n    }\\n.ce-settings__button--delete {\\n      -webkit-transition: background-color 300ms ease;\\n      transition: background-color 300ms ease;\\n      will-change: background-color;\\n    }\\n.ce-settings__button--delete .icon {\\n        -webkit-transition: -webkit-transform 200ms ease-out;\\n        transition: -webkit-transform 200ms ease-out;\\n        transition: transform 200ms ease-out;\\n        transition: transform 200ms ease-out, -webkit-transform 200ms ease-out;\\n        will-change: transform;\\n      }\\n.ce-settings__button--confirm {\\n      background-color: #E24A4A;\\n      background-color: var(--color-confirm);\\n      color: #fff\\n    }\\n.ce-settings__button--confirm:hover {\\n        background-color: rgb(213, 74, 74) !important;\\n        background-color: rgb(213, 74, 74) !important;\\n      }\\n.ce-settings__button--confirm .icon {\\n        -webkit-transform: rotate(90deg);\\n                transform: rotate(90deg);\\n      }\\n.ce-block:first-of-type {\\n    margin-top: 0;\\n  }\\n.ce-block--selected {\\n    background-image: linear-gradient(17deg, rgba(243, 248, 255, 0.03) 63.45%, rgba(207, 214, 229, 0.27) 98%);\\n    border-radius: 3px;\\n  }\\n.ce-block--stretched .ce-block__content {\\n    max-width: none;\\n  }\\n.ce-block__content {\\n    position: relative;\\n    max-width: 650px;\\n    max-width: var(--content-width);\\n    margin: 0 auto;\\n  }\\n.ce-block--drop-target .ce-block__content:before {\\n      content: '';\\n      position: absolute;\\n      top: 100%;\\n      left: -20px;\\n      margin-top: -1px;\\n      height: 8px;\\n      width: 8px;\\n      border: solid #388AE5;\\n      border: solid var(--color-active-icon);\\n      border-width: 1px 1px 0 0;\\n      -webkit-transform-origin: right;\\n              transform-origin: right;\\n      -webkit-transform: rotate(45deg);\\n              transform: rotate(45deg);\\n    }\\n.ce-block--drop-target .ce-block__content:after {\\n      content: '';\\n      position: absolute;\\n      top: 100%;\\n      height: 1px;\\n      width: 100%;\\n      color: #388AE5;\\n      color: var(--color-active-icon);\\n      background: repeating-linear-gradient(\\n        90deg,\\n        #388AE5,\\n        #388AE5 1px,\\n        #fff 1px,\\n        #fff 6px\\n      );\\n      background: repeating-linear-gradient(\\n        90deg,\\n        var(--color-active-icon),\\n        var(--color-active-icon) 1px,\\n        #fff 1px,\\n        #fff 6px\\n      );\\n    }\\n.wobble {\\n  -webkit-animation-name: wobble;\\n          animation-name: wobble;\\n  -webkit-animation-duration: 400ms;\\n          animation-duration: 400ms;\\n}\\n/**\\n * @author Nick Pettit - https://github.com/nickpettit/glide\\n */\\n@-webkit-keyframes wobble {\\n  from {\\n    -webkit-transform: translate3d(0, 0, 0);\\n            transform: translate3d(0, 0, 0);\\n  }\\n\\n  15% {\\n    -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -5deg);\\n            transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -5deg);\\n  }\\n\\n  30% {\\n    -webkit-transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 3deg);\\n            transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 3deg);\\n  }\\n\\n  45% {\\n    -webkit-transform: translate3d(-3%, 0, 0) rotate3d(0, 0, 1, -3deg);\\n            transform: translate3d(-3%, 0, 0) rotate3d(0, 0, 1, -3deg);\\n  }\\n\\n  60% {\\n    -webkit-transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 2deg);\\n            transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 2deg);\\n  }\\n\\n  75% {\\n    -webkit-transform: translate3d(-1%, 0, 0) rotate3d(0, 0, 1, -1deg);\\n            transform: translate3d(-1%, 0, 0) rotate3d(0, 0, 1, -1deg);\\n  }\\n\\n  to {\\n    -webkit-transform: translate3d(0, 0, 0);\\n            transform: translate3d(0, 0, 0);\\n  }\\n}\\n@keyframes wobble {\\n  from {\\n    -webkit-transform: translate3d(0, 0, 0);\\n            transform: translate3d(0, 0, 0);\\n  }\\n\\n  15% {\\n    -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -5deg);\\n            transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -5deg);\\n  }\\n\\n  30% {\\n    -webkit-transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 3deg);\\n            transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 3deg);\\n  }\\n\\n  45% {\\n    -webkit-transform: translate3d(-3%, 0, 0) rotate3d(0, 0, 1, -3deg);\\n            transform: translate3d(-3%, 0, 0) rotate3d(0, 0, 1, -3deg);\\n  }\\n\\n  60% {\\n    -webkit-transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 2deg);\\n            transform: translate3d(2%, 0, 0) rotate3d(0, 0, 1, 2deg);\\n  }\\n\\n  75% {\\n    -webkit-transform: translate3d(-1%, 0, 0) rotate3d(0, 0, 1, -1deg);\\n            transform: translate3d(-1%, 0, 0) rotate3d(0, 0, 1, -1deg);\\n  }\\n\\n  to {\\n    -webkit-transform: translate3d(0, 0, 0);\\n            transform: translate3d(0, 0, 0);\\n  }\\n}\\n@-webkit-keyframes bounceIn {\\n  from,\\n  20%,\\n  40%,\\n  60%,\\n  80%,\\n  to {\\n    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n            animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  0% {\\n    -webkit-transform: scale3d(0.86, 0.86, 0.86);\\n            transform: scale3d(0.86, 0.86, 0.86);\\n  }\\n\\n  20% {\\n    -webkit-transform: scale3d(1.1, 1.1, 1.1);\\n            transform: scale3d(1.1, 1.1, 1.1);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale3d(0.9, 0.9, 0.9);\\n            transform: scale3d(0.9, 0.9, 0.9);\\n  }\\n\\n  60% {\\n    -webkit-transform: scale3d(1.03, 1.03, 1.03);\\n            transform: scale3d(1.03, 1.03, 1.03);\\n  }\\n\\n  80% {\\n    -webkit-transform: scale3d(0.97, 0.97, 0.97);\\n            transform: scale3d(0.97, 0.97, 0.97);\\n  }\\n\\n  to {\\n    -webkit-transform: scale3d(1, 1, 1);\\n            transform: scale3d(1, 1, 1);\\n  }\\n}\\n@keyframes bounceIn {\\n  from,\\n  20%,\\n  40%,\\n  60%,\\n  80%,\\n  to {\\n    -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n            animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\\n  }\\n\\n  0% {\\n    -webkit-transform: scale3d(0.86, 0.86, 0.86);\\n            transform: scale3d(0.86, 0.86, 0.86);\\n  }\\n\\n  20% {\\n    -webkit-transform: scale3d(1.1, 1.1, 1.1);\\n            transform: scale3d(1.1, 1.1, 1.1);\\n  }\\n\\n  40% {\\n    -webkit-transform: scale3d(0.9, 0.9, 0.9);\\n            transform: scale3d(0.9, 0.9, 0.9);\\n  }\\n\\n  60% {\\n    -webkit-transform: scale3d(1.03, 1.03, 1.03);\\n            transform: scale3d(1.03, 1.03, 1.03);\\n  }\\n\\n  80% {\\n    -webkit-transform: scale3d(0.97, 0.97, 0.97);\\n            transform: scale3d(0.97, 0.97, 0.97);\\n  }\\n\\n  to {\\n    -webkit-transform: scale3d(1, 1, 1);\\n            transform: scale3d(1, 1, 1);\\n  }\\n}\\n/**\\n * Block Tool wrapper\\n */\\n.cdx-block {\\n  padding: 0.7em 0;\\n}\\n/**\\n * Input\\n */\\n.cdx-input {\\n  border: 1px solid #E8E8EB;\\n  border: 1px solid var(--color-gray-border);\\n  -webkit-box-shadow: inset 0 1px 2px 0 rgba(35, 44, 72, 0.06);\\n          box-shadow: inset 0 1px 2px 0 rgba(35, 44, 72, 0.06);\\n  border-radius: 3px;\\n  padding: 10px 12px;\\n  outline: none;\\n  width: 100%;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n}\\n/**\\n * Settings\\n */\\n.cdx-settings-button {\\n  display: inline-block;\\n  width: 34px;\\n  height: 34px;\\n  line-height: 34px;\\n  text-align: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  border: 0;\\n  outline: none;\\n  background-color: transparent;\\n  vertical-align: bottom;\\n  color: #707684;\\n  color: var(--grayText)\\n}\\n.cdx-settings-button:not(:last-of-type){\\n  margin-right: 5px;\\n    }\\n.cdx-settings-button:hover {\\n  background-color: #eff2f5;\\n  background-color: var(--bg-light);\\n    }\\n.cdx-settings-button--active {\\n  color: #388AE5;\\n  color: var(--color-active-icon);\\n    }\\n.cdx-settings-button--active {\\n    color: #388AE5;\\n    color: var(--color-active-icon);\\n  }\\n/**\\n * Loader\\n */\\n.cdx-loader {\\n  position: relative;\\n  border: 1px solid #E8E8EB;\\n  border: 1px solid var(--color-gray-border)\\n}\\n.cdx-loader::before {\\n    content: '';\\n    position: absolute;\\n    left: 50%;\\n    top: 50%;\\n    width: 18px;\\n    height: 18px;\\n    margin: -11px 0 0 -11px;\\n    border: 2px solid #E8E8EB;\\n    border: 2px solid var(--color-gray-border);\\n    border-left-color: #388AE5;\\n    border-left-color: var(--color-active-icon);\\n    border-radius: 50%;\\n    -webkit-animation: cdxRotation 1.2s infinite linear;\\n            animation: cdxRotation 1.2s infinite linear;\\n  }\\n@-webkit-keyframes cdxRotation {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n@keyframes cdxRotation {\\n  0% {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}