{"version":3,"sources":["webpack:///webpack/bootstrap 90f130a03cfb78ef2594","webpack:///./build/__tmp_babel_helpers.js","webpack:///./src/components/dom.js","webpack:///./src/codex.js","webpack:///./src/components/modules nonrecursive [^_](events.js|toolbar.js|tools.js|ui.js)$","webpack:///./src/components/modules/events.js","webpack:///./src/components/modules/toolbar.js","webpack:///./src/components/modules/tools.js","webpack:///./src/components/utils.js","webpack:///./src/components/modules/ui.js","webpack:///./src/styles/main.css","webpack:///./node_modules/css-loader/lib/css-base.js"],"names":["exports","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","classCallCheck","instance","TypeError","module","tagName","classNames","attributes","el","document","createElement","Array","isArray","classList","add","attrName","parent","elements","forEach","appendChild","selector","querySelector","querySelectorAll","modules","editorModules","map","config","moduleInstances","Promise","resolve","then","configuration","init","start","console","log","catch","error","constructModules","configureModules","Module","displayName","e","name","state","getModulesDiff","diff","moduleName","prepareDecorator","prepare","UI","Tools","holderId","placeholder","sanitizer","p","b","a","hideToolbar","tools","toolsConfig","Events","Editor","subscribers","eventName","callback","push","data","reduce","previousData","currentHandler","newData","Toolbar","nodes","wrapper","content","actions","plusButton","toolbox","settingsToggler","removeBlockButton","settings","pluginSettings","defaultSettings","CSS","toolbar","$","make","append","makeRemoveBlockButton","makeBlockSettingsPanel","toolsAvailable","toolsUnavailable","iconClassName","displayInToolbox","enableLineBreaks","toolClasses","hasOwnProperty","reject","toolName","sequenceData","getListOfPrepareFunctions","_","sequence","success","fallback","toolPreparationList","toolClass","function","toolInstances","chains","previousValue","currentValue","iteration","waitNextBlock","chainData","successCallback","fallbackCallback","editorWrapper","editorZone","holder","redactor","getElementById","Error","loadStyles","styles","require","tag","textContent","toString","head"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,U;;;;;;;AC3bA;AACA;;;AAGA;AACA,gCAAiC,iDAAiD,2CAA2C,yBAAyB,6BAA6B,oBAAoB,GAAG,uBAAuB,wBAAwB,OAAO;;AAEhQ;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;;AAElE;AACA","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 90f130a03cfb78ef2594","exports.createClass=function () {\n\n    function defineProperties(target, props) {\n\n        for(var i=0;i<props.length;i++) {\n\n            var descriptor=props[i];\n\n            descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target, descriptor.key, descriptor);\n\n        }\n\n    }return function (Constructor, protoProps, staticProps) {\n\n        if(protoProps)defineProperties(Constructor.prototype, protoProps);if(staticProps)defineProperties(Constructor, staticProps);return Constructor;\n\n    };\n\n}();exports.classCallCheck=function (instance, Constructor) {\n\n    if(!(instance instanceof Constructor)) {\n\n        throw new TypeError('Cannot call a class as a function');\n\n    }\n\n};\n\n\n// WEBPACK FOOTER //\n// ./build/__tmp_babel_helpers.js","/**\n * DOM manupulations helper\n */\nmodule.exports = class Dom {\n\n    /**\n     * Helper for making Elements with classname and attributes\n     *\n     * @param  {string} tagName           - new Element tag name\n     * @param  {array|string} classNames  - list or name of CSS classname(s)\n     * @param  {Object} attributes        - any attributes\n     * @return {Element}\n     */\n    static make(tagName, classNames, attributes) {\n\n        var el = document.createElement(tagName);\n\n        if ( Array.isArray(classNames) ) {\n\n            el.classList.add(...classNames);\n\n        } else if( classNames ) {\n\n            el.classList.add(classNames);\n\n        }\n\n        for (let attrName in attributes) {\n\n            el[attrName] = attributes[attrName];\n\n        }\n\n        return el;\n\n    }\n\n    /**\n     * Append one or several elements to the parent\n     *\n     * @param  {Element} parent    - where to append\n     * @param  {Element|Element[]} - element ore elements list\n     */\n    static append(parent, elements) {\n\n        if ( Array.isArray(elements) ) {\n\n            elements.forEach( el => parent.appendChild(el) );\n\n        } else {\n\n            parent.appendChild(elements);\n\n        }\n\n    }\n\n    /**\n     * Selector Decorator\n     *\n     * Returns first match\n     *\n     * @param {Element} el - element we searching inside. Default - DOM Document\n     * @param {String} selector - searching string\n     *\n     * @returns {Element}\n     */\n    static find(el = document, selector) {\n\n        return el.querySelector(selector);\n\n    }\n\n    /**\n     * Selector Decorator.\n     *\n     * Returns all matches\n     *\n     * @param {Element} el - element we searching inside. Default - DOM Document\n     * @param {String} selector - searching string\n     * @returns {NodeList}\n     */\n    static findAll(el = document, selector) {\n\n        return el.querySelectorAll(selector);\n\n    }\n\n};\n\n\n// WEBPACK FOOTER //\n// ./src/components/dom.js","/**\n * Codex Editor\n *\n * Short Description (눈_눈;)\n * @version 2.0.0\n *\n * How to start?\n * Example:\n *           new CodexEditor({\n *                holderId : 'codex-editor',\n *                initialBlock : 'paragraph',\n *                placeholder : 'Write your story....',\n *                tools: {\n *                    quote: Quote,\n *                    anotherTool : AnotherTool\n *                },\n *                toolsConfig: {\n *                     quote: {\n *                        iconClassname : 'quote-icon',\n *                        displayInToolbox : true,\n *                        enableLineBreaks : true\n *                     },\n *                     anotherTool: {\n *                        iconClassname : 'tool-icon'\n *                     }\n *                 }\n *            });\n *\n * - tools is an object: {\n *       pluginName: PluginClass,\n *       .....\n *   }\n * - toolsConfig is an additional configuration that uses Codex Editor API\n *      iconClassname - CSS classname of toolbox icon\n *      displayInToolbox - if you want to see your Tool in toolbox hided in \"plus\" button, than set \"True\". By default : \"False\"\n *      enableLineBreaks - by default enter creates new block that set as initialblock, but if you set this property \"True\", enter will break the lines in current block\n *\n * @author CodeX-Team <https://ifmo.su>\n *\n */\n\n/**\n * @typedef {CodexEditor} CodexEditor - editor class\n */\n\n/**\n * @typedef {Object} EditorConfig\n * @property {String} holderId - Element to append Editor\n * ...\n */\n\n'use strict';\n\n/**\n * Require Editor modules places in components/modules dir\n */\n// eslint-disable-next-line\nlet modules = editorModules.map( module => require('./components/modules/' + module ));\n\n/**\n * @class\n *\n * @classdesc CodeX Editor base class\n *\n * @property this.config - all settings\n * @property this.moduleInstances - constructed editor components\n *\n * @type {CodexEditor}\n */\nmodule.exports = class CodexEditor {\n\n    /** Editor version */\n    static get version() {\n\n        return VERSION;\n\n    }\n\n    /**\n     * @param {EditorConfig} config - user configuration\n     *\n     */\n    constructor(config) {\n\n        /**\n         * Configuration object\n         */\n        this.config = {};\n\n        /**\n         * Editor Components\n         */\n        this.moduleInstances = {};\n\n        Promise.resolve()\n            .then(() => {\n\n                this.configuration = config;\n\n            })\n            .then(() => this.init())\n            .then(() => this.start())\n            .then(() => {\n\n                console.log('CodeX Editor is ready');\n\n            })\n            .catch(error => {\n\n                console.log('CodeX Editor does not ready beecause of %o', error);\n\n            });\n\n    }\n\n    /**\n     * Setting for configuration\n     * @param {Object} config\n     */\n    set configuration(config = {}) {\n\n        this.config.holderId = config.holderId;\n        this.config.placeholder = config.placeholder || 'write your story...';\n        this.config.sanitizer = config.sanitizer || {\n            p: true,\n            b: true,\n            a: true\n        };\n\n        this.config.hideToolbar = config.hideToolbar ? config.hideToolbar : false;\n        this.config.tools = config.tools || {};\n        this.config.toolsConfig = config.toolsConfig || {};\n\n    }\n\n    /**\n     * Returns private property\n     * @returns {{}|*}\n     */\n    get configuration() {\n\n        return this.config;\n\n    }\n\n    /**\n     * Initializes modules:\n     *  - make and save instances\n     *  - configure\n     */\n    init() {\n\n        /**\n         * Make modules instances and save it to the @property this.moduleInstances\n         */\n        this.constructModules();\n\n        /**\n         * Modules configuration\n         */\n        this.configureModules();\n\n    }\n\n    /**\n     * Make modules instances and save it to the @property this.moduleInstances\n     */\n    constructModules() {\n\n        modules.forEach( Module => {\n\n            try {\n\n                /**\n                 * We use class name provided by displayName property\n                 *\n                 * On build, Babel will transform all Classes to the Functions so, name will always be 'Function'\n                 * To prevent this, we use 'babel-plugin-class-display-name' plugin\n                 * @see  https://www.npmjs.com/package/babel-plugin-class-display-name\n                 */\n\n                this.moduleInstances[Module.displayName] = new Module({\n                    config : this.configuration\n                });\n\n            } catch ( e ) {\n\n                console.log('Module %o skipped because %o', Module, e);\n\n            }\n\n        });\n\n    }\n\n    /**\n     * Modules instances configuration:\n     *  - pass other modules to the 'state' property\n     *  - ...\n     */\n    configureModules() {\n\n        for(let name in this.moduleInstances) {\n\n            /**\n             * Module does not need self-instance\n             */\n            this.moduleInstances[name].state = this.getModulesDiff( name );\n\n        }\n\n    }\n\n    /**\n     * Return modules without passed name\n     */\n    getModulesDiff( name ) {\n\n        let diff = {};\n\n        for(let moduleName in this.moduleInstances) {\n\n            /**\n             * Skip module with passed name\n             */\n            if (moduleName === name) {\n\n                continue;\n\n            }\n            diff[moduleName] = this.moduleInstances[moduleName];\n\n        }\n\n        return diff;\n\n    }\n\n    /**\n     * Start Editor!\n     *\n     * @return {Promise}\n     */\n    start() {\n\n        let prepareDecorator = module => module.prepare();\n\n        return Promise.resolve()\n            .then(prepareDecorator(this.moduleInstances.UI))\n            .then(prepareDecorator(this.moduleInstances.Tools))\n\n            .catch(function (error) {\n\n                console.log('Error occured', error);\n\n            });\n\n    }\n\n};\n\n// module.exports = (function (editor) {\n//\n//     'use strict';\n//\n//     editor.version = VERSION;\n//     editor.scriptPrefix = 'cdx-script-';\n//\n//     var init = function () {\n//\n//         editor.core          = require('./modules/core');\n//         editor.tools         = require('./modules/tools');\n//         editor.ui            = require('./modules/ui');\n//         editor.transport     = require('./modules/transport');\n//         editor.renderer      = require('./modules/renderer');\n//         editor.saver         = require('./modules/saver');\n//         editor.content       = require('./modules/content');\n//         editor.toolbar       = require('./modules/toolbar/toolbar');\n//         editor.callback      = require('./modules/callbacks');\n//         editor.draw          = require('./modules/draw');\n//         editor.caret         = require('./modules/caret');\n//         editor.notifications = require('./modules/notifications');\n//         editor.parser        = require('./modules/parser');\n//         editor.sanitizer     = require('./modules/sanitizer');\n//         editor.listeners     = require('./modules/listeners');\n//         editor.destroyer     = require('./modules/destroyer');\n//         editor.paste         = require('./modules/paste');\n//\n//     };\n//\n//     /**\n//      * @public\n//      * holds initial settings\n//      */\n//     editor.settings = {\n//         tools     : ['paragraph', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\n//         holderId  : 'codex-editor',\n//\n//         // Type of block showing on empty editor\n//         initialBlockPlugin: 'paragraph'\n//     };\n//\n//     /**\n//      * public\n//      *\n//      * Static nodes\n//      */\n//     editor.nodes = {\n//         holder            : null,\n//         wrapper           : null,\n//         toolbar           : null,\n//         inlineToolbar     : {\n//             wrapper : null,\n//             buttons : null,\n//             actions : null\n//         },\n//         toolbox           : null,\n//         notifications     : null,\n//         plusButton        : null,\n//         showSettingsButton: null,\n//         showTrashButton   : null,\n//         blockSettings     : null,\n//         pluginSettings    : null,\n//         defaultSettings   : null,\n//         toolbarButtons    : {}, // { type : DomEl, ... }\n//         redactor          : null\n//     };\n//\n//     /**\n//      * @public\n//      *\n//      * Output state\n//      */\n//     editor.state = {\n//         jsonOutput  : [],\n//         blocks      : [],\n//         inputs      : []\n//     };\n//\n//     /**\n//     * @public\n//     * Editor plugins\n//     */\n//     editor.tools = {};\n//\n//     editor.start = function (userSettings) {\n//\n//         init();\n//\n//         editor.core.prepare(userSettings)\n//\n//         // If all ok, make UI, bind events and parse initial-content\n//             .then(editor.ui.prepare)\n//             .then(editor.tools.prepare)\n//             .then(editor.sanitizer.prepare)\n//             .then(editor.paste.prepare)\n//             .then(editor.transport.prepare)\n//             .then(editor.renderer.makeBlocksFromData)\n//             .then(editor.ui.saveInputs)\n//             .catch(function (error) {\n//\n//                 editor.core.log('Initialization failed with error: %o', 'warn', error);\n//\n//             });\n//\n//     };\n//\n//     return editor;\n//\n// })({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/codex.js","var map = {\n\t\"./events.js\": 4,\n\t\"./toolbar.js\": 5,\n\t\"./tools.js\": 6,\n\t\"./ui.js\": 8\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/modules nonrecursive [^_](events.js|toolbar.js|tools.js|ui.js)$\n// module id = 3\n// module chunks = 0","/**\n * @module eventDispatcher\n *\n * Has two important methods:\n *    - {Function} on - appends subscriber to the event. If event doesn't exist - creates new one\n *    - {Function} emit - fires all subscribers with data\n *\n * @version 1.0.0\n */\nclass Events {\n\n    /**\n     * @param Editor\n     * @param Editor.modules {@link CodexEditor#moduleInstances}\n     * @param Editor.config {@link CodexEditor#configuration}\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * @constructor\n     *\n     * @property {Object} subscribers - all subscribers grouped by event name\n     */\n    constructor() {\n\n        this.subscribers = {};\n        this.Editor = null;\n\n    }\n\n    /**\n     * @param {String} eventName - event name\n     * @param {Function} callback - subscriber\n     */\n    on(eventName, callback) {\n\n        if (!(eventName in this.subscribers)) {\n\n            this.subscribers[eventName] = [];\n\n        }\n\n        // group by events\n        this.subscribers[eventName].push(callback);\n\n    }\n\n    /**\n     * @param {String} eventName - event name\n     * @param {Object} data - subscribers get this data when they were fired\n     */\n    emit(eventName, data) {\n\n        this.subscribers[eventName].reduce(function (previousData, currentHandler) {\n\n            let newData = currentHandler(previousData);\n\n            return newData ? newData : previousData;\n\n        }, data);\n\n    }\n\n    /**\n     * Destroyer\n     */\n    destroy() {\n\n        this.Editor = null;\n        this.subscribers = null;\n\n    }\n\n}\n\nmodule.exports = Events;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/events.js","/**\n *\n * «Toolbar» is the node that moves up/down over current block\n *\n *  ______________________________________ Toolbar ____________________________________________\n * |                                                                                           |\n * |  ..................... Content ....................   ......... Block Actions ..........  |\n * |  .                                                .   .                                .  |\n * |  .                                                .   . [Open Settings] [Remove Block] .  |\n * |  .  [Plus Button]  [Toolbox: {Tool1}, {Tool2}]    .   .                                .  |\n * |  .                                                .   .        [Settings Panel]        .  |\n * |  ..................................................   ..................................  |\n * |                                                                                           |\n * |___________________________________________________________________________________________|\n *\n *\n * Toolbox — its an Element contains tools buttons. Can be shown by Plus Button.\n *\n *  _______________ Toolbox _______________\n * |                                       |\n * | [Header] [Image] [List] [Quote] ...   |\n * |_______________________________________|\n *\n *\n * Settings Panel — is an Element with block settings:\n *\n *   ____ Settings Panel ____\n *  | ...................... |\n *  | .   Tool Settings    . |\n *  | ...................... |\n *  | .  Default Settings  . |\n *  | ...................... |\n *  |________________________|\n *\n *\n * @class\n * @classdesc Toolbar module\n *\n * @property {Object} nodes\n * @property {Element} nodes.wrapper        - Toolbar main element\n * @property {Element} nodes.content        - Zone with Plus button and toolbox.\n * @property {Element} nodes.actions        - Zone with Block Settings and Remove Button\n * @property {Element} nodes.plusButton     - Button that opens or closes Toolbox\n * @property {Element} nodes.toolbox        - Container for tools\n * @property {Element} nodes.settingsToggler - open/close Settings Panel button\n * @property {Element} nodes.removeBlockButton - Remove Block button\n * @property {Element} nodes.settings          - Settings Panel\n * @property {Element} nodes.pluginSettings    - Plugin Settings section of Settings Panel\n * @property {Element} nodes.defaultSettings   - Default Settings section of Settings Panel\n */\nclass Toolbar {\n\n    /**\n     * @constructor\n     */\n    constructor() {\n\n        this.Editor = null;\n\n        this.nodes = {\n            wrapper : null,\n            content : null,\n            actions : null,\n\n            // Content Zone\n            plusButton : null,\n            toolbox : null,\n\n            // Actions Zone\n            settingsToggler : null,\n            removeBlockButton: null,\n            settings: null,\n\n            // Settings Zone: Plugin Settings and Default Settings\n            pluginSettings: null,\n            defaultSettings: null,\n        };\n\n        this.CSS = {\n            toolbar: 'ce-toolbar',\n            content: 'ce-toolbar__content',\n            actions: 'ce-toolbar__actions',\n\n            // Content Zone\n            toolbox: 'ce-toolbar__toolbox',\n            plusButton: 'ce-toolbar__plus',\n\n            // Actions Zone\n            settingsToggler: 'ce-toolbar__settings-btn',\n            removeBlockButton: 'ce-toolbar__remove-btn',\n\n            // Settings Panel\n            settings: 'ce-settings',\n            defaultSettings: 'ce-settings_default',\n            pluginSettings: 'ce-settings_plugin',\n        };\n\n    }\n\n    /**\n     * Editor modules setter\n     * @param {object} Editor - available editor modules\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * Makes toolbar\n     */\n    make() {\n\n        this.nodes.wrapper = $.make('div', this.CSS.toolbar);\n\n        /**\n         * Make Content Zone and Actions Zone\n         */\n        ['content',  'actions'].forEach( el => {\n\n            this.nodes[el] = $.make('div', this.CSS[el]);\n            $.append(this.nodes.wrapper, this.nodes[el]);\n\n        });\n\n\n        /**\n         * Fill Content Zone:\n         *  - Plus Button\n         *  - Toolbox\n         */\n        ['plusButton', 'toolbox'].forEach( el => {\n\n            this.nodes[el] = $.make('div', this.CSS[el]);\n            $.append(this.nodes.content, this.nodes[el]);\n\n        });\n\n        /**\n         * Fill Actions Zone:\n         *  - Settings Toggler\n         *  - Remove Block Button\n         *  - Settings Panel\n         */\n        this.nodes.settingsToggler  = $.make('span', this.CSS.settingsToggler);\n        this.nodes.removeBlockButton = this.makeRemoveBlockButton();\n\n        $.append(this.nodes.actions, [this.nodes.settingsToggler, this.nodes.removeBlockButton]);\n\n        /**\n         * Make and append Settings Panel\n         */\n        this.makeBlockSettingsPanel();\n\n        /**\n         * Append toolbar to the Editor\n         */\n        $.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);\n\n    }\n\n    /**\n     * Panel with block settings with 2 sections:\n     *\n     * @return {Element}\n     */\n    makeBlockSettingsPanel() {\n\n        this.nodes.settings = $.make('div', this.CSS.settings);\n\n        this.nodes.pluginSettings = $.make('div', this.CSS.pluginSettings);\n        this.nodes.defaultSettings = $.make('div', this.CSS.defaultSettings);\n\n        $.append(this.nodes.settings, [this.nodes.pluginSettings, this.nodes.defaultSettings]);\n        $.append(this.nodes.actions, this.nodes.settings);\n\n    }\n\n    /**\n     * Makes Remove Block button, and confirmation panel\n     * @return {Element} wrapper with button and panel\n     */\n    makeRemoveBlockButton() {\n\n        /**\n         * @todo  add confirmation panel and handlers\n         * @see  {@link settings#makeRemoveBlockButton}\n         */\n        return $.make('span', this.CSS.removeBlockButton);\n\n    }\n\n}\n\nmodule.exports = Toolbar;\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/toolbar.js","/**\n * @module Codex Editor Tools Submodule\n *\n * Creates Instances from Plugins and binds external config to the instances\n */\n\n/**\n * Load user defined tools\n * Tools must contain the following important objects:\n *\n * @typedef {Object} ToolsConfig\n * @property {String} iconClassname - this a icon in toolbar\n * @property {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n * @property {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n */\n\n/**\n * @typedef {Object} Tool\n * @property render\n * @property save\n * @property settings\n * @property validate\n */\n\n/**\n * Class properties:\n *\n * @property {String} name - name of this module\n * @property {Object[]} toolInstances - list of tool instances\n * @property {Tools[]} available - available Tools\n * @property {Tools[]} unavailable - unavailable Tools\n * @property {Object} toolsClasses - all classes\n * @property {EditorConfig} config - Editor config\n */\n\nclass Tools {\n\n    /**\n     * Returns available Tools\n     * @return {Tool[]}\n     */\n    get available() {\n\n        return this.toolsAvailable;\n\n    }\n\n    /**\n     * Returns unavailable Tools\n     * @return {Tool[]}\n     */\n    get unavailable() {\n\n        return this.toolsUnavailable;\n\n    }\n\n    /**\n     * @param Editor\n     * @param Editor.modules {@link CodexEditor#moduleInstances}\n     * @param Editor.config {@link CodexEditor#configuration}\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * If config wasn't passed by user\n     * @return {ToolsConfig}\n     */\n    get defaultConfig() {\n\n        return {\n            iconClassName : 'default-icon',\n            displayInToolbox : false,\n            enableLineBreaks : false\n        };\n\n    }\n\n    /**\n     * @constructor\n     *\n     * @param {ToolsConfig} config\n     */\n    constructor({ config }) {\n\n        this.config = config;\n\n        this.toolClasses = {};\n        this.toolsAvailable = {};\n        this.toolsUnavailable = {};\n\n    }\n\n    /**\n     * Creates instances via passed or default configuration\n     * @return {boolean}\n     */\n    prepare() {\n\n        if (!this.config.hasOwnProperty('tools')) {\n\n            return Promise.reject(\"Can't start without tools\");\n\n        }\n\n        for(let toolName in this.config.tools) {\n\n            this.toolClasses[toolName] = this.config.tools[toolName];\n\n        }\n\n        /**\n         * getting classes that has prepare method\n         */\n        let sequenceData = this.getListOfPrepareFunctions();\n\n        /**\n         * if sequence data contains nothing then resolve current chain and run other module prepare\n         */\n        if (sequenceData.length === 0) {\n\n            return Promise.resolve();\n\n        }\n\n        /**\n         * to see how it works {@link Util#sequence}\n         */\n        return _.sequence(sequenceData, (data) => {\n\n            this.success(data);\n\n        }, (data) => {\n\n            this.fallback(data);\n\n        });\n\n    }\n\n    /**\n     * Binds prepare function of plugins with user or default config\n     * @return {Array} list of functions that needs to be fired sequently\n     */\n    getListOfPrepareFunctions() {\n\n        let toolPreparationList = [];\n\n        for(let toolName in this.toolClasses) {\n\n            let toolClass = this.toolClasses[toolName];\n\n            if (typeof toolClass.prepare === 'function') {\n\n                toolPreparationList.push({\n                    function : toolClass.prepare,\n                    data : {\n                        toolName\n                    }\n                });\n\n            }\n\n        }\n\n        return toolPreparationList;\n\n    }\n\n    /**\n     * @param {ChainData.data} data - append tool to available list\n     */\n    success(data) {\n\n        this.toolsAvailable[data.toolName] = this.toolClasses[data.toolName];\n\n    }\n\n    /**\n     * @param {ChainData.data} data - append tool to unavailable list\n     */\n    fallback(data) {\n\n        this.toolsUnavailable[data.toolName] = this.toolClasses[data.toolName];\n\n    }\n\n    /**\n     * Returns all tools\n     * @return {Array}\n     */\n    getTools() {\n\n        return this.toolInstances;\n\n    }\n\n}\n\nmodule.exports = Tools;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/tools.js","/**\n * Codex Editor Util\n */\nmodule.exports = class Util {\n\n    /**\n     * @typedef {Object} ChainData\n     * @property {Object} data - data that will be passed to the success or fallback\n     * @property {Function} function - function's that must be called asynchronically\n     */\n\n    /**\n     * Fires a promise sequence asyncronically\n     *\n     * @param {Object[]} chains - list or ChainData's\n     * @param {Function} success - success callback\n     * @param {Function} fallback - callback that fires in case of errors\n     *\n     * @return {Promise}\n     */\n    static sequence(chains, success, fallback) {\n\n        return new Promise(function (resolve) {\n\n            /**\n             * pluck each element from queue\n             * First, send resolved Promise as previous value\n             * Each plugins \"prepare\" method returns a Promise, that's why\n             * reduce current element will not be able to continue while can't get\n             * a resolved Promise\n             */\n            chains.reduce(function (previousValue, currentValue, iteration) {\n\n                return previousValue\n                    .then(() => waitNextBlock(currentValue, success, fallback))\n                    .then(() => {\n\n                        // finished\n                        if (iteration === chains.length - 1) {\n\n                            resolve();\n\n                        }\n\n                    });\n\n            }, Promise.resolve());\n\n        });\n\n        /**\n         * Decorator\n         *\n         * @param {ChainData} chainData\n         *\n         * @param {Function} successCallback\n         * @param {Function} fallbackCallback\n         *\n         * @return {Promise}\n         */\n        function waitNextBlock(chainData, successCallback, fallbackCallback) {\n\n            return new Promise(function (resolve) {\n\n                chainData.function()\n                    .then(() => {\n\n                        successCallback(chainData.data);\n\n                    })\n                    .then(resolve)\n                    .catch(function () {\n\n                        fallbackCallback(chainData.data);\n\n                        // anyway, go ahead even it falls\n                        resolve();\n\n                    });\n\n            });\n\n        }\n\n    }\n\n};\n\n\n// WEBPACK FOOTER //\n// ./src/components/utils.js","/**\n * Module UI\n *\n * @type {UI}\n */\n// let className = {\n\n/**\n     * @const {string} BLOCK_CLASSNAME - redactor blocks name\n     */\n// BLOCK_CLASSNAME : 'ce-block',\n\n/**\n     * @const {String} wrapper for plugins content\n     */\n// BLOCK_CONTENT : 'ce-block__content',\n\n/**\n     * @const {String} BLOCK_STRETCHED - makes block stretched\n     */\n// BLOCK_STRETCHED : 'ce-block--stretched',\n\n/**\n     * @const {String} BLOCK_HIGHLIGHTED - adds background\n     */\n// BLOCK_HIGHLIGHTED : 'ce-block--focused',\n\n/**\n     * @const {String} - for all default settings\n     */\n// SETTINGS_ITEM : 'ce-settings__item'\n// };\n\nlet CSS = {\n    editorWrapper : 'codex-editor',\n    editorZone    : 'ce-redactor'\n};\n\n/**\n * @class\n *\n * @classdesc Makes CodeX Editor UI:\n *                <codex-editor>\n *                    <ce-redactor />\n *                    <ce-toolbar />\n *                    <ce-inline-toolbar />\n *                </codex-editor>\n *\n * @property {EditorConfig} config   - editor configuration {@link CodexEditor#configuration}\n * @property {Object} Editor         - available editor modules {@link CodexEditor#moduleInstances}\n * @property {Object} nodes          -\n * @property {Element} nodes.wrapper  - element where we need to append redactor\n * @property {Element} nodes.wrapper  - <codex-editor>\n * @property {Element} nodes.redactor - <ce-redactor>\n */\nclass UI {\n\n    /**\n     * @constructor\n     *\n     * @param  {EditorConfig} config\n     */\n    constructor({ config }) {\n\n        this.config = config;\n        this.Editor = null;\n\n        this.nodes = {\n            holder: null,\n            wrapper: null,\n            redactor: null\n        };\n\n    }\n\n\n    /**\n     * Editor modules setter\n     * @param {object} Editor - available editor modules\n     */\n    set state(Editor) {\n\n        this.Editor = Editor;\n\n    }\n\n    /**\n     * @protected\n     *\n     * Making main interface\n     */\n    prepare() {\n\n        return new Promise( (resolve, reject) => {\n\n            /**\n             * Element where we need to append CodeX Editor\n             * @type {Element}\n             */\n            this.nodes.holder = document.getElementById(this.config.holderId);\n\n            if (!this.nodes.holder) {\n\n                reject(Error(\"Holder wasn't found by ID: #\" + this.config.holderId));\n                return;\n\n            }\n\n            /**\n             * Create and save main UI elements\n             */\n            this.nodes.wrapper  = $.make('div', CSS.editorWrapper);\n            this.nodes.redactor = $.make('div', CSS.editorZone);\n\n            this.nodes.wrapper.appendChild(this.nodes.redactor);\n            this.nodes.holder.appendChild(this.nodes.wrapper);\n\n            /**\n             * Make toolbar\n             */\n            this.Editor.Toolbar.make();\n\n            /**\n             * Load and append CSS\n             */\n            this.loadStyles();\n\n            resolve();\n\n        })\n\n        /** Add toolbox tools */\n        // .then(addTools_)\n\n        /** Make container for inline toolbar */\n        // .then(makeInlineToolbar_)\n\n        /** Add inline toolbar tools */\n        // .then(addInlineToolbarTools_)\n\n        /** Draw wrapper for notifications */\n        // .then(makeNotificationHolder_)\n\n        /** Add eventlisteners to redactor elements */\n        // .then(bindEvents_)\n\n            .catch(e => {\n\n                console.error(e);\n\n            // editor.core.log(\"Can't draw editor interface\");\n\n            });\n\n    }\n\n    loadStyles() {\n\n        /**\n         * Load CSS\n         */\n        let styles = require('../../styles/main.css');\n\n        /**\n         * Make tag\n         */\n        let tag = $.make('style', null, {\n            textContent: styles.toString()\n        });\n\n        /**\n         * Append styles\n         */\n        $.append(document.head, tag);\n\n    }\n\n}\n\nmodule.exports = UI;\n\n\n// /**\n//  * Codex Editor UI module\n//  *\n//  * @author Codex Team\n//  * @version 1.2.0\n//  */\n//\n// module.exports = (function (ui) {\n//\n//     let editor = codex.editor;\n//\n//     /**\n//      * Basic editor classnames\n//      */\n//     ui.prepare = function () {\n//\n\n//\n//     };\n//\n//     /** Draw notifications holder */\n//     var makeNotificationHolder_ = function () {\n//\n//         /** Append block with notifications to the document */\n//         editor.nodes.notifications = editor.notifications.createHolder();\n//\n//     };\n//\n//     /**\n//      * @private\n//      * Append tools passed in editor.tools\n//      */\n//     var addTools_ = function () {\n//\n//         var tool,\n//             toolName,\n//             toolButton;\n//\n//         for ( toolName in editor.settings.tools ) {\n//\n//             tool = editor.settings.tools[toolName];\n//\n//             editor.tools[toolName] = tool;\n//\n//             if (!tool.iconClassname && tool.displayInToolbox) {\n//\n//                 editor.core.log('Toolbar icon classname missed. Tool %o skipped', 'warn', toolName);\n//                 continue;\n//\n//             }\n//\n//             if (typeof tool.render != 'function') {\n//\n//                 editor.core.log('render method missed. Tool %o skipped', 'warn', toolName);\n//                 continue;\n//\n//             }\n//\n//             if (!tool.displayInToolbox) {\n//\n//                 continue;\n//\n//             } else {\n//\n//                 /** if tools is for toolbox */\n//                 toolButton = editor.draw.toolbarButton(toolName, tool.iconClassname);\n//\n//                 editor.nodes.toolbox.appendChild(toolButton);\n//\n//                 editor.nodes.toolbarButtons[toolName] = toolButton;\n//\n//             }\n//\n//         }\n//\n//     };\n//\n//     var addInlineToolbarTools_ = function () {\n//\n//         var tools = {\n//\n//             bold: {\n//                 icon    : 'ce-icon-bold',\n//                 command : 'bold'\n//             },\n//\n//             italic: {\n//                 icon    : 'ce-icon-italic',\n//                 command : 'italic'\n//             },\n//\n//             link: {\n//                 icon    : 'ce-icon-link',\n//                 command : 'createLink'\n//             }\n//         };\n//\n//         var toolButton,\n//             tool;\n//\n//         for(var name in tools) {\n//\n//             tool = tools[name];\n//\n//             toolButton = editor.draw.toolbarButtonInline(name, tool.icon);\n//\n//             editor.nodes.inlineToolbar.buttons.appendChild(toolButton);\n//             /**\n//              * Add callbacks to this buttons\n//              */\n//             editor.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\n//\n//         }\n//\n//     };\n//\n//     /**\n//      * @private\n//      * Bind editor UI events\n//      */\n//     var bindEvents_ = function () {\n//\n//         editor.core.log('ui.bindEvents fired', 'info');\n//\n//         // window.addEventListener('error', function (errorMsg, url, lineNumber) {\n//         //     editor.notifications.errorThrown(errorMsg, event);\n//         // }, false );\n//\n//         /** All keydowns on Document */\n//         editor.listeners.add(document, 'keydown', editor.callback.globalKeydown, false);\n//\n//         /** All keydowns on Redactor zone */\n//         editor.listeners.add(editor.nodes.redactor, 'keydown', editor.callback.redactorKeyDown, false);\n//\n//         /** All keydowns on Document */\n//         editor.listeners.add(document, 'keyup', editor.callback.globalKeyup, false );\n//\n//         /**\n//          * Mouse click to radactor\n//          */\n//         editor.listeners.add(editor.nodes.redactor, 'click', editor.callback.redactorClicked, false );\n//\n//         /**\n//          * Clicks to the Plus button\n//          */\n//         editor.listeners.add(editor.nodes.plusButton, 'click', editor.callback.plusButtonClicked, false);\n//\n//         /**\n//          * Clicks to SETTINGS button in toolbar\n//          */\n//         editor.listeners.add(editor.nodes.showSettingsButton, 'click', editor.callback.showSettingsButtonClicked, false );\n//\n//         /** Bind click listeners on toolbar buttons */\n//         for (var button in editor.nodes.toolbarButtons) {\n//\n//             editor.listeners.add(editor.nodes.toolbarButtons[button], 'click', editor.callback.toolbarButtonClicked, false);\n//\n//         }\n//\n//     };\n//\n//     ui.addBlockHandlers = function (block) {\n//\n//         if (!block) return;\n//\n//         /**\n//          * Block keydowns\n//          */\n//         editor.listeners.add(block, 'keydown', editor.callback.blockKeydown, false);\n//\n//         /**\n//          * Pasting content from another source\n//          * We have two type of sanitization\n//          * First - uses deep-first search algorithm to get sub nodes,\n//          * sanitizes whole Block_content and replaces cleared nodes\n//          * This method is deprecated\n//          * Method is used in editor.callback.blockPaste(event)\n//          *\n//          * Secont - uses Mutation observer.\n//          * Observer \"observe\" DOM changes and send changings to callback.\n//          * Callback gets changed node, not whole Block_content.\n//          * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\n//          *\n//          * Method is used in editor.callback.blockPasteViaSanitize(event)\n//          *\n//          * @uses html-janitor\n//          * @example editor.callback.blockPasteViaSanitize(event), the second method.\n//          *\n//          */\n//         editor.listeners.add(block, 'paste', editor.paste.blockPasteCallback, false);\n//\n//         /**\n//          * Show inline toolbar for selected text\n//          */\n//         editor.listeners.add(block, 'mouseup', editor.toolbar.inline.show, false);\n//         editor.listeners.add(block, 'keyup', editor.toolbar.inline.show, false);\n//\n//     };\n//\n//     /** getting all contenteditable elements */\n//     ui.saveInputs = function () {\n//\n//         var redactor = editor.nodes.redactor;\n//\n//         editor.state.inputs = [];\n//\n//         /** Save all inputs in global variable state */\n//         var inputs = redactor.querySelectorAll('[contenteditable], input, textarea');\n//\n//         Array.prototype.map.call(inputs, function (current) {\n//\n//             if (!current.type || current.type == 'text' || current.type == 'textarea') {\n//\n//                 editor.state.inputs.push(current);\n//\n//             }\n//\n//         });\n//\n//     };\n//\n//     /**\n//      * Adds first initial block on empty redactor\n//      */\n//     ui.addInitialBlock = function () {\n//\n//         var initialBlockType = editor.settings.initialBlockPlugin,\n//             initialBlock;\n//\n//         if ( !editor.tools[initialBlockType] ) {\n//\n//             editor.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\n//             return;\n//\n//         }\n//\n//         initialBlock = editor.tools[initialBlockType].render();\n//\n//         initialBlock.setAttribute('data-placeholder', editor.settings.placeholder);\n//\n//         editor.content.insertBlock({\n//             type  : initialBlockType,\n//             block : initialBlock\n//         });\n//\n//         editor.content.workingNodeChanged(initialBlock);\n//\n//     };\n//\n//     ui.setInlineToolbarButtonBehaviour = function (button, type) {\n//\n//         editor.listeners.add(button, 'mousedown', function (event) {\n//\n//             editor.toolbar.inline.toolClicked(event, type);\n//\n//         }, false);\n//\n//     };\n//\n//     return ui;\n//\n// })({});\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/modules/ui.js","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \":root {\\n\\n    /**\\n     * Toolbar buttons\\n     */\\n\\n}\\n/**\\n* Editor wrapper\\n*/\\n.codex-editor{\\n    position: relative;\\n    border: 1px solid #ccc;\\n    padding: 10px;\\n}\\n.codex-editor .hide {\\n        display: none;\\n    }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/main.css\n// module id = 9\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 10\n// module chunks = 0"],"sourceRoot":""}