{"version":3,"sources":["webpack://CodexEditor/webpack/bootstrap","webpack://CodexEditor/./build/sprite.svg","webpack://CodexEditor/./node_modules/css-loader/lib/css-base.js","webpack://CodexEditor/./node_modules/html-janitor/src/html-janitor.js","webpack://CodexEditor/./src/codex.js","webpack://CodexEditor/./src/components/__module.ts","webpack://CodexEditor/./src/components/block-tunes/block-tune-delete.ts","webpack://CodexEditor/./src/components/block-tunes/block-tune-move-up.ts","webpack://CodexEditor/./src/components/block.js","webpack://CodexEditor/./src/components/dom.js","webpack://CodexEditor/./src/components/inline-tools/inline-tool-bold.ts","webpack://CodexEditor/./src/components/inline-tools/inline-tool-link.ts","webpack://CodexEditor/./src/components/modules sync nonrecursive [^_](api-blocks.ts|api-events.ts|api-sanitizer.ts|api-toolbar.ts|api.ts|blockManager.js|caret.js|events.js|keyboard.js|listeners.js|renderer.js|sanitizer.js|saver.js|toolbar-blockSettings.js|toolbar-inline.ts|toolbar-toolbox.js|toolbar.js|tools.js|ui.js)$","webpack://CodexEditor/./src/components/modules/api-blocks.ts","webpack://CodexEditor/./src/components/modules/api-events.ts","webpack://CodexEditor/./src/components/modules/api-sanitizer.ts","webpack://CodexEditor/./src/components/modules/api-toolbar.ts","webpack://CodexEditor/./src/components/modules/api.ts","webpack://CodexEditor/./src/components/modules/blockManager.js","webpack://CodexEditor/./src/components/modules/caret.js","webpack://CodexEditor/./src/components/modules/events.js","webpack://CodexEditor/./src/components/modules/keyboard.js","webpack://CodexEditor/./src/components/modules/listeners.js","webpack://CodexEditor/./src/components/modules/renderer.js","webpack://CodexEditor/./src/components/modules/sanitizer.js","webpack://CodexEditor/./src/components/modules/saver.js","webpack://CodexEditor/./src/components/modules/toolbar-blockSettings.js","webpack://CodexEditor/./src/components/modules/toolbar-inline.ts","webpack://CodexEditor/./src/components/modules/toolbar-toolbox.js","webpack://CodexEditor/./src/components/modules/toolbar.js","webpack://CodexEditor/./src/components/modules/tools.js","webpack://CodexEditor/./src/components/modules/ui.js","webpack://CodexEditor/./src/components/polyfills.js","webpack://CodexEditor/./src/components/selection.js","webpack://CodexEditor/./src/components/utils.js","webpack://CodexEditor/./src/styles/main.css"],"names":["modules","editorModules","map","module","CodexEditor","config","moduleInstances","Promise","resolve","then","configuration","init","start","console","log","catch","error","constructModules","configureModules","forEach","Module","displayName","e","name","state","getModulesDiff","diff","moduleName","prepareDecorator","prepare","Tools","UI","BlockManager","Renderer","render","data","items","initialBlock","type","holderId","placeholder","sanitizer","p","b","a","hideToolbar","tools","toolsConfig","_","isEmpty","length","Editor","new","target","TypeError","DeleteTune","api","CSS","wrapper","button","buttonDelete","buttonConfirm","nodes","resetConfirmation","setConfirmation","$","make","appendChild","svg","addEventListener","event","handleClick","needConfirmation","events","on","off","blocks","delete","classList","add","MoveUpTune","moveUpButton","moveUp","Block","toolName","toolInstance","settings","apiMethods","tool","_html","compose","tunes","makeTunes","contentNode","content","pluginsContent","methodName","params","Function","call","merge","extractedBlock","save","measuringStart","window","performance","now","measuringEnd","finishedExtraction","time","isValid","validate","tunesList","tune","tunesElement","document","createDocumentFragment","append","contentless","emptyText","emptyMedia","hasMedia","mediaTags","querySelector","join","selected","remove","Dom","tag","tagName","includes","classNames","attributes","el","createElement","Array","isArray","attrName","createTextNode","width","height","icon","createElementNS","setAttribute","innerHTML","parent","elements","selector","querySelectorAll","node","atLast","child","sibling","nodeType","Node","ELEMENT_NODE","nodeChild","isSingleTag","parentNode","getDeepestNode","nativeInputs","nodeText","isElement","isNativeInput","value","textContent","replace","trim","childNodes","treeWalker","leafs","isNodeEmpty","push","firstChild","shift","isLeaf","nextSibling","every","leaf","BoldInlineTool","commandName","buttonActive","buttonModifier","range","execCommand","selection","isActive","queryCommandState","toggle","LinkInlineTool","commandLink","commandUnlink","ENTER_KEY","buttonUnlink","input","inputShowed","inputOpened","inlineToolbar","toolbar","Selection","keyCode","enterPressed","parentAnchor","findParentTag","expandToTag","unlink","closeActions","checkState","close","toggleActions","anchorTag","openActions","hrefAttr","getAttribute","needFocus","focus","clearSavedSelection","clearSaved","restore","preventDefault","validateURL","prepareLink","insertLink","stopPropagation","stopImmediatePropagation","str","test","link","addProtocol","isInternal","isAnchor","substring","isProtocolRelative","BlocksAPI","moveCurrentBlockUp","blockIndex","removeBlock","insert","currentBlockIndex","Caret","setToBlock","currentBlock","Toolbar","navigatePrevious","moveDown","EventsAPI","eventName","callback","Events","emit","SanitizerAPI","taintString","Sanitizer","clean","ToolbarsAPI","open","API","methods","caret","_blocks","first","second","secondBlock","Blocks","redactor","Proxy","set","get","construct","block","bindEvents","Listeners","Keyboard","blockKeydownsListener","InlineToolbar","handleShowingEvent","composeBlock","targetBlock","blockToMerge","blockToMergeIndex","indexOf","blockToMergeInfo","mergeWith","index","extractedFragment","extractFragmentFromCaretPosition","text","blockInserted","currentNode","element","firstLevelBlock","closest","childNode","parentFirstLevelBlock","Error","currentBlockElement","html","previousBlock","previousBlockElement","currentBlockElementClientCoords","getBoundingClientRect","previoutBlockElementClientCoords","formulaSign","top","blocksTopOffset","Math","abs","scrollUpOffset","innerHeight","scrollBy","insertBefore","swapBlocksPosition","move","isLastBlock","isFirstBlock","array","workingArea","deleteCount","splice","insertAdjacentElement","nextBlock","isNaN","newBlock","children","instance","Number","offset","atEnd","nodeToSet","delay","createRange","setStart","setEnd","removeAllRanges","addRange","lastBlock","rangeCount","selectRange","getRangeAt","blockElem","deleteContents","cloneRange","selectNodeContents","endContainer","endOffset","extractContents","from","direction","current","siblings","contentEditable","force","caretAtEnd","isAtEnd","caretAtStart","isAtStart","isCollapsed","anchorNode","firstNode","firstLetterPosition","search","leftSiblings","getHigherLevelSiblings","nothingAtLeft","anchorOffset","lastNode","nothingAtRight","subscribers","reduce","previousData","currentHandler","newData","i","keyCodes","BACKSPACE","backspacePressed","ENTER","DOWN","RIGHT","arrowRightAndDownPressed","UP","LEFT","arrowLeftAndUpPressed","apiSettings","IS_ENABLED_LINE_BREAKS","shiftKey","split","newCurrent","isInitial","plusButton","show","BM","canMergeBlocks","getBlockByIndex","mergeable","setCaretToTheEnd","mergeBlocks","setTimeout","navigateNext","allListeners","eventType","handler","useCapture","assignedEventData","alreadyExist","findOne","existingListeners","findAll","removeEventListener","listenersOnElement","listener","listenersWithType","listenersWithHandler","foundListeners","found","foundByElements","findByElement","filter","chainData","function","insertBlock","sequence","item","defaultConfig","_sanitizerInstance","sanitizerConfig","sanitizerInstance","require","customConfig","library","tags","href","rel","newInstance","Saver","output","blocksData","all","allExtractedData","makeOutput","outputData","totalTime","groupCollapsed","extraction","groupEnd","Date","version","VERSION","BlockSettings","toolSettings","defaultSettings","makeSettings","renderTunes","wrapperOpened","addToolSettings","addDefaultSettings","opened","closed","contains","buttons","actions","inlineToolbarShowed","buttonsWrapper","actionsWrapper","toolbarVerticalMargin","addTools","allowedToShow","checkToolsState","selectionRect","rect","wrapperOffset","newCoords","x","left","y","floor","style","clear","tagsConflictsWithSelection","currentSelection","selectedText","getBlock","toolConfig","IS_ENABLED_INLINE_TOOLBAR","addTool","renderActions","toolClicked","surround","toolsInstances","Toolbox","toolbox","toolsAvailable","IS_DISPLAYED_IN_TOOLBOX","TOOLBAR_ICON_CLASS","toolboxButton","title","dataset","buttonClicked","toolButton","toolClasses","IS_IRREPLACEBLE_TOOL","toolboxOpened","blockActionsButtons","settingsToggler","plusButtonClicked","settingsIcon","forceClose","defaultToolbarHeight","defaultOffset","newYCoordinate","offsetTop","transform","toolbarOpened","settingsTogglerClicked","hide","plusButtonHidden","toolsUnavailable","hasOwnProperty","reject","sequenceData","getListOfPrepareFunctions","success","fallback","toolPreparationList","toolClass","plugin","available","holder","appendSVGSprite","loadStyles","getElementById","editorWrapper","editorZone","styles","toString","head","redactorClicked","clickedNode","setCurrentBlockByChildNode","setToTheLastBlock","isInitialBlock","isEmptyBlock","spriteHolder","sprite","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","s","documentElement","parentElement","savedSelectionRange","sel","getSelection","className","parentTag","searchDepth","boundingLeft","boundingTop","boundingWidth","boundingHeight","span","insertNode","spanParent","removeChild","normalize","Util","msg","args","chains","previousValue","currentValue","iteration","waitNextBlock","successCallback","fallbackCallback","collection","slice","object","Object","keys","constructor","method","timeout","context","arguments","apply","TAB","SHIFT","CTRL","ALT","ESC","SPACE","DELETE","META"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,m9G;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,cAAc;;AAElE;AACA;;;;;;;;;;;;AC3EA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,GAAG,QAIH;AACA,CAAC;;AAED;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,iCAAiC,EAAE;AAC3D,6BAA6B,uEAAuE,EAAE;;AAEtG;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,4BAA4B;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;ACxLD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;;;;AAIA;;;;;;;;;;;;AAYA;;;;;;;AAOA;;AAEA;;;;;;;;;;AAGA;;;;AAEA;;;AAGA;AACA,IAAIA,UAAU,gSAAAC,CAAcC,GAAd,CAAmB;AAAA,SAAU,yTAAQ,GAA0BC,MAAlC,CAAV;AAAA,CAAnB,CAAd;;AAEA;;;;;;;;;;;IAUqBC,W;;;;AACnB;wBACqB;AACnB,aAAO,OAAP;AACD;;AAED;;;;;;;AAIA,uBAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB;;;;AAIA,SAAKA,MAAL,GAAc,EAAd;;AAEA;;;;;;;;;;;;AAYA,SAAKC,eAAL,GAAuB,EAAvB;;AAEAC,YAAQC,OAAR,GACGC,IADH,CACQ,YAAM;AACV,YAAKC,aAAL,GAAqBL,MAArB;AACD,KAHH,EAIGI,IAJH,CAIQ;AAAA,aAAM,MAAKE,IAAL,EAAN;AAAA,KAJR,EAKGF,IALH,CAKQ;AAAA,aAAM,MAAKG,KAAL,EAAN;AAAA,KALR,EAMGH,IANH,CAMQ,YAAM;AACVI,cAAQC,GAAR,CAAY,wBAAZ;AACD,KARH,EASGC,KATH,CASS,iBAAS;AACdF,cAAQC,GAAR,CAAY,2CAAZ,EAAyDE,KAAzD;AACD,KAXH;AAYD;;AAED;;;;;;;;;;AA0DA;;;;;2BAKO;AACL;;;AAGA,WAAKC,gBAAL;;AAEA;;;AAGA,WAAKC,gBAAL;AACD;;AAED;;;;;;uCAGmB;AAAA;;AACjBlB,cAAQmB,OAAR,CAAiB,kBAAU;AACzB,YAAI;AACF;;;;;;;AAOA,iBAAKb,eAAL,CAAqBc,OAAOC,WAA5B,IAA2C,IAAID,MAAJ,CAAW;AACpDf,oBAAS,OAAKK;AADsC,WAAX,CAA3C;AAGD,SAXD,CAWE,OAAQY,CAAR,EAAY;AACZT,kBAAQC,GAAR,CAAY,8BAAZ,EAA4CM,MAA5C,EAAoDE,CAApD;AACD;AACF,OAfD;AAgBD;;AAED;;;;;;;;uCAKmB;AACjB,WAAI,IAAIC,IAAR,IAAgB,KAAKjB,eAArB,EAAsC;AACpC;;;AAGA,aAAKA,eAAL,CAAqBiB,IAArB,EAA2BC,KAA3B,GAAmC,KAAKC,cAAL,CAAqBF,IAArB,CAAnC;AACD;AACF;;AAED;;;;;;mCAGgBA,I,EAAO;AACrB,UAAIG,OAAO,EAAX;;AAEA,WAAI,IAAIC,UAAR,IAAsB,KAAKrB,eAA3B,EAA4C;AAC1C;;;AAGA,YAAIqB,eAAeJ,IAAnB,EAAyB;AACvB;AACD;AACDG,aAAKC,UAAL,IAAmB,KAAKrB,eAAL,CAAqBqB,UAArB,CAAnB;AACD;;AAED,aAAOD,IAAP;AACD;;AAED;;;;;;;;;4BAMQ;AAAA;;AACN,UAAIE,mBAAmB,SAAnBA,gBAAmB;AAAA,eAAUzB,OAAO0B,OAAP,EAAV;AAAA,OAAvB;;AAEA,aAAOtB,QAAQC,OAAR,GACJC,IADI,CACCmB,iBAAiB,KAAKtB,eAAL,CAAqBwB,KAAtC,CADD,EAEJrB,IAFI,CAECmB,iBAAiB,KAAKtB,eAAL,CAAqByB,EAAtC,CAFD,EAGJtB,IAHI,CAGCmB,iBAAiB,KAAKtB,eAAL,CAAqB0B,YAAtC,CAHD,EAIJvB,IAJI,CAIC,YAAM;AACV,eAAO,OAAKH,eAAL,CAAqB2B,QAArB,CAA8BC,MAA9B,CAAqC,OAAK7B,MAAL,CAAY8B,IAAZ,CAAiBC,KAAtD,CAAP;AACD,OANI,CAAP;AAOD;;;sBA9IiB/B,M,EAAQ;AACxB;;;;;AAKA,UAAIgC,eAAe;AACjBC,cAAOjC,OAAOgC,YADG;AAEjBF,cAAO;AAFU,OAAnB;;AAKA,WAAK9B,MAAL,CAAYkC,QAAZ,GAAuBlC,OAAOkC,QAA9B;AACA,WAAKlC,MAAL,CAAYmC,WAAZ,GAA0BnC,OAAOmC,WAAP,IAAsB,qBAAhD;AACA,WAAKnC,MAAL,CAAYoC,SAAZ,GAAwBpC,OAAOoC,SAAP,IAAoB;AAC1CC,WAAG,IADuC;AAE1CC,WAAG,IAFuC;AAG1CC,WAAG;AAHuC,OAA5C;;AAMA,WAAKvC,MAAL,CAAYwC,WAAZ,GAA0BxC,OAAOwC,WAAP,GAAqBxC,OAAOwC,WAA5B,GAA0C,KAApE;AACA,WAAKxC,MAAL,CAAYyC,KAAZ,GAAoBzC,OAAOyC,KAAP,IAAgB,EAApC;AACA,WAAKzC,MAAL,CAAY0C,WAAZ,GAA0B1C,OAAO0C,WAAP,IAAsB,EAAhD;AACA,WAAK1C,MAAL,CAAY8B,IAAZ,GAAmB9B,OAAO8B,IAAP,IAAe,EAAlC;;AAEA;;;AAGA,UAAIa,EAAEC,OAAF,CAAU,KAAK5C,MAAL,CAAY8B,IAAtB,CAAJ,EAAiC;AAC/B,aAAK9B,MAAL,CAAY8B,IAAZ,GAAmB,EAAnB;AACA,aAAK9B,MAAL,CAAY8B,IAAZ,CAAiBC,KAAjB,GAAyB,CAAEC,YAAF,CAAzB;AACD,OAHD,MAGO;AACL,YAAI,CAAC,KAAKhC,MAAL,CAAY8B,IAAZ,CAAiBC,KAAlB,IAA2B,KAAK/B,MAAL,CAAY8B,IAAZ,CAAiBC,KAAjB,CAAuBc,MAAvB,KAAkC,CAAjE,EAAoE;AAClE,eAAK7C,MAAL,CAAY8B,IAAZ,CAAiBC,KAAjB,GAAyB,CAAEC,YAAF,CAAzB;AACD;AACF;;AAED;;;AAGA,UAAI,CAAChC,OAAOgC,YAAZ,EAA0B;AACxB,aAAK,KAAKhC,MAAL,CAAYgC,YAAjB,IAAiC,KAAKhC,MAAL,CAAYyC,KAA7C;AAAoD;AAApD;AACD,OAFD,MAEO;AACL,aAAKzC,MAAL,CAAYgC,YAAZ,GAA2BhC,OAAOgC,YAAlC;AACD;AACF;;AAED;;;;;wBAIoB;AAClB,aAAO,KAAKhC,MAAZ;AACD;;;;;;;kBArGkBD,W;AAgMprYA;;;;;;;;;IASqBgB,M;AACjB;;;;;AAKA,wBAAwB;AAAA,QAAVf,MAAU,QAAVA,MAAU;;AAAA;;AACpB;;;;AAIA,SAAK8C,MAAL,GAAc,IAAd;AACA;;;;AAIA,SAAK9C,MAAL,GAAc,EAAd;AACA,QAAI+C,IAAIC,MAAJ,KAAejC,MAAnB,EAA2B;AACvB,YAAM,IAAIkC,SAAJ,CAAc,yDAAd,CAAN;AACH;AACD,SAAKjD,MAAL,GAAcA,MAAd;AACH;AACD;;;;;;;;;;;sBAOU8C,M,EAAQ;AACd,WAAKA,MAAL,GAAcA,MAAd;AACH;;;;;;;kBA/BgB/B,M;;;;;;;;;;;;;;;;;;;;;;;ICTAmC,U;AACjB;;;;;AAKA,8BAAqB;AAAA;;AAAA,YAAPC,GAAO,QAAPA,GAAO;;AAAA;;AACjB;;;;AAIA,aAAKC,GAAL,GAAW;AACPC,qBAAS,KADF;AAEPC,oBAAQ,qBAFD;AAGPC,0BAAc,6BAHP;AAIPC,2BAAe;AAJR,SAAX;AAMA;;;AAGA,aAAKC,KAAL,GAAa;AACTH,oBAAQ;AADC,SAAb;AAGA,aAAKH,GAAL,GAAWA,GAAX;AACA,aAAKO,iBAAL,GAAyB,YAAM;AAC3B,kBAAKC,eAAL,CAAqB,KAArB;AACH,SAFD;AAGH;AACD;;;;;;;;iCAIS;AAAA;;AACL,iBAAKF,KAAL,CAAWH,MAAX,GAAoBM,EAAEC,IAAF,CAAO,KAAP,EAAc,CAAC,KAAKT,GAAL,CAASE,MAAV,EAAkB,KAAKF,GAAL,CAASG,YAA3B,CAAd,EAAwD,EAAxD,CAApB;AACA,iBAAKE,KAAL,CAAWH,MAAX,CAAkBQ,WAAlB,CAA8BF,EAAEG,GAAF,CAAM,OAAN,EAAe,EAAf,EAAmB,EAAnB,CAA9B;AACA,iBAAKN,KAAL,CAAWH,MAAX,CAAkBU,gBAAlB,CAAmC,OAAnC,EAA4C,UAACC,KAAD;AAAA,uBAAW,OAAKC,WAAL,CAAiBD,KAAjB,CAAX;AAAA,aAA5C,EAAgF,KAAhF;AACA,mBAAO,KAAKR,KAAL,CAAWH,MAAlB;AACH;AACD;;;;;;;oCAIYW,K,EAAO;AACf;;;;AAIA,gBAAI,CAAC,KAAKE,gBAAV,EAA4B;AACxB,qBAAKR,eAAL,CAAqB,IAArB;AACA;;;;;AAKA,qBAAKR,GAAL,CAASiB,MAAT,CAAgBC,EAAhB,CAAmB,uBAAnB,EAA4C,KAAKX,iBAAjD;AACH,aARD,MASK;AACD;;;AAGA,qBAAKP,GAAL,CAASiB,MAAT,CAAgBE,GAAhB,CAAoB,uBAApB,EAA6C,KAAKZ,iBAAlD;AACA,qBAAKP,GAAL,CAASoB,MAAT,CAAgBC,MAAhB;AACH;AACJ;AACD;;;;;;wCAGgBrD,K,EAAO;AACnB,iBAAKgD,gBAAL,GAAwBhD,KAAxB;AACA,iBAAKsC,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4BC,GAA5B,CAAgC,KAAKtB,GAAL,CAASI,aAAzC;AACH;;;;;;;kBAtEgBN,U;;;;;;;;;;;;;;;;;;;;;;;;ICAAyB,U;AACjB;;;;;AAKA,8BAAqB;AAAA,YAAPxB,GAAO,QAAPA,GAAO;;AAAA;;AACjB;;;;AAIA,aAAKC,GAAL,GAAW;AACPC,qBAAS,KADF;AAEPC,oBAAQ;AAFD,SAAX;AAIA,aAAKH,GAAL,GAAWA,GAAX;AACH;AACD;;;;;;;;iCAIS;AAAA;;AACL,gBAAMyB,eAAehB,EAAEC,IAAF,CAAO,KAAP,EAAc,KAAKT,GAAL,CAASE,MAAvB,EAA+B,EAA/B,CAArB;AACAsB,yBAAad,WAAb,CAAyBF,EAAEG,GAAF,CAAM,UAAN,EAAkB,EAAlB,EAAsB,EAAtB,CAAzB;AACAa,yBAAaZ,gBAAb,CAA8B,OAA9B,EAAuC,UAACC,KAAD;AAAA,uBAAW,MAAKC,WAAL,CAAiBD,KAAjB,CAAX;AAAA,aAAvC,EAA2E,KAA3E;AACA,mBAAOW,YAAP;AACH;AACD;;;;;;;oCAIYX,K,EAAO;AACf,iBAAKd,GAAL,CAASoB,MAAT,CAAgBM,MAAhB;AACH;;;;;;;kBAjCgBF,U;;;;;;;;;;;;;;;;;;;;qjBCArB;;;;;;;;;AASA;;;AACA;;;;AACA;;;;;;;;AAEA;;;;;;;;;IASqBG,K;AACnB;;;;;;;AAOA,iBAAYC,QAAZ,EAAsBC,YAAtB,EAAoCC,QAApC,EAA8CC,UAA9C,EAA0D;AAAA;;AACxD,SAAKhE,IAAL,GAAY6D,QAAZ;AACA,SAAKI,IAAL,GAAYH,YAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAK9B,GAAL,GAAW+B,UAAX;AACA,SAAKE,KAAL,GAAa,KAAKC,OAAL,EAAb;;AAEA;;;AAGA,SAAKC,KAAL,GAAa,KAAKC,SAAL,EAAb;AACD;;AAED;;;;;;;;;;AAYA;;;;8BAIU;AACR,WAAKlC,OAAL,GAAeO,EAAEC,IAAF,CAAO,KAAP,EAAciB,MAAM1B,GAAN,CAAUC,OAAxB,CAAf;AACA,WAAKmC,WAAL,GAAsB5B,EAAEC,IAAF,CAAO,KAAP,EAAciB,MAAM1B,GAAN,CAAUqC,OAAxB,CAAtB;AACA,WAAKC,cAAL,GAAuB,KAAKP,IAAL,CAAUtD,MAAV,EAAvB;;AAEA,WAAK2D,WAAL,CAAiB1B,WAAjB,CAA6B,KAAK4B,cAAlC;AACA,WAAKrC,OAAL,CAAaS,WAAb,CAAyB,KAAK0B,WAA9B;;AAEA,aAAO,KAAKnC,OAAZ;AACD;;AAED;;;;;;;;;;;yBAQKsC,U,EAAYC,M,EAAQ;AACvB;;;AAGA,UAAI,KAAKT,IAAL,CAAUQ,UAAV,KAAyB,KAAKR,IAAL,CAAUQ,UAAV,aAAiCE,QAA9D,EAAwE;AACtE,aAAKV,IAAL,CAAUQ,UAAV,EAAsBG,IAAtB,CAA2B,KAAKX,IAAhC,EAAsCS,MAAtC;AACD;AACF;;AAED;;;;;;;;;AAyBA;;;;8BAIU9D,I,EAAM;AAAA;;AACd,aAAO5B,QAAQC,OAAR,GACJC,IADI,CACC,YAAM;AACV,cAAK+E,IAAL,CAAUY,KAAV,CAAgBjE,IAAhB;AACD,OAHI,CAAP;AAID;AACD;;;;;;;;2BAKO;AAAA;;AACL,UAAIkE,iBAAiB,KAAKb,IAAL,CAAUc,IAAV,CAAe,KAAKP,cAApB,CAArB;;AAEA;AACA,UAAIQ,iBAAiBC,OAAOC,WAAP,CAAmBC,GAAnB,EAArB;AAAA,UACEC,qBADF;;AAGA,aAAOpG,QAAQC,OAAR,CAAgB6F,cAAhB,EACJ5F,IADI,CACC,UAACmG,kBAAD,EAAwB;AAC5B;AACAD,uBAAeH,OAAOC,WAAP,CAAmBC,GAAnB,EAAf;;AAEA,eAAO;AACLlB,gBAAM,OAAKjE,IADN;AAELY,gBAAMyE,kBAFD;AAGLC,gBAAOF,eAAeJ;AAHjB,SAAP;AAKD,OAVI,EAWJxF,KAXI,CAWE,UAAUC,KAAV,EAAiB;AACtBgC,UAAElC,GAAF,0BAA6B,KAAK0E,IAAL,CAAUjE,IAAvC,gCAAsEP,KAAtE,EAA+E,KAA/E,EAAsF,KAAtF;AACD,OAbI,CAAP;AAcD;;AAED;;;;;;;;;;;;iCASamB,I,EAAM;AACjB,UAAI2E,UAAU,IAAd;;AAEA,UAAI,KAAKtB,IAAL,CAAUuB,QAAV,YAA8Bb,QAAlC,EAA4C;AAC1CY,kBAAU,KAAKtB,IAAL,CAAUuB,QAAV,CAAmB5E,IAAnB,CAAV;AACD;;AAED,UAAI,CAAC2E,OAAL,EAAc;AACZ,eAAO,KAAP;AACD;;AAED,aAAO3E,IAAP;AACD;;AAED;;;;;;;;gCAKY;AAAA;;AACV,UAAI6E,YAAY,CAAChC,yBAAD,EAAazB,yBAAb,CAAhB;;AAEA;AACA,aAAOyD,UAAU9G,GAAV,CAAe,UAAC+G,IAAD,EAAU;AAC9B,eAAO,IAAIA,IAAJ,CAAS;AACdzD,eAAK,OAAKA,GADI;AAEd8B,oBAAU,OAAKA;AAFD,SAAT,CAAP;AAID,OALM,CAAP;AAMD;;AAED;;;;;;;kCAIc;AACZ,UAAI4B,eAAeC,SAASC,sBAAT,EAAnB;;AAEA,WAAKzB,KAAL,CAAWxE,OAAX,CAAoB,gBAAQ;AAC1B8C,UAAEoD,MAAF,CAASH,YAAT,EAAuBD,KAAK/E,MAAL,EAAvB;AACD,OAFD;;AAIA,aAAOgF,YAAP;AACD;;AAED;;;;;;;wBAjHW;AACT,aAAO,KAAKzB,KAAZ;AACD;;AAED;;;;;;;wBAIW;AACT,aAAO,KAAKa,IAAL,EAAP;AACD;;AAED;;;;;;;;wBAKgB;AACd,aAAO,OAAO,KAAKd,IAAL,CAAUY,KAAjB,KAA2B,UAAlC;AACD;;;wBAkGa;AACZ;;;;AAIA,UAAI,KAAKZ,IAAL,CAAU8B,WAAd,EAA2B;AACzB,eAAO,KAAP;AACD;;AAED,UAAIC,YAAYtD,EAAEhB,OAAF,CAAU,KAAK8C,cAAf,CAAhB;AAAA,UACEyB,aAAa,CAAC,KAAKC,QADrB;;AAGA,aAAOF,aAAaC,UAApB;AACD;;AAED;;;;;;;wBAIe;AACb;;;;AAIA,UAAME,YAAY,CAChB,KADgB,EAEhB,QAFgB,EAGhB,OAHgB,EAIhB,OAJgB,EAKhB,QALgB,EAMhB,OANgB,EAOhB,UAPgB,EAQhB,eARgB,CAAlB;;AAWA,aAAO,CAAC,CAAC,KAAKjC,KAAL,CAAWkC,aAAX,CAAyBD,UAAUE,IAAV,CAAe,GAAf,CAAzB,CAAT;AACD;;AAED;;;;;;;sBAIapG,K,EAAO;AAClB;;;AAGA,UAAIA,UAAU,IAAV,IAAkB,CAAC,KAAKyB,OAA5B,EAAqC;AACnC,aAAKwC,KAAL,CAAWX,SAAX,CAAqBC,GAArB,CAAyBI,MAAM1B,GAAN,CAAUoE,QAAnC;AACD,OAFD,MAEO;AACL,aAAKpC,KAAL,CAAWX,SAAX,CAAqBgD,MAArB,CAA4B3C,MAAM1B,GAAN,CAAUoE,QAAtC;AACD;AACF;;;wBApNgB;AACf,aAAO;AACLnE,iBAAS,UADJ;AAELoC,iBAAS,mBAFJ;AAGL+B,kBAAU;AAHL,OAAP;AAKD;;;;;;;kBA/BkB1C,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBrB;;;IAGqB4C,G;;;;;;;;AACnB;;;;;gCAKmBC,G,EAAK;AACtB,aAAOA,IAAIC,OAAJ,IAAe,CAAC,MAAD,EAAS,MAAT,EAAiB,IAAjB,EAAuB,KAAvB,EAA8B,SAA9B,EAAyC,OAAzC,EAAkD,IAAlD,EAAwD,KAAxD,EAA+D,OAA/D,EAAwE,QAAxE,EAAkF,MAAlF,EAA0F,MAA1F,EAAkG,OAAlG,EAA2G,QAA3G,EAAqH,OAArH,EAA8H,KAA9H,EAAqIC,QAArI,CAA8IF,IAAIC,OAAlJ,CAAtB;AACD;;;;;AAGD;;;;;;;;yBAQYA,O,EAA6C;AAAA,UAApCE,UAAoC,uEAAvB,IAAuB;AAAA,UAAjBC,UAAiB,uEAAJ,EAAI;;AACvD,UAAIC,KAAKlB,SAASmB,aAAT,CAAuBL,OAAvB,CAAT;;AAEA,UAAKM,MAAMC,OAAN,CAAcL,UAAd,CAAL,EAAiC;AAAA;;AAC/B,4BAAGrD,SAAH,EAAaC,GAAb,yCAAoBoD,UAApB;AACD,OAFD,MAEO,IAAIA,UAAJ,EAAiB;AACtBE,WAAGvD,SAAH,CAAaC,GAAb,CAAiBoD,UAAjB;AACD;;AAED,WAAK,IAAIM,QAAT,IAAqBL,UAArB,EAAiC;AAC/BC,WAAGI,QAAH,IAAeL,WAAWK,QAAX,CAAf;AACD;;AAED,aAAOJ,EAAP;AACD;;AAED;;;;;;;;yBAKYvC,O,EAAS;AACnB,aAAOqB,SAASuB,cAAT,CAAwB5C,OAAxB,CAAP;AACD;;AAED;;;;;;;;;;wBAOWvE,I,EAA+B;AAAA,UAAzBoH,KAAyB,uEAAjB,EAAiB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;;AACxC,UAAIC,OAAO1B,SAAS2B,eAAT,CAAyB,4BAAzB,EAAuD,KAAvD,CAAX;;AAEAD,WAAK/D,SAAL,CAAeC,GAAf,CAAmB,MAAnB,EAA2B,WAAWxD,IAAtC;AACAsH,WAAKE,YAAL,CAAkB,OAAlB,EAA2BJ,QAAQ,IAAnC;AACAE,WAAKE,YAAL,CAAkB,QAAlB,EAA4BH,SAAS,IAArC;AACAC,WAAKG,SAAL,qEAAiFzH,IAAjF;;AAEA,aAAOsH,IAAP;AACD;;AAED;;;;;;;;;2BAMcI,M,EAAQC,Q,EAAU;AAC9B,UAAKX,MAAMC,OAAN,CAAcU,QAAd,CAAL,EAA+B;AAC7BA,iBAAS/H,OAAT,CAAkB;AAAA,iBAAM8H,OAAO9E,WAAP,CAAmBkE,EAAnB,CAAN;AAAA,SAAlB;AACD,OAFD,MAEO;AACLY,eAAO9E,WAAP,CAAmB+E,QAAnB;AACD;AACF;;AAED;;;;;;;;;;;;;2BAUqC;AAAA,UAAzBb,EAAyB,uEAApBlB,QAAoB;AAAA,UAAVgC,QAAU;;AACnC,aAAOd,GAAGV,aAAH,CAAiBwB,QAAjB,CAAP;AACD;;AAED;;;;;;;;;;;;8BASwC;AAAA,UAAzBd,EAAyB,uEAApBlB,QAAoB;AAAA,UAAVgC,QAAU;;AACtC,aAAOd,GAAGe,gBAAH,CAAoBD,QAApB,CAAP;AACD;;AAED;;;;;;;;;;;;;mCAUsBE,I,EAAsB;AAAA,UAAhBC,MAAgB,uEAAP,KAAO;;AAC1C;;;;;;AAMA,UAAIC,QAAQD,SAAS,WAAT,GAAuB,YAAnC;AAAA,UACEE,UAAUF,SAAS,iBAAT,GAA6B,aADzC;;AAGA,UAAID,QAAQA,KAAKI,QAAL,KAAkBC,KAAKC,YAA/B,IAA+CN,KAAKE,KAAL,CAAnD,EAAgE;AAC9D,YAAIK,YAAYP,KAAKE,KAAL,CAAhB;;AAEA;;;AAGA,YAAIxB,IAAI8B,WAAJ,CAAgBD,SAAhB,CAAJ,EAAgC;AAC9B;;;;;;;;;AASA,cAAIA,UAAUJ,OAAV,CAAJ,EAAwB;AACtBI,wBAAYA,UAAUJ,OAAV,CAAZ;AACD,WAFD,MAEO,IAAII,UAAUE,UAAV,CAAqBN,OAArB,CAAJ,EAAmC;AACxCI,wBAAYA,UAAUE,UAAV,CAAqBN,OAArB,CAAZ;AACD,WAFM,MAEA;AACL,mBAAOI,UAAUE,UAAjB;AACD;AACF;;AAED,eAAO,KAAKC,cAAL,CAAoBH,SAApB,EAA+BN,MAA/B,CAAP;AACD;;AAED,aAAOD,IAAP;AACD;;AAED;;;;;;;;;8BAMiBA,I,EAAM;AACrB,aAAOA,QAAQ,QAAOA,IAAP,yCAAOA,IAAP,OAAgB,QAAxB,IAAoCA,KAAKI,QAAzC,IAAqDJ,KAAKI,QAAL,KAAkBC,KAAKC,YAAnF;AACD;;AAED;;;;;;;;kCAKqBtG,M,EAAQ;AAC3B,UAAI2G,eAAe,CACjB,OADiB,EAEjB,UAFiB,CAAnB;;AAKA,aAAO3G,SAAS2G,aAAa9B,QAAb,CAAsB7E,OAAO4E,OAA7B,CAAT,GAAiD,KAAxD;AACD;;AAED;;;;;;;;;;;;gCASmBoB,I,EAAM;AACvB,UAAIY,iBAAJ;;AAEA,UAAK,KAAKC,SAAL,CAAeb,IAAf,KAAwB,KAAKc,aAAL,CAAmBd,IAAnB,CAA7B,EAAwD;AACtDY,mBAAWZ,KAAKe,KAAhB;AACD,OAFD,MAEO;AACLH,mBAAWZ,KAAKgB,WAAL,CAAiBC,OAAjB,CAAyB,QAAzB,EAAmC,EAAnC,CAAX;AACD;;AAED,aAAOL,SAASM,IAAT,GAAgBrH,MAAhB,KAA2B,CAAlC;AACD;;AAED;;;;;;;;2BAKcmG,I,EAAM;AAClB,UAAI,CAACA,IAAL,EAAW;AACT,eAAO,KAAP;AACD;;AAED,aAAOA,KAAKmB,UAAL,CAAgBtH,MAAhB,KAA2B,CAAlC;AACD;;AAED;;;;;;;;;;;;4BASemG,I,EAAM;AAAA;;AACnB,UAAIoB,aAAa,EAAjB;AAAA,UACEC,QAAQ,EADV;;AAGA,UAAI,CAACrB,IAAL,EAAW;AACT,eAAO,IAAP;AACD;;AAED,UAAI,CAACA,KAAKmB,UAAL,CAAgBtH,MAArB,EAA6B;AAC3B,eAAO,KAAKyH,WAAL,CAAiBtB,IAAjB,CAAP;AACD;;AAEDoB,iBAAWG,IAAX,CAAgBvB,KAAKwB,UAArB;;AAEA,aAAQJ,WAAWvH,MAAX,GAAoB,CAA5B,EAAgC;AAC9BmG,eAAOoB,WAAWK,KAAX,EAAP;;AAEA,YAAI,CAACzB,IAAL,EAAW;;AAEX,YAAK,KAAK0B,MAAL,CAAY1B,IAAZ,CAAL,EAAyB;AACvBqB,gBAAME,IAAN,CAAWvB,IAAX;AACD,SAFD,MAEO;AACLoB,qBAAWG,IAAX,CAAgBvB,KAAKwB,UAArB;AACD;;AAED,eAAQxB,QAAQA,KAAK2B,WAArB,EAAmC;AACjC3B,iBAAOA,KAAK2B,WAAZ;;AAEA,cAAI,CAAC3B,IAAL,EAAW;;AAEXoB,qBAAWG,IAAX,CAAgBvB,IAAhB;AACD;;AAED;;;AAGA,YAAIA,QAAQ,CAAC,KAAKsB,WAAL,CAAiBtB,IAAjB,CAAb,EAAqC;AACnC,iBAAO,KAAP;AACD;AACF;;AAED,aAAOqB,MAAMO,KAAN,CAAa;AAAA,eAAQ,MAAKN,WAAL,CAAiBO,IAAjB,CAAR;AAAA,OAAb,CAAP;AACD;;;;;;;kBAvQkBnD,G;AAwQpB;;;;;;;;;;;;;;;;;;;;;;;AC3QD;;;;;;;IAOqBoD,c;AACjB,0BAAY3H,GAAZ,EAAiB;AAAA;;AACb;;;AAGA,SAAK4H,WAAL,GAAmB,MAAnB;AACA;;;AAGA,SAAK3H,GAAL,GAAW;AACPE,cAAQ,gBADD;AAEP0H,oBAAc,wBAFP;AAGPC,sBAAgB;AAHT,KAAX;AAKA;;;AAGA,SAAKxH,KAAL,GAAa;AACTH,cAAQ;AADC,KAAb;AAGA9C,YAAQC,GAAR,CAAY,2BAAZ;AACH;AACD;;;;;;;6BAGS;AACL,WAAKgD,KAAL,CAAWH,MAAX,GAAoBwD,SAASmB,aAAT,CAAuB,QAAvB,CAApB;AACA,WAAKxE,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4BC,GAA5B,CAAgC,KAAKtB,GAAL,CAASE,MAAzC,EAAiD,KAAKF,GAAL,CAAS6H,cAA1D;AACA,WAAKxH,KAAL,CAAWH,MAAX,CAAkBQ,WAAlB,CAA8BF,EAAEG,GAAF,CAAM,MAAN,EAAc,EAAd,EAAkB,EAAlB,CAA9B;AACA,aAAO,KAAKN,KAAL,CAAWH,MAAlB;AACH;AACD;;;;;;;6BAIS4H,K,EAAO;AACZpE,eAASqE,WAAT,CAAqB,KAAKJ,WAA1B;AACH;AACD;;;;;;;+BAIWK,S,EAAW;AAClB,UAAMC,WAAWvE,SAASwE,iBAAT,CAA2B,KAAKP,WAAhC,CAAjB;AACA,WAAKtH,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4B8G,MAA5B,CAAmC,KAAKnI,GAAL,CAAS4H,YAA5C,EAA0DK,QAA1D;AACA,aAAOA,QAAP;AACH;;;;;;;kBA9CgBP,c;;;;;;;;;;;;;;;;;;;;;;ACPrB;;;;;;;;AACA;;;;;;;IAOqBU,c;AACjB;;;;AAIA,4BAAYrI,GAAZ,EAAiB;AAAA;;AACb;;;AAGA,aAAKsI,WAAL,GAAmB,YAAnB;AACA,aAAKC,aAAL,GAAqB,QAArB;AACA;;;AAGA,aAAKC,SAAL,GAAiB,EAAjB;AACA;;;AAGA,aAAKvI,GAAL,GAAW;AACPE,oBAAQ,gBADD;AAEP0H,0BAAc,wBAFP;AAGPC,4BAAgB,sBAHT;AAIPW,0BAAc,wBAJP;AAKPC,mBAAO,sBALA;AAMPC,yBAAa;AANN,SAAX;AAQA;;;AAGA,aAAKrI,KAAL,GAAa;AACTH,oBAAQ,IADC;AAETuI,mBAAO;AAFE,SAAb;AAIA;;;AAGA,aAAKE,WAAL,GAAmB,KAAnB;AACA,aAAKC,aAAL,GAAqB7I,IAAI8I,OAAzB;AACA,aAAKb,SAAL,GAAiB,IAAIc,mBAAJ,EAAjB;AACH;AACD;;;;;;;iCAGS;AACL,iBAAKzI,KAAL,CAAWH,MAAX,GAAoBwD,SAASmB,aAAT,CAAuB,QAAvB,CAApB;AACA,iBAAKxE,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4BC,GAA5B,CAAgC,KAAKtB,GAAL,CAASE,MAAzC,EAAiD,KAAKF,GAAL,CAAS6H,cAA1D;AACA,iBAAKxH,KAAL,CAAWH,MAAX,CAAkBQ,WAAlB,CAA8BF,EAAEG,GAAF,CAAM,MAAN,EAAc,EAAd,EAAkB,EAAlB,CAA9B;AACA,iBAAKN,KAAL,CAAWH,MAAX,CAAkBQ,WAAlB,CAA8BF,EAAEG,GAAF,CAAM,QAAN,EAAgB,EAAhB,EAAoB,EAApB,CAA9B;AACA,mBAAO,KAAKN,KAAL,CAAWH,MAAlB;AACH;AACD;;;;;;wCAGgB;AAAA;;AACZ,iBAAKG,KAAL,CAAWoI,KAAX,GAAmB/E,SAASmB,aAAT,CAAuB,OAAvB,CAAnB;AACA,iBAAKxE,KAAL,CAAWoI,KAAX,CAAiB1J,WAAjB,GAA+B,YAA/B;AACA,iBAAKsB,KAAL,CAAWoI,KAAX,CAAiBpH,SAAjB,CAA2BC,GAA3B,CAA+B,KAAKtB,GAAL,CAASyI,KAAxC;AACA,iBAAKpI,KAAL,CAAWoI,KAAX,CAAiB7H,gBAAjB,CAAkC,SAAlC,EAA6C,UAACC,KAAD,EAAW;AACpD,oBAAIA,MAAMkI,OAAN,KAAkB,MAAKR,SAA3B,EAAsC;AAClC,0BAAKS,YAAL,CAAkBnI,KAAlB;AACH;AACJ,aAJD;AAKA,mBAAO,KAAKR,KAAL,CAAWoI,KAAlB;AACH;AACD;;;;;;;iCAISX,K,EAAO;AACZ;;;AAGA,gBAAIA,KAAJ,EAAW;AACP;;;AAGA,qBAAKE,SAAL,CAAenF,IAAf;AACA,oBAAMoG,eAAe,KAAKjB,SAAL,CAAekB,aAAf,CAA6B,GAA7B,CAArB;AACA;;;AAGA,oBAAID,YAAJ,EAAkB;AACd,yBAAKjB,SAAL,CAAemB,WAAf,CAA2BF,YAA3B;AACA,yBAAKG,MAAL;AACA,yBAAKC,YAAL;AACA,yBAAKC,UAAL;AACA,yBAAKV,aAAL,CAAmBW,KAAnB;AACA;AACH;AACJ;AACD,iBAAKC,aAAL;AACH;AACD;;;;;;;mCAIWxB,S,EAAW;AAClB,gBAAMyB,YAAY,KAAKzB,SAAL,CAAekB,aAAf,CAA6B,GAA7B,CAAlB;AACA,gBAAIO,SAAJ,EAAe;AACX,qBAAKpJ,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4BC,GAA5B,CAAgC,KAAKtB,GAAL,CAASwI,YAAzC;AACA,qBAAKnI,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4BC,GAA5B,CAAgC,KAAKtB,GAAL,CAAS4H,YAAzC;AACA,qBAAK8B,WAAL;AACA;;;AAGA,oBAAMC,WAAWF,UAAUG,YAAV,CAAuB,MAAvB,CAAjB;AACA,qBAAKvJ,KAAL,CAAWoI,KAAX,CAAiB9B,KAAjB,GAAyBgD,aAAa,MAAb,GAAsBA,QAAtB,GAAiC,EAA1D;AACA,qBAAK3B,SAAL,CAAenF,IAAf;AACH,aAVD,MAWK;AACD,qBAAKxC,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4BgD,MAA5B,CAAmC,KAAKrE,GAAL,CAASwI,YAA5C;AACA,qBAAKnI,KAAL,CAAWH,MAAX,CAAkBmB,SAAlB,CAA4BgD,MAA5B,CAAmC,KAAKrE,GAAL,CAAS4H,YAA5C;AACH;AACD,mBAAO,CAAC,CAAC6B,SAAT;AACH;AACD;;;;;;gCAGQ;AACJ,iBAAKJ,YAAL;AACH;;;wCACe;AACZ,gBAAI,CAAC,KAAKV,WAAV,EAAuB;AACnB,qBAAKe,WAAL,CAAiB,IAAjB;AACH,aAFD,MAGK;AACD,qBAAKL,YAAL,CAAkB,KAAlB;AACH;AACJ;AACD;;;;;;sCAG+B;AAAA,gBAAnBQ,SAAmB,uEAAP,KAAO;;AAC3B,iBAAKxJ,KAAL,CAAWoI,KAAX,CAAiBpH,SAAjB,CAA2BC,GAA3B,CAA+B,KAAKtB,GAAL,CAAS0I,WAAxC;AACA,gBAAImB,SAAJ,EAAe;AACX,qBAAKxJ,KAAL,CAAWoI,KAAX,CAAiBqB,KAAjB;AACH;AACD,iBAAKnB,WAAL,GAAmB,IAAnB;AACH;AACD;;;;;;;;uCAKyC;AAAA,gBAA5BoB,mBAA4B,uEAAN,IAAM;;AACrC,iBAAK1J,KAAL,CAAWoI,KAAX,CAAiBpH,SAAjB,CAA2BgD,MAA3B,CAAkC,KAAKrE,GAAL,CAAS0I,WAA3C;AACA,iBAAKrI,KAAL,CAAWoI,KAAX,CAAiB9B,KAAjB,GAAyB,EAAzB;AACA,gBAAIoD,mBAAJ,EAAyB;AACrB,qBAAK/B,SAAL,CAAegC,UAAf;AACH;AACD,iBAAKrB,WAAL,GAAmB,KAAnB;AACH;AACD;;;;;;;qCAIa9H,K,EAAO;AAChB,gBAAI8F,QAAQ,KAAKtG,KAAL,CAAWoI,KAAX,CAAiB9B,KAAjB,IAA0B,EAAtC;AACA,gBAAI,CAACA,MAAMG,IAAN,EAAL,EAAmB;AACf,qBAAKkB,SAAL,CAAeiC,OAAf;AACA,qBAAKb,MAAL;AACAvI,sBAAMqJ,cAAN;AACA,qBAAKb,YAAL;AACH;AACD,gBAAI,CAAC,KAAKc,WAAL,CAAiBxD,KAAjB,CAAL,EAA8B;AAC1B;;;AAGApH,kBAAElC,GAAF,CAAM,uBAAN,EAA+B,MAA/B,EAAuCsJ,KAAvC;AACA;AACH;AACDA,oBAAQ,KAAKyD,WAAL,CAAiBzD,KAAjB,CAAR;AACA,iBAAKqB,SAAL,CAAeiC,OAAf;AACA,iBAAKI,UAAL,CAAgB1D,KAAhB;AACA;;;AAGA9F,kBAAMqJ,cAAN;AACArJ,kBAAMyJ,eAAN;AACAzJ,kBAAM0J,wBAAN;AACA,iBAAKlB,YAAL;AACA,iBAAKT,aAAL,CAAmBW,KAAnB;AACA,iBAAKD,UAAL;AACH;AACD;;;;;;;;oCAKYkB,G,EAAK;AACb;;;AAGA,mBAAO,CAAC,KAAKC,IAAL,CAAUD,GAAV,CAAR;AACH;AACD;;;;;;;;;oCAMYE,I,EAAM;AACdA,mBAAOA,KAAK5D,IAAL,EAAP;AACA4D,mBAAO,KAAKC,WAAL,CAAiBD,IAAjB,CAAP;AACA,mBAAOA,IAAP;AACH;AACD;;;;;;;oCAIYA,I,EAAM;AACd;;;AAGA,gBAAI,cAAcD,IAAd,CAAmBC,IAAnB,CAAJ,EAA8B;AAC1B,uBAAOA,IAAP;AACH;AACD;;;;;;AAMA,gBAAME,aAAa,aAAaH,IAAb,CAAkBC,IAAlB,CAAnB;AAAA,gBAA4CG,WAAWH,KAAKI,SAAL,CAAe,CAAf,EAAkB,CAAlB,MAAyB,GAAhF;AAAA,gBAAqFC,qBAAqB,eAAeN,IAAf,CAAoBC,IAApB,CAA1G;AACA,gBAAI,CAACE,UAAD,IAAe,CAACC,QAAhB,IAA4B,CAACE,kBAAjC,EAAqD;AACjDL,uBAAO,YAAYA,IAAnB;AACH;AACD,mBAAOA,IAAP;AACH;AACD;;;;;;;mCAIWA,I,EAAM;AACb;;;AAGA,gBAAMjB,YAAY,KAAKzB,SAAL,CAAekB,aAAf,CAA6B,GAA7B,CAAlB;AACA,gBAAIO,SAAJ,EAAe;AACX,qBAAKzB,SAAL,CAAemB,WAAf,CAA2BM,SAA3B;AACH;AACD/F,qBAASqE,WAAT,CAAqB,KAAKM,WAA1B,EAAuC,KAAvC,EAA8CqC,IAA9C;AACH;AACD;;;;;;iCAGS;AACLhH,qBAASqE,WAAT,CAAqB,KAAKO,aAA1B;AACH;;;;;;;kBAxPgBF,c;;;;;;;;;;;;;ACRrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oT;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;;;;IAIqB4C,S;;;AACjB;;;;AAIA,6BAAwB;AAAA,YAAVpO,MAAU,QAAVA,MAAU;;AAAA;;AAAA,qHACd,EAAEA,cAAF,EADc;AAEvB;AACD;;;;;;;;;AAWA;;;mCAGW;AACPQ,oBAAQC,GAAR,CAAY,aAAZ,EAA2B,KAAKqC,MAAL,CAAYnB,YAAvC;AACH;AACD;;;;;;iCAGS;AACL,iBAAKmB,MAAL,CAAYnB,YAAZ,CAAyB0M,kBAAzB;AACH;AACD;;;;;;;gCAIOC,U,EAAY;AACf,iBAAKxL,MAAL,CAAYnB,YAAZ,CAAyB4M,WAAzB,CAAqCD,UAArC;AACA;;;;AAIA,gBAAI,KAAKxL,MAAL,CAAYnB,YAAZ,CAAyB4C,MAAzB,CAAgC1B,MAAhC,KAA2C,CAA/C,EAAkD;AAC9C,qBAAKC,MAAL,CAAYnB,YAAZ,CAAyB6M,MAAzB;AACH;AACD;;;AAGA,gBAAI,KAAK1L,MAAL,CAAYnB,YAAZ,CAAyB8M,iBAAzB,KAA+C,CAAnD,EAAsD;AAClD,oBAAI,KAAK3L,MAAL,CAAY4L,KAAZ,CAAkBC,UAAlB,CAA6B,KAAK7L,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAtD,CAAJ,EAAyE;AACrE,yBAAK9L,MAAL,CAAY+L,OAAZ,CAAoBlC,KAApB;AACH;AACJ,aAJD,MAKK;AACD,oBAAI,KAAK7J,MAAL,CAAY4L,KAAZ,CAAkBI,gBAAlB,CAAmC,IAAnC,CAAJ,EAA8C;AAC1C,yBAAKhM,MAAL,CAAY+L,OAAZ,CAAoBlC,KAApB;AACH;AACJ;AACJ;;;4BA7Ca;AAAA;;AACV,mBAAO;AACHnI,wBAAQ;AAAA,2BAAM,OAAKA,MAAL,EAAN;AAAA,iBADL;AAEHuK,0BAAU;AAAA,2BAAM,OAAKA,QAAL,EAAN;AAAA,iBAFP;AAGHlK,wBAAQ;AAAA,2BAAM,OAAKA,MAAL,EAAN;AAAA;AAHL,aAAP;AAKH;;;;EAlBkC9D,M;;;kBAAlBqN,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJrB;;;;IAIqBY,S;;;AACjB;;;;AAIA,6BAAwB;AAAA,YAAVhP,MAAU,QAAVA,MAAU;;AAAA;;AAAA,qHACd,EAAEA,cAAF,EADc;AAEvB;AACD;;;;;;;;;AAWA;;;;;2BAKGiP,S,EAAWC,Q,EAAU;AACpB,iBAAKpM,MAAL,CAAYqM,MAAZ,CAAmB9K,EAAnB,CAAsB4K,SAAtB,EAAiCC,QAAjC;AACH;AACD;;;;;;;;6BAKKD,S,EAAWnN,I,EAAM;AAClB,iBAAKgB,MAAL,CAAYqM,MAAZ,CAAmBC,IAAnB,CAAwBH,SAAxB,EAAmCnN,IAAnC;AACH;AACD;;;;;;;;4BAKImN,S,EAAWC,Q,EAAU;AACrB,iBAAKpM,MAAL,CAAYqM,MAAZ,CAAmB7K,GAAnB,CAAuB2K,SAAvB,EAAkCC,QAAlC;AACH;;;4BA9Ba;AAAA;;AACV,mBAAO;AACHE,sBAAM,cAACH,SAAD,EAAYnN,IAAZ;AAAA,2BAAqB,OAAKsN,IAAL,CAAUH,SAAV,EAAqBnN,IAArB,CAArB;AAAA,iBADH;AAEHwC,qBAAK,aAAC2K,SAAD,EAAYC,QAAZ;AAAA,2BAAyB,OAAK5K,GAAL,CAAS2K,SAAT,EAAoBC,QAApB,CAAzB;AAAA,iBAFF;AAGH7K,oBAAI,YAAC4K,SAAD,EAAYC,QAAZ;AAAA,2BAAyB,OAAK7K,EAAL,CAAQ4K,SAAR,EAAmBC,QAAnB,CAAzB;AAAA;AAHD,aAAP;AAKH;;;;EAlBkCnO,M;;;kBAAlBiO,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJrB;;;;IAIqBK,Y;;;AACjB;;;;AAIA,gCAAwB;AAAA,YAAVrP,MAAU,QAAVA,MAAU;;AAAA;;AAAA,2HACd,EAAEA,cAAF,EADc;AAEvB;AACD;;;;;;;;8BASMsP,W,EAAatP,M,EAAQ;AACvB,mBAAO,KAAK8C,MAAL,CAAYyM,SAAZ,CAAsBC,KAAtB,CAA4BF,WAA5B,EAAyCtP,MAAzC,CAAP;AACH;;;4BAPa;AAAA;;AACV,mBAAO;AACHwP,uBAAO,eAACF,WAAD,EAActP,MAAd;AAAA,2BAAyB,OAAKwP,KAAL,CAAWF,WAAX,EAAwBtP,MAAxB,CAAzB;AAAA;AADJ,aAAP;AAGH;;;;EAhBqCe,M;;;kBAArBsO,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJrB;;;;IAIqBI,W;;;AACjB;;;;AAIA,+BAAwB;AAAA,YAAVzP,MAAU,QAAVA,MAAU;;AAAA;;AAAA,yHACd,EAAEA,cAAF,EADc;AAEvB;AACD;;;;;;;;;AAUA;;;+BAGO;AACH,iBAAK8C,MAAL,CAAY+L,OAAZ,CAAoBa,IAApB;AACH;AACD;;;;;;gCAGQ;AACJ,iBAAK5M,MAAL,CAAY+L,OAAZ,CAAoBlC,KAApB;AACH;;;4BAjBa;AAAA;;AACV,mBAAO;AACHA,uBAAO;AAAA,2BAAM,OAAKA,KAAL,EAAN;AAAA,iBADJ;AAEH+C,sBAAM;AAAA,2BAAM,OAAKA,IAAL,EAAN;AAAA;AAFH,aAAP;AAIH;;;;EAjBoC3O,M;;;kBAApB0O,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJrB;;;IAGqBE,G;;;AACjB;;;;AAIA,uBAAwB;AAAA,YAAV3P,MAAU,QAAVA,MAAU;;AAAA;;AAAA,yGACd,EAAEA,cAAF,EADc;AAEvB;;;;4BACa;AACV,mBAAO;AACHuE,wBAAQ,KAAKzB,MAAL,CAAYsL,SAAZ,CAAsBwB,OAD3B;AAEHC,uBAAO,EAFJ;AAGHzL,wBAAQ,KAAKtB,MAAL,CAAYkM,SAAZ,CAAsBY,OAH3B;AAIHxN,2BAAW,KAAKU,MAAL,CAAYuM,YAAZ,CAAyBO,OAJjC;AAKH3D,yBAAS,KAAKnJ,MAAL,CAAY2M,WAAZ,CAAwBG;AAL9B,aAAP;AAOH;;;;EAhB4B7O,M;;;kBAAZ4O,G;;;;;;;;;;;;;;;;;;;;;;ACMrB;;;;;;;;;;+eATA;;;;;;;;;AAWA;;;;;IAKqBhO,Y;;;AACnB;;;;AAIA,8BAAsB;AAAA,QAAT3B,MAAS,QAATA,MAAS;;AAAA;;AAGpB;;;;;;AAHoB,4HACd,EAACA,cAAD,EADc;;AASpB,UAAK8P,OAAL,GAAe,IAAf;;AAEA;;;;;;AAMA,UAAKrB,iBAAL,GAAyB,CAAC,CAA1B;AAjBoB;AAkBrB;;AAED;;;;;;;;;uCAKmBsB,K,EAAOC,M,EAAQ;AAChC,UAAIC,cAAc,KAAK1L,MAAL,CAAYyL,MAAZ,CAAlB;;AAEA,WAAKzL,MAAL,CAAYyL,MAAZ,IAAsB,KAAKzL,MAAL,CAAYwL,KAAZ,CAAtB;AACA,WAAKxL,MAAL,CAAYwL,KAAZ,IAAqBE,WAArB;AACD;;AAED;;;;;;;;;8BAMU;AAAA;;AACR,aAAO,IAAI/P,OAAJ,CAAY,mBAAW;AAC5B,YAAIqE,SAAS,IAAI2L,MAAJ,CAAW,OAAKpN,MAAL,CAAYpB,EAAZ,CAAe+B,KAAf,CAAqB0M,QAAhC,CAAb;;AAEA;;;;;;;;;;;;;;AAcA,eAAKL,OAAL,GAAe,IAAIM,KAAJ,CAAU7L,MAAV,EAAkB;AAC/B8L,eAAKH,OAAOG,GADmB;AAE/BC,eAAKJ,OAAOI;AAFmB,SAAlB,CAAf;;AAKAnQ;AACD,OAvBM,CAAP;AAwBD;;AAED;;;;;;;;;;;;iCASa4E,Q,EAAUjD,I,EAAMmD,Q,EAAU;AACrC,UAAID,eAAe,KAAKlC,MAAL,CAAYrB,KAAZ,CAAkB8O,SAAlB,CAA4BxL,QAA5B,EAAsCjD,IAAtC,CAAnB;AAAA,UACE0O,QAAQ,IAAI1L,eAAJ,CAAUC,QAAV,EAAoBC,YAApB,EAAkCC,QAAlC,EAA4C,KAAKnC,MAAL,CAAY6M,GAAZ,CAAgBC,OAA5D,CADV;;AAGA,WAAKa,UAAL,CAAgBD,KAAhB;AACA;;;AAGAA,YAAM1K,IAAN,CAAW,gBAAX,EAA6B,EAA7B;;AAEA,aAAO0K,KAAP;AACD;;AAED;;;;;;;+BAIWA,K,EAAO;AAAA;;AAChB,WAAK1N,MAAL,CAAY4N,SAAZ,CAAsBrM,EAAtB,CAAyBmM,MAAM9K,cAA/B,EAA+C,SAA/C,EAA0D,UAACzB,KAAD;AAAA,eAAW,OAAKnB,MAAL,CAAY6N,QAAZ,CAAqBC,qBAArB,CAA2C3M,KAA3C,CAAX;AAAA,OAA1D;AACA,WAAKnB,MAAL,CAAY4N,SAAZ,CAAsBrM,EAAtB,CAAyBmM,MAAM9K,cAA/B,EAA+C,SAA/C,EAA0D,UAACzB,KAAD,EAAW;AACnE,eAAKnB,MAAL,CAAY+N,aAAZ,CAA0BC,kBAA1B,CAA6C7M,KAA7C;AACD,OAFD;AAGD;;AAED;;;;;;;;;;;;6BASsE;AAAA,UAA/Dc,QAA+D,uEAApD,KAAK/E,MAAL,CAAYgC,YAAwC;AAAA,UAA1BF,IAA0B,uEAAnB,EAAmB;AAAA,UAAfmD,QAAe,uEAAJ,EAAI;;AACpE,UAAIuL,QAAQ,KAAKO,YAAL,CAAkBhM,QAAlB,EAA4BjD,IAA5B,EAAkCmD,QAAlC,CAAZ;;AAEA,WAAK6K,OAAL,CAAa,EAAE,KAAKrB,iBAApB,IAAyC+B,KAAzC;AACA,WAAK1N,MAAL,CAAY4L,KAAZ,CAAkBC,UAAlB,CAA6B6B,KAA7B;;AAEA,aAAOA,KAAP;AACD;;AAED;;;;;;;;;;gCAOYQ,W,EAAaC,Y,EAAc;AAAA;;AACrC,UAAIC,oBAAoB,KAAKpB,OAAL,CAAaqB,OAAb,CAAqBF,YAArB,CAAxB;;AAEA,aAAO/Q,QAAQC,OAAR,GACJC,IADI,CACE,YAAM;AACX,YAAI6Q,aAAarO,OAAjB,EAA0B;AACxB;AACD;;AAED,eAAOqO,aAAanP,IAAb,CACJ1B,IADI,CACC,UAACgR,gBAAD,EAAsB;AAC1BJ,sBAAYK,SAAZ,CAAsBD,iBAAiBtP,IAAvC;AACD,SAHI,CAAP;AAID,OAVI,EAWJ1B,IAXI,CAWE,YAAM;AACX,eAAKmO,WAAL,CAAiB2C,iBAAjB;AACA,eAAKzC,iBAAL,GAAyB,OAAKqB,OAAL,CAAaqB,OAAb,CAAqBH,WAArB,CAAzB;AACD,OAdI,CAAP;AAeD;;AAED;;;;;;;gCAIYM,K,EAAO;AACjB,UAAI,CAACA,KAAL,EAAY;AACVA,gBAAQ,KAAK7C,iBAAb;AACD;AACD,WAAKqB,OAAL,CAAarI,MAAb,CAAoB6J,KAApB;AACD;AACD;;;;;;;;4BAKQ;AACN,UAAIC,oBAAoB,KAAKzO,MAAL,CAAY4L,KAAZ,CAAkB8C,gCAAlB,EAAxB;AAAA,UACEnO,UAAUO,EAAEC,IAAF,CAAO,KAAP,CADZ;;AAGAR,cAAQ2D,MAAR,CAAeuK,iBAAf;;AAEA;;;AAGA,UAAIzP,OAAO;AACT2P,cAAM7N,EAAEhB,OAAF,CAAUS,OAAV,IAAqB,EAArB,GAA0BA,QAAQsF;AAD/B,OAAX;;AAIA;;;;AAIA,UAAM+I,gBAAgB,KAAKlD,MAAL,CAAY,KAAKxO,MAAL,CAAYgC,YAAxB,EAAsCF,IAAtC,CAAtB;;AAEA,WAAK6P,WAAL,GAAmBD,cAAchM,cAAjC;AACD;;AAED;;;;;;;;;4BAMQX,Q,EAAqB;AAAA,UAAXjD,IAAW,uEAAJ,EAAI;;AAC3B,UAAI0O,QAAQ,KAAKO,YAAL,CAAkBhM,QAAlB,EAA4BjD,IAA5B,CAAZ;;AAEA,WAAKgO,OAAL,CAAatB,MAAb,CAAoB,KAAKC,iBAAzB,EAA4C+B,KAA5C,EAAmD,IAAnD;AACD;;AAED;;;;;;;;;AAQA;;;;;oCAKgBc,K,EAAO;AACrB,aAAO,KAAKxB,OAAL,CAAawB,KAAb,CAAP;AACD;;AAED;;;;;;;;6BAKSM,O,EAAS;AAChB,UAAI,CAAChO,EAAEiG,SAAF,CAAY+H,OAAZ,CAAL,EAA2B;AACzBA,kBAAUA,QAAQnI,UAAlB;AACD;;AAED,UAAIhG,QAAQ,KAAKqM,OAAL,CAAarM,KAAzB;AAAA,UACEoO,kBAAkBD,QAAQE,OAAR,OAAoBhN,gBAAM1B,GAAN,CAAUC,OAA9B,CADpB;AAAA,UAEEiO,QAAQ7N,MAAM0N,OAAN,CAAcU,eAAd,CAFV;;AAIA,UAAIP,SAAS,CAAb,EAAgB;AACd,eAAO,KAAKxB,OAAL,CAAawB,KAAb,CAAP;AACD;AACF;;AAED;;;;;;;;;;AAiFA;;;;;;;+CAO2BS,S,EAAW;AACpC;;;AAGA,UAAI,CAACnO,EAAEiG,SAAF,CAAYkI,SAAZ,CAAL,EAA6B;AAC3BA,oBAAYA,UAAUtI,UAAtB;AACD;;AAED,UAAIuI,wBAAwBD,UAAUD,OAAV,OAAsBhN,gBAAM1B,GAAN,CAAUC,OAAhC,CAA5B;;AAEA,UAAI2O,qBAAJ,EAA2B;AACzB,aAAKL,WAAL,GAAmBK,qBAAnB;AACD,OAFD,MAEO;AACL,cAAM,IAAIC,KAAJ,CAAU,2CAAV,CAAN;AACD;AACF;;AAED;;;;;;;;yCAKqB;AACnB,UAAIC,sBAAsB,KAAKtD,YAAL,CAAkBuD,IAA5C;;AAEA,UAAI,CAAC,KAAKC,aAAV,EAAyB;AACvB;AACD;;AAED,UAAIC,uBAAuB,KAAKD,aAAL,CAAmBD,IAA9C;;AAEA;;;;;;;;AAQA,UAAIG,kCAAmCJ,oBAAoBK,qBAApB,EAAvC;AAAA,UACEC,mCAAmCH,qBAAqBE,qBAArB,EADrC;AAAA,UAEEE,cAAcD,iCAAiCE,GAAjC,GAAuC,CAAvC,GAA2C,CAA3C,GAA+C,CAAC,CAFhE;AAAA,UAGEC,kBAAkBF,eAAeG,KAAKC,GAAL,CAASP,gCAAgCI,GAAhC,IAAuC,CAAhD,IAAqDE,KAAKC,GAAL,CAASL,iCAAiCE,GAAjC,IAAwC,CAAjD,CAApE,CAHpB;AAAA,UAIEI,iBAAiBH,eAJnB;;AAMA,UAAIF,gBAAgB,CAApB,EAAuB;AACrBK,yBAAiB3M,OAAO4M,WAAP,GAAqBJ,eAAtC;AACD;;AAEDxM,aAAO6M,QAAP,CAAgB,CAAhB,EAAmB,CAAC,CAAD,GAAKF,cAAxB;;AAEA;AACAT,2BAAqB5I,UAArB,CAAgCwJ,YAAhC,CAA6Cf,mBAA7C,EAAkEG,oBAAlE;;AAEA;AACA,WAAKa,kBAAL,CAAwB,KAAKzE,iBAA7B,EAAgD,KAAKA,iBAAL,GAAyB,CAAzE;AACA,WAAKA,iBAAL;;AAEA;;;;AAIA,WAAK3L,MAAL,CAAY+L,OAAZ,CAAoBsE,IAApB,CAAyB,KAAzB;AACD;;;wBAvLe;AACd,aAAO,KAAKrD,OAAL,CAAa,KAAKA,OAAL,CAAajN,MAAb,GAAsB,CAAnC,CAAP;AACD;;;wBAmCkB;AACjB,aAAO,KAAKiN,OAAL,CAAa,KAAKrB,iBAAlB,CAAP;AACD;;AAED;;;;;;;wBAIgB;AACd,UAAI2E,cAAc,KAAK3E,iBAAL,KAA4B,KAAKqB,OAAL,CAAajN,MAAb,GAAsB,CAApE;;AAEA,UAAIuQ,WAAJ,EAAiB;AACf,eAAO,IAAP;AACD;;AAED,aAAO,KAAKtD,OAAL,CAAa,KAAKrB,iBAAL,GAAyB,CAAtC,CAAP;AACD;;AAED;;;;;;;wBAIoB;AAClB,UAAI4E,eAAe,KAAK5E,iBAAL,KAA2B,CAA9C;;AAEA,UAAI4E,YAAJ,EAAkB;AAChB,eAAO,IAAP;AACD;;AAED,aAAO,KAAKvD,OAAL,CAAa,KAAKrB,iBAAL,GAAyB,CAAtC,CAAP;AACD;;AAED;;;;;;;;wBAKkB;AAChB,aAAO,KAAKqB,OAAL,CAAarM,KAAb,CAAmB,KAAKgL,iBAAxB,CAAP;AACD;;AAED;;;;;sBAIgBmD,O,EAAS;AACvB,UAAInO,QAAQ,KAAKqM,OAAL,CAAarM,KAAzB;AAAA,UACEoO,kBAAkBD,QAAQE,OAAR,OAAoBhN,gBAAM1B,GAAN,CAAUC,OAA9B,CADpB;;AAGA;;;;AAIA,WAAKoL,iBAAL,GAAyBhL,MAAM0N,OAAN,CAAcU,eAAd,CAAzB;;AAEA;;;AAGA,WAAK/B,OAAL,CAAawD,KAAb,CAAmBxS,OAAnB,CAA4B;AAAA,eAAS0P,MAAMhJ,QAAN,GAAiB,KAA1B;AAAA,OAA5B;;AAEA;;;;AAIA,WAAKoH,YAAL,CAAkBpH,QAAlB,GAA6B,IAA7B;AACD;;AAED;;;;;;;;wBAKa;AACX,aAAO,KAAKsI,OAAL,CAAawD,KAApB;AACD;;;;EAxTuCvS,M;;;kBAArBY,Y;AAiYpB;;AAED;;;;;;;;;;IASMuO,M;AACJ;;;;;AAKA,kBAAYqD,WAAZ,EAAyB;AAAA;;AACvB,SAAKhP,MAAL,GAAc,EAAd;AACA,SAAKgP,WAAL,GAAmBA,WAAnB;AACD;;AAED;;;;;;;;;yBAKK/C,K,EAAO;AACV,WAAKjM,MAAL,CAAYgG,IAAZ,CAAiBiG,KAAjB;AACA,WAAK+C,WAAL,CAAiBzP,WAAjB,CAA6B0M,MAAM2B,IAAnC;AACD;;AAED;;;;;;;;;;2BAOOb,K,EAAOd,K,EAAwB;AAAA,UAAjBvG,OAAiB,uEAAP,KAAO;;AACpC,UAAI,CAAC,KAAKpH,MAAV,EAAkB;AAChB,aAAK0H,IAAL,CAAUiG,KAAV;AACA;AACD;;AAED,UAAIc,QAAQ,KAAKzO,MAAjB,EAAyB;AACvByO,gBAAQ,KAAKzO,MAAb;AACD;;AAED,UAAIoH,OAAJ,EAAa;AACX,aAAK1F,MAAL,CAAY+M,KAAZ,EAAmBa,IAAnB,CAAwB1K,MAAxB;AACD;;AAED,UAAI+L,cAAcvJ,UAAU,CAAV,GAAc,CAAhC;;AAEA,WAAK1F,MAAL,CAAYkP,MAAZ,CAAmBnC,KAAnB,EAA0BkC,WAA1B,EAAuChD,KAAvC;;AAEA,UAAIc,QAAQ,CAAZ,EAAe;AACb,YAAIc,gBAAgB,KAAK7N,MAAL,CAAY+M,QAAQ,CAApB,CAApB;;AAEAc,sBAAcD,IAAd,CAAmBuB,qBAAnB,CAAyC,UAAzC,EAAqDlD,MAAM2B,IAA3D;AACD,OAJD,MAIO;AACL,YAAIwB,YAAY,KAAKpP,MAAL,CAAY+M,QAAQ,CAApB,CAAhB;;AAEA,YAAIqC,SAAJ,EAAe;AACbA,oBAAUxB,IAAV,CAAeuB,qBAAf,CAAqC,aAArC,EAAoDlD,MAAM2B,IAA1D;AACD,SAFD,MAEO;AACL,eAAKoB,WAAL,CAAiBzP,WAAjB,CAA6B0M,MAAM2B,IAAnC;AACD;AACF;AACF;;AAED;;;;;;;2BAIOb,K,EAAO;AACZ,UAAIsC,MAAMtC,KAAN,CAAJ,EAAkB;AAChBA,gBAAQ,KAAKzO,MAAL,GAAc,CAAtB;AACD;;AAED,WAAK0B,MAAL,CAAY+M,KAAZ,EAAmBa,IAAnB,CAAwB1K,MAAxB;AACA,WAAKlD,MAAL,CAAYkP,MAAZ,CAAmBnC,KAAnB,EAA0B,CAA1B;AACD;;AAED;;;;;;;;;;;gCAQYN,W,EAAa6C,Q,EAAU;AACjC,UAAIvC,QAAQ,KAAK/M,MAAL,CAAY4M,OAAZ,CAAoBH,WAApB,CAAZ;;AAEA,WAAKxC,MAAL,CAAY8C,QAAQ,CAApB,EAAuBuC,QAAvB;AACD;;AAED;;;;;;;;;wBAMIvC,K,EAAO;AACT,aAAO,KAAK/M,MAAL,CAAY+M,KAAZ,CAAP;AACD;;AAED;;;;;;;;;4BAMQd,K,EAAO;AACb,aAAO,KAAKjM,MAAL,CAAY4M,OAAZ,CAAoBX,KAApB,CAAP;AACD;;AAED;;;;;;;;wBAKa;AACX,aAAO,KAAKjM,MAAL,CAAY1B,MAAnB;AACD;;AAED;;;;;;;;wBAKY;AACV,aAAO,KAAK0B,MAAZ;AACD;;AAED;;;;;;;;wBAKY;AACV,aAAO5B,EAAE2Q,KAAF,CAAQ,KAAKC,WAAL,CAAiBO,QAAzB,CAAP;AACD;;AAED;;;;;;;;;;;;;;wBAWWC,Q,EAAUzC,K,EAAOd,K,EAAO;AACjC,UAAIoD,MAAMI,OAAO1C,KAAP,CAAN,CAAJ,EAA0B;AACxB,eAAO,KAAP;AACD;;AAEDyC,eAASvF,MAAT,CAAgB8C,KAAhB,EAAuBd,KAAvB;;AAEA,aAAO,IAAP;AACD;;AAED;;;;;;;;;;wBAOWuD,Q,EAAUzC,K,EAAO;AAC1B,UAAIsC,MAAMI,OAAO1C,KAAP,CAAN,CAAJ,EAA0B;AACxB,eAAOyC,SAASzC,KAAT,CAAP;AACD;;AAED,aAAOyC,SAASzD,GAAT,CAAagB,KAAb,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1jBH;;;;;;;;;;+eAXA;;;;;;;;;;;AAaA;;;IAGqB5C,K;;;AACnB;;;AAGA,uBAAsB;AAAA,QAAT1O,MAAS,QAATA,MAAS;;AAAA;;AAAA,yGACd,EAACA,cAAD,EADc;AAErB;;AAED;;;;;;;;;;;;;;;;+BAYWwQ,K,EAAkC;AAAA;;AAAA,UAA3ByD,MAA2B,uEAAlB,CAAkB;AAAA,UAAfC,KAAe,uEAAP,KAAO;;AAC3C,UAAItC,UAAUpB,MAAM9K,cAApB;;AAEA;AACA,UAAI9B,EAAEkG,aAAF,CAAgB8H,OAAhB,CAAJ,EAA8B;AAC5BA,gBAAQ1E,KAAR;AACA,eAAO,IAAP;AACD;;AAED,UAAIiH,YAAYvQ,EAAE8F,cAAF,CAAiBkI,OAAjB,EAA0BsC,KAA1B,CAAhB;;AAEA,UAAIA,SAASD,SAASE,UAAUtR,MAAhC,EAAwC;AACtCoR,iBAASE,UAAUtR,MAAnB;AACD;;AAED;AACA,UAAIe,EAAEkG,aAAF,CAAgBqK,SAAhB,CAAJ,EAAgC;AAC9BA,kBAAUjH,KAAV;AACA,eAAO,IAAP;AACD;;AAED;;;AAGAvK,QAAEyR,KAAF,CAAS,YAAM;AACb,eAAK/D,GAAL,CAAS8D,SAAT,EAAoBF,MAApB;AACD,OAFD,EAEG,EAFH;;AAIA,WAAKnR,MAAL,CAAYnB,YAAZ,CAAyBgQ,WAAzB,GAAuCnB,MAAMnN,OAA7C;AACA,aAAO,IAAP;AACD;;AAED;;;;;;;;wBAKKuO,O,EAAqB;AAAA,UAAZqC,MAAY,uEAAH,CAAG;;AACxB,UAAI/I,QAAYpE,SAASuN,WAAT,EAAhB;AAAA,UACEjJ,YAAYc,oBAAUoE,GAAV,EADd;;AAGApF,YAAMoJ,QAAN,CAAe1C,OAAf,EAAwBqC,MAAxB;AACA/I,YAAMqJ,MAAN,CAAa3C,OAAb,EAAsBqC,MAAtB;;AAEA7I,gBAAUoJ,eAAV;AACApJ,gBAAUqJ,QAAV,CAAmBvJ,KAAnB;AACD;;;;;AAED;;;;wCAIoB;AAClB,UAAIwJ,YAAY,KAAK5R,MAAL,CAAYnB,YAAZ,CAAyB+S,SAAzC;;AAEA,UAAI,CAACA,SAAL,EAAgB;;AAEhB;;;;AAIA,UAAIA,UAAU9R,OAAd,EAAuB;AACrB,aAAK+L,UAAL,CAAgB+F,SAAhB;AACD,OAFD,MAEO;AACL,aAAK5R,MAAL,CAAYnB,YAAZ,CAAyB6M,MAAzB,CAAgC,KAAKxO,MAAL,CAAYgC,YAA5C;AACD;AACF;;AAED;;;;;;uDAGmC;AACjC,UAAIoJ,YAAYc,oBAAUoE,GAAV,EAAhB;;AAEA,UAAIlF,UAAUuJ,UAAd,EAA0B;AACxB,YAAIC,cAAcxJ,UAAUyJ,UAAV,CAAqB,CAArB,CAAlB;AAAA,YACEC,YAAY,KAAKhS,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsClJ,cADpD;;AAGAkP,oBAAYG,cAAZ;;AAEA,YAAID,SAAJ,EAAe;AACb,cAAI5J,QAAQ0J,YAAYI,UAAZ,CAAuB,IAAvB,CAAZ;;AAEA9J,gBAAM+J,kBAAN,CAAyBH,SAAzB;AACA5J,gBAAMoJ,QAAN,CAAeM,YAAYM,YAA3B,EAAyCN,YAAYO,SAArD;AACA,iBAAOjK,MAAMkK,eAAN,EAAP;AACD;AACF;AACF;;AAED;;;;;;;;;;;;;;;;;;;;2CAiBuBC,I,EAAMC,S,EAAY;AACvC,UAAIC,UAAUF,IAAd;AAAA,UACEG,WAAW,EADb;;AAGA;;;AAGA,aAAOD,QAAQ9L,UAAR,IAAsB8L,QAAQ9L,UAAR,CAAmBgM,eAAnB,KAAuC,MAApE,EAA4E;AAC1EF,kBAAUA,QAAQ9L,UAAlB;AACD;;AAED,UAAIN,UAAUmM,cAAc,MAAd,GAAuB,iBAAvB,GAA2C,aAAzD;;AAEA;;;AAGA,aAAOC,QAAQpM,OAAR,CAAP,EAAyB;AACvBoM,kBAAUA,QAAQpM,OAAR,CAAV;AACAqM,iBAASjL,IAAT,CAAcgL,OAAd;AACD;;AAED,aAAOC,QAAP;AACD;;AAED;;;;;;;;;;;;mCAS4B;AAAA,UAAfE,KAAe,uEAAP,KAAO;;AAC1B,UAAI/B,YAAY,KAAK7Q,MAAL,CAAYnB,YAAZ,CAAyBgS,SAAzC;;AAEA,UAAI,CAACA,SAAL,EAAgB;AACd,eAAO,KAAP;AACD;;AAED,UAAI+B,KAAJ,EAAW;AACT,aAAK/G,UAAL,CAAgBgF,SAAhB;AACD;;AAED,UAAIgC,aAAa,KAAKC,OAAtB;;AAEA,UAAI,CAACD,UAAL,EAAiB;AACf,eAAO,KAAP;AACD;;AAED,aAAO,KAAKhH,UAAL,CAAiBgF,SAAjB,CAAP;AACD;;AAED;;;;;;;;;;;;uCASgC;AAAA,UAAf+B,KAAe,uEAAP,KAAO;;AAC9B,UAAItD,gBAAgB,KAAKtP,MAAL,CAAYnB,YAAZ,CAAyByQ,aAA7C;;AAEA,UAAI,CAACA,aAAL,EAAoB;AAClB,eAAO,KAAP;AACD;;AAED,UAAIsD,KAAJ,EAAW;AACT,aAAK/G,UAAL,CAAiByD,aAAjB,EAAgC,CAAhC,EAAmC,IAAnC;AACA,eAAO,IAAP;AACD;;AAED,UAAIyD,eAAe,KAAKC,SAAxB;;AAEA,UAAI,CAACD,YAAL,EAAmB;AACjB,eAAO,KAAP;AACD;;AAED,aAAO,KAAKlH,UAAL,CAAiByD,aAAjB,EAAgC,CAAhC,EAAmC,IAAnC,CAAP;AACD;;AAED;;;;;;;wBAIgB;AACd;;;AAGA,UAAI,CAAClG,oBAAU6J,WAAf,EAA4B;AAC1B,eAAO,KAAP;AACD;;AAED,UAAI3K,YAAYc,oBAAUoE,GAAV,EAAhB;AAAA,UACE0F,aAAa5K,UAAU4K,UADzB;AAAA,UAEEC,YAAYrS,EAAE8F,cAAF,CAAiB,KAAK5G,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsClJ,cAAvD,CAFd;;AAIA;;;;;AAKA,UAAIwQ,sBAAsBF,WAAWhM,WAAX,CAAuBmM,MAAvB,CAA8B,IAA9B,CAA1B;;AAEA,UAAID,wBAAwB,CAAC,CAA7B,EAAgC;AAAE;AAChCA,8BAAsB,CAAtB;AACD;;AAED;;;;;;;AAOA,UAAItS,EAAEhB,OAAF,CAAUqT,SAAV,CAAJ,EAA0B;AACxB,YAAIG,eAAe,KAAKC,sBAAL,CAA4BL,UAA5B,EAAwC,MAAxC,CAAnB;AAAA,YACEM,gBAAgBF,aAAaxL,KAAb,CAAoB;AAAA,iBAAQhH,EAAEhB,OAAF,CAAUoG,IAAV,CAAR;AAAA,SAApB,CADlB;;AAKA,YAAIsN,iBAAiBlL,UAAUmL,YAAV,KAA2BL,mBAAhD,EAAqE;AACnE,iBAAO,IAAP;AACD;AACF;;AAED,aAAOD,cAAc,IAAd,IAAsBD,eAAeC,SAAf,IAA4B7K,UAAUmL,YAAV,KAA2BL,mBAApF;AACD;;AAED;;;;;;;wBAIc;AACZ;;;AAGA,UAAI,CAAChK,oBAAU6J,WAAf,EAA4B;AAC1B,eAAO,KAAP;AACD;;AAED,UAAI3K,YAAYc,oBAAUoE,GAAV,EAAhB;AAAA,UACE0F,aAAa5K,UAAU4K,UADzB;AAAA,UAEEQ,WAAW5S,EAAE8F,cAAF,CAAiB,KAAK5G,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsClJ,cAAvD,EAAuE,IAAvE,CAFb;;AAIA;;;;;;;AAOA,UAAI9B,EAAEhB,OAAF,CAAU4T,QAAV,CAAJ,EAAyB;AACvB,YAAIJ,eAAe,KAAKC,sBAAL,CAA4BL,UAA5B,EAAwC,OAAxC,CAAnB;AAAA,YACES,iBAAiBL,aAAaxL,KAAb,CAAoB;AAAA,iBAAQhH,EAAEhB,OAAF,CAAUoG,IAAV,CAAR;AAAA,SAApB,CADnB;;AAGA,YAAIyN,kBAAkBrL,UAAUmL,YAAV,KAA2BP,WAAWhM,WAAX,CAAuBnH,MAAxE,EAAgF;AAC9E,iBAAO,IAAP;AACD;AACF;;AAED,aAAOmT,eAAeQ,QAAf,IAA2BpL,UAAUmL,YAAV,KAA2BC,SAASxM,WAAT,CAAqBnH,MAAlF;AACD;;;;EAnSgC9B,M;;;kBAAd2N,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBrB;;;;;;;;;;;;;IAaqBS,M;;;AACnB;;;AAGA,wBAAsB;AAAA,QAATnP,MAAS,QAATA,MAAS;;AAAA;;AAAA,gHACd,EAACA,cAAD,EADc;;AAEpB,UAAK0W,WAAL,GAAmB,EAAnB;AAFoB;AAGrB;;AAED;;;;;;;;;;uBAMGzH,S,EAAWC,Q,EAAU;AACtB,UAAI,EAAED,aAAa,KAAKyH,WAApB,CAAJ,EAAsC;AACpC,aAAKA,WAAL,CAAiBzH,SAAjB,IAA8B,EAA9B;AACD;;AAED;AACA,WAAKyH,WAAL,CAAiBzH,SAAjB,EAA4B1E,IAA5B,CAAiC2E,QAAjC;AACD;;AAED;;;;;;;;;yBAMKD,S,EAAWnN,I,EAAM;AACpB,UAAI,CAAC,KAAK4U,WAAL,CAAiBzH,SAAjB,CAAL,EAAkC;AAChC;AACD;;AAED,WAAKyH,WAAL,CAAiBzH,SAAjB,EAA4B0H,MAA5B,CAAmC,UAAUC,YAAV,EAAwBC,cAAxB,EAAwC;AACzE,YAAIC,UAAUD,eAAeD,YAAf,CAAd;;AAEA,eAAOE,UAAUA,OAAV,GAAoBF,YAA3B;AACD,OAJD,EAIG9U,IAJH;AAKD;;AAED;;;;;;;;;wBAMImN,S,EAAWC,Q,EAAU;AACvB,WAAI,IAAI6H,IAAI,CAAZ,EAAeA,IAAI,KAAKL,WAAL,CAAiBzH,SAAjB,EAA4BpM,MAA/C,EAAuDkU,GAAvD,EAA4D;AAC1D,YAAI,KAAKL,WAAL,CAAiBzH,SAAjB,EAA4B8H,CAA5B,MAAmC7H,QAAvC,EAAiD;AAC/C,iBAAO,KAAKwH,WAAL,CAAiBzH,SAAjB,EAA4B8H,CAA5B,CAAP;AACA;AACD;AACF;AACF;;AAED;;;;;;;8BAIU;AACR,WAAKL,WAAL,GAAmB,IAAnB;AACD;;;;EA/DiC3V,M;;;kBAAfoO,M;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbrB;;;;;;;;;;AAUA;;;IAGqBwB,Q;;;AACnB;;;AAGA,0BAAsB;AAAA,QAAT3Q,MAAS,QAATA,MAAS;;AAAA;;AAAA,+GACd,EAACA,cAAD,EADc;AAErB;;AAED;;;;;;;;;0CAKsBiE,K,EAAO;AAC3B,cAAOA,MAAMkI,OAAb;AACE,aAAKxJ,EAAEqU,QAAF,CAAWC,SAAhB;;AAEEtU,YAAElC,GAAF,CAAM,uBAAN;AACA,eAAKyW,gBAAL,CAAsBjT,KAAtB;AACA;;AAEF,aAAKtB,EAAEqU,QAAF,CAAWG,KAAhB;;AAEExU,YAAElC,GAAF,CAAM,mBAAN;AACA,eAAK2L,YAAL,CAAkBnI,KAAlB;AACA;;AAEF,aAAKtB,EAAEqU,QAAF,CAAWI,IAAhB;AACA,aAAKzU,EAAEqU,QAAF,CAAWK,KAAhB;;AAEE1U,YAAElC,GAAF,CAAM,wBAAN;AACA,eAAK6W,wBAAL;AACA;;AAEF,aAAK3U,EAAEqU,QAAF,CAAWO,EAAhB;AACA,aAAK5U,EAAEqU,QAAF,CAAWQ,IAAhB;;AAEE7U,YAAElC,GAAF,CAAM,qBAAN;AACA,eAAKgX,qBAAL;AACA;;AAEF;;AAEE;AA7BJ;AA+BD;;AAED;;;;;;;;iCAKaxT,K,EAAO;AAClB,UAAI2K,eAAe,KAAK9L,MAAL,CAAYnB,YAAZ,CAAyBiN,YAA5C;AAAA,UACElM,cAAc,KAAK1C,MAAL,CAAY0C,WAAZ,CAAwBkM,aAAa1N,IAArC,CADhB;;AAGA;;;;AAIA,UAAIwB,eAAeA,YAAY,KAAKI,MAAL,CAAYrB,KAAZ,CAAkBiW,WAAlB,CAA8BC,sBAA1C,CAAnB,EAAsF;AACpF;AACD;;AAED;;;AAGA,UAAI1T,MAAM2T,QAAV,EAAoB;AAClB;AACD;;AAGD;;;AAGA,WAAK9U,MAAL,CAAYnB,YAAZ,CAAyBkW,KAAzB;;AAEA;;;AAGA,UAAIC,aAAa,KAAKhV,MAAL,CAAYnB,YAAZ,CAAyBiN,YAA1C;;AAEA,WAAK9L,MAAL,CAAY+L,OAAZ,CAAoBsE,IAApB;AACA,WAAKrQ,MAAL,CAAY+L,OAAZ,CAAoBa,IAApB;;AAEA,UAAI,KAAK5M,MAAL,CAAYrB,KAAZ,CAAkBsW,SAAlB,CAA4BD,WAAW3S,IAAvC,KAAgD2S,WAAWlV,OAA/D,EAAwE;AACtE,aAAKE,MAAL,CAAY+L,OAAZ,CAAoBmJ,UAApB,CAA+BC,IAA/B;AACD;;AAEDhU,YAAMqJ,cAAN;AACD;;AAED;;;;;;;qCAIiBrJ,K,EAAO;AAAA;;AACtB,UAAMiU,KAAK,KAAKpV,MAAL,CAAYnB,YAAvB;;AAEA,UAAI0R,eAAgB6E,GAAGzJ,iBAAH,KAAyB,CAA7C;AAAA,UACE0J,iBAAkB,KAAKrV,MAAL,CAAY4L,KAAZ,CAAkBoH,SAAlB,IAA+B,CAACzC,YADpD;;AAGA,UAAI,CAAC8E,cAAL,EAAqB;AACnB;AACD;;AAED;AACAlU,YAAMqJ,cAAN;;AAEA,UAAI0D,cAAckH,GAAGE,eAAH,CAAmBF,GAAGzJ,iBAAH,GAAuB,CAA1C,CAAlB;AAAA,UACEwC,eAAeiH,GAAGtJ,YADpB;;AAGA;;;;;;;AAOA,UAAIqC,aAAa/P,IAAb,KAAsB8P,YAAY9P,IAAlC,IAA0C,CAAC8P,YAAYqH,SAA3D,EAAsE;AACpE,YAAI,KAAKvV,MAAL,CAAY4L,KAAZ,CAAkBI,gBAAlB,EAAJ,EAA0C;AACxC,eAAKhM,MAAL,CAAY+L,OAAZ,CAAoBlC,KAApB;AACD;AACF;;AAED,UAAI2L,mBAAmB,CAACtH,YAAYpO,OAApC;;AAEAsV,SAAGK,WAAH,CAAevH,WAAf,EAA4BC,YAA5B,EACG7Q,IADH,CACS,YAAM;AACX;AACA+F,eAAOqS,UAAP,CAAmB,YAAM;AACvB;AACA,cAAI,OAAK1V,MAAL,CAAY4L,KAAZ,CAAkBC,UAAlB,CAA6BuJ,GAAGtJ,YAAhC,EAA8C,CAA9C,EAAiD0J,gBAAjD,CAAJ,EAAwE;AACtE,mBAAKxV,MAAL,CAAY+L,OAAZ,CAAoBlC,KAApB;AACD;AACF,SALD,EAKG,EALH;AAMD,OATH;AAUD;;AAED;;;;;;+CAG2B;AACzB,UAAI,CAAC,KAAK7J,MAAL,CAAY4L,KAAZ,CAAkB+J,YAAlB,EAAL,EAAuC;AACrC;AACD;;AAED,WAAK3V,MAAL,CAAY+L,OAAZ,CAAoBlC,KAApB;AACD;;AAED;;;;;;4CAGwB;AACtB,UAAI,CAAC,KAAK7J,MAAL,CAAY4L,KAAZ,CAAkBI,gBAAlB,EAAL,EAA2C;AACzC;AACD;;AAED,WAAKhM,MAAL,CAAY+L,OAAZ,CAAoBlC,KAApB;AACD;;;;EA/JmC5L,M;;;kBAAjB4P,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbrB;;;;;;;;;;;AAWA;;;;;IAKqBD,S;;;AACnB;;;;AAIA,2BAAsB;AAAA,QAAT1Q,MAAS,QAATA,MAAS;;AAAA;;AAAA,sHACd,EAACA,cAAD,EADc;;AAEpB,UAAK0Y,YAAL,GAAoB,EAApB;AAFoB;AAGrB;;AAED;;;;;;;;;;;;uBAQG9G,O,EAAS+G,S,EAAWC,O,EAA6B;AAAA,UAApBC,UAAoB,uEAAP,KAAO;;AAClD,UAAIC,oBAAoB;AACtBlH,wBADsB;AAEtB+G,4BAFsB;AAGtBC,wBAHsB;AAItBC;AAJsB,OAAxB;;AAOA,UAAIE,eAAe,KAAKC,OAAL,CAAapH,OAAb,EAAsB+G,SAAtB,EAAiCC,OAAjC,CAAnB;;AAEA,UAAIG,YAAJ,EAAkB;;AAElB,WAAKL,YAAL,CAAkBnO,IAAlB,CAAuBuO,iBAAvB;AACAlH,cAAQ5N,gBAAR,CAAyB2U,SAAzB,EAAoCC,OAApC,EAA6CC,UAA7C;AACD;;AAED;;;;;;;;;;;wBAQIjH,O,EAAS+G,S,EAAWC,O,EAA6B;AAAA,UAApBC,UAAoB,uEAAP,KAAO;;AACnD,UAAII,oBAAoB,KAAKC,OAAL,CAAatH,OAAb,EAAsB+G,SAAtB,EAAiCC,OAAjC,CAAxB;;AAEA,WAAK,IAAI7B,IAAI,CAAb,EAAgBA,IAAIkC,kBAAkBpW,MAAtC,EAA8CkU,GAA9C,EAAmD;AACjD,YAAIzF,QAAQ,KAAKoH,YAAL,CAAkBvH,OAAlB,CAA0B8H,kBAAkBlC,CAAlB,CAA1B,CAAZ;;AAEA,YAAIzF,QAAQ,CAAZ,EAAe;AACb,eAAKoH,YAAL,CAAkBjF,MAAlB,CAAyBnC,KAAzB,EAAgC,CAAhC;AACD;AACF;;AAEDM,cAAQuH,mBAAR,CAA4BR,SAA5B,EAAuCC,OAAvC,EAAgDC,UAAhD;AACD;;AAED;;;;;;;;kCAKcjH,O,EAAS;AACrB,UAAIwH,qBAAqB,EAAzB;;AAEA,WAAK,IAAIrC,IAAI,CAAb,EAAgBA,IAAI,KAAK2B,YAAL,CAAkB7V,MAAtC,EAA8CkU,GAA9C,EAAmD;AACjD,YAAIsC,WAAW,KAAKX,YAAL,CAAkB3B,CAAlB,CAAf;;AAEA,YAAIsC,SAASzH,OAAT,KAAqBA,OAAzB,EAAkC;AAChCwH,6BAAmB7O,IAAnB,CAAwB8O,QAAxB;AACD;AACF;;AAED,aAAOD,kBAAP;AACD;;AAED;;;;;;;;+BAKWT,S,EAAW;AACpB,UAAIW,oBAAoB,EAAxB;;AAEA,WAAK,IAAIvC,IAAI,CAAb,EAAgBA,IAAI,KAAK2B,YAAL,CAAkB7V,MAAtC,EAA8CkU,GAA9C,EAAmD;AACjD,YAAIsC,WAAW,KAAKX,YAAL,CAAkB3B,CAAlB,CAAf;;AAEA,YAAIsC,SAASpX,IAAT,KAAkB0W,SAAtB,EAAiC;AAC/BW,4BAAkB/O,IAAlB,CAAuB8O,QAAvB;AACD;AACF;;AAED,aAAOC,iBAAP;AACD;;AAED;;;;;;;;kCAKcV,O,EAAS;AACrB,UAAIW,uBAAuB,EAA3B;;AAEA,WAAK,IAAIxC,IAAI,CAAb,EAAgBA,IAAI,KAAK2B,YAAL,CAAkB7V,MAAtC,EAA8CkU,GAA9C,EAAmD;AACjD,YAAIsC,WAAW,KAAKX,YAAL,CAAkB3B,CAAlB,CAAf;;AAEA,YAAIsC,SAAST,OAAT,KAAqBA,OAAzB,EAAkC;AAChCW,+BAAqBhP,IAArB,CAA0B8O,QAA1B;AACD;AACF;;AAED,aAAOE,oBAAP;AACD;;AAED;;;;;;;;;4BAMQ3H,O,EAAS+G,S,EAAWC,O,EAAS;AACnC,UAAIY,iBAAiB,KAAKN,OAAL,CAAatH,OAAb,EAAsB+G,SAAtB,EAAiCC,OAAjC,CAArB;;AAEA,aAAOY,eAAe3W,MAAf,GAAwB,CAAxB,GAA4B2W,eAAe,CAAf,CAA5B,GAAgD,IAAvD;AACD;;AAED;;;;;;;;;4BAMQ5H,O,EAAS+G,S,EAAWC,O,EAAS;AACnC,UAAIa,cAAJ;AAAA,UACEC,kBAAkB9H,UAAU,KAAK+H,aAAL,CAAmB/H,OAAnB,CAAV,GAAwC,EAD5D;AAEE;AACA;;AAEF,UAAIA,WAAW+G,SAAX,IAAwBC,OAA5B,EAAqC;AACnCa,gBAAQC,gBAAgBE,MAAhB,CAAwB;AAAA,iBAAS3V,MAAM0U,SAAN,KAAoBA,SAApB,IAAiC1U,MAAM2U,OAAN,KAAkBA,OAA5D;AAAA,SAAxB,CAAR;AACD,OAFD,MAEO,IAAIhH,WAAW+G,SAAf,EAA0B;AAC/Bc,gBAAQC,gBAAgBE,MAAhB,CAAwB;AAAA,iBAAS3V,MAAM0U,SAAN,KAAoBA,SAA7B;AAAA,SAAxB,CAAR;AACD,OAFM,MAEA;AACLc,gBAAQC,eAAR;AACD;;AAED,aAAOD,KAAP;AACD;;AAED;;;;;;gCAGY;AACV,WAAKf,YAAL,CAAkB7Y,GAAlB,CAAuB,UAAC0V,OAAD,EAAa;AAClCA,gBAAQ3D,OAAR,CAAgBuH,mBAAhB,CAAoC5D,QAAQoD,SAA5C,EAAuDpD,QAAQqD,OAA/D;AACD,OAFD;;AAIA,WAAKF,YAAL,GAAoB,EAApB;AACD;;;;EA7JoC3X,M;;;kBAAlB2P,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBrB;;;;;;;;IAQqB9O,Q;;;AACnB;;;;AAIA,0BAAsB;AAAA,QAAT5B,MAAS,QAATA,MAAS;;AAAA;;AAAA,+GACd,EAACA,cAAD,EADc;AAErB;;AAED;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;2BAIO+B,K,EAAO;AAAA;;AACZ,UAAI8X,YAAY,EAAhB;;AADY,iCAGH9C,CAHG;AAIV8C,kBAAUtP,IAAV,CAAe;AACbuP,oBAAU;AAAA,mBAAM,OAAKC,WAAL,CAAiBhY,MAAMgV,CAAN,CAAjB,CAAN;AAAA;AADG,SAAf;AAJU;;AAGZ,WAAK,IAAIA,IAAI,CAAb,EAAgBA,IAAIhV,MAAMc,MAA1B,EAAkCkU,GAAlC,EAAuC;AAAA,cAA9BA,CAA8B;AAItC;;AAED,aAAOpU,EAAEqX,QAAF,CAAWH,SAAX,CAAP;AACD;;AAED;;;;;;;;;;;;gCASYI,I,EAAM;AAChB,UAAI9U,OAAO8U,KAAKhY,IAAhB;AAAA,UACEH,OAAOmY,KAAKnY,IADd;AAAA,UAEEmD,WAAWgV,KAAKhV,QAFlB;;AAIA,WAAKnC,MAAL,CAAYnB,YAAZ,CAAyB6M,MAAzB,CAAgCrJ,IAAhC,EAAsCrD,IAAtC,EAA4CmD,QAA5C;;AAEA,aAAO/E,QAAQC,OAAR,EAAP;AACD;;;;EApEmCY,M;;;kBAAjBa,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRrB;;;;;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;;;;IAeqB2N,S;;;AACnB;;;;;;;;;AASA,2BAAsB;AAAA,QAATvP,MAAS,QAATA,MAAS;;AAAA;;AAGpB;AAHoB,sHACd,EAACA,cAAD,EADc;;AAIpB,UAAKka,aAAL,GAAqB,IAArB;AACA,UAAKC,kBAAL,GAA0B,IAA1B;;AAEA;AACA,UAAKC,eAAL,GAAuBpa,OAAOiF,QAAP,GAAkBjF,OAAOiF,QAAP,CAAgB7C,SAAlC,GAA8C,EAArE;;AAEA;AACA,UAAKiY,iBAAL,GAAyB,mBAAAC,CAAQ,qEAAR,CAAzB;AAXoB;AAYrB;;AAED;;;;;;;;;;;;;;;AAkCA;;;;;;0BAMMhL,W,EAAgC;AAAA,UAAnBiL,YAAmB,uEAAJ,EAAI;;AACpC,UAAI5X,EAAEC,OAAF,CAAU2X,YAAV,CAAJ,EAA6B;AAC3B,eAAO,KAAKJ,kBAAL,CAAwB3K,KAAxB,CAA8BF,WAA9B,CAAP;AACD,OAFD,MAEO;AACL,eAAOC,UAAUC,KAAV,CAAgBF,WAAhB,EAA6BiL,YAA7B,CAAP;AACD;AACF;;AAED;;;;;;;;;;;;;;sBAvCsBC,O,EAAS;AAC7B,WAAKL,kBAAL,GAA0B,IAAIK,OAAJ,CAAY,KAAKN,aAAjB,CAA1B;AACD;;AAED;;;;;;;sBAIoBla,M,EAAQ;AAC1B,UAAI2C,EAAEC,OAAF,CAAU5C,MAAV,CAAJ,EAAuB;AACrB,aAAKka,aAAL,GAAqB;AACnBO,gBAAM;AACJpY,eAAG,EADC;AAEJE,eAAG;AACDmY,oBAAM,IADL;AAED1X,sBAAQ,QAFP;AAGD2X,mBAAK;AAHJ;AAFC;AADa,SAArB;AAUD,OAXD,MAWO;AACL,aAAKT,aAAL,GAAqBla,MAArB;AACD;AACF;;;0BA2BYsP,W,EAAaiL,Y,EAAc;AACtC,UAAIK,cAAcrL,UAAUgL,YAAV,CAAlB;;AAEA,aAAOK,YAAYpL,KAAZ,CAAkBF,WAAlB,CAAP;AACD;;;;EAvFoCvO,M;;;kBAAlBwO,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCrB;;;;;;;;AAQA;;;;;;;AAOA;;;;;;;;IAQqBsL,K;;;AACnB;;;;AAIA,uBAAsB;AAAA,QAAT7a,MAAS,QAATA,MAAS;;AAAA;;AAAA,8GACd,EAACA,cAAD,EADc;;AAGpB,UAAK8a,MAAL,GAAc,IAAd;AACA,UAAKC,UAAL,GAAkB,EAAlB;AAJoB;AAKrB;;AAED;;;;;;;;2BAIO;AAAA;;AACL,UAAIxW,SAAS,KAAKzB,MAAL,CAAYnB,YAAZ,CAAyB4C,MAAtC;AAAA,UACEsV,YAAY,EADd;;AAGAtV,aAAOzD,OAAP,CAAe,UAAC0P,KAAD,EAAW;AACxBqJ,kBAAUtP,IAAV,CAAeiG,MAAM1O,IAArB;AACD,OAFD;;AAIA,aAAO5B,QAAQ8a,GAAR,CAAYnB,SAAZ,EACJzZ,IADI,CACC,UAAC6a,gBAAD;AAAA,eAAsB,OAAKC,UAAL,CAAgBD,gBAAhB,CAAtB;AAAA,OADD,EAEJ7a,IAFI,CAEC,UAAC+a,UAAD,EAAgB;AACpB,eAAOA,UAAP;AACD,OAJI,CAAP;AAKD;;AAED;;;;;;;;+BAKWF,gB,EAAkB;AAC3B,UAAIlZ,QAAQ,EAAZ;AAAA,UACEqZ,YAAY,CADd;;AAGA5a,cAAQ6a,cAAR,CAAuB,uBAAvB;;AAEAJ,uBAAiBna,OAAjB,CAAyB,UAACwa,UAAD,EAAgB;AACvC;AACA9a,gBAAQC,GAAR,UAAgB6a,WAAWnW,IAA3B,uBAAgDmW,UAAhD;AACAF,qBAAaE,WAAW9U,IAAxB;AACAzE,cAAMwI,IAAN,CAAW+Q,WAAWxZ,IAAtB;AACD,OALD;;AAOAtB,cAAQC,GAAR,CAAY,OAAZ,EAAqB2a,SAArB;AACA5a,cAAQ+a,QAAR;;AAEA,aAAO;AACL/U,cAAU,CAAC,IAAIgV,IAAJ,EADN;AAELzZ,eAAUA,KAFL;AAGL0Z,iBAAU,OAAAC;AAHL,OAAP;AAKD;;;;EAzDgC3a,M;;AA4DnkBAzNqB8Z,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBrB;;;;;;;;;;;IAWqBc,a;;;AACnB;;;AAGA,+BAAsB;AAAA,QAAT3b,MAAS,QAATA,MAAS;;AAAA;;AAAA,8HACd,EAACA,cAAD,EADc;;AAGpB,UAAKyD,KAAL,GAAa;AACXJ,eAAS,IADE;AAEXuY,oBAAc,IAFH;AAGXC,uBAAiB;AAHN,KAAb;AAHoB;AAQrB;;AAED;;;;;;;;;;AA2BA;;;;;;;2BAOO;AACL,WAAKpY,KAAL,CAAWJ,OAAX,GAAqBO,EAAEC,IAAF,CAAO,KAAP,EAAc8X,cAAcvY,GAAd,CAAkBC,OAAhC,CAArB;;AAEA,WAAKI,KAAL,CAAWmY,YAAX,GAA0BhY,EAAEC,IAAF,CAAO,KAAP,EAAc8X,cAAcvY,GAAd,CAAkBwY,YAAhC,CAA1B;AACA,WAAKnY,KAAL,CAAWoY,eAAX,GAA6BjY,EAAEC,IAAF,CAAO,KAAP,EAAc8X,cAAcvY,GAAd,CAAkByY,eAAhC,CAA7B;;AAEAjY,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWJ,OAApB,EAA6B,CAAC,KAAKI,KAAL,CAAWmY,YAAZ,EAA0B,KAAKnY,KAAL,CAAWoY,eAArC,CAA7B;AACD;;AAED;;;;;;sCAGkB;AAChB,UAAI,OAAO,KAAK/Y,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsCzJ,IAAtC,CAA2C2W,YAAlD,KAAmE,UAAvE,EAAmF;AACjFlY,UAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWmY,YAApB,EAAkC,KAAK9Y,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsCzJ,IAAtC,CAA2C2W,YAA3C,EAAlC;AACD;AACF;;AAED;;;;;;yCAGqB;AACnBlY,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWoY,eAApB,EAAqC,KAAK/Y,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsCmN,WAAtC,EAArC;AACD;;AAED;;;;;;;;;AAQA;;;2BAGO;AACL,WAAKtY,KAAL,CAAWJ,OAAX,CAAmBoB,SAAnB,CAA6BC,GAA7B,CAAiCiX,cAAcvY,GAAd,CAAkB4Y,aAAnD;;AAEA;;;AAGA,WAAKC,eAAL;;AAEA;;;AAGA,WAAKC,kBAAL;;AAEA;AACA,WAAKpZ,MAAL,CAAYqM,MAAZ,CAAmBC,IAAnB,CAAwB,KAAKhL,MAAL,CAAY+X,MAApC;AACD;;AAED;;;;;;4BAGQ;AACN,WAAK1Y,KAAL,CAAWJ,OAAX,CAAmBoB,SAAnB,CAA6BgD,MAA7B,CAAoCkU,cAAcvY,GAAd,CAAkB4Y,aAAtD;;AAEA;AACA,WAAKvY,KAAL,CAAWmY,YAAX,CAAwBjT,SAAxB,GAAoC,EAApC;AACA,WAAKlF,KAAL,CAAWoY,eAAX,CAA2BlT,SAA3B,GAAuC,EAAvC;;AAEA;AACA,WAAK7F,MAAL,CAAYqM,MAAZ,CAAmBC,IAAnB,CAAwB,KAAKhL,MAAL,CAAYgY,MAApC;AACD;;;wBA/FY;AACX,aAAO;AACLD,gBAAQ,uBADH;AAELC,gBAAQ;AAFH,OAAP;AAID;;AAED;;;;;;;wBAoDa;AACX,aAAO,KAAK3Y,KAAL,CAAWJ,OAAX,CAAmBoB,SAAnB,CAA6B4X,QAA7B,CAAsCV,cAAcvY,GAAd,CAAkB4Y,aAAxD,CAAP;AACD;;;wBAlDgB;AACf,aAAO;AACL;AACA3Y,iBAAS,aAFJ;AAGL2Y,uBAAe,qBAHV;AAILJ,sBAAc,0BAJT;AAKLC,yBAAiB,2BALZ;;AAOLvY,gBAAQ;AAPH,OAAP;AASD;;;;EAvCwCvC,M;;;kBAAtB4a,a;;;;;;;;;;;;;;;;;;;;;;ACXrB;;;;AACA;;;;AACA;;;;;;;;;;;;IACqB9K,a;;;AACjB;;;AAGA,iCAAwB;AAAA,YAAV7Q,MAAU,QAAVA,MAAU;;AAAA;;AAEpB;;;AAFoB,kIACd,EAAEA,cAAF,EADc;;AAKpB,cAAKyD,KAAL,GAAa;AACTJ,qBAAS,IADA;AAETiZ,qBAAS,IAFA;AAGT;;;;AAIAC,qBAAS;AAPA,SAAb;AASA;;;AAGA,cAAKnZ,GAAL,GAAW;AACP4I,2BAAe,mBADR;AAEPwQ,iCAAqB,2BAFd;AAGPC,4BAAgB,4BAHT;AAIPC,4BAAgB;AAJT,SAAX;AAMA;;;AAGA,cAAKC,qBAAL,GAA6B,EAA7B;AA1BoB;AA2BvB;AACD;;;;;;;;;AAaA;;;+BAGO;AACH,iBAAKlZ,KAAL,CAAWJ,OAAX,GAAqBO,EAAEC,IAAF,CAAO,KAAP,EAAc,KAAKT,GAAL,CAAS4I,aAAvB,CAArB;AACA,iBAAKvI,KAAL,CAAW6Y,OAAX,GAAqB1Y,EAAEC,IAAF,CAAO,KAAP,EAAc,KAAKT,GAAL,CAASqZ,cAAvB,CAArB;AACA,iBAAKhZ,KAAL,CAAW8Y,OAAX,GAAqB3Y,EAAEC,IAAF,CAAO,KAAP,EAAc,KAAKT,GAAL,CAASsZ,cAAvB,CAArB;AACA;;;AAGA9Y,cAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWJ,OAApB,EAA6B,CAAC,KAAKI,KAAL,CAAW6Y,OAAZ,EAAqB,KAAK7Y,KAAL,CAAW8Y,OAAhC,CAA7B;AACA3Y,cAAEoD,MAAF,CAAS,KAAKlE,MAAL,CAAYpB,EAAZ,CAAe+B,KAAf,CAAqBJ,OAA9B,EAAuC,KAAKI,KAAL,CAAWJ,OAAlD;AACA;;;AAGA,iBAAKuZ,QAAL;AACH;AACD;;;;;;;AAOA;;;;;;;2CAImB3Y,K,EAAO;AACtB,gBAAI,CAAC,KAAK4Y,aAAL,CAAmB5Y,KAAnB,CAAL,EAAgC;AAC5B,qBAAK0I,KAAL;AACA;AACH;AACD,iBAAKwG,IAAL;AACA,iBAAKzD,IAAL;AACA;AACA,iBAAKoN,eAAL;AACH;AACD;;;;;;+BAGO;AACH,gBAAMC,gBAAgB7Q,oBAAU8Q,IAAhC;AACA,gBAAMC,gBAAgB,KAAKna,MAAL,CAAYpB,EAAZ,CAAe+B,KAAf,CAAqBJ,OAArB,CAA6BkP,qBAA7B,EAAtB;AACA,gBAAM2K,YAAY;AACdC,mBAAGJ,cAAcI,CAAd,GAAkBF,cAAcG,IADrB;AAEdC,mBAAGN,cAAcM,CAAd,GACGN,cAAcxU;AAChB;AAFD,kBAGG0U,cAAcvK,GAHjB,GAIG,KAAKiK;AANG,aAAlB;AAQA;;;AAGA,gBAAII,cAAczU,KAAlB,EAAyB;AACrB4U,0BAAUC,CAAV,IAAevK,KAAK0K,KAAL,CAAWP,cAAczU,KAAd,GAAsB,CAAjC,CAAf;AACH;AACD,iBAAK7E,KAAL,CAAWJ,OAAX,CAAmBka,KAAnB,CAAyBH,IAAzB,GAAgCxK,KAAK0K,KAAL,CAAWJ,UAAUC,CAArB,IAA0B,IAA1D;AACA,iBAAK1Z,KAAL,CAAWJ,OAAX,CAAmBka,KAAnB,CAAyB7K,GAAzB,GAA+BE,KAAK0K,KAAL,CAAWJ,UAAUG,CAArB,IAA0B,IAAzD;AACH;AACD;;;;;;+BAGO;AACH,iBAAK5Z,KAAL,CAAWJ,OAAX,CAAmBoB,SAAnB,CAA6BC,GAA7B,CAAiC,KAAKtB,GAAL,CAASoZ,mBAA1C;AACA,iBAAK/Z,KAAL,CAAW3B,OAAX,CAAmB,UAACqE,IAAD,EAAU;AACzB,oBAAI,OAAOA,KAAKqY,KAAZ,KAAsB,UAA1B,EAAsC;AAClCrY,yBAAKqY,KAAL;AACH;AACJ,aAJD;AAKH;AACD;;;;;;gCAGQ;AACJ,iBAAK/Z,KAAL,CAAWJ,OAAX,CAAmBoB,SAAnB,CAA6BgD,MAA7B,CAAoC,KAAKrE,GAAL,CAASoZ,mBAA7C;AACA,iBAAK/Z,KAAL,CAAW3B,OAAX,CAAmB,UAACqE,IAAD,EAAU;AACzB,oBAAI,OAAOA,KAAKqY,KAAZ,KAAsB,UAA1B,EAAsC;AAClCrY,yBAAKqY,KAAL;AACH;AACJ,aAJD;AAKH;AACD;;;;;;;sCAIcvZ,K,EAAO;AACjB;;;;AAIA,gBAAMwZ,6BAA6B,CAAC,KAAD,EAAQ,OAAR,CAAnC;AACA,gBAAIxZ,SAASwZ,2BAA2B5V,QAA3B,CAAoC5D,MAAMjB,MAAN,CAAa4E,OAAjD,CAAb,EAAwE;AACpE,uBAAO,KAAP;AACH;AACD,gBAAM8V,mBAAmBxR,oBAAUoE,GAAV,EAAzB;AAAA,gBAA0CqN,eAAezR,oBAAUuF,IAAnE;AACA;AACA,gBAAI,CAACiM,gBAAD,IAAqB,CAACA,iBAAiB1H,UAA3C,EAAuD;AACnD,uBAAO,KAAP;AACH;AACD;AACA,gBAAI0H,iBAAiB3H,WAAjB,IAAgC4H,aAAa9a,MAAb,GAAsB,CAA1D,EAA6D;AACzD,uBAAO,KAAP;AACH;AACD;AACA,gBAAM+L,eAAe,KAAK9L,MAAL,CAAYnB,YAAZ,CAAyBic,QAAzB,CAAkCF,iBAAiB1H,UAAnD,CAArB;AACA,gBAAI,CAACpH,YAAL,EAAmB;AACf,uBAAO,KAAP;AACH;AACD,gBAAMiP,aAAa,KAAK7d,MAAL,CAAY0C,WAAZ,CAAwBkM,aAAa1N,IAArC,CAAnB;AACA,mBAAO2c,cAAcA,WAAW,KAAK/a,MAAL,CAAYrB,KAAZ,CAAkBiW,WAAlB,CAA8BoG,yBAAzC,CAArB;AACH;AACD;;;;;;;AAOA;;;;;;mCAGW;AAAA;;AACP,iBAAKrb,KAAL,CAAW3B,OAAX,CAAmB,UAACqE,IAAD,EAAU;AACzB,uBAAK4Y,OAAL,CAAa5Y,IAAb;AACH,aAFD;AAGH;AACD;;;;;;;gCAIQA,I,EAAM;AAAA;;AACV,gBAAM7B,SAAS6B,KAAKtD,MAAL,EAAf;AACA,iBAAK4B,KAAL,CAAW6Y,OAAX,CAAmBxY,WAAnB,CAA+BR,MAA/B;AACA,gBAAI,OAAO6B,KAAK6Y,aAAZ,KAA8B,UAAlC,EAA8C;AAC1C,oBAAMzB,UAAUpX,KAAK6Y,aAAL,EAAhB;AACA,qBAAKva,KAAL,CAAW8Y,OAAX,CAAmBzY,WAAnB,CAA+ByY,OAA/B;AACH;AACD,iBAAKzZ,MAAL,CAAY4N,SAAZ,CAAsBrM,EAAtB,CAAyBf,MAAzB,EAAiC,OAAjC,EAA0C,YAAM;AAC5C,uBAAK2a,WAAL,CAAiB9Y,IAAjB;AACH,aAFD;AAGH;AACD;;;;;;;oCAIYA,I,EAAM;AACd,gBAAM+F,QAAQgB,oBAAUhB,KAAxB;AACA/F,iBAAK+Y,QAAL,CAAchT,KAAd;AACA,iBAAK4R,eAAL;AACH;AACD;;;;;;0CAGkB;AACd,iBAAKra,KAAL,CAAW3B,OAAX,CAAmB,UAACqE,IAAD,EAAU;AACzBA,qBAAKuH,UAAL,CAAgBR,oBAAUoE,GAAV,EAAhB;AACH,aAFD;AAGH;;;4BAxKW;AACR,gBAAI,CAAC,KAAK6N,cAAV,EAA0B;AACtB,qBAAKA,cAAL,GAAsB,CAClB,IAAIrT,wBAAJ,CAAmB,KAAKhI,MAAL,CAAY6M,GAAZ,CAAgBC,OAAnC,CADkB,EAElB,IAAIpE,wBAAJ,CAAmB,KAAK1I,MAAL,CAAY6M,GAAZ,CAAgBC,OAAnC,CAFkB,CAAtB;AAIH;AACD,mBAAO,KAAKuO,cAAZ;AACH;;;;EA5CsCpd,M;;;kBAAtB8P,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHrB;;;;;;;;;;IAUqBuN,O;;;AACnB;;;AAGA,yBAAsB;AAAA,QAATpe,MAAS,QAATA,MAAS;;AAAA;;AAAA,kHACd,EAACA,cAAD,EADc;;AAGpB,UAAKyD,KAAL,GAAa;AACX4a,eAAS,IADE;AAEX/B,eAAS;AAFE,KAAb;;AAKA;;;;AAIA,UAAKH,MAAL,GAAc,KAAd;AAZoB;AAarB;;AAED;;;;;;;;;;AAYA;;;2BAGO;AACL,WAAK1Y,KAAL,CAAW4a,OAAX,GAAqBza,EAAEC,IAAF,CAAO,KAAP,EAAcua,QAAQhb,GAAR,CAAYib,OAA1B,CAArB;AACAza,QAAEoD,MAAF,CAAS,KAAKlE,MAAL,CAAY+L,OAAZ,CAAoBpL,KAApB,CAA0BgC,OAAnC,EAA4C,KAAKhC,KAAL,CAAW4a,OAAvD;;AAEA,WAAKzB,QAAL;AACD;;AAED;;;;;;+BAGW;AACT,UAAIna,QAAQ,KAAKK,MAAL,CAAYrB,KAAZ,CAAkB6c,cAA9B;;AAEA,WAAK,IAAIvZ,QAAT,IAAqBtC,KAArB,EAA4B;AAC1B,aAAKsb,OAAL,CAAahZ,QAAb,EAAuBtC,MAAMsC,QAAN,CAAvB;AACD;AACF;;AAED;;;;;;;;;4BAMQA,Q,EAAUI,I,EAAM;AAAA;;AACtB,UAAMhC,MAAM,KAAKL,MAAL,CAAYrB,KAAZ,CAAkBiW,WAA9B;;AAEA,UAAIvS,KAAKhC,IAAIob,uBAAT,KAAqC,CAACpZ,KAAKhC,IAAIqb,kBAAT,CAA1C,EAAwE;AACtE7b,UAAElC,GAAF,CAAM,oDAAN,EAA4D,MAA5D,EAAoEsE,QAApE;AACA;AACD;;AAED;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,UAAI,CAACI,KAAKhC,IAAIob,uBAAT,CAAL,EAAwC;AACtC;AACD;;AAED,UAAIjb,SAASM,EAAEC,IAAF,CAAO,IAAP,EAAa,CAACua,QAAQhb,GAAR,CAAYqb,aAAb,EAA4BtZ,KAAKhC,IAAIqb,kBAAT,CAA5B,CAAb,EAAwE;AACnFE,eAAO3Z;AAD4E,OAAxE,CAAb;;AAIA;;;AAGAzB,aAAOqb,OAAP,CAAezd,IAAf,GAAsB6D,QAAtB;;AAEAnB,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAW4a,OAApB,EAA6B/a,MAA7B;;AAEA,WAAKG,KAAL,CAAW4a,OAAX,CAAmBva,WAAnB,CAA+BR,MAA/B;AACA,WAAKG,KAAL,CAAW6Y,OAAX,CAAmB/R,IAAnB,CAAwBjH,MAAxB;;AAEA;;;AAGA;AACAA,aAAOU,gBAAP,CAAwB,OAAxB,EAAiC,iBAAS;AACxC,eAAK4a,aAAL,CAAmB3a,KAAnB;AACD,OAFD,EAEG,KAFH;AAGD;;AAED;;;;;;;;;;kCAOcA,K,EAAO;AACnB,UAAI4a,aAAa5a,MAAMjB,MAAvB;AAAA,UACE+B,WAAW8Z,WAAWF,OAAX,CAAmBzd,IADhC;AAAA,UAEEiE,OAAO,KAAKrC,MAAL,CAAYrB,KAAZ,CAAkBqd,WAAlB,CAA8B/Z,QAA9B,CAFT;;AAIA;;;AAGA,UAAI6J,eAAe,KAAK9L,MAAL,CAAYnB,YAAZ,CAAyBiN,YAA5C;;AAEA;;;;;;AAMA,UAAI,CAACzJ,KAAK,KAAKrC,MAAL,CAAYrB,KAAZ,CAAkBiW,WAAlB,CAA8BqH,oBAAnC,CAAD,IAA6DnQ,aAAahM,OAA9E,EAAuF;AACrF,aAAKE,MAAL,CAAYnB,YAAZ,CAAyBsI,OAAzB,CAAiClF,QAAjC;AACD,OAFD,MAEO;AACL,aAAKjC,MAAL,CAAYnB,YAAZ,CAAyB6M,MAAzB,CAAgCzJ,QAAhC;AACD;;AAED;;;;AAIA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA,WAAKjC,MAAL,CAAY+L,OAAZ,CAAoBsE,IAApB;AACD;;AAED;;;;;;2BAGO;AACL,WAAK1P,KAAL,CAAW4a,OAAX,CAAmB5Z,SAAnB,CAA6BC,GAA7B,CAAiC0Z,QAAQhb,GAAR,CAAY4b,aAA7C;AACA,WAAK7C,MAAL,GAAc,IAAd;AACD;;AAED;;;;;;4BAGQ;AACN,WAAK1Y,KAAL,CAAW4a,OAAX,CAAmB5Z,SAAnB,CAA6BgD,MAA7B,CAAoC2W,QAAQhb,GAAR,CAAY4b,aAAhD;AACA,WAAK7C,MAAL,GAAc,KAAd;AACD;;AAED;;;;;;6BAGS;AACP,UAAI,CAAC,KAAKA,MAAV,EAAkB;AAChB,aAAKzM,IAAL;AACD,OAFD,MAEO;AACL,aAAK/C,KAAL;AACD;AACF;;;wBA1JgB;AACf,aAAQ;AACN0R,iBAAS,YADH;AAENI,uBAAe,oBAFT;AAGNO,uBAAe;AAHT,OAAR;AAKD;;;;EA7BkCje,M;;;kBAAhBqd,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmDqBvP,O;;;AACnB;;;AAGA,yBAAsB;AAAA,QAAT7O,MAAS,QAATA,MAAS;;AAAA;;AAAA,kHACd,EAACA,cAAD,EADc;;AAGpB,UAAKyD,KAAL,GAAa;AACXJ,eAAU,IADC;AAEXoC,eAAU,IAFC;AAGX8W,eAAU,IAHC;;AAKX;AACAvE,kBAAa,IANF;;AAQX;AACAiH,2BAAqB,IATV;AAUXC,uBAAkB;AAVP,KAAb;AAHoB;AAerB;;AAED;;;;;;;;;;;AAuBA;;;2BAGO;AAAA;;AACL,WAAKzb,KAAL,CAAWJ,OAAX,GAAqBO,EAAEC,IAAF,CAAO,KAAP,EAAcgL,QAAQzL,GAAR,CAAY6I,OAA1B,CAArB;;AAEA;;;AAGA,OAAC,SAAD,EAAa,SAAb,EAAwBnL,OAAxB,CAAiC,cAAM;AACrC,eAAK2C,KAAL,CAAWuE,EAAX,IAAiBpE,EAAEC,IAAF,CAAO,KAAP,EAAcgL,QAAQzL,GAAR,CAAY4E,EAAZ,CAAd,CAAjB;AACApE,UAAEoD,MAAF,CAAS,OAAKvD,KAAL,CAAWJ,OAApB,EAA6B,OAAKI,KAAL,CAAWuE,EAAX,CAA7B;AACD,OAHD;;AAMA;;;;;AAKA,WAAKvE,KAAL,CAAWuU,UAAX,GAAwBpU,EAAEC,IAAF,CAAO,KAAP,EAAcgL,QAAQzL,GAAR,CAAY4U,UAA1B,CAAxB;AACApU,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWuU,UAApB,EAAgCpU,EAAEG,GAAF,CAAM,MAAN,EAAc,EAAd,EAAkB,EAAlB,CAAhC;AACAH,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWgC,OAApB,EAA6B,KAAKhC,KAAL,CAAWuU,UAAxC;AACA,WAAKvU,KAAL,CAAWuU,UAAX,CAAsBhU,gBAAtB,CAAuC,OAAvC,EAAgD;AAAA,eAAS,OAAKmb,iBAAL,CAAuBlb,KAAvB,CAAT;AAAA,OAAhD,EAAwF,KAAxF;;AAGA;;;AAGA,WAAKnB,MAAL,CAAYsb,OAAZ,CAAoBva,IAApB;;AAEA;;;;;;AAMA,WAAKJ,KAAL,CAAWwb,mBAAX,GAAiCrb,EAAEC,IAAF,CAAO,KAAP,EAAcgL,QAAQzL,GAAR,CAAY6b,mBAA1B,CAAjC;AACA,WAAKxb,KAAL,CAAWyb,eAAX,GAA8Btb,EAAEC,IAAF,CAAO,MAAP,EAAegL,QAAQzL,GAAR,CAAY8b,eAA3B,CAA9B;AACA,UAAME,eAAexb,EAAEG,GAAF,CAAM,MAAN,EAAc,EAAd,EAAkB,CAAlB,CAArB;;AAEAH,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWyb,eAApB,EAAqCE,YAArC;AACAxb,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWwb,mBAApB,EAAyC,KAAKxb,KAAL,CAAWyb,eAApD;AACAtb,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAW8Y,OAApB,EAA6B,KAAK9Y,KAAL,CAAWwb,mBAAxC;;AAEA;;;AAGA,WAAKnc,MAAL,CAAY6Y,aAAZ,CAA0B9X,IAA1B;AACAD,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAW8Y,OAApB,EAA6B,KAAKzZ,MAAL,CAAY6Y,aAAZ,CAA0BlY,KAA1B,CAAgCJ,OAA7D;;AAEA;;;AAGAO,QAAEoD,MAAF,CAAS,KAAKlE,MAAL,CAAYpB,EAAZ,CAAe+B,KAAf,CAAqBJ,OAA9B,EAAuC,KAAKI,KAAL,CAAWJ,OAAlD;;AAEA;;;AAGA,WAAKoN,UAAL;AACD;;AAED;;;;;;;2BAIwB;AAAA,UAAnB4O,UAAmB,uEAAN,IAAM;;AACtB,UAAIA,UAAJ,EAAgB;AACd;AACA,aAAKvc,MAAL,CAAYsb,OAAZ,CAAoBzR,KAApB;AACA,aAAK7J,MAAL,CAAY6Y,aAAZ,CAA0BhP,KAA1B;AACD;;AAED,UAAIgF,cAAc,KAAK7O,MAAL,CAAYnB,YAAZ,CAAyBgQ,WAA3C;;AAEA;;;AAGA,UAAI,CAACA,WAAL,EAAkB;AAChB;AACD;;AAED;;;;AAIA,UAAM2N,uBAAuB,EAA7B;AACA,UAAMC,gBAAgB,EAAtB;;AAEA,UAAIC,iBAAiB7N,YAAY8N,SAAZ,GAAyBH,uBAAuB,CAAhD,GAAqDC,aAA1E;;AAEA,WAAK9b,KAAL,CAAWJ,OAAX,CAAmBka,KAAnB,CAAyBmC,SAAzB,uBAAuD9M,KAAK0K,KAAL,CAAWkC,cAAX,CAAvD;AACD;;AAED;;;;;;2BAGO;AACL,WAAK/b,KAAL,CAAWJ,OAAX,CAAmBoB,SAAnB,CAA6BC,GAA7B,CAAiCmK,QAAQzL,GAAR,CAAYuc,aAA7C;AACD;;AAED;;;;;;4BAGQ;AACN,WAAKlc,KAAL,CAAWJ,OAAX,CAAmBoB,SAAnB,CAA6BgD,MAA7B,CAAoCoH,QAAQzL,GAAR,CAAYuc,aAAhD;AACD;;AAED;;;;;;;;;AAWA;;;;wCAIoB;AAClB,WAAK7c,MAAL,CAAYsb,OAAZ,CAAoB7S,MAApB;AACD;;AAED;;;;;;;iCAIa;AAAA;;AACX;;;AAGA,WAAKzI,MAAL,CAAY4N,SAAZ,CAAsBrM,EAAtB,CAAyB,KAAKZ,KAAL,CAAWyb,eAApC,EAAqD,OAArD,EAA8D,UAACjb,KAAD,EAAW;AACvE,eAAK2b,sBAAL,CAA4B3b,KAA5B;AACD,OAFD;AAGD;;AAED;;;;;;6CAGyB;AACvB,UAAI,KAAKnB,MAAL,CAAY6Y,aAAZ,CAA0BQ,MAA9B,EAAsC;AACpC,aAAKrZ,MAAL,CAAY6Y,aAAZ,CAA0BhP,KAA1B;AACD,OAFD,MAEO;AACL,aAAK7J,MAAL,CAAY6Y,aAAZ,CAA0BjM,IAA1B;AACD;AACF;;;wBArCgB;AAAA;;AACf,aAAO;AACLmQ,cAAM;AAAA,iBAAM,OAAKpc,KAAL,CAAWuU,UAAX,CAAsBvT,SAAtB,CAAgCC,GAAhC,CAAoCmK,QAAQzL,GAAR,CAAY0c,gBAAhD,CAAN;AAAA,SADD;AAEL7H,cAAM;AAAA,iBAAM,OAAKxU,KAAL,CAAWuU,UAAX,CAAsBvT,SAAtB,CAAgCgD,MAAhC,CAAuCoH,QAAQzL,GAAR,CAAY0c,gBAAnD,CAAN;AAAA;AAFD,OAAP;AAID;;;wBAvIgB;AACf,aAAO;AACL7T,iBAAS,YADJ;AAELxG,iBAAS,qBAFJ;AAGL8W,iBAAS,qBAHJ;;AAKLoD,uBAAe,oBALV;;AAOL;AACA3H,oBAAY,kBARP;AASL8H,0BAAkB,0BATb;;AAWL;AACAb,6BAAqB,6BAZhB;AAaLC,yBAAiB;AAbZ,OAAP;AAeD;;;;EA1CkCne,M;;;kBAAhB8N,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDrB;;;;;;AAMA;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;AAcA;;;;;;;;;IASqBpN,K;;;;;;AACnB;;;;wBAIgB;AACd,aAAO,KAAK6c,cAAZ;AACD;;AAED;;;;;;;wBAIkB;AAChB,aAAO,KAAKyB,gBAAZ;AACD;;AAED;;;;;;;wBAIkB;AAChB,aAAO;AACLvB,4BAAoB,eADf;AAELD,iCAAyB,kBAFpB;AAGL5G,gCAAwB,kBAHnB;AAILoH,8BAAsB,eAJjB;AAKLjB,mCAA2B;AALtB,OAAP;AAOD;;AAED;;;;;;;wBAIoB;AAAA;;AAClB,8CACG,KAAKpG,WAAL,CAAiB8G,kBADpB,EAC0C,KAD1C,yBAEG,KAAK9G,WAAL,CAAiB6G,uBAFpB,EAE+C,KAF/C,yBAGG,KAAK7G,WAAL,CAAiBC,sBAHpB,EAG8C,KAH9C,yBAIG,KAAKD,WAAL,CAAiBqH,oBAJpB,EAI4C,KAJ5C,yBAKG,KAAKrH,WAAL,CAAiBoG,yBALpB,EAKgD,KALhD;AAOD;;AAED;;;;;;;;AAKA,wBAAsB;AAAA,QAAT9d,MAAS,SAATA,MAAS;;AAAA;;AAGpB;;;;;AAHoB,8GACd,EAACA,cAAD,EADc;;AAQpB,UAAK8e,WAAL,GAAmB,EAAnB;;AAEA;;;;;AAKA,UAAKR,cAAL,GAAsB,EAAtB;;AAEA;;;;;AAKA,UAAKyB,gBAAL,GAAwB,EAAxB;AAtBoB;AAuBrB;;AAED;;;;;;;;8BAIU;AAAA;;AACR,UAAI,CAAC,KAAK/f,MAAL,CAAYggB,cAAZ,CAA2B,OAA3B,CAAL,EAA0C;AACxC,eAAO9f,QAAQ+f,MAAR,CAAe,2BAAf,CAAP;AACD;;AAED,WAAI,IAAIlb,QAAR,IAAoB,KAAK/E,MAAL,CAAYyC,KAAhC,EAAuC;AACrC,aAAKqc,WAAL,CAAiB/Z,QAAjB,IAA6B,KAAK/E,MAAL,CAAYyC,KAAZ,CAAkBsC,QAAlB,CAA7B;AACD;;AAED;;;AAGA,UAAImb,eAAe,KAAKC,yBAAL,EAAnB;;AAEA;;;AAGA,UAAID,aAAard,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,eAAO3C,QAAQC,OAAR,EAAP;AACD;;AAED;;;AAGA,aAAOwC,EAAEqX,QAAF,CAAWkG,YAAX,EAAyB,UAACpe,IAAD,EAAU;AACxC,eAAKse,OAAL,CAAate,IAAb;AACD,OAFM,EAEJ,UAACA,IAAD,EAAU;AACX,eAAKue,QAAL,CAAcve,IAAd;AACD,OAJM,CAAP;AAKD;;AAED;;;;;;;gDAI4B;AAC1B,UAAIwe,sBAAsB,EAA1B;;AAEA,WAAI,IAAIvb,QAAR,IAAoB,KAAK+Z,WAAzB,EAAsC;AACpC,YAAIyB,YAAY,KAAKzB,WAAL,CAAiB/Z,QAAjB,CAAhB;;AAEA,YAAI,OAAOwb,UAAU/e,OAAjB,KAA6B,UAAjC,EAA6C;AAC3C8e,8BAAoB/V,IAApB,CAAyB;AACvBuP,sBAAWyG,UAAU/e,OADE;AAEvBM,kBAAO;AACLiD;AADK;AAFgB,WAAzB;AAMD,SAPD,MAOO;AACL;;;AAGA,eAAKuZ,cAAL,CAAoBvZ,QAApB,IAAgCwb,SAAhC;AACD;AACF;;AAED,aAAOD,mBAAP;AACD;;AAED;;;;;;4BAGQxe,I,EAAM;AACZ,WAAKwc,cAAL,CAAoBxc,KAAKiD,QAAzB,IAAqC,KAAK+Z,WAAL,CAAiBhd,KAAKiD,QAAtB,CAArC;AACD;;AAED;;;;;;6BAGSjD,I,EAAM;AACb,WAAKie,gBAAL,CAAsBje,KAAKiD,QAA3B,IAAuC,KAAK+Z,WAAL,CAAiBhd,KAAKiD,QAAtB,CAAvC;AACD;;AAED;;;;;;;;;;;;8BASUI,I,EAAMrD,I,EAAM;AACpB,UAAI0e,SAAS,KAAK1B,WAAL,CAAiB3Z,IAAjB,CAAb;AAAA,UACEnF,SAAS,KAAKA,MAAL,CAAY0C,WAAZ,CAAwByC,IAAxB,CADX;;AAGA,UAAI4O,WAAW,IAAIyM,MAAJ,CAAW1e,IAAX,EAAiB9B,UAAU,EAA3B,CAAf;;AAEA,aAAO+T,QAAP;AACD;;AAED;;;;;;;;8BAKU5O,I,EAAM;AACd,aAAOA,gBAAgB,KAAKsb,SAAL,CAAe,KAAKzgB,MAAL,CAAYgC,YAA3B,CAAvB;AACD;;;;EAjLgCjB,M;;;kBAAdU,K;;;;;;;;;;;;;;;;;;;;;;AClCrB;;;;;;;;;;+eATA;;;;;;AAMA;;;;;AAKA;;;;;;;;;;;;;;;;;;IAkBqBC,E;;;AACnB;;;;;AAKA,oBAAsB;AAAA,QAAT1B,MAAS,QAATA,MAAS;;AAAA;;AAAA,wGACd,EAACA,cAAD,EADc;;AAGpB,UAAKyD,KAAL,GAAa;AACXid,cAAQ,IADG;AAEXrd,eAAS,IAFE;AAGX8M,gBAAU;AAHC,KAAb;AAHoB;AAQrB;;AAED;;;;;;;8BAGU;AAAA;;AACR,aAAO,KAAKtM,IAAL;AACL;;;AADK,OAIJzD,IAJI,CAIC;AAAA,eAAM,OAAKugB,eAAL,EAAN;AAAA,OAJD;AAKL;;;AALK,OAQJvgB,IARI,CAQC;AAAA,eAAM,OAAK0C,MAAL,CAAY+L,OAAZ,CAAoBhL,IAApB,EAAN;AAAA,OARD;AASL;;;AATK,OAYJzD,IAZI,CAYC;AAAA,eAAM,OAAK0C,MAAL,CAAY+N,aAAZ,CAA0BhN,IAA1B,EAAN;AAAA,OAZD;AAaL;;;AAbK,OAgBJzD,IAhBI,CAgBC;AAAA,eAAM,OAAKwgB,UAAL,EAAN;AAAA,OAhBD;AAiBL;;;AAjBK,OAoBJxgB,IApBI,CAoBC;AAAA,eAAM,OAAKqQ,UAAL,EAAN;AAAA,OApBD;;AAsBP;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAhCO,OAkCJ/P,KAlCI,CAkCE,aAAK;AACVF,gBAAQG,KAAR,CAAcM,CAAd;;AAEA;AACD,OAtCI,CAAP;AAuCD;;AAED;;;;;;;;;AAWA;;;;2BAIO;AAAA;;AACL,aAAO,IAAIf,OAAJ,CAAa,UAACC,OAAD,EAAU8f,MAAV,EAAqB;AACvC;;;;AAIA,eAAKxc,KAAL,CAAWid,MAAX,GAAoB5Z,SAAS+Z,cAAT,CAAwB,OAAK7gB,MAAL,CAAYkC,QAApC,CAApB;;AAEA,YAAI,CAAC,OAAKuB,KAAL,CAAWid,MAAhB,EAAwB;AACtBT,iBAAOhO,MAAM,iCAAiC,OAAKjS,MAAL,CAAYkC,QAAnD,CAAP;AACA;AACD;;AAED;;;AAGA,eAAKuB,KAAL,CAAWJ,OAAX,GAAsBO,EAAEC,IAAF,CAAO,KAAP,EAAc,OAAKT,GAAL,CAAS0d,aAAvB,CAAtB;AACA,eAAKrd,KAAL,CAAW0M,QAAX,GAAsBvM,EAAEC,IAAF,CAAO,KAAP,EAAc,OAAKT,GAAL,CAAS2d,UAAvB,CAAtB;;AAEA,eAAKtd,KAAL,CAAWJ,OAAX,CAAmBS,WAAnB,CAA+B,OAAKL,KAAL,CAAW0M,QAA1C;AACA,eAAK1M,KAAL,CAAWid,MAAX,CAAkB5c,WAAlB,CAA8B,OAAKL,KAAL,CAAWJ,OAAzC;;AAEAlD;AACD,OAtBM,CAAP;AAuBD;;AAED;;;;;;iCAGa;AACX;;;AAGA,UAAI6gB,SAAS,mBAAA1G,CAAQ,oDAAR,CAAb;;AAEA;;;AAGA,UAAI3S,MAAM/D,EAAEC,IAAF,CAAO,OAAP,EAAgB,IAAhB,EAAsB;AAC9BmG,qBAAagX,OAAOC,QAAP;AADiB,OAAtB,CAAV;;AAIA;;;AAGArd,QAAEoD,MAAF,CAASF,SAASoa,IAAlB,EAAwBvZ,GAAxB;AACD;;AAED;;;;;;iCAGa;AAAA;;AACX;;;AAGA,WAAK7E,MAAL,CAAY4N,SAAZ,CAAsBrM,EAAtB,CAAyB,KAAKZ,KAAL,CAAW0M,QAApC,EAA8C,OAA9C,EAAuD;AAAA,eAAS,OAAKgR,eAAL,CAAqBld,KAArB,CAAT;AAAA,OAAvD,EAA6F,KAA7F;AACD;;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;oCAwBgBA,K,EAAO;AACrB,UAAImd,cAAcnd,MAAMjB,MAAxB;;AAEA;;;AAGA,UAAI;AACF,aAAKF,MAAL,CAAYnB,YAAZ,CAAyB0f,0BAAzB,CAAoDD,WAApD;AACD,OAFD,CAEE,OAAOngB,CAAP,EAAU;AACV;;;AAGA,aAAK6B,MAAL,CAAY4L,KAAZ,CAAkB4S,iBAAlB;AACD;;AAGD;;;AAGA,WAAKxe,MAAL,CAAY+N,aAAZ,CAA0BC,kBAA1B,CAA6C7M,KAA7C;;AAEA;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,WAAKnB,MAAL,CAAY+L,OAAZ,CAAoBsE,IAApB;AACA,WAAKrQ,MAAL,CAAY+L,OAAZ,CAAoBa,IAApB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,WAAK5M,MAAL,CAAY+L,OAAZ,CAAoBmJ,UAApB,CAA+B6H,IAA/B;;AAEA;;;;;AAKA,UAAI0B,iBAAiB,KAAKze,MAAL,CAAYrB,KAAZ,CAAkBsW,SAAlB,CAA4B,KAAKjV,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsCzJ,IAAlE,CAArB;AAAA,UACEqc,eAAe,KAAK1e,MAAL,CAAYnB,YAAZ,CAAyBiN,YAAzB,CAAsChM,OADvD;;AAGA,UAAI2e,kBAAkBC,YAAtB,EAAoC;AAClC,aAAK1e,MAAL,CAAY+L,OAAZ,CAAoBmJ,UAApB,CAA+BC,IAA/B;AACD;AACF;;AAED;;;;;;sCAGkB;AAChB,UAAIwJ,eAAe7d,EAAEC,IAAF,CAAO,KAAP,CAAnB;;AAEA4d,mBAAa9Y,SAAb,GAAyB+Y,gBAAzB;;AAEA9d,QAAEoD,MAAF,CAAS,KAAKvD,KAAL,CAAWJ,OAApB,EAA6Boe,YAA7B;AACD;;;wBAvNS;AACR,aAAO;AACLX,uBAAgB,cADX;AAELC,oBAAgB;AAFX,OAAP;AAID;;;;EAtE6BhgB,M;;AA2RhkBAhfqBW,E;;;;;;;;;;;;;;;;AC7BrB;;;;;AAKA,IAAI,CAACigB,QAAQC,SAAR,CAAkBC,OAAvB,EACEF,QAAQC,SAAR,CAAkBC,OAAlB,GAA4BF,QAAQC,SAAR,CAAkBE,iBAAlB,IACtBH,QAAQC,SAAR,CAAkBG,qBADxB;;AAGF,IAAI,CAACJ,QAAQC,SAAR,CAAkB9P,OAAvB,EACE6P,QAAQC,SAAR,CAAkB9P,OAAlB,GAA4B,UAAUkQ,CAAV,EAAa;AACvC,MAAIha,KAAK,IAAT;;AAEA,MAAI,CAAClB,SAASmb,eAAT,CAAyB5F,QAAzB,CAAkCrU,EAAlC,CAAL,EAA4C,OAAO,IAAP;AAC5C,KAAG;AACD,QAAIA,GAAG6Z,OAAH,CAAWG,CAAX,CAAJ,EAAmB,OAAOha,EAAP;AACnBA,SAAKA,GAAGka,aAAH,IAAoBla,GAAGyB,UAA5B;AACD,GAHD,QAGSzB,OAAO,IAHhB;AAIA,SAAO,IAAP;AACD,CATD,C;;;;;;;;;;;;;;;;;;;;;;ACVF;;;;IAIqBkE,S;AACnB;;;AAGA,uBAAc;AAAA;;AACZ,SAAK6H,QAAL,GAAgB,IAAhB;AACA,SAAK3I,SAAL,GAAiB,IAAjB;;AAEA;;;;AAIA,SAAK+W,mBAAL,GAA2B,IAA3B;AACD;;AAED;;;;;;;;;;;AA0HA;;;2BAGO;AACL,WAAKA,mBAAL,GAA2BjW,UAAUhB,KAArC;AACD;;AAED;;;;;;8BAGU;AACR,UAAI,CAAC,KAAKiX,mBAAV,EAA+B;AAC7B;AACD;;AAED,UAAMC,MAAMjc,OAAOkc,YAAP,EAAZ;;AAEAD,UAAI5N,eAAJ;AACA4N,UAAI3N,QAAJ,CAAa,KAAK0N,mBAAlB;AACD;;AAED;;;;;;iCAGa;AACX,WAAKA,mBAAL,GAA2B,IAA3B;AACD;;AAED;;;;;;;;;kCAMcva,O,EAAS0a,S,EAAW;AAChC,UAAIlX,YAAYjF,OAAOkc,YAAP,EAAhB;AAAA,UACEE,kBADF;AAAA,UAEEC,cAAc,EAFhB,CADgC,CAGZ;;AAEpB,UAAI,CAACpX,SAAD,IAAc,CAACA,UAAU4K,UAA7B,EAAyC;AACvC,eAAO,IAAP;AACD;;AAEDuM,kBAAYnX,UAAU4K,UAAV,CAAqBvM,UAAjC;;AAEA,aAAO+Y,cAAc,CAAd,IAAmBD,UAAU9Y,UAApC,EAAgD;AAC9C,YAAI8Y,UAAU3a,OAAV,KAAsBA,OAA1B,EAAmC;AACjC;;;AAGA,cAAI0a,aAAa,CAACC,UAAU9d,SAAV,CAAoB4X,QAApB,CAA6BiG,SAA7B,CAAlB,EAA2D;AACzD,mBAAO,IAAP;AACD;;AAED,iBAAOC,SAAP;AACD;;AAEDA,oBAAYA,UAAU9Y,UAAtB;AACA+Y;AACD;AACD,aAAO,IAAP;AACD;;AAED;;;;;;;gCAIYxZ,I,EAAM;AAChB,UAAIoC,YAAYjF,OAAOkc,YAAP,EAAhB;;AAEAjX,gBAAUoJ,eAAV;AACA,UAAItJ,QAAQpE,SAASuN,WAAT,EAAZ;;AAEAnJ,YAAM+J,kBAAN,CAAyBjM,IAAzB;AACAoC,gBAAUqJ,QAAV,CAAmBvJ,KAAnB;AACD;;;0BAhMY;AACX,aAAO/E,OAAOkc,YAAP,EAAP;AACD;;AAED;;;;;;;;wBAKwB;AACtB,UAAMjX,YAAYjF,OAAOkc,YAAP,EAAlB;;AAEA,aAAOjX,YAAYA,UAAU4K,UAAtB,GAAmC,IAA1C;AACD;;AAED;;;;;;;;wBAK0B;AACxB,UAAM5K,YAAYjF,OAAOkc,YAAP,EAAlB;;AAEA,aAAOjX,YAAYA,UAAUmL,YAAtB,GAAqC,IAA5C;AACD;;AAED;;;;;;;wBAIyB;AACvB,UAAMnL,YAAYjF,OAAOkc,YAAP,EAAlB;;AAEA,aAAOjX,YAAYA,UAAU2K,WAAtB,GAAoC,IAA3C;AACD;;AAED;;;;;;;wBAImB;AACjB,UAAM3K,YAAYjF,OAAOkc,YAAP,EAAlB;;AAEA,aAAOjX,aAAaA,UAAUuJ,UAAvB,GAAoCvJ,UAAUyJ,UAAV,CAAqB,CAArB,CAApC,GAA8D,IAArE;AACD;;AAED;;;;;;;wBAIkB;AAChB,UAAIuN,MAAMtb,SAASsE,SAAnB;AAAA,UAA8BF,cAA9B;AACA,UAAI8R,OAAO;AACTG,WAAG,CADM;AAETE,WAAG,CAFM;AAGT/U,eAAO,CAHE;AAITC,gBAAQ;AAJC,OAAX;;AAOA,UAAI6Z,OAAOA,IAAIngB,IAAJ,KAAa,SAAxB,EAAmC;AACjCiJ,gBAAQkX,IAAI/N,WAAJ,EAAR;AACA2I,aAAKG,CAAL,GAASjS,MAAMuX,YAAf;AACAzF,aAAKK,CAAL,GAASnS,MAAMwX,WAAf;AACA1F,aAAK1U,KAAL,GAAa4C,MAAMyX,aAAnB;AACA3F,aAAKzU,MAAL,GAAc2C,MAAM0X,cAApB;;AAEA,eAAO5F,IAAP;AACD;;AAED,UAAI,CAAC7W,OAAOkc,YAAZ,EAA0B;AACxB1f,UAAElC,GAAF,CAAM,6CAAN,EAAqD,MAArD;AACA,eAAOuc,IAAP;AACD;;AAEDoF,YAAMjc,OAAOkc,YAAP,EAAN;;AAEA,UAAI,CAACD,IAAIzN,UAAT,EAAqB;AACnBhS,UAAElC,GAAF,CAAM,gDAAN,EAAwD,MAAxD;AACA,eAAOuc,IAAP;AACD;;AAED9R,cAAQkX,IAAIvN,UAAJ,CAAe,CAAf,EAAkBG,UAAlB,EAAR;;AAEA,UAAI9J,MAAMqH,qBAAV,EAAiC;AAC/ByK,eAAO9R,MAAMqH,qBAAN,EAAP;AACD;AACD;AACA,UAAIyK,KAAKG,CAAL,KAAW,CAAX,IAAgBH,KAAKK,CAAL,KAAW,CAA/B,EAAkC;AAChC,YAAIwF,OAAO/b,SAASmB,aAAT,CAAuB,MAAvB,CAAX;;AAEA,YAAI4a,KAAKtQ,qBAAT,EAAgC;AAC9B;AACA;AACAsQ,eAAK/e,WAAL,CAAkBgD,SAASuB,cAAT,CAAwB,QAAxB,CAAlB;AACA6C,gBAAM4X,UAAN,CAAiBD,IAAjB;AACA7F,iBAAO6F,KAAKtQ,qBAAL,EAAP;;AAEA,cAAIwQ,aAAaF,KAAKpZ,UAAtB;;AAEAsZ,qBAAWC,WAAX,CAAuBH,IAAvB;;AAEA;AACAE,qBAAWE,SAAX;AACD;AACF;;AAED,aAAOjG,IAAP;AACD;;AAED;;;;;;;wBAIkB;AAChB,aAAO7W,OAAOkc,YAAP,GAAsBlc,OAAOkc,YAAP,GAAsBpB,QAAtB,EAAtB,GAAyD,EAAhE;AACD;;;;;;;kBAvIkB/U,S;;;;;;;;;;;;;;;;;;;;;;;;ACJrB;;;IAGqBgX,I;;;;;;;;AACnB;;;;;;;wBAOWC,G,EAAKlhB,I,EAAMmhB,I,EAAM;AAC1BnhB,aAAOA,QAAQ,KAAf;;AAEA,UAAI,CAACmhB,IAAL,EAAW;AACTA,eAAQD,OAAO,WAAf;AACAA,cAAO,yBAAP;AACD,OAHD,MAGO;AACLA,cAAO,0BAA0BA,GAAjC;AACD;;AAED,UAAG;AACD,YAAK,aAAahd,MAAb,IAAuBA,OAAO3F,OAAP,CAAgByB,IAAhB,CAA5B,EAAqD;AACnD,cAAKmhB,IAAL,EAAYjd,OAAO3F,OAAP,CAAgByB,IAAhB,EAAwBkhB,GAAxB,EAA6BC,IAA7B,EAAZ,KACKjd,OAAO3F,OAAP,CAAgByB,IAAhB,EAAwBkhB,GAAxB;AACN;AACF,OALD,CAKE,OAAMliB,CAAN,EAAS;AACT;AACD;AACF;;AAED;;;;;;;;;AAuBA;;;;;;AAMA;;;;;;;;;6BASgBoiB,M,EAAiD;AAAA,UAAzCjD,OAAyC,uEAA/B,YAAM,CAAE,CAAuB;AAAA,UAArBC,QAAqB,uEAAV,YAAM,CAAE,CAAE;;AAC/D,aAAO,IAAIngB,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC;;;;;;;AAOAkjB,eAAO1M,MAAP,CAAc,UAAU2M,aAAV,EAAyBC,YAAzB,EAAuCC,SAAvC,EAAkD;AAC9D,iBAAOF,cACJljB,IADI,CACC;AAAA,mBAAMqjB,cAAcF,YAAd,EAA4BnD,OAA5B,EAAqCC,QAArC,CAAN;AAAA,WADD,EAEJjgB,IAFI,CAEC,YAAM;AACV;AACA,gBAAIojB,cAAcH,OAAOxgB,MAAP,GAAgB,CAAlC,EAAqC;AACnC1C;AACD;AACF,WAPI,CAAP;AAQD,SATD,EASGD,QAAQC,OAAR,EATH;AAUD,OAlBM,CAAP;;AAoBA;;;;;;;;;;AAUA,eAASsjB,aAAT,CAAuB5J,SAAvB,EAAkC6J,eAAlC,EAAmDC,gBAAnD,EAAqE;AACnE,eAAO,IAAIzjB,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC0Z,oBAAUC,QAAV,GACG1Z,IADH,CACQ,YAAM;AACVsjB,4BAAgB7J,UAAU/X,IAAV,IAAkB,EAAlC;AACD,WAHH,EAIG1B,IAJH,CAIQD,OAJR,EAKGO,KALH,CAKS,YAAY;AACjBijB,6BAAiB9J,UAAU/X,IAAV,IAAkB,EAAnC;;AAEA;AACA3B;AACD,WAVH;AAWD,SAZM,CAAP;AAaD;AACF;;AAED;;;;;;;;;;0BAOayjB,U,EAAY;AACvB,aAAO1b,MAAM0Z,SAAN,CAAgBiC,KAAhB,CAAsB/d,IAAtB,CAA2B8d,UAA3B,CAAP;AACD;;AAED;;;;;;;;;4BAMeE,M,EAAQ;AACrB,aAAOC,OAAOC,IAAP,CAAYF,MAAZ,EAAoBjhB,MAApB,KAA+B,CAA/B,IAAoCihB,OAAOG,WAAP,KAAuBF,MAAlE;AACD;;AAED;;;;;;;;8BAKiBD,M,EAAQ;AACvB,aAAO5jB,QAAQC,OAAR,CAAgB2jB,MAAhB,MAA4BA,MAAnC;AACD;;AAED;;;;;;;;sCAKyBlS,O,EAAS;AAChC,aAAOA,QAAQ6D,eAAR,KAA4B,MAAnC;AACD;;AAED;;;;;;;;;0BAMayO,M,EAAQC,O,EAAS;AAC5B,aAAO,YAAY;AACjB,YAAIC,UAAU,IAAd;AAAA,YACEhB,OAAUiB,SADZ;;AAGAle,eAAOqS,UAAP,CAAkB;AAAA,iBAAM0L,OAAOI,KAAP,CAAaF,OAAb,EAAsBhB,IAAtB,CAAN;AAAA,SAAlB,EAAqDe,OAArD;AACD,OALD;AAMD;;;wBAtIqB;AACpB,aAAO;AACLlN,mBAAW,CADN;AAELsN,aAAK,CAFA;AAGLpN,eAAO,EAHF;AAILqN,eAAO,EAJF;AAKLC,cAAM,EALD;AAMLC,aAAK,EANA;AAOLC,aAAK,EAPA;AAQLC,eAAO,EARF;AASLpN,cAAM,EATD;AAULD,YAAI,EAVC;AAWLH,cAAM,EAXD;AAYLC,eAAO,EAZF;AAaLwN,gBAAQ,EAbH;AAcLC,cAAM;AAdD,OAAP;AAgBD;;;;;;;kBAjDkB5B,I;AAuKpB;;;;;;;;;;;;AC1KD;AACA;;;AAGA;AACA,gCAAiC,4DAA4D,qFAAqF,wDAAwD,qEAAqE,gHAAgH,uEAAuE,GAAG,4CAA4C,uBAAuB,2BAA2B,OAAO,uBAAuB,oBAAoB,KAAK,2BAA2B,4BAA4B,KAAK,qBAAqB,yBAAyB,6BAA6B,uBAAuB,KAAK,mBAAmB,4CAA4C,GAAG,cAAc,4CAA4C,GAAG,mBAAmB,6BAA6B,sBAAsB,KAAK,+BAA+B,4BAA4B,eAAe,uBAAuB,YAAY,aAAa,WAAW,iBAAiB,2BAA2B,qCAAqC,oCAAoC,kBAAkB,GAAG,uBAAuB,qBAAqB,mBAAmB,8BAA8B,OAAO,wBAAwB,uBAAuB,sCAAsC,qBAAqB,yBAAyB,KAAK,qBAAqB,yBAAyB,yCAAyC,gEAAgE,4BAA4B,gCAAgC,wCAAwC,kBAAkB,yCAAyC,mBAAmB,0CAA0C,wBAAwB,yBAAyB,yBAAyB,sBAAsB,KAAK,6BAA6B,sBAAsB,OAAO,6FAA6F,yBAAyB,eAAe,aAAa,0BAA0B,KAAK,gCAAgC,0BAA0B,OAAO,6BAA6B,4BAA4B,kBAAkB,mBAAmB,qBAAqB,6BAA6B,sBAAsB,KAAK,eAAe,yBAAyB,yBAAyB,qCAAqC,2BAA2B,GAAG,uBAAuB,qBAAqB,8BAA8B,OAAO,uBAAuB,gCAAgC,2BAA2B,oBAAoB,8BAA8B,sCAAsC,sBAAsB,6CAA6C,uBAAuB,8CAA8C,8BAA8B,2BAA2B,6BAA6B,4BAA4B,yDAAyD,+BAA+B,mCAAmC,8BAA8B,+BAA+B,kCAAkC,gEAAgE,gEAAgE,gDAAgD,mCAAmC,+BAA+B,oCAAoC,WAAW,sBAAsB,uBAAuB,wBAAwB,+FAA+F,uBAAuB,iBAAiB,8BAA8B,gBAAgB,gBAAgB,iBAAiB,uBAAuB,cAAc,cAAc,sBAAsB,8BAA8B,qBAAqB,gBAAgB,SAAS,sBAAsB,iBAAiB,gCAAgC,kBAAkB,iLAAiL,GAAG,8BAA8B,qBAAqB,KAAK,mBAAmB,0BAA0B,gBAAgB,iBAAiB,sBAAsB,uBAAuB,uBAAuB,oBAAoB,cAAc,kBAAkB,4BAA4B,2BAA2B,mBAAmB,6BAA6B,qCAAqC,sBAAsB,OAAO,yBAAyB,wBAAwB,gCAAgC,OAAO,mBAAmB,wBAAwB,GAAG,2BAA2B,mBAAmB,oCAAoC,OAAO,+BAA+B,yBAAyB,OAAO,uCAAuC,sBAAsB,OAAO,uCAAuC,sBAAsB,OAAO,yCAAyC,8BAA8B,OAAO,yBAAyB,0BAA0B,kCAAkC,oBAAoB,gBAAgB,yBAAyB,sBAAsB,sBAAsB,mBAAmB,kBAAkB,6BAA6B,wBAAwB,oDAAoD,uBAAuB,+BAA+B,OAAO,+CAA+C,uBAAuB,+BAA+B,OAAO,sCAAsC,uBAAuB,+BAA+B,OAAO,iCAAiC,uBAAuB,OAAO,gBAAgB,uBAAuB,wBAAwB,+FAA+F,uBAAuB,iBAAiB,wBAAwB,gBAAgB,gBAAgB,iBAAiB,uBAAuB,cAAc,cAAc,sBAAsB,8BAA8B,qBAAqB,gBAAgB,SAAS,gBAAgB,eAAe,cAAc,uBAAuB,uBAAuB,iBAAiB,kBAAkB,KAAK,gBAAgB,oBAAoB,GAAG,wBAAwB,qBAAqB,KAAK,wCAAwC,qBAAqB,OAAO,yCAAyC,qBAAqB,OAAO,wBAAwB,0BAA0B,gBAAgB,iBAAiB,sBAAsB,uBAAuB,uBAAuB,oBAAoB,cAAc,kBAAkB,4BAA4B,2BAA2B,mBAAmB,+BAA+B,0CAA0C,sBAAsB,OAAO,8BAA8B,wBAAwB,gCAAgC,OAAO,gCAAgC,mBAAmB,oCAAoC,OAAO,gCAAgC,gDAAgD,sCAAsC,OAAO,sCAAsC,+CAA+C,iCAAiC,SAAS,iCAAiC,kCAAkC,+CAA+C,0BAA0B,uCAAuC,wDAAwD,wDAAwD,SAAS,uCAAuC,mCAAmC,SAAS,8BAA8B,sBAAsB,KAAK,gCAAgC,4BAA4B,oBAAoB,KAAK,2BAA2B,oBAAoB,KAAK,uBAAuB,gHAAgH,yBAAyB,KAAK,sBAAsB,uBAAuB,sCAAsC,qBAAqB,KAAK;;AAEtoQ","file":"codex-editor.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/codex.js\");\n","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<symbol id=\\\"arrow-down\\\" viewBox=\\\"0 0 14 14\\\">\\n  <path transform=\\\"matrix(1 0 0 -1 0 14)\\\" d=\\\"M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"arrow-up\\\" viewBox=\\\"0 0 14 14\\\">\\n    <path d=\\\"M8.024 4.1v8.6a1.125 1.125 0 0 1-2.25 0V4.1L2.18 7.695A1.125 1.125 0 1 1 .59 6.104L6.103.588c.44-.439 1.151-.439 1.59 0l5.516 5.516a1.125 1.125 0 0 1-1.59 1.59L8.023 4.1z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"bold\\\" viewBox=\\\"0 0 13 15\\\">\\n  <path d=\\\"M5.996 13.9H1.752c-.613 0-1.05-.137-1.312-.412-.262-.275-.393-.712-.393-1.312V1.737C.047 1.125.18.684.449.416.718.147 1.152.013 1.752.013h4.5a10.5 10.5 0 0 1 1.723.123c.487.082.922.24 1.308.474a3.43 3.43 0 0 1 1.449 1.738c.132.363.199.747.199 1.151 0 1.39-.695 2.406-2.084 3.05 1.825.581 2.737 1.712 2.737 3.391 0 .777-.199 1.477-.596 2.099a3.581 3.581 0 0 1-1.61 1.378c-.424.177-.91.301-1.46.374-.549.073-1.19.109-1.922.109zm-.209-6.167H2.86v4.055h3.022c1.9 0 2.851-.686 2.851-2.056 0-.7-.246-1.21-.739-1.525-.492-.316-1.228-.474-2.207-.474zM2.86 2.125v3.59h2.577c.7 0 1.242-.066 1.624-.198a1.55 1.55 0 0 0 .876-.758c.158-.265.237-.562.237-.89 0-.702-.25-1.167-.748-1.398-.499-.23-1.26-.346-2.283-.346H2.86z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"cross\\\" viewBox=\\\"0 0 237 237\\\">\\n  <path transform=\\\"rotate(45 280.675 51.325)\\\" d=\\\"M191 191V73c0-5.523 4.477-10 10-10h25c5.523 0 10 4.477 10 10v118h118c5.523 0 10 4.477 10 10v25c0 5.523-4.477 10-10 10H236v118c0 5.523-4.477 10-10 10h-25c-5.523 0-10-4.477-10-10V236H73c-5.523 0-10-4.477-10-10v-25c0-5.523 4.477-10 10-10h118z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"dots\\\" viewBox=\\\"0 0 18 4\\\">\\n  <g fill-rule=\\\"evenodd\\\">\\n    <circle cx=\\\"9\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    <circle cx=\\\"16\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n  </g>\\n\\n</symbol>\\n<symbol id=\\\"link\\\" viewBox=\\\"0 0 15 14\\\">\\n    <path transform=\\\"rotate(-45 11.83 6.678)\\\" d=\\\"M11.332 4.013a51.07 51.07 0 0 1-2.28.001A1.402 1.402 0 0 0 7.7 2.25H3.65a1.4 1.4 0 1 0 0 2.8h.848c.206.86.693 1.61 1.463 2.25H3.65a3.65 3.65 0 1 1 0-7.3H7.7a3.65 3.65 0 0 1 3.632 4.013zM10.9 0h2a3.65 3.65 0 0 1 0 7.3H8.85a3.65 3.65 0 0 1-3.632-4.011A62.68 62.68 0 0 1 7.5 3.273 1.401 1.401 0 0 0 8.85 5.05h4.05a1.4 1.4 0 0 0 0-2.8h-.48C12.274 1.664 11.694.785 10.9 0z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"plus\\\" viewBox=\\\"0 0 14 14\\\">\\n    <path d=\\\"M8.05 5.8h4.625a1.125 1.125 0 0 1 0 2.25H8.05v4.625a1.125 1.125 0 0 1-2.25 0V8.05H1.125a1.125 1.125 0 0 1 0-2.25H5.8V1.125a1.125 1.125 0 0 1 2.25 0V5.8z\\\"/>\\n\\n</symbol>\\n<symbol id=\\\"unlink\\\" viewBox=\\\"0 0 16 18\\\">\\n    <path transform=\\\"rotate(-45 8.358 11.636)\\\" d=\\\"M9.14 9.433c.008-.12-.087-.686-.112-.81a1.4 1.4 0 0 0-1.64-1.106l-3.977.772a1.4 1.4 0 0 0 .535 2.749l.935-.162s.019 1.093.592 2.223l-1.098.148A3.65 3.65 0 1 1 2.982 6.08l3.976-.773c1.979-.385 3.838.919 4.28 2.886.51 2.276-1.084 2.816-1.073 2.935.011.12-.394-1.59-1.026-1.696zm3.563-.875l2.105 3.439a3.65 3.65 0 0 1-6.19 3.868L6.47 12.431c-1.068-1.71-.964-2.295-.49-3.07.067-.107 1.16-1.466 1.48-.936-.12.036.9 1.33.789 1.398-.656.41-.28.76.13 1.415l2.145 3.435a1.4 1.4 0 0 0 2.375-1.484l-1.132-1.941c.42-.435 1.237-1.054.935-2.69zm1.88-2.256h3.4a1.125 1.125 0 0 1 0 2.25h-3.4a1.125 1.125 0 0 1 0-2.25zM11.849.038c.62 0 1.125.503 1.125 1.125v3.4a1.125 1.125 0 0 1-2.25 0v-3.4c0-.622.503-1.125 1.125-1.125z\\\"/>\\n\\n</symbol></svg>\"","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define('html-janitor', factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.HTMLJanitor = factory();\n  }\n}(this, function () {\n\n  /**\n   * @param {Object} config.tags Dictionary of allowed tags.\n   * @param {boolean} config.keepNestedBlockElements Default false.\n   */\n  function HTMLJanitor(config) {\n\n    var tagDefinitions = config['tags'];\n    var tags = Object.keys(tagDefinitions);\n\n    var validConfigValues = tags\n      .map(function(k) { return typeof tagDefinitions[k]; })\n      .every(function(type) { return type === 'object' || type === 'boolean' || type === 'function'; });\n\n    if(!validConfigValues) {\n      throw new Error(\"The configuration was invalid\");\n    }\n\n    this.config = config;\n  }\n\n  // TODO: not exhaustive?\n  var blockElementNames = ['P', 'LI', 'TD', 'TH', 'DIV', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'PRE'];\n  function isBlockElement(node) {\n    return blockElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  var inlineElementNames = ['A', 'B', 'STRONG', 'I', 'EM', 'SUB', 'SUP', 'U', 'STRIKE'];\n  function isInlineElement(node) {\n    return inlineElementNames.indexOf(node.nodeName) !== -1;\n  }\n\n  HTMLJanitor.prototype.clean = function (html) {\n    var sandbox = document.createElement('div');\n    sandbox.innerHTML = html;\n\n    this._sanitize(sandbox);\n\n    return sandbox.innerHTML;\n  };\n\n  HTMLJanitor.prototype._sanitize = function (parentNode) {\n    var treeWalker = createTreeWalker(parentNode);\n    var node = treeWalker.firstChild();\n    if (!node) { return; }\n\n    do {\n      // Ignore nodes that have already been sanitized\n      if (node._sanitized) {\n        continue;\n      }\n\n      if (node.nodeType === Node.TEXT_NODE) {\n        // If this text node is just whitespace and the previous or next element\n        // sibling is a block element, remove it\n        // N.B.: This heuristic could change. Very specific to a bug with\n        // `contenteditable` in Firefox: http://jsbin.com/EyuKase/1/edit?js,output\n        // FIXME: make this an option?\n        if (node.data.trim() === ''\n            && ((node.previousElementSibling && isBlockElement(node.previousElementSibling))\n                 || (node.nextElementSibling && isBlockElement(node.nextElementSibling)))) {\n          parentNode.removeChild(node);\n          this._sanitize(parentNode);\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      // Remove all comments\n      if (node.nodeType === Node.COMMENT_NODE) {\n        parentNode.removeChild(node);\n        this._sanitize(parentNode);\n        break;\n      }\n\n      var isInline = isInlineElement(node);\n      var containsBlockElement;\n      if (isInline) {\n        containsBlockElement = Array.prototype.some.call(node.childNodes, isBlockElement);\n      }\n\n      // Block elements should not be nested (e.g. <li><p>...); if\n      // they are, we want to unwrap the inner block element.\n      var isNotTopContainer = !! parentNode.parentNode;\n      var isNestedBlockElement =\n            isBlockElement(parentNode) &&\n            isBlockElement(node) &&\n            isNotTopContainer;\n\n      var nodeName = node.nodeName.toLowerCase();\n\n      var allowedAttrs = getAllowedAttrs(this.config, nodeName, node);\n\n      var isInvalid = isInline && containsBlockElement;\n\n      // Drop tag entirely according to the whitelist *and* if the markup\n      // is invalid.\n      if (isInvalid || shouldRejectNode(node, allowedAttrs)\n          || (!this.config.keepNestedBlockElements && isNestedBlockElement)) {\n        // Do not keep the inner text of SCRIPT/STYLE elements.\n        if (! (node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE')) {\n          while (node.childNodes.length > 0) {\n            parentNode.insertBefore(node.childNodes[0], node);\n          }\n        }\n        parentNode.removeChild(node);\n\n        this._sanitize(parentNode);\n        break;\n      }\n\n      // Sanitize attributes\n      for (var a = 0; a < node.attributes.length; a += 1) {\n        var attr = node.attributes[a];\n\n        if (shouldRejectAttr(attr, allowedAttrs, node)) {\n          node.removeAttribute(attr.name);\n          // Shift the array to continue looping.\n          a = a - 1;\n        }\n      }\n\n      // Sanitize children\n      this._sanitize(node);\n\n      // Mark node as sanitized so it's ignored in future runs\n      node._sanitized = true;\n    } while ((node = treeWalker.nextSibling()));\n  };\n\n  function createTreeWalker(node) {\n    return document.createTreeWalker(node,\n                                     NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT,\n                                     null, false);\n  }\n\n  function getAllowedAttrs(config, nodeName, node){\n    if (typeof config.tags[nodeName] === 'function') {\n      return config.tags[nodeName](node);\n    } else {\n      return config.tags[nodeName];\n    }\n  }\n\n  function shouldRejectNode(node, allowedAttrs){\n    if (typeof allowedAttrs === 'undefined') {\n      return true;\n    } else if (typeof allowedAttrs === 'boolean') {\n      return !allowedAttrs;\n    }\n\n    return false;\n  }\n\n  function shouldRejectAttr(attr, allowedAttrs, node){\n    var attrName = attr.name.toLowerCase();\n\n    if (allowedAttrs === true){\n      return false;\n    } else if (typeof allowedAttrs[attrName] === 'function'){\n      return !allowedAttrs[attrName](attr.value, node);\n    } else if (typeof allowedAttrs[attrName] === 'undefined'){\n      return true;\n    } else if (allowedAttrs[attrName] === false) {\n      return true;\n    } else if (typeof allowedAttrs[attrName] === 'string') {\n      return (allowedAttrs[attrName] !== attr.value);\n    }\n\n    return false;\n  }\n\n  return HTMLJanitor;\n\n}));\n","/**\n * Codex Editor\n *\n * Short Description (눈_눈;)\n * @version 2.0.0\n *\n * How to start?\n * Example:\n *           new CodexEditor({\n *                holderId : 'codex-editor',\n *                initialBlock : 'text',\n *                placeholder : 'Write your story....',\n *                tools: {\n *                    quote: Quote,\n *                    anotherTool : AnotherTool\n *                },\n *                toolsConfig: {\n *                     quote: {\n *                        iconClassname : 'quote-icon',\n *                        displayInToolbox : true,\n *                        enableLineBreaks : true\n *                     },\n *                     anotherTool: {\n *                        iconClassname : 'tool-icon'\n *                     }\n *                 }\n *            });\n *\n * - tools is an object: {\n *       pluginName: PluginClass,\n *       .....\n *   }\n * - toolsConfig is an additional configuration that uses Codex Editor API\n *      iconClassname - CSS classname of toolbox icon\n *      displayInToolbox - if you want to see your Tool in toolbox hided in \"plus\" button, than set \"True\". By default : \"False\"\n *      enableLineBreaks - by default enter creates new block that set as initialblock, but if you set this property \"True\", enter will break the lines in current block\n *\n * @author CodeX-Team <https://ifmo.su>\n *\n */\n\n/**\n * @typedef {CodexEditor} CodexEditor - editor class\n */\n\n/**\n * @typedef {Object} EditorConfig\n * @property {String} holderId           - Element to append Editor\n * @property {Array} data                - Blocks list in JSON-format\n * @property {Object} tools              - Map for used Tools in format { name : Class, ... }\n * @property {String} initialBlock       - This Tool will be added by default\n * @property {String} placeholder        - First Block placeholder\n * @property {Object} sanitizer          - @todo fill desc\n * @property {Boolean} hideToolbar       - @todo fill desc\n * @property {Object} toolsConfig        - tools configuration {@link tools#ToolConfig}\n */\n\n/**\n * Dynamically imported utils\n *\n * @typedef {Dom}   $      - {@link components/dom.js}\n * @typedef {Util}  _      - {@link components/utils.js}\n */\n\n'use strict';\n\n/**\n * Apply polyfills\n */\nimport 'components/polyfills';\n\n/**\n * Require Editor modules places in components/modules dir\n */\n// eslint-disable-next-line\nlet modules = editorModules.map( module => require('./components/modules/' + module ));\n\n/**\n * @class\n *\n * @classdesc CodeX Editor base class\n *\n * @property this.config - all settings\n * @property this.moduleInstances - constructed editor components\n *\n * @type {CodexEditor}\n */\nexport default class CodexEditor {\n  /** Editor version */\n  static get version() {\n    return VERSION;\n  }\n\n  /**\n   * @param {EditorConfig} config - user configuration\n   *\n   */\n  constructor(config) {\n    /**\n     * Configuration object\n     * @type {EditorConfig}\n     */\n    this.config = {};\n\n    /**\n     * @typedef {Object} EditorComponents\n     * @property {BlockManager} BlockManager\n     * @property {Tools} Tools\n     * @property {Events} Events\n     * @property {UI} UI\n     * @property {Toolbar} Toolbar\n     * @property {Toolbox} Toolbox\n     * @property {BlockSettings} BlockSettings\n     * @property {Renderer} Renderer\n     * @property {InlineToolbar} InlineToolbar\n     */\n    this.moduleInstances = {};\n\n    Promise.resolve()\n      .then(() => {\n        this.configuration = config;\n      })\n      .then(() => this.init())\n      .then(() => this.start())\n      .then(() => {\n        console.log('CodeX Editor is ready!');\n      })\n      .catch(error => {\n        console.log('CodeX Editor does not ready because of %o', error);\n      });\n  }\n\n  /**\n   * Setting for configuration\n   * @param {EditorConfig} config\n   */\n  set configuration(config) {\n    /**\n     * Initlai block type\n     * Uses in case when there is no items passed\n     * @type {{type: (*), data: {text: null}}}\n     */\n    let initialBlock = {\n      type : config.initialBlock,\n      data : {}\n    };\n\n    this.config.holderId = config.holderId;\n    this.config.placeholder = config.placeholder || 'write your story...';\n    this.config.sanitizer = config.sanitizer || {\n      p: true,\n      b: true,\n      a: true\n    };\n\n    this.config.hideToolbar = config.hideToolbar ? config.hideToolbar : false;\n    this.config.tools = config.tools || {};\n    this.config.toolsConfig = config.toolsConfig || {};\n    this.config.data = config.data || {};\n\n    /**\n     * Initialize items to pass data to the Renderer\n     */\n    if (_.isEmpty(this.config.data)) {\n      this.config.data = {};\n      this.config.data.items = [ initialBlock ];\n    } else {\n      if (!this.config.data.items || this.config.data.items.length === 0) {\n        this.config.data.items = [ initialBlock ];\n      }\n    }\n\n    /**\n     * If initial Block's Tool was not passed, use the first Tool in config.tools\n     */\n    if (!config.initialBlock) {\n      for (this.config.initialBlock in this.config.tools) break;\n    } else {\n      this.config.initialBlock = config.initialBlock;\n    }\n  }\n\n  /**\n   * Returns private property\n   * @returns {EditorConfig}\n   */\n  get configuration() {\n    return this.config;\n  }\n\n  /**\n   * Initializes modules:\n   *  - make and save instances\n   *  - configure\n   */\n  init() {\n    /**\n     * Make modules instances and save it to the @property this.moduleInstances\n     */\n    this.constructModules();\n\n    /**\n     * Modules configuration\n     */\n    this.configureModules();\n  }\n\n  /**\n   * Make modules instances and save it to the @property this.moduleInstances\n   */\n  constructModules() {\n    modules.forEach( Module => {\n      try {\n        /**\n         * We use class name provided by displayName property\n         *\n         * On build, Babel will transform all Classes to the Functions so, name will always be 'Function'\n         * To prevent this, we use 'babel-plugin-class-display-name' plugin\n         * @see  https://www.npmjs.com/package/babel-plugin-class-display-name\n         */\n        this.moduleInstances[Module.displayName] = new Module({\n          config : this.configuration\n        });\n      } catch ( e ) {\n        console.log('Module %o skipped because %o', Module, e);\n      }\n    });\n  }\n\n  /**\n   * Modules instances configuration:\n   *  - pass other modules to the 'state' property\n   *  - ...\n   */\n  configureModules() {\n    for(let name in this.moduleInstances) {\n      /**\n       * Module does not need self-instance\n       */\n      this.moduleInstances[name].state = this.getModulesDiff( name );\n    }\n  }\n\n  /**\n   * Return modules without passed name\n   */\n  getModulesDiff( name ) {\n    let diff = {};\n\n    for(let moduleName in this.moduleInstances) {\n      /**\n       * Skip module with passed name\n       */\n      if (moduleName === name) {\n        continue;\n      }\n      diff[moduleName] = this.moduleInstances[moduleName];\n    }\n\n    return diff;\n  }\n\n  /**\n   * Start Editor!\n   *\n   * Get list of modules that needs to be prepared and return a sequence (Promise)\n   * @return {Promise}\n   */\n  start() {\n    let prepareDecorator = module => module.prepare();\n\n    return Promise.resolve()\n      .then(prepareDecorator(this.moduleInstances.Tools))\n      .then(prepareDecorator(this.moduleInstances.UI))\n      .then(prepareDecorator(this.moduleInstances.BlockManager))\n      .then(() => {\n        return this.moduleInstances.Renderer.render(this.config.data.items);\n      });\n  }\n};\n\n// module.exports = (function (editor) {\n//\n//     'use strict';\n//\n//     editor.version = VERSION;\n//     editor.scriptPrefix = 'cdx-script-';\n//\n//     var init = function () {\n//\n//         editor.core          = require('./modules/core');\n//         editor.tools         = require('./modules/tools');\n//         editor.ui            = require('./modules/ui');\n//         editor.transport     = require('./modules/transport');\n//         editor.renderer      = require('./modules/renderer');\n//         editor.saver         = require('./modules/saver');\n//         editor.content       = require('./modules/content');\n//         editor.toolbar       = require('./modules/toolbar/toolbar');\n//         editor.callback      = require('./modules/callbacks');\n//         editor.draw          = require('./modules/draw');\n//         editor.caret         = require('./modules/caret');\n//         editor.notifications = require('./modules/notifications');\n//         editor.parser        = require('./modules/parser');\n//         editor.sanitizer     = require('./modules/sanitizer');\n//         editor.listeners     = require('./modules/listeners');\n//         editor.destroyer     = require('./modules/destroyer');\n//         editor.paste         = require('./modules/paste');\n//\n//     };\n//\n//     /**\n//      * @public\n//      * holds initial settings\n//      */\n//     editor.settings = {\n//         tools     : ['text', 'header', 'picture', 'list', 'quote', 'code', 'twitter', 'instagram', 'smile'],\n//         holderId  : 'codex-editor',\n//\n//         // Type of block showing on empty editor\n//         initialBlockPlugin: 'text'\n//     };\n//\n//     /**\n//      * public\n//      *\n//      * Static nodes\n//      */\n//     editor.nodes = {\n//         holder            : null,\n//         wrapper           : null,\n//         toolbar           : null,\n//         inlineToolbar     : {\n//             wrapper : null,\n//             buttons : null,\n//             actions : null\n//         },\n//         toolbox           : null,\n//         notifications     : null,\n//         plusButton        : null,\n//         showSettingsButton: null,\n//         showTrashButton   : null,\n//         blockSettings     : null,\n//         pluginSettings    : null,\n//         defaultSettings   : null,\n//         toolbarButtons    : {}, // { type : DomEl, ... }\n//         redactor          : null\n//     };\n//\n//     /**\n//      * @public\n//      *\n//      * Output state\n//      */\n//     editor.state = {\n//         jsonOutput  : [],\n//         blocks      : [],\n//         inputs      : []\n//     };\n//\n//     /**\n//     * @public\n//     * Editor plugins\n//     */\n//     editor.tools = {};\n//\n//     editor.start = function (userSettings) {\n//\n//         init();\n//\n//         editor.core.prepare(userSettings)\n//\n//         // If all ok, make UI, bind events and parse initial-content\n//             .then(editor.ui.prepare)\n//             .then(editor.tools.prepare)\n//             .then(editor.sanitizer.prepare)\n//             .then(editor.paste.prepare)\n//             .then(editor.transport.prepare)\n//             .then(editor.renderer.makeBlocksFromData)\n//             .then(editor.ui.saveInputs)\n//             .catch(function (error) {\n//\n//                 editor.core.log('Initialization failed with error: %o', 'warn', error);\n//\n//             });\n//\n//     };\n//\n//     return editor;\n//\n// })({});\n","/**\n * @abstract\n * @class      Module\n * @classdesc  All modules inherits from this class.\n *\n * @typedef {Module} Module\n * @property {Object} config - Editor user settings\n * @property {Object} Editor - List of Editor modules\n */\nexport default class Module {\n    /**\n     * @constructor\n     *\n     * @param {EditorConfig} config\n     */\n    constructor({ config }) {\n        /**\n         * Editor modules list\n         * @type {EditorComponents}\n         */\n        this.Editor = null;\n        /**\n         * Editor configuration object\n         * @type {EditorConfig}\n         */\n        this.config = {};\n        if (new.target === Module) {\n            throw new TypeError('Constructors for abstract class Module are not allowed.');\n        }\n        this.config = config;\n    }\n    /**\n     * Editor modules setter\n     *\n     * @param Editor\n     * @param Editor.modules {@link CodexEditor#moduleInstances}\n     * @param Editor.config {@link CodexEditor#configuration}\n     */\n    set state(Editor) {\n        this.Editor = Editor;\n    }\n}\n","export default class DeleteTune {\n    /**\n     * DeleteTune constructor\n     *\n     * @param {Object} api\n     */\n    constructor({ api }) {\n        /**\n         * Styles\n         * @type {{wrapper: string}}\n         */\n        this.CSS = {\n            wrapper: 'ass',\n            button: 'ce-settings__button',\n            buttonDelete: 'ce-settings__button--delete',\n            buttonConfirm: 'ce-settings__button--confirm',\n        };\n        /**\n         * Tune nodes\n         */\n        this.nodes = {\n            button: null,\n        };\n        this.api = api;\n        this.resetConfirmation = () => {\n            this.setConfirmation(false);\n        };\n    }\n    /**\n     * Create \"Delete\" button and add click event listener\n     * @returns [Element}\n     */\n    render() {\n        this.nodes.button = $.make('div', [this.CSS.button, this.CSS.buttonDelete], {});\n        this.nodes.button.appendChild($.svg('cross', 12, 12));\n        this.nodes.button.addEventListener('click', (event) => this.handleClick(event), false);\n        return this.nodes.button;\n    }\n    /**\n     * Delete block conditions passed\n     * @param {MouseEvent} event\n     */\n    handleClick(event) {\n        /**\n         * if block is not waiting the confirmation, subscribe on block-settings-closing event to reset\n         * otherwise delete block\n         */\n        if (!this.needConfirmation) {\n            this.setConfirmation(true);\n            /**\n             * Subscribe on event.\n             * When toolbar block settings is closed but block deletion is not confirmed,\n             * then reset confirmation state\n             */\n            this.api.events.on('block-settings-closed', this.resetConfirmation);\n        }\n        else {\n            /**\n             * Unsubscribe from block-settings closing event\n             */\n            this.api.events.off('block-settings-closed', this.resetConfirmation);\n            this.api.blocks.delete();\n        }\n    }\n    /**\n     * change tune state\n     */\n    setConfirmation(state) {\n        this.needConfirmation = state;\n        this.nodes.button.classList.add(this.CSS.buttonConfirm);\n    }\n}\n","export default class MoveUpTune {\n    /**\n     * MoveUpTune constructor\n     *\n     * @param {Object} api\n     */\n    constructor({ api }) {\n        /**\n         * Styles\n         * @type {{wrapper: string}}\n         */\n        this.CSS = {\n            wrapper: 'ass',\n            button: 'ce-settings__button',\n        };\n        this.api = api;\n    }\n    /**\n     * Create \"MoveUp\" button and add click event listener\n     * @returns [Element}\n     */\n    render() {\n        const moveUpButton = $.make('div', this.CSS.button, {});\n        moveUpButton.appendChild($.svg('arrow-up', 14, 14));\n        moveUpButton.addEventListener('click', (event) => this.handleClick(event), false);\n        return moveUpButton;\n    }\n    /**\n     * Move current block up\n     * @param {MouseEvent} event\n     */\n    handleClick(event) {\n        this.api.blocks.moveUp();\n    }\n}\n","/**\n * @class Block\n * @classdesc This class describes editor`s block, including block`s HTMLElement, data and tool\n *\n * @property {Tool} tool — current block tool (Paragraph, for example)\n * @property {Object} CSS — block`s css classes\n *\n */\n\n/** Import default tunes */\nimport MoveUpTune from './block-tunes/block-tune-move-up';\nimport DeleteTune from './block-tunes/block-tune-delete';\n\n/**\n * @classdesc Abstract Block class that contains Block information, Tool name and Tool class instance\n *\n * @property tool - Tool instance\n * @property html - Returns HTML content of plugin\n * @property wrapper - Div element that wraps block content with Tool's content. Has `ce-block` CSS class\n * @property contentNode - Div element that wraps Tool's content. Has `ce-block__content` CSS class\n * @property pluginsContent - HTML content that returns by Tool's render function\n */\nexport default class Block {\n  /**\n   * @constructor\n   * @param {String} toolName - Tool name that passed on initialization\n   * @param {Object} toolInstance — passed Tool`s instance that rendered the Block\n   * @param {Object} settings - default settings\n   * @param {Object} apiMethods - Editor API\n   */\n  constructor(toolName, toolInstance, settings, apiMethods) {\n    this.name = toolName;\n    this.tool = toolInstance;\n    this.settings = settings;\n    this.api = apiMethods;\n    this._html = this.compose();\n\n    /**\n     * @type {IBlockTune[]}\n     */\n    this.tunes = this.makeTunes();\n  }\n\n  /**\n   * CSS classes for the Block\n   * @return {{wrapper: string, content: string}}\n   */\n  static get CSS() {\n    return {\n      wrapper: 'ce-block',\n      content: 'ce-block__content',\n      selected: 'ce-block--selected'\n    };\n  }\n\n  /**\n   * Make default Block wrappers and put Tool`s content there\n   * @returns {HTMLDivElement}\n   */\n  compose() {\n    this.wrapper = $.make('div', Block.CSS.wrapper);\n    this.contentNode    = $.make('div', Block.CSS.content);\n    this.pluginsContent  = this.tool.render();\n\n    this.contentNode.appendChild(this.pluginsContent);\n    this.wrapper.appendChild(this.contentNode);\n\n    return this.wrapper;\n  }\n\n  /**\n   * Calls Tool's method\n   *\n   * Method checks tool property {MethodName}. Fires method with passes params If it is instance of Function\n   *\n   * @param {String} methodName\n   * @param {Object} params\n   */\n  call(methodName, params) {\n    /**\n     * call Tool's method with the instance context\n     */\n    if (this.tool[methodName] && this.tool[methodName] instanceof Function) {\n      this.tool[methodName].call(this.tool, params);\n    }\n  }\n\n  /**\n   * Get Block`s HTML\n   * @returns {HTMLElement}\n   */\n  get html() {\n    return this._html;\n  }\n\n  /**\n   * Get Block's JSON data\n   * @return {Object}\n   */\n  get data() {\n    return this.save();\n  }\n\n  /**\n   * is block mergeable\n   * We plugin have merge function then we call it mergable\n   * @return {boolean}\n   */\n  get mergeable() {\n    return typeof this.tool.merge === 'function';\n  }\n\n  /**\n   * Call plugins merge method\n   * @param {Object} data\n   */\n  mergeWith(data) {\n    return Promise.resolve()\n      .then(() => {\n        this.tool.merge(data);\n      });\n  }\n  /**\n   * Extracts data from Block\n   * Groups Tool's save processing time\n   * @return {Object}\n   */\n  save() {\n    let extractedBlock = this.tool.save(this.pluginsContent);\n\n    /** Measuring execution time*/\n    let measuringStart = window.performance.now(),\n      measuringEnd;\n\n    return Promise.resolve(extractedBlock)\n      .then((finishedExtraction) => {\n        /** measure promise execution */\n        measuringEnd = window.performance.now();\n\n        return {\n          tool: this.name,\n          data: finishedExtraction,\n          time : measuringEnd - measuringStart\n        };\n      })\n      .catch(function (error) {\n        _.log(`Saving proccess for ${this.tool.name} tool failed due to the ${error}`, 'log', 'red');\n      });\n  }\n\n  /**\n   * Uses Tool's validation method to check the correctness of output data\n   * Tool's validation method is optional\n   *\n   * @description Method also can return data if it passed the validation\n   *\n   * @param {Object} data\n   * @returns {Boolean|Object} valid\n   */\n  validateData(data) {\n    let isValid = true;\n\n    if (this.tool.validate instanceof Function) {\n      isValid = this.tool.validate(data);\n    }\n\n    if (!isValid) {\n      return false;\n    }\n\n    return data;\n  }\n\n  /**\n   * Make an array with default settings\n   * Each block has default tune instance that have states\n   * @return {IBlockTune[]}\n   */\n  makeTunes() {\n    let tunesList = [MoveUpTune, DeleteTune];\n\n    // Pluck tunes list and return tune instances with passed Editor API and settings\n    return tunesList.map( (tune) => {\n      return new tune({\n        api: this.api,\n        settings: this.settings,\n      });\n    });\n  }\n\n  /**\n   * Enumerates initialized tunes and returns fragment that can be appended to the toolbars area\n   * @return {DocumentFragment}\n   */\n  renderTunes() {\n    let tunesElement = document.createDocumentFragment();\n\n    this.tunes.forEach( tune => {\n      $.append(tunesElement, tune.render());\n    });\n\n    return tunesElement;\n  }\n\n  /**\n   * Check block for emptiness\n   * @return {Boolean}\n   */\n  get isEmpty() {\n    /**\n     * Allow Tool to represent decorative contentless blocks: for example \"* * *\"-tool\n     * That Tools are not empty\n     */\n    if (this.tool.contentless) {\n      return false;\n    }\n\n    let emptyText = $.isEmpty(this.pluginsContent),\n      emptyMedia = !this.hasMedia;\n\n    return emptyText && emptyMedia;\n  }\n\n  /**\n   * Check if block has a media content such as images, iframes and other\n   * @return {Boolean}\n   */\n  get hasMedia() {\n    /**\n     * This tags represents media-content\n     * @type {string[]}\n     */\n    const mediaTags = [\n      'img',\n      'iframe',\n      'video',\n      'audio',\n      'source',\n      'input',\n      'textarea',\n      'twitterwidget'\n    ];\n\n    return !!this._html.querySelector(mediaTags.join(','));\n  }\n\n  /**\n   * Set selected state\n   * @param {Boolean} state - 'true' to select, 'false' to remove selection\n   */\n  set selected(state) {\n    /**\n     * We don't need to mark Block as Selected when it is not empty\n     */\n    if (state === true && !this.isEmpty) {\n      this._html.classList.add(Block.CSS.selected);\n    } else {\n      this._html.classList.remove(Block.CSS.selected);\n    }\n  }\n}\n","/**\n * DOM manipulations helper\n */\nexport default class Dom {\n  /**\n   * Check if passed tag has no closed tag\n   * @param  {Element}  tag\n   * @return {Boolean}\n   */\n  static isSingleTag(tag) {\n    return tag.tagName && ['AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT', 'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'].includes(tag.tagName);\n  };\n\n\n  /**\n   * Helper for making Elements with classname and attributes\n   *\n   * @param  {string} tagName           - new Element tag name\n   * @param  {array|string} classNames  - list or name of CSS classname(s)\n   * @param  {Object} attributes        - any attributes\n   * @return {Element}\n   */\n  static make(tagName, classNames = null, attributes = {}) {\n    let el = document.createElement(tagName);\n\n    if ( Array.isArray(classNames) ) {\n      el.classList.add(...classNames);\n    } else if( classNames ) {\n      el.classList.add(classNames);\n    }\n\n    for (let attrName in attributes) {\n      el[attrName] = attributes[attrName];\n    }\n\n    return el;\n  }\n\n  /**\n   * Creates Text Node with the passed content\n   * @param {String} content - text content\n   * @return {Text}\n   */\n  static text(content) {\n    return document.createTextNode(content);\n  }\n\n  /**\n   * Creates SVG icon linked to the sprite\n   * @param {string} name - name (id) of icon from sprite\n   * @param {number} width\n   * @param {number} height\n   * @return {SVGElement}\n   */\n  static svg(name, width = 14, height = 14) {\n    let icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n    icon.classList.add('icon', 'icon--' + name);\n    icon.setAttribute('width', width + 'px');\n    icon.setAttribute('height', height + 'px');\n    icon.innerHTML = `<use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#${name}\"></use>`;\n\n    return icon;\n  }\n\n  /**\n   * Append one or several elements to the parent\n   *\n   * @param  {Element} parent    - where to append\n   * @param  {Element|Element[]} - element ore elements list\n   */\n  static append(parent, elements) {\n    if ( Array.isArray(elements) ) {\n      elements.forEach( el => parent.appendChild(el) );\n    } else {\n      parent.appendChild(elements);\n    }\n  }\n\n  /**\n   * Selector Decorator\n   *\n   * Returns first match\n   *\n   * @param {Element} el - element we searching inside. Default - DOM Document\n   * @param {String} selector - searching string\n   *\n   * @returns {Element}\n   */\n  static find(el = document, selector) {\n    return el.querySelector(selector);\n  }\n\n  /**\n   * Selector Decorator.\n   *\n   * Returns all matches\n   *\n   * @param {Element} el - element we searching inside. Default - DOM Document\n   * @param {String} selector - searching string\n   * @returns {NodeList}\n   */\n  static findAll(el = document, selector) {\n    return el.querySelectorAll(selector);\n  }\n\n  /**\n   * Search for deepest node which is Leaf.\n   * Leaf is the vertex that doesn't have any child nodes\n   *\n   * @description Method recursively goes throw the all Node until it finds the Leaf\n   *\n   * @param {Node} node - root Node. From this vertex we start Deep-first search {@link https://en.wikipedia.org/wiki/Depth-first_search}\n   * @param {Boolean} atLast - find last text node\n   * @return {Node} - it can be text Node or Element Node, so that caret will able to work with it\n   */\n  static getDeepestNode(node, atLast = false) {\n    /**\n     * Current function have two directions:\n     *  - starts from first child and every time gets first or nextSibling in special cases\n     *  - starts from last child and gets last or previousSibling\n     * @type {string}\n     */\n    let child = atLast ? 'lastChild' : 'firstChild',\n      sibling = atLast ? 'previousSibling' : 'nextSibling';\n\n    if (node && node.nodeType === Node.ELEMENT_NODE && node[child]) {\n      let nodeChild = node[child];\n\n      /**\n       * special case when child is single tag that can't contain any content\n       */\n      if (Dom.isSingleTag(nodeChild)) {\n        /**\n         * 1) We need to check the next sibling. If it is Node Element then continue searching for deepest\n         * from sibling\n         *\n         * 2) If single tag's next sibling is null, then go back to parent and check his sibling\n         * In case of Node Element continue searching\n         *\n         * 3) If none of conditions above happened return parent Node Element\n         */\n        if (nodeChild[sibling]) {\n          nodeChild = nodeChild[sibling];\n        } else if (nodeChild.parentNode[sibling]) {\n          nodeChild = nodeChild.parentNode[sibling];\n        } else {\n          return nodeChild.parentNode;\n        }\n      }\n\n      return this.getDeepestNode(nodeChild, atLast);\n    }\n\n    return node;\n  }\n\n  /**\n   * Check if object is DOM node\n   *\n   * @param {Object} node\n   * @returns {boolean}\n   */\n  static isElement(node) {\n    return node && typeof node === 'object' && node.nodeType && node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  /**\n   * Checks target if it is native input\n   * @param {Element|String} target - HTML element or string\n   * @return {Boolean}\n   */\n  static isNativeInput(target) {\n    let nativeInputs = [\n      'INPUT',\n      'TEXTAREA'\n    ];\n\n    return target ? nativeInputs.includes(target.tagName) : false;\n  }\n\n  /**\n   * Checks node if it is empty\n   *\n   * @description Method checks simple Node without any childs for emptiness\n   * If you have Node with 2 or more children id depth, you better use {@link Dom#isEmpty} method\n   *\n   * @param {Node} node\n   * @return {Boolean} true if it is empty\n   */\n  static isNodeEmpty(node) {\n    let nodeText;\n\n    if ( this.isElement(node) && this.isNativeInput(node) ) {\n      nodeText = node.value;\n    } else {\n      nodeText = node.textContent.replace('\\u200B', '');\n    }\n\n    return nodeText.trim().length === 0;\n  }\n\n  /**\n   * checks node if it is doesn't have any child nodes\n   * @param {Node} node\n   * @return {boolean}\n   */\n  static isLeaf(node) {\n    if (!node) {\n      return false;\n    }\n\n    return node.childNodes.length === 0;\n  }\n\n  /**\n   * breadth-first search (BFS)\n   * {@link https://en.wikipedia.org/wiki/Breadth-first_search}\n   *\n   * @description Pushes to stack all DOM leafs and checks for emptiness\n   *\n   * @param {Node} node\n   * @return {boolean}\n   */\n  static isEmpty(node) {\n    let treeWalker = [],\n      leafs = [];\n\n    if (!node) {\n      return true;\n    }\n\n    if (!node.childNodes.length) {\n      return this.isNodeEmpty(node);\n    }\n\n    treeWalker.push(node.firstChild);\n\n    while ( treeWalker.length > 0 ) {\n      node = treeWalker.shift();\n\n      if (!node) continue;\n\n      if ( this.isLeaf(node) ) {\n        leafs.push(node);\n      } else {\n        treeWalker.push(node.firstChild);\n      }\n\n      while ( node && node.nextSibling ) {\n        node = node.nextSibling;\n\n        if (!node) continue;\n\n        treeWalker.push(node);\n      }\n\n      /**\n       * If one of childs is not empty, checked Node is not empty too\n       */\n      if (node && !this.isNodeEmpty(node)) {\n        return false;\n      }\n    }\n\n    return leafs.every( leaf => this.isNodeEmpty(leaf) );\n  }\n};\n","/**\n * Bold Tool\n *\n * Inline Toolbar Tool\n *\n * Makes selected text bolder\n */\nexport default class BoldInlineTool {\n    constructor(api) {\n        /**\n         * Native Document's command that uses for Bold\n         */\n        this.commandName = 'bold';\n        /**\n         * Styles\n         */\n        this.CSS = {\n            button: 'ce-inline-tool',\n            buttonActive: 'ce-inline-tool--active',\n            buttonModifier: 'ce-inline-tool--bold',\n        };\n        /**\n         * Elements\n         */\n        this.nodes = {\n            button: null,\n        };\n        console.log('Bold Inline Tool is ready');\n    }\n    /**\n     * Create button for Inline Toolbar\n     */\n    render() {\n        this.nodes.button = document.createElement('button');\n        this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier);\n        this.nodes.button.appendChild($.svg('bold', 13, 15));\n        return this.nodes.button;\n    }\n    /**\n     * Wrap range with <b> tag\n     * @param {Range} range\n     */\n    surround(range) {\n        document.execCommand(this.commandName);\n    }\n    /**\n     * Check selection and set activated state to button if there are <b> tag\n     * @param {Selection} selection\n     */\n    checkState(selection) {\n        const isActive = document.queryCommandState(this.commandName);\n        this.nodes.button.classList.toggle(this.CSS.buttonActive, isActive);\n        return isActive;\n    }\n}\n","import Selection from '../selection';\n/**\n * Link Tool\n *\n * Inline Toolbar Tool\n *\n * Wrap selected text with <a> tag\n */\nexport default class LinkInlineTool {\n    /**\n     * @param {object} api - CodeX Editor API\n     * @param {object} api.toolbar - Inline Toolbar API\n     */\n    constructor(api) {\n        /**\n         * Native Document's commands for link/unlink\n         */\n        this.commandLink = 'createLink';\n        this.commandUnlink = 'unlink';\n        /**\n         * Enter key code\n         */\n        this.ENTER_KEY = 13;\n        /**\n         * Styles\n         */\n        this.CSS = {\n            button: 'ce-inline-tool',\n            buttonActive: 'ce-inline-tool--active',\n            buttonModifier: 'ce-inline-tool--link',\n            buttonUnlink: 'ce-inline-tool--unlink',\n            input: 'ce-inline-tool-input',\n            inputShowed: 'ce-inline-tool-input--showed',\n        };\n        /**\n         * Elements\n         */\n        this.nodes = {\n            button: null,\n            input: null,\n        };\n        /**\n         * Input opening state\n         */\n        this.inputOpened = false;\n        this.inlineToolbar = api.toolbar;\n        this.selection = new Selection();\n    }\n    /**\n     * Create button for Inline Toolbar\n     */\n    render() {\n        this.nodes.button = document.createElement('button');\n        this.nodes.button.classList.add(this.CSS.button, this.CSS.buttonModifier);\n        this.nodes.button.appendChild($.svg('link', 15, 14));\n        this.nodes.button.appendChild($.svg('unlink', 16, 18));\n        return this.nodes.button;\n    }\n    /**\n     * Input for the link\n     */\n    renderActions() {\n        this.nodes.input = document.createElement('input');\n        this.nodes.input.placeholder = 'Add a link';\n        this.nodes.input.classList.add(this.CSS.input);\n        this.nodes.input.addEventListener('keydown', (event) => {\n            if (event.keyCode === this.ENTER_KEY) {\n                this.enterPressed(event);\n            }\n        });\n        return this.nodes.input;\n    }\n    /**\n     * Handle clicks on the Inline Toolbar icon\n     * @param {Range} range\n     */\n    surround(range) {\n        /**\n         * Range will be null when user makes second click on the 'link icon' to close opened input\n         */\n        if (range) {\n            /**\n             * Save selection before change focus to the input\n             */\n            this.selection.save();\n            const parentAnchor = this.selection.findParentTag('A');\n            /**\n             * Unlink icon pressed\n             */\n            if (parentAnchor) {\n                this.selection.expandToTag(parentAnchor);\n                this.unlink();\n                this.closeActions();\n                this.checkState();\n                this.inlineToolbar.close();\n                return;\n            }\n        }\n        this.toggleActions();\n    }\n    /**\n     * Check selection and set activated state to button if there are <a> tag\n     * @param {Selection} selection\n     */\n    checkState(selection) {\n        const anchorTag = this.selection.findParentTag('A');\n        if (anchorTag) {\n            this.nodes.button.classList.add(this.CSS.buttonUnlink);\n            this.nodes.button.classList.add(this.CSS.buttonActive);\n            this.openActions();\n            /**\n             * Fill input value with link href\n             */\n            const hrefAttr = anchorTag.getAttribute('href');\n            this.nodes.input.value = hrefAttr !== 'null' ? hrefAttr : '';\n            this.selection.save();\n        }\n        else {\n            this.nodes.button.classList.remove(this.CSS.buttonUnlink);\n            this.nodes.button.classList.remove(this.CSS.buttonActive);\n        }\n        return !!anchorTag;\n    }\n    /**\n     * Function called with Inline Toolbar closing\n     */\n    clear() {\n        this.closeActions();\n    }\n    toggleActions() {\n        if (!this.inputOpened) {\n            this.openActions(true);\n        }\n        else {\n            this.closeActions(false);\n        }\n    }\n    /**\n     * @param {boolean} needFocus - on link creation we need to focus input. On editing - nope.\n     */\n    openActions(needFocus = false) {\n        this.nodes.input.classList.add(this.CSS.inputShowed);\n        if (needFocus) {\n            this.nodes.input.focus();\n        }\n        this.inputOpened = true;\n    }\n    /**\n     * Close input\n     * @param {boolean} clearSavedSelection — we don't need to clear saved selection\n     *                                        on toggle-clicks on the icon of opened Toolbar\n     */\n    closeActions(clearSavedSelection = true) {\n        this.nodes.input.classList.remove(this.CSS.inputShowed);\n        this.nodes.input.value = '';\n        if (clearSavedSelection) {\n            this.selection.clearSaved();\n        }\n        this.inputOpened = false;\n    }\n    /**\n     * Enter pressed on input\n     * @param {KeyboardEvent} event\n     */\n    enterPressed(event) {\n        let value = this.nodes.input.value || '';\n        if (!value.trim()) {\n            this.selection.restore();\n            this.unlink();\n            event.preventDefault();\n            this.closeActions();\n        }\n        if (!this.validateURL(value)) {\n            /**\n             * @todo show notification 'Incorrect Link'\n             */\n            _.log('Incorrect Link pasted', 'warn', value);\n            return;\n        }\n        value = this.prepareLink(value);\n        this.selection.restore();\n        this.insertLink(value);\n        /**\n         * Preventing events that will be able to happen\n         */\n        event.preventDefault();\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        this.closeActions();\n        this.inlineToolbar.close();\n        this.checkState();\n    }\n    /**\n     * Detects if passed string is URL\n     * @param  {string}  str\n     * @return {Boolean}\n     */\n    validateURL(str) {\n        /**\n         * Don't allow spaces\n         */\n        return !/\\s/.test(str);\n    }\n    /**\n     * Process link before injection\n     * - sanitize\n     * - add protocol for links like 'google.com'\n     * @param {string} link - raw user input\n     */\n    prepareLink(link) {\n        link = link.trim();\n        link = this.addProtocol(link);\n        return link;\n    }\n    /**\n     * Add 'http' protocol to the links like 'vc.ru', 'google.com'\n     * @param {String} link\n     */\n    addProtocol(link) {\n        /**\n         * If protocol already exists, do nothing\n         */\n        if (/^(\\w+):\\/\\//.test(link)) {\n            return link;\n        }\n        /**\n         * We need to add missed HTTP protocol to the link, but skip 2 cases:\n         *     1) Internal links like \"/general\"\n         *     2) Anchors looks like \"#results\"\n         *     3) Protocol-relative URLs like \"//google.com\"\n         */\n        const isInternal = /^\\/[^\\/\\s]/.test(link), isAnchor = link.substring(0, 1) === '#', isProtocolRelative = /^\\/\\/[^\\/\\s]/.test(link);\n        if (!isInternal && !isAnchor && !isProtocolRelative) {\n            link = 'http://' + link;\n        }\n        return link;\n    }\n    /**\n     * Inserts <a> tag with \"href\"\n     * @param {string} link - \"href\" value\n     */\n    insertLink(link) {\n        /**\n         * Edit all link, not selected part\n         */\n        const anchorTag = this.selection.findParentTag('A');\n        if (anchorTag) {\n            this.selection.expandToTag(anchorTag);\n        }\n        document.execCommand(this.commandLink, false, link);\n    }\n    /**\n     * Removes <a> tag\n     */\n    unlink() {\n        document.execCommand(this.commandUnlink);\n    }\n}\n","var map = {\n\t\"./api-blocks.ts\": \"./src/components/modules/api-blocks.ts\",\n\t\"./api-events.ts\": \"./src/components/modules/api-events.ts\",\n\t\"./api-sanitizer.ts\": \"./src/components/modules/api-sanitizer.ts\",\n\t\"./api-toolbar.ts\": \"./src/components/modules/api-toolbar.ts\",\n\t\"./api.ts\": \"./src/components/modules/api.ts\",\n\t\"./blockManager.js\": \"./src/components/modules/blockManager.js\",\n\t\"./caret.js\": \"./src/components/modules/caret.js\",\n\t\"./events.js\": \"./src/components/modules/events.js\",\n\t\"./keyboard.js\": \"./src/components/modules/keyboard.js\",\n\t\"./listeners.js\": \"./src/components/modules/listeners.js\",\n\t\"./renderer.js\": \"./src/components/modules/renderer.js\",\n\t\"./sanitizer.js\": \"./src/components/modules/sanitizer.js\",\n\t\"./saver.js\": \"./src/components/modules/saver.js\",\n\t\"./toolbar-blockSettings.js\": \"./src/components/modules/toolbar-blockSettings.js\",\n\t\"./toolbar-inline.ts\": \"./src/components/modules/toolbar-inline.ts\",\n\t\"./toolbar-toolbox.js\": \"./src/components/modules/toolbar-toolbox.js\",\n\t\"./toolbar.js\": \"./src/components/modules/toolbar.js\",\n\t\"./tools.js\": \"./src/components/modules/tools.js\",\n\t\"./ui.js\": \"./src/components/modules/ui.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/components/modules sync [^_](api-blocks.ts|api-events.ts|api-sanitizer.ts|api-toolbar.ts|api.ts|blockManager.js|caret.js|events.js|keyboard.js|listeners.js|renderer.js|sanitizer.js|saver.js|toolbar-blockSettings.js|toolbar-inline.ts|toolbar-toolbox.js|toolbar.js|tools.js|ui.js)$\";","/**\n * @class BlocksAPI\n * provides with methods working with Block\n */\nexport default class BlocksAPI extends Module {\n    /**\n     * Save Editor config. API provides passed configuration to the Blocks\n     * @param {EditorsConfig} config\n     */\n    constructor({ config }) {\n        super({ config });\n    }\n    /**\n     * Available methods\n     * @return {IBlocksAPI}\n     */\n    get methods() {\n        return {\n            delete: () => this.delete(),\n            moveDown: () => this.moveDown(),\n            moveUp: () => this.moveUp(),\n        };\n    }\n    /**\n     * Moves block down\n     */\n    moveDown() {\n        console.log('moving down', this.Editor.BlockManager);\n    }\n    /**\n     * Moves block up\n     */\n    moveUp() {\n        this.Editor.BlockManager.moveCurrentBlockUp();\n    }\n    /**\n     * Deletes Block\n     * @param blockIndex\n     */\n    delete(blockIndex) {\n        this.Editor.BlockManager.removeBlock(blockIndex);\n        /**\n         * in case of last block deletion\n         * Insert new initial empty block\n         */\n        if (this.Editor.BlockManager.blocks.length === 0) {\n            this.Editor.BlockManager.insert();\n        }\n        /**\n         * In case of deletion first block we need to set caret to the current Block\n         */\n        if (this.Editor.BlockManager.currentBlockIndex === 0) {\n            if (this.Editor.Caret.setToBlock(this.Editor.BlockManager.currentBlock)) {\n                this.Editor.Toolbar.close();\n            }\n        }\n        else {\n            if (this.Editor.Caret.navigatePrevious(true)) {\n                this.Editor.Toolbar.close();\n            }\n        }\n    }\n}\n","/**\n * @class EventsAPI\n * provides with methods working with Toolbar\n */\nexport default class EventsAPI extends Module {\n    /**\n     * Save Editor config. API provides passed configuration to the Blocks\n     * @param {EditorsConfig} config\n     */\n    constructor({ config }) {\n        super({ config });\n    }\n    /**\n     * Available methods\n     * @return {IEventsAPI}\n     */\n    get methods() {\n        return {\n            emit: (eventName, data) => this.emit(eventName, data),\n            off: (eventName, callback) => this.off(eventName, callback),\n            on: (eventName, callback) => this.on(eventName, callback),\n        };\n    }\n    /**\n     * Subscribe on Events\n     * @param {String} eventName\n     * @param {Function} callback\n     */\n    on(eventName, callback) {\n        this.Editor.Events.on(eventName, callback);\n    }\n    /**\n     * Emit event with data\n     * @param {String} eventName\n     * @param {Object} data\n     */\n    emit(eventName, data) {\n        this.Editor.Events.emit(eventName, data);\n    }\n    /**\n     * Unsubscribe from Event\n     * @param {String} eventName\n     * @param {Function} callback\n     */\n    off(eventName, callback) {\n        this.Editor.Events.off(eventName, callback);\n    }\n}\n","/**\n * @class API\n * Provides CodeX Editor Sanitizer that allows developers to clean their HTML\n */\nexport default class SanitizerAPI extends Module {\n    /**\n     * Save Editor config. API provides passed configuration to the Blocks\n     * @param {EditorsConfig} config\n     */\n    constructor({ config }) {\n        super({ config });\n    }\n    /**\n     * Available methods\n     * @return {ISanitizerAPI}\n     */\n    get methods() {\n        return {\n            clean: (taintString, config) => this.clean(taintString, config),\n        };\n    }\n    clean(taintString, config) {\n        return this.Editor.Sanitizer.clean(taintString, config);\n    }\n}\n","/**\n * @class ToolbarsAPI\n * provides with methods working with Toolbar\n */\nexport default class ToolbarsAPI extends Module {\n    /**\n     * Save Editor config. API provides passed configuration to the Blocks\n     * @param {EditorsConfig} config\n     */\n    constructor({ config }) {\n        super({ config });\n    }\n    /**\n     * Available methods\n     * @return {IToolbarAPI}\n     */\n    get methods() {\n        return {\n            close: () => this.close(),\n            open: () => this.open(),\n        };\n    }\n    /**\n     * Open toolbar\n     */\n    open() {\n        this.Editor.Toolbar.open();\n    }\n    /**\n     * Close toolbar and all included elements\n     */\n    close() {\n        this.Editor.Toolbar.close();\n    }\n}\n","/**\n * @class API\n */\nexport default class API extends Module {\n    /**\n     * Save Editor config. API provides passed configuration to the Blocks\n     * @param {EditorsConfig} config\n     */\n    constructor({ config }) {\n        super({ config });\n    }\n    get methods() {\n        return {\n            blocks: this.Editor.BlocksAPI.methods,\n            caret: {},\n            events: this.Editor.EventsAPI.methods,\n            sanitizer: this.Editor.SanitizerAPI.methods,\n            toolbar: this.Editor.ToolbarsAPI.methods,\n        };\n    }\n}\n","/**\n * @class BlockManager\n * @classdesc Manage editor`s blocks storage and appearance\n *\n * @module BlockManager\n *\n * @version 2.0.0\n */\n\nimport Block from '../block';\n\n/**\n * @typedef {BlockManager} BlockManager\n * @property {Number} currentBlockIndex - Index of current working block\n * @property {Proxy} _blocks - Proxy for Blocks instance {@link Blocks}\n */\nexport default class BlockManager extends Module {\n  /**\n   * @constructor\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    /**\n     * Proxy for Blocks instance {@link Blocks}\n     *\n     * @type {Proxy}\n     * @private\n     */\n    this._blocks = null;\n\n    /**\n     * Index of current working block\n     *\n     * @type {number}\n     * @private\n     */\n    this.currentBlockIndex = -1;\n  }\n\n  /**\n   * Swaps blocks with indexes first and second\n   * @param {Number} first - first block index\n   * @param {Number} second - second block index\n   */\n  swapBlocksPosition(first, second) {\n    let secondBlock = this.blocks[second];\n\n    this.blocks[second] = this.blocks[first];\n    this.blocks[first] = secondBlock;\n  }\n\n  /**\n   * Should be called after Editor.UI preparation\n   * Define this._blocks property\n   *\n   * @returns {Promise}\n   */\n  prepare() {\n    return new Promise(resolve => {\n      let blocks = new Blocks(this.Editor.UI.nodes.redactor);\n\n      /**\n       * We need to use Proxy to overload set/get [] operator.\n       * So we can use array-like syntax to access blocks\n       *\n       * @example\n       * this._blocks[0] = new Block(...);\n       *\n       * block = this._blocks[0];\n       *\n       * @todo proxy the enumerate method\n       *\n       * @type {Proxy}\n       * @private\n       */\n      this._blocks = new Proxy(blocks, {\n        set: Blocks.set,\n        get: Blocks.get\n      });\n\n      resolve();\n    });\n  }\n\n  /**\n   * Creates Block instance by tool name\n   *\n   * @param {String} toolName - tools passed in editor config {@link EditorConfig#tools}\n   * @param {Object} data - constructor params\n   * @param {Object} settings - block settings\n   *\n   * @return {Block}\n   */\n  composeBlock(toolName, data, settings) {\n    let toolInstance = this.Editor.Tools.construct(toolName, data),\n      block = new Block(toolName, toolInstance, settings, this.Editor.API.methods);\n\n    this.bindEvents(block);\n    /**\n     * Apply callback before inserting html\n     */\n    block.call('appendCallback', {});\n\n    return block;\n  }\n\n  /**\n   * Bind Events\n   * @param {Object} block\n   */\n  bindEvents(block) {\n    this.Editor.Listeners.on(block.pluginsContent, 'keydown', (event) => this.Editor.Keyboard.blockKeydownsListener(event));\n    this.Editor.Listeners.on(block.pluginsContent, 'mouseup', (event) => {\n      this.Editor.InlineToolbar.handleShowingEvent(event);\n    });\n  }\n\n  /**\n   * Insert new block into _blocks\n   *\n   * @param {String} toolName — plugin name, by default method inserts initial block type\n   * @param {Object} data — plugin data\n   * @param {Object} settings - default settings\n   *\n   * @return {Block}\n   */\n  insert(toolName = this.config.initialBlock, data = {}, settings = {}) {\n    let block = this.composeBlock(toolName, data, settings);\n\n    this._blocks[++this.currentBlockIndex] = block;\n    this.Editor.Caret.setToBlock(block);\n\n    return block;\n  }\n\n  /**\n   * Merge two blocks\n   * @param {Block} targetBlock - previous block will be append to this block\n   * @param {Block} blockToMerge - block that will be merged with target block\n   *\n   * @return {Promise} - the sequence that can be continued\n   */\n  mergeBlocks(targetBlock, blockToMerge) {\n    let blockToMergeIndex = this._blocks.indexOf(blockToMerge);\n\n    return Promise.resolve()\n      .then( () => {\n        if (blockToMerge.isEmpty) {\n          return;\n        }\n\n        return blockToMerge.data\n          .then((blockToMergeInfo) => {\n            targetBlock.mergeWith(blockToMergeInfo.data);\n          });\n      })\n      .then( () => {\n        this.removeBlock(blockToMergeIndex);\n        this.currentBlockIndex = this._blocks.indexOf(targetBlock);\n      });\n  }\n\n  /**\n   * Remove block with passed index or remove last\n   * @param {Number|null} index\n   */\n  removeBlock(index) {\n    if (!index) {\n      index = this.currentBlockIndex;\n    }\n    this._blocks.remove(index);\n  }\n  /**\n   * Split current Block\n   * 1. Extract content from Caret position to the Block`s end\n   * 2. Insert a new Block below current one with extracted content\n   */\n  split() {\n    let extractedFragment = this.Editor.Caret.extractFragmentFromCaretPosition(),\n      wrapper = $.make('div');\n\n    wrapper.append(extractedFragment);\n\n    /**\n     * @todo make object in accordance with Tool\n     */\n    let data = {\n      text: $.isEmpty(wrapper) ? '' : wrapper.innerHTML,\n    };\n\n    /**\n     * Renew current Block\n     * @type {Block}\n     */\n    const blockInserted = this.insert(this.config.initialBlock, data);\n\n    this.currentNode = blockInserted.pluginsContent;\n  }\n\n  /**\n   * Replace current working block\n   *\n   * @param {String} toolName — plugin name\n   * @param {Object} data — plugin data\n   */\n  replace(toolName, data = {}) {\n    let block = this.composeBlock(toolName, data);\n\n    this._blocks.insert(this.currentBlockIndex, block, true);\n  }\n\n  /**\n   * returns last Block\n   * @return {Block}\n   */\n  get lastBlock() {\n    return this._blocks[this._blocks.length - 1];\n  }\n\n  /**\n   * Returns Block by passed index\n   * @param {Number} index\n   * @return {Block}\n   */\n  getBlockByIndex(index) {\n    return this._blocks[index];\n  }\n\n  /**\n   * Get Block instance by html element\n   * @param {Node} element\n   * @returns {Block}\n   */\n  getBlock(element) {\n    if (!$.isElement(element)) {\n      element = element.parentNode;\n    }\n\n    let nodes = this._blocks.nodes,\n      firstLevelBlock = element.closest(`.${Block.CSS.wrapper}`),\n      index = nodes.indexOf(firstLevelBlock);\n\n    if (index >= 0) {\n      return this._blocks[index];\n    }\n  }\n\n  /**\n   * Get current Block instance\n   *\n   * @return {Block}\n   */\n  get currentBlock() {\n    return this._blocks[this.currentBlockIndex];\n  }\n\n  /**\n   * Returns next Block instance\n   * @return {Block|null}\n   */\n  get nextBlock() {\n    let isLastBlock = this.currentBlockIndex === (this._blocks.length - 1);\n\n    if (isLastBlock) {\n      return null;\n    }\n\n    return this._blocks[this.currentBlockIndex + 1];\n  }\n\n  /**\n   * Returns previous Block instance\n   * @return {Block|null}\n   */\n  get previousBlock() {\n    let isFirstBlock = this.currentBlockIndex === 0;\n\n    if (isFirstBlock) {\n      return null;\n    }\n\n    return this._blocks[this.currentBlockIndex - 1];\n  }\n\n  /**\n   * Get working html element\n   *\n   * @return {HTMLElement}\n   */\n  get currentNode() {\n    return this._blocks.nodes[this.currentBlockIndex];\n  }\n\n  /**\n   * Set currentBlockIndex to passed block\n   * @param {HTMLElement} element\n   */\n  set currentNode(element) {\n    let nodes = this._blocks.nodes,\n      firstLevelBlock = element.closest(`.${Block.CSS.wrapper}`);\n\n    /**\n     * Update current Block's index\n     * @type {number}\n     */\n    this.currentBlockIndex = nodes.indexOf(firstLevelBlock);\n\n    /**\n     * Remove previous selected Block's state\n     */\n    this._blocks.array.forEach( block => block.selected = false);\n\n    /**\n     * Mark current Block as selected\n     * @type {boolean}\n     */\n    this.currentBlock.selected = true;\n  }\n\n  /**\n   * Get array of Block instances\n   *\n   * @returns {Block[]} {@link Blocks#array}\n   */\n  get blocks() {\n    return this._blocks.array;\n  }\n\n  /**\n   * 1) Find first-level Block from passed child Node\n   * 2) Mark it as current\n   *\n   *  @param {Element|Text} childNode - look ahead from this node.\n   *  @throws Error  - when passed Node is not included at the Block\n   */\n  setCurrentBlockByChildNode(childNode) {\n    /**\n     * If node is Text TextNode\n     */\n    if (!$.isElement(childNode)) {\n      childNode = childNode.parentNode;\n    }\n\n    let parentFirstLevelBlock = childNode.closest(`.${Block.CSS.wrapper}`);\n\n    if (parentFirstLevelBlock) {\n      this.currentNode = parentFirstLevelBlock;\n    } else {\n      throw new Error('Can not find a Block from this child Node');\n    }\n  }\n\n  /**\n   * Move current block Up\n   * - change first level block position in DOM tree\n   * - swap in blocks array to actualize Editor Blocks state\n   */\n  moveCurrentBlockUp() {\n    let currentBlockElement = this.currentBlock.html;\n\n    if (!this.previousBlock) {\n      return;\n    }\n\n    let previousBlockElement = this.previousBlock.html;\n\n    /**\n     * Here is two cases:\n     *  - when previous block has negative offset and part of it is visible on window, then we scroll\n     *  by window's height and add offset which is mathematically difference between two blocks\n     *\n     *  - when previous block is visible and has offset from the window,\n     *      than we scroll window to the difference between this offsets.\n     */\n    let currentBlockElementClientCoords  = currentBlockElement.getBoundingClientRect(),\n      previoutBlockElementClientCoords = previousBlockElement.getBoundingClientRect(),\n      formulaSign = previoutBlockElementClientCoords.top > 0 ? 1 : -1,\n      blocksTopOffset = formulaSign * (Math.abs(currentBlockElementClientCoords.top || 0) + Math.abs(previoutBlockElementClientCoords.top || 0)),\n      scrollUpOffset = blocksTopOffset;\n\n    if (formulaSign === 1) {\n      scrollUpOffset = window.innerHeight - blocksTopOffset;\n    }\n\n    window.scrollBy(0, -1 * scrollUpOffset);\n\n    /** First we change positions on DOM tree */\n    previousBlockElement.parentNode.insertBefore(currentBlockElement, previousBlockElement);\n\n    /** Actualize Blocks state */\n    this.swapBlocksPosition(this.currentBlockIndex, this.currentBlockIndex - 1);\n    this.currentBlockIndex--;\n\n    /**\n     * Move toolbar\n     * DO not close the settings\n     */\n    this.Editor.Toolbar.move(false);\n  }\n};\n\n/**\n * @class Blocks\n * @classdesc Class to work with Block instances array\n *\n * @private\n *\n * @property {HTMLElement} workingArea — editor`s working node\n *\n */\nclass Blocks {\n  /**\n   * @constructor\n   *\n   * @param {HTMLElement} workingArea — editor`s working node\n   */\n  constructor(workingArea) {\n    this.blocks = [];\n    this.workingArea = workingArea;\n  }\n\n  /**\n   * Push back new Block\n   *\n   * @param {Block} block\n   */\n  push(block) {\n    this.blocks.push(block);\n    this.workingArea.appendChild(block.html);\n  }\n\n  /**\n   * Insert new Block at passed index\n   *\n   * @param {Number} index — index to insert Block\n   * @param {Block} block — Block to insert\n   * @param {Boolean} replace — it true, replace block on given index\n   */\n  insert(index, block, replace = false) {\n    if (!this.length) {\n      this.push(block);\n      return;\n    }\n\n    if (index > this.length) {\n      index = this.length;\n    }\n\n    if (replace) {\n      this.blocks[index].html.remove();\n    }\n\n    let deleteCount = replace ? 1 : 0;\n\n    this.blocks.splice(index, deleteCount, block);\n\n    if (index > 0) {\n      let previousBlock = this.blocks[index - 1];\n\n      previousBlock.html.insertAdjacentElement('afterend', block.html);\n    } else {\n      let nextBlock = this.blocks[index + 1];\n\n      if (nextBlock) {\n        nextBlock.html.insertAdjacentElement('beforebegin', block.html);\n      } else {\n        this.workingArea.appendChild(block.html);\n      }\n    }\n  }\n\n  /**\n   * Remove block\n   * @param {Number|null} index\n   */\n  remove(index) {\n    if (isNaN(index)) {\n      index = this.length - 1;\n    }\n\n    this.blocks[index].html.remove();\n    this.blocks.splice(index, 1);\n  }\n\n  /**\n   * Insert Block after passed target\n   *\n   * @todo decide if this method is necessary\n   *\n   * @param {Block} targetBlock — target after wich Block should be inserted\n   * @param {Block} newBlock — Block to insert\n   */\n  insertAfter(targetBlock, newBlock) {\n    let index = this.blocks.indexOf(targetBlock);\n\n    this.insert(index + 1, newBlock);\n  }\n\n  /**\n   * Get Block by index\n   *\n   * @param {Number} index — Block index\n   * @returns {Block}\n   */\n  get(index) {\n    return this.blocks[index];\n  }\n\n  /**\n   * Return index of passed Block\n   *\n   * @param {Block} block\n   * @returns {Number}\n   */\n  indexOf(block) {\n    return this.blocks.indexOf(block);\n  }\n\n  /**\n   * Get length of Block instances array\n   *\n   * @returns {Number}\n   */\n  get length() {\n    return this.blocks.length;\n  }\n\n  /**\n   * Get Block instances array\n   *\n   * @returns {Block[]}\n   */\n  get array() {\n    return this.blocks;\n  }\n\n  /**\n   * Get blocks html elements array\n   *\n   * @returns {HTMLElement[]}\n   */\n  get nodes() {\n    return _.array(this.workingArea.children);\n  }\n\n  /**\n   * Proxy trap to implement array-like setter\n   *\n   * @example\n   * blocks[0] = new Block(...)\n   *\n   * @param {Blocks} instance — Blocks instance\n   * @param {Number|String} index — block index\n   * @param {Block} block — Block to set\n   * @returns {Boolean}\n   */\n  static set(instance, index, block) {\n    if (isNaN(Number(index))) {\n      return false;\n    }\n\n    instance.insert(index, block);\n\n    return true;\n  }\n\n  /**\n   * Proxy trap to implement array-like getter\n   *\n   * @param {Blocks} instance — Blocks instance\n   * @param {Number|String} index — Block index\n   * @returns {Block|*}\n   */\n  static get(instance, index) {\n    if (isNaN(Number(index))) {\n      return instance[index];\n    }\n\n    return instance.get(index);\n  }\n}\n","/**\n * @class Caret\n * @classdesc Contains methods for working Caret\n *\n * Uses Range methods to manipulate with caret\n *\n * @module Caret\n *\n * @version 2.0.0\n */\n\nimport Selection from '../selection';\n\n/**\n * @typedef {Caret} Caret\n */\nexport default class Caret extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * Method gets Block instance and puts caret to the text node with offset\n   * There two ways that method applies caret position:\n   *   - first found text node: sets at the beginning, but you can pass an offset\n   *   - last found text node: sets at the end of the node. Also, you can customize the behaviour\n   *\n   * @param {Block} block - Block class\n   * @param {Number} offset - caret offset regarding to the text node\n   * @param {Boolean} atEnd - put caret at the end of the text node or not\n   *\n   * @returns {Boolean} - caret was set or not\n   */\n  setToBlock(block, offset = 0, atEnd = false) {\n    let element = block.pluginsContent;\n\n    /** If Element is INPUT */\n    if ($.isNativeInput(element)) {\n      element.focus();\n      return true;\n    }\n\n    let nodeToSet = $.getDeepestNode(element, atEnd);\n\n    if (atEnd || offset > nodeToSet.length) {\n      offset = nodeToSet.length;\n    }\n\n    /** if found deepest node is native input */\n    if ($.isNativeInput(nodeToSet)) {\n      nodeToSet.focus();\n      return true;\n    }\n\n    /**\n     * @todo try to fix via Promises or use querySelectorAll to not to use timeout\n     */\n    _.delay( () => {\n      this.set(nodeToSet, offset);\n    }, 20)();\n\n    this.Editor.BlockManager.currentNode = block.wrapper;\n    return true;\n  }\n\n  /**\n   * Creates Document Range and sets caret to the element with offset\n   * @param {Element} element - target node.\n   * @param {Number} offset - offset\n   */\n  set( element, offset = 0) {\n    let range     = document.createRange(),\n      selection = Selection.get();\n\n    range.setStart(element, offset);\n    range.setEnd(element, offset);\n\n    selection.removeAllRanges();\n    selection.addRange(range);\n  };\n\n  /**\n   * Set Caret to the last Block\n   * If last block is not empty, append another empty block\n   */\n  setToTheLastBlock() {\n    let lastBlock = this.Editor.BlockManager.lastBlock;\n\n    if (!lastBlock) return;\n\n    /**\n     * If last block is empty and it is an initialBlock, set to that.\n     * Otherwise, append new empty block and set to that\n     */\n    if (lastBlock.isEmpty) {\n      this.setToBlock(lastBlock);\n    } else {\n      this.Editor.BlockManager.insert(this.config.initialBlock);\n    }\n  }\n\n  /**\n   * Extract content fragment of current Block from Caret position to the end of the Block\n   */\n  extractFragmentFromCaretPosition() {\n    let selection = Selection.get();\n\n    if (selection.rangeCount) {\n      let selectRange = selection.getRangeAt(0),\n        blockElem = this.Editor.BlockManager.currentBlock.pluginsContent;\n\n      selectRange.deleteContents();\n\n      if (blockElem) {\n        let range = selectRange.cloneRange(true);\n\n        range.selectNodeContents(blockElem);\n        range.setStart(selectRange.endContainer, selectRange.endOffset);\n        return range.extractContents();\n      }\n    }\n  }\n\n  /**\n   * Get all first-level (first child of [contenteditabel]) siblings from passed node\n   * Then you can check it for emptiness\n   *\n   * @example\n   * <div contenteditable>\n   *     <p></p>                            |\n   *     <p></p>                            | left first-level siblings\n   *     <p></p>                            |\n   *     <blockquote><a><b>adaddad</b><a><blockquote>       <-- passed node for example <b>\n   *     <p></p>                            |\n   *     <p></p>                            | right first-level siblings\n   *     <p></p>                            |\n   * </div>\n   *\n   * @return {Element[]}\n   */\n  getHigherLevelSiblings(from, direction ) {\n    let current = from,\n      siblings = [];\n\n    /**\n     * Find passed node's firs-level parent (in example - blockquote)\n     */\n    while (current.parentNode && current.parentNode.contentEditable !== 'true') {\n      current = current.parentNode;\n    }\n\n    let sibling = direction === 'left' ? 'previousSibling' : 'nextSibling';\n\n    /**\n     * Find all left/right siblings\n     */\n    while (current[sibling]) {\n      current = current[sibling];\n      siblings.push(current);\n    }\n\n    return siblings;\n  }\n\n  /**\n   * Set's caret to the next Block\n   * Before moving caret, we should check if caret position is at the end of Plugins node\n   * Using {@link Dom#getDeepestNode} to get a last node and match with current selection\n   *\n   * @param {Boolean} force - force navigation even if caret is not at the end\n   *\n   * @return {Boolean}\n   */\n  navigateNext(force = false) {\n    let nextBlock = this.Editor.BlockManager.nextBlock;\n\n    if (!nextBlock) {\n      return false;\n    }\n\n    if (force) {\n      this.setToBlock(nextBlock);\n    }\n\n    let caretAtEnd = this.isAtEnd;\n\n    if (!caretAtEnd) {\n      return false;\n    }\n\n    return this.setToBlock( nextBlock );\n  }\n\n  /**\n   * Set's caret to the previous Block\n   * Before moving caret, we should check if caret position is start of the Plugins node\n   * Using {@link Dom#getDeepestNode} to get a last node and match with current selection\n   *\n   * @param {Boolean} force - force navigation even if caret is not at the start\n   *\n   * @return {Boolean}\n   */\n  navigatePrevious(force = false) {\n    let previousBlock = this.Editor.BlockManager.previousBlock;\n\n    if (!previousBlock) {\n      return false;\n    }\n\n    if (force) {\n      this.setToBlock( previousBlock, 0, true );\n      return true;\n    }\n\n    let caretAtStart = this.isAtStart;\n\n    if (!caretAtStart) {\n      return false;\n    }\n\n    return this.setToBlock( previousBlock, 0, true );\n  }\n\n  /**\n   * Get's deepest first node and checks if offset is zero\n   * @return {boolean}\n   */\n  get isAtStart() {\n    /**\n     * Don't handle ranges\n     */\n    if (!Selection.isCollapsed) {\n      return false;\n    }\n\n    let selection = Selection.get(),\n      anchorNode = selection.anchorNode,\n      firstNode = $.getDeepestNode(this.Editor.BlockManager.currentBlock.pluginsContent);\n\n    /**\n     * Workaround case when caret in the text like \" |Hello!\"\n     * selection.anchorOffset is 1, but real caret visible position is 0\n     * @type {number}\n     */\n    let firstLetterPosition = anchorNode.textContent.search(/\\S/);\n\n    if (firstLetterPosition === -1) { // empty text\n      firstLetterPosition = 0;\n    }\n\n    /**\n     * In case of\n     * <div contenteditable>\n     *     <p><b></b></p>   <-- first (and deepest) node is <b></b>\n     *     |adaddad         <-- anchor node\n     * </div>\n     */\n    if ($.isEmpty(firstNode)) {\n      let leftSiblings = this.getHigherLevelSiblings(anchorNode, 'left'),\n        nothingAtLeft = leftSiblings.every( node => $.isEmpty(node) );\n\n\n\n      if (nothingAtLeft && selection.anchorOffset === firstLetterPosition) {\n        return true;\n      }\n    }\n\n    return firstNode === null || anchorNode === firstNode && selection.anchorOffset === firstLetterPosition;\n  }\n\n  /**\n   * Get's deepest last node and checks if offset is last node text length\n   * @return {boolean}\n   */\n  get isAtEnd() {\n    /**\n     * Don't handle ranges\n     */\n    if (!Selection.isCollapsed) {\n      return false;\n    }\n\n    let selection = Selection.get(),\n      anchorNode = selection.anchorNode,\n      lastNode = $.getDeepestNode(this.Editor.BlockManager.currentBlock.pluginsContent, true);\n\n    /**\n     * In case of\n     * <div contenteditable>\n     *     adaddad|         <-- anchor node\n     *     <p><b></b></p>   <-- first (and deepest) node is <b></b>\n     * </div>\n     */\n    if ($.isEmpty(lastNode)) {\n      let leftSiblings = this.getHigherLevelSiblings(anchorNode, 'right'),\n        nothingAtRight = leftSiblings.every( node => $.isEmpty(node) );\n\n      if (nothingAtRight && selection.anchorOffset === anchorNode.textContent.length) {\n        return true;\n      }\n    }\n\n    return anchorNode === lastNode && selection.anchorOffset === lastNode.textContent.length;\n  }\n}\n","/**\n * @module eventDispatcher\n *\n * Has two important methods:\n *    - {Function} on - appends subscriber to the event. If event doesn't exist - creates new one\n *    - {Function} emit - fires all subscribers with data\n *    - {Function off - unsubsribes callback\n *\n * @version 1.0.0\n *\n * @typedef {Events} Events\n * @property {Object} subscribers - all subscribers grouped by event name\n */\nexport default class Events extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n    this.subscribers = {};\n  }\n\n  /**\n   * Subscribe any event on callback\n   *\n   * @param {String} eventName - event name\n   * @param {Function} callback - subscriber\n   */\n  on(eventName, callback) {\n    if (!(eventName in this.subscribers)) {\n      this.subscribers[eventName] = [];\n    }\n\n    // group by events\n    this.subscribers[eventName].push(callback);\n  }\n\n  /**\n   * Emit callbacks with passed data\n   *\n   * @param {String} eventName - event name\n   * @param {Object} data - subscribers get this data when they were fired\n   */\n  emit(eventName, data) {\n    if (!this.subscribers[eventName]) {\n      return;\n    }\n\n    this.subscribers[eventName].reduce(function (previousData, currentHandler) {\n      let newData = currentHandler(previousData);\n\n      return newData ? newData : previousData;\n    }, data);\n  }\n\n  /**\n   * Unsubsribe callback from event\n   *\n   * @param eventName\n   * @param callback\n   */\n  off(eventName, callback) {\n    for(let i = 0; i < this.subscribers[eventName].length; i++) {\n      if (this.subscribers[eventName][i] === callback) {\n        delete this.subscribers[eventName][i];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Destroyer\n   * clears subsribers list\n   */\n  destroy() {\n    this.subscribers = null;\n  }\n}\n","/**\n * @class Keyboard\n * @classdesc Сlass to handle the keydowns\n *\n * @author CodeX Team (team@ifmo.su)\n * @copyright CodeX Team 2017\n * @license The MIT License (MIT)\n * @version 1.0.0\n */\n\n/**\n * @typedef {Keyboard} Keyboard\n */\nexport default class Keyboard extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * Handler on Block for keyboard keys at keydown event\n   *\n   * @param {KeyboardEvent} event\n   */\n  blockKeydownsListener(event) {\n    switch(event.keyCode) {\n      case _.keyCodes.BACKSPACE:\n\n        _.log('Backspace key pressed');\n        this.backspacePressed(event);\n        break;\n\n      case _.keyCodes.ENTER:\n\n        _.log('Enter key pressed');\n        this.enterPressed(event);\n        break;\n\n      case _.keyCodes.DOWN:\n      case _.keyCodes.RIGHT:\n\n        _.log('Right/Down key pressed');\n        this.arrowRightAndDownPressed();\n        break;\n\n      case _.keyCodes.UP:\n      case _.keyCodes.LEFT:\n\n        _.log('Left/Up key pressed');\n        this.arrowLeftAndUpPressed();\n        break;\n\n      default:\n\n        break;\n    }\n  }\n\n  /**\n   * Handle pressing enter key\n   *\n   * @param {KeyboardEvent} event\n   */\n  enterPressed(event) {\n    let currentBlock = this.Editor.BlockManager.currentBlock,\n      toolsConfig = this.config.toolsConfig[currentBlock.name];\n\n    /**\n     * Don't handle Enter keydowns when Tool sets enableLineBreaks to true.\n     * Uses for Tools like <code> where line breaks should be handled by default behaviour.\n     */\n    if (toolsConfig && toolsConfig[this.Editor.Tools.apiSettings.IS_ENABLED_LINE_BREAKS]) {\n      return;\n    }\n\n    /**\n     * Allow to create linebreaks by Shift+Enter\n     */\n    if (event.shiftKey) {\n      return;\n    }\n\n\n    /**\n     * Split the Current Block into two blocks\n     */\n    this.Editor.BlockManager.split();\n\n    /**\n     * Renew local current node after split\n     */\n    let newCurrent = this.Editor.BlockManager.currentBlock;\n\n    this.Editor.Toolbar.move();\n    this.Editor.Toolbar.open();\n\n    if (this.Editor.Tools.isInitial(newCurrent.tool) && newCurrent.isEmpty) {\n      this.Editor.Toolbar.plusButton.show();\n    }\n\n    event.preventDefault();\n  }\n\n  /**\n   * Handle backspace keypress on block\n   * @param {KeyboardEvent} event - keydown\n   */\n  backspacePressed(event) {\n    const BM = this.Editor.BlockManager;\n\n    let isFirstBlock  = BM.currentBlockIndex === 0,\n      canMergeBlocks  = this.Editor.Caret.isAtStart && !isFirstBlock;\n\n    if (!canMergeBlocks) {\n      return;\n    }\n\n    // preventing browser default behaviour\n    event.preventDefault();\n\n    let targetBlock = BM.getBlockByIndex(BM.currentBlockIndex - 1),\n      blockToMerge = BM.currentBlock;\n\n    /**\n     * Blocks that can be merged:\n     * 1) with the same Name\n     * 2) Tool has 'merge' method\n     *\n     * other case will handle as usual ARROW LEFT behaviour\n     */\n    if (blockToMerge.name !== targetBlock.name || !targetBlock.mergeable) {\n      if (this.Editor.Caret.navigatePrevious()) {\n        this.Editor.Toolbar.close();\n      }\n    }\n\n    let setCaretToTheEnd = !targetBlock.isEmpty;\n\n    BM.mergeBlocks(targetBlock, blockToMerge)\n      .then( () => {\n        // @todo figure out without timeout\n        window.setTimeout( () => {\n          // set caret to the block without offset at the end\n          if (this.Editor.Caret.setToBlock(BM.currentBlock, 0, setCaretToTheEnd)) {\n            this.Editor.Toolbar.close();\n          }\n        }, 10);\n      });\n  }\n\n  /**\n   * Handle right and down keyboard keys\n   */\n  arrowRightAndDownPressed() {\n    if (!this.Editor.Caret.navigateNext()) {\n      return;\n    }\n\n    this.Editor.Toolbar.close();\n  }\n\n  /**\n   * Handle left and up keyboard keys\n   */\n  arrowLeftAndUpPressed() {\n    if (!this.Editor.Caret.navigatePrevious()) {\n      return;\n    }\n\n    this.Editor.Toolbar.close();\n  }\n}\n","/**\n * Codex Editor Listeners module\n *\n * @module Listeners\n *\n * Module-decorator for event listeners assignment\n *\n * @author Codex Team\n * @version 2.0.0\n */\n\n/**\n * @typedef {Listeners} Listeners\n * @property {Array} allListeners\n */\n\nexport default class Listeners extends Module {\n  /**\n   * @constructor\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n    this.allListeners = [];\n  }\n\n  /**\n   * Assigns event listener on element\n   *\n   * @param {Element} element - DOM element that needs to be listened\n   * @param {String} eventType - event type\n   * @param {Function} handler - method that will be fired on event\n   * @param {Boolean} useCapture - use event bubbling\n   */\n  on(element, eventType, handler, useCapture = false) {\n    let assignedEventData = {\n      element,\n      eventType,\n      handler,\n      useCapture\n    };\n\n    let alreadyExist = this.findOne(element, eventType, handler);\n\n    if (alreadyExist) return;\n\n    this.allListeners.push(assignedEventData);\n    element.addEventListener(eventType, handler, useCapture);\n  }\n\n  /**\n   * Removes event listener from element\n   *\n   * @param {Element} element - DOM element that we removing listener\n   * @param {String} eventType - event type\n   * @param {Function} handler - remove handler, if element listens several handlers on the same event type\n   * @param {Boolean} useCapture - use event bubbling\n   */\n  off(element, eventType, handler, useCapture = false) {\n    let existingListeners = this.findAll(element, eventType, handler);\n\n    for (let i = 0; i < existingListeners.length; i++) {\n      let index = this.allListeners.indexOf(existingListeners[i]);\n\n      if (index > 0) {\n        this.allListeners.splice(index, 1);\n      }\n    }\n\n    element.removeEventListener(eventType, handler, useCapture);\n  }\n\n  /**\n   * Search method: looks for listener by passed element\n   * @param {Element} element - searching element\n   * @returns {Array} listeners that found on element\n   */\n  findByElement(element) {\n    let listenersOnElement = [];\n\n    for (let i = 0; i < this.allListeners.length; i++) {\n      let listener = this.allListeners[i];\n\n      if (listener.element === element) {\n        listenersOnElement.push(listener);\n      }\n    }\n\n    return listenersOnElement;\n  }\n\n  /**\n   * Search method: looks for listener by passed event type\n   * @param {String} eventType\n   * @return {Array} listeners that found on element\n   */\n  findByType(eventType) {\n    let listenersWithType = [];\n\n    for (let i = 0; i < this.allListeners.length; i++) {\n      let listener = this.allListeners[i];\n\n      if (listener.type === eventType) {\n        listenersWithType.push(listener);\n      }\n    }\n\n    return listenersWithType;\n  }\n\n  /**\n   * Search method: looks for listener by passed handler\n   * @param {Function} handler\n   * @return {Array} listeners that found on element\n   */\n  findByHandler(handler) {\n    let listenersWithHandler = [];\n\n    for (let i = 0; i < this.allListeners.length; i++) {\n      let listener = this.allListeners[i];\n\n      if (listener.handler === handler) {\n        listenersWithHandler.push(listener);\n      }\n    }\n\n    return listenersWithHandler;\n  }\n\n  /**\n   * @param {Element} element\n   * @param {String} eventType\n   * @param {Function} handler\n   * @return {Element|null}\n   */\n  findOne(element, eventType, handler) {\n    let foundListeners = this.findAll(element, eventType, handler);\n\n    return foundListeners.length > 0 ? foundListeners[0] : null;\n  }\n\n  /**\n   * @param {Element} element\n   * @param {String} eventType\n   * @param {Function} handler\n   * @return {Array}\n   */\n  findAll(element, eventType, handler) {\n    let found,\n      foundByElements = element ? this.findByElement(element) : [];\n      // foundByEventType = eventType ? this.findByType(eventType) : [],\n      // foundByHandler = handler ? this.findByHandler(handler) : [];\n\n    if (element && eventType && handler) {\n      found = foundByElements.filter( event => event.eventType === eventType && event.handler === handler );\n    } else if (element && eventType) {\n      found = foundByElements.filter( event => event.eventType === eventType);\n    } else {\n      found = foundByElements;\n    }\n\n    return found;\n  }\n\n  /**\n   * Removes all listeners\n   */\n  removeAll() {\n    this.allListeners.map( (current) => {\n      current.element.removeEventListener(current.eventType, current.handler);\n    });\n\n    this.allListeners = [];\n  }\n}\n","/**\n * Codex Editor Renderer Module\n *\n * @module Renderer\n * @author CodeX Team\n *\n * @version 2.0.0\n */\nexport default class Renderer extends Module {\n  /**\n   * @constructor\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n  }\n\n  /**\n   * @typedef {Object} RendererItems\n   * @property {String} type - tool name\n   * @property {Object} data - tool data\n   */\n\n  /**\n   * @example\n   *\n   * items: [\n   * {\n   *    type : 'paragraph',\n   *    data : {\n   *        text : 'Hello from Codex!'\n   *    }\n   * },\n   * {\n   *   type : 'paragraph',\n   *   data : {\n   *        text : 'Leave feedback if you like it!'\n   *   }\n   * },\n   * ]\n   *\n   */\n\n  /**\n   * Make plugin blocks from array of plugin`s data\n   * @param {RendererItems[]} items\n   */\n  render(items) {\n    let chainData = [];\n\n    for (let i = 0; i < items.length; i++) {\n      chainData.push({\n        function: () => this.insertBlock(items[i])\n      });\n    }\n\n    return _.sequence(chainData);\n  }\n\n  /**\n   * Get plugin instance\n   * Add plugin instance to BlockManager\n   * Insert block to working zone\n   *\n   * @param {Object} item\n   * @returns {Promise.<T>}\n   * @private\n   */\n  insertBlock(item) {\n    let tool = item.type,\n      data = item.data,\n      settings = item.settings;\n\n    this.Editor.BlockManager.insert(tool, data, settings);\n\n    return Promise.resolve();\n  }\n}\n","/**\n * CodeX Sanitizer\n *\n * @module Sanitizer\n * Clears HTML from taint tags\n *\n * @version 2.0.0\n *\n * @example\n *  Module can be used within two ways:\n *     1) When you have an instance\n *         - this.Editor.Sanitizer.clean(yourTaintString);\n *     2) As static method\n *         - CodexEditor.Sanitizer.clean(yourTaintString, yourCustomConfiguration);\n *\n * {@link SanitizerConfig}\n */\n\n\n/**\n * @typedef {Object} SanitizerConfig\n * @property {Object} tags - define tags restrictions\n *\n * @example\n *\n * tags : {\n *     p: true,\n *     a: {\n *       href: true,\n *       rel: \"nofollow\",\n *       target: \"_blank\"\n *     }\n * }\n */\nexport default class Sanitizer extends Module {\n  /**\n   * Initializes Sanitizer module\n   * Sets default configuration if custom not exists\n   *\n   * @property {SanitizerConfig} this.defaultConfig\n   * @property {HTMLJanitor} this._sanitizerInstance - Sanitizer library\n   *\n   * @param {SanitizerConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    // default config\n    this.defaultConfig = null;\n    this._sanitizerInstance = null;\n\n    /** Custom configuration */\n    this.sanitizerConfig = config.settings ? config.settings.sanitizer : {};\n\n    /** HTML Janitor library */\n    this.sanitizerInstance = require('html-janitor');\n  }\n\n  /**\n   * If developer uses editor's API, then he can customize sanitize restrictions.\n   * Or, sanitizing config can be defined globally in editors initialization. That config will be used everywhere\n   * At least, if there is no config overrides, that API uses Default configuration\n   *\n   * @uses https://www.npmjs.com/package/html-janitor\n   *\n   * @param {HTMLJanitor} library - sanitizer extension\n   */\n  set sanitizerInstance(library) {\n    this._sanitizerInstance = new library(this.defaultConfig);\n  }\n\n  /**\n   * Sets sanitizer configuration. Uses default config if user didn't pass the restriction\n   * @param {SanitizerConfig} config\n   */\n  set sanitizerConfig(config) {\n    if (_.isEmpty(config)) {\n      this.defaultConfig = {\n        tags: {\n          p: {},\n          a: {\n            href: true,\n            target: '_blank',\n            rel: 'nofollow'\n          }\n        }\n      };\n    } else {\n      this.defaultConfig = config;\n    }\n  }\n\n  /**\n   * Cleans string from unwanted tags\n   * @param {String} taintString - HTML string\n   * @param {Object} customConfig - custom sanitizer configuration. Method uses default if param is empty\n   * @return {String} clean HTML\n   */\n  clean(taintString, customConfig = {}) {\n    if (_.isEmpty(customConfig)) {\n      return this._sanitizerInstance.clean(taintString);\n    } else {\n      return Sanitizer.clean(taintString, customConfig);\n    }\n  }\n\n  /**\n   * Cleans string from unwanted tags\n   * @static\n   *\n   * Method allows to use default config\n   *\n   * @param {String} taintString - taint string\n   * @param {SanitizerConfig} customConfig - allowed tags\n   *\n   * @return {String} clean HTML\n   */\n  static clean(taintString, customConfig) {\n    let newInstance = Sanitizer(customConfig);\n\n    return newInstance.clean(taintString);\n  }\n}\n","/**\n * Codex Editor Saver\n *\n * @module Saver\n * @author Codex Team\n * @version 2.0.0\n */\n\n/**\n * @typedef {Object} SavedData\n * @property {Date} time - saving proccess time\n * @property {Object} items - extracted data\n * @property {String} version - CodexEditor version\n */\n\n/**\n * @classdesc This method reduces all Blocks asyncronically and calls Block's save method to extract data\n *\n * @typedef {Saver} Saver\n * @property {Element} html - Editor HTML content\n * @property {String} json - Editor JSON output\n */\n\nexport default class Saver extends Module {\n  /**\n   * @constructor\n   * @param config\n   */\n  constructor({config}) {\n    super({config});\n\n    this.output = null;\n    this.blocksData = [];\n  }\n\n  /**\n   * Composes new chain of Promises to fire them alternatelly\n   * @return {SavedData}\n   */\n  save() {\n    let blocks = this.Editor.BlockManager.blocks,\n      chainData = [];\n\n    blocks.forEach((block) => {\n      chainData.push(block.data);\n    });\n\n    return Promise.all(chainData)\n      .then((allExtractedData) => this.makeOutput(allExtractedData))\n      .then((outputData) => {\n        return outputData;\n      });\n  }\n\n  /**\n   * Creates output object with saved data, time and version of editor\n   * @param {Object} allExtractedData\n   * @return {SavedData}\n   */\n  makeOutput(allExtractedData) {\n    let items = [],\n      totalTime = 0;\n\n    console.groupCollapsed('[CodexEditor saving]:');\n\n    allExtractedData.forEach((extraction) => {\n      /** Group process info */\n      console.log(`«${extraction.tool}» saving info`, extraction);\n      totalTime += extraction.time;\n      items.push(extraction.data);\n    });\n\n    console.log('Total', totalTime);\n    console.groupEnd();\n\n    return {\n      time    : +new Date(),\n      items   : items,\n      version : VERSION,\n    };\n  }\n}\n\n// module.exports = (function (saver) {\n//\n//     let editor = codex.editor;\n//\n//     /**\n//      * @public\n//      * Save blocks\n//      */\n//     saver.save = function () {\n//\n//         /** Save html content of redactor to memory */\n//         editor.state.html = editor.nodes.redactor.innerHTML;\n//\n//         /** Clean jsonOutput state */\n//         editor.state.jsonOutput = [];\n//\n//         return saveBlocks(editor.nodes.redactor.childNodes);\n//\n//     };\n//\n//     /**\n//      * @private\n//      * Save each block data\n//      *\n//      * @param blocks\n//      * @returns {Promise.<TResult>}\n//      */\n//     let saveBlocks = function (blocks) {\n//\n//         let data = [];\n//\n//         for(let index = 0; index < blocks.length; index++) {\n//\n//             data.push(getBlockData(blocks[index]));\n//\n//         }\n//\n//         return Promise.all(data)\n//             .then(makeOutput)\n//             .catch(editor.core.log);\n//\n//     };\n//\n//     /** Save and validate block data */\n//     let getBlockData = function (block) {\n//\n//         return saveBlockData(block)\n//             .then(validateBlockData)\n//             .catch(editor.core.log);\n//\n//     };\n//\n//     /**\n//     * @private\n//     * Call block`s plugin save method and return saved data\n//     *\n//     * @param block\n//     * @returns {Object}\n//     */\n//     let saveBlockData = function (block) {\n//\n//         let pluginName = block.dataset.tool;\n//\n//         /** Check for plugin existence */\n//         if (!editor.tools[pluginName]) {\n//\n//             editor.core.log(`Plugin «${pluginName}» not found`, 'error');\n//             return {data: null, pluginName: null};\n//\n//         }\n//\n//         /** Check for plugin having save method */\n//         if (typeof editor.tools[pluginName].save !== 'function') {\n//\n//             editor.core.log(`Plugin «${pluginName}» must have save method`, 'error');\n//             return {data: null, pluginName: null};\n//\n//         }\n//\n//         /** Result saver */\n//         let blockContent   = block.childNodes[0],\n//             pluginsContent = blockContent.childNodes[0],\n//             position = pluginsContent.dataset.inputPosition;\n//\n//         /** If plugin wasn't available then return data from cache */\n//         if ( editor.tools[pluginName].available === false ) {\n//\n//             return Promise.resolve({data: codex.editor.state.blocks.items[position].data, pluginName});\n//\n//         }\n//\n//         return Promise.resolve(pluginsContent)\n//             .then(editor.tools[pluginName].save)\n//             .then(data => Object({data, pluginName}));\n//\n//     };\n//\n//     /**\n//     * Call plugin`s validate method. Return false if validation failed\n//     *\n//     * @param data\n//     * @param pluginName\n//     * @returns {Object|Boolean}\n//     */\n//     let validateBlockData = function ({data, pluginName}) {\n//\n//         if (!data || !pluginName) {\n//\n//             return false;\n//\n//         }\n//\n//         if (editor.tools[pluginName].validate) {\n//\n//             let result = editor.tools[pluginName].validate(data);\n//\n//             /**\n//              * Do not allow invalid data\n//              */\n//             if (!result) {\n//\n//                 return false;\n//\n//             }\n//\n//         }\n//\n//         return {data, pluginName};\n//\n//\n//     };\n//\n//     /**\n//     * Compile article output\n//     *\n//     * @param savedData\n//     * @returns {{time: number, version, items: (*|Array)}}\n//     */\n//     let makeOutput = function (savedData) {\n//\n//         savedData = savedData.filter(blockData => blockData);\n//\n//         let items = savedData.map(blockData => Object({type: blockData.pluginName, data: blockData.data}));\n//\n//         editor.state.jsonOutput = items;\n//\n//         return {\n//             id: editor.state.blocks.id || null,\n//             time: +new Date(),\n//             version: editor.version,\n//             items\n//         };\n//\n//     };\n//\n//     return saver;\n//\n// })({});\n","/**\n * Block Settings\n *\n *   ____ Settings Panel ____\n *  | ...................... |\n *  | .   Tool Settings    . |\n *  | ...................... |\n *  | .  Default Settings  . |\n *  | ...................... |\n *  |________________________|\n */\nexport default class BlockSettings extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      wrapper: null,\n      toolSettings: null,\n      defaultSettings: null\n    };\n  }\n\n  /**\n   * Module Events\n   * @return {{opened: string, closed: string}}\n   */\n  get events() {\n    return {\n      opened: 'block-settings-opened',\n      closed: 'block-settings-closed',\n    };\n  }\n\n  /**\n   * Block Settings CSS\n   * @return {{wrapper, wrapperOpened, toolSettings, defaultSettings, button}}\n   */\n  static get CSS() {\n    return {\n      // Settings Panel\n      wrapper: 'ce-settings',\n      wrapperOpened: 'ce-settings--opened',\n      toolSettings: 'ce-settings__plugin-zone',\n      defaultSettings: 'ce-settings__default-zone',\n\n      button: 'ce-settings__button'\n    };\n  }\n\n  /**\n   * Panel with block settings with 2 sections:\n   *  - Tool's Settings\n   *  - Default Settings [Move, Remove, etc]\n   *\n   * @return {Element}\n   */\n  make() {\n    this.nodes.wrapper = $.make('div', BlockSettings.CSS.wrapper);\n\n    this.nodes.toolSettings = $.make('div', BlockSettings.CSS.toolSettings);\n    this.nodes.defaultSettings = $.make('div', BlockSettings.CSS.defaultSettings);\n\n    $.append(this.nodes.wrapper, [this.nodes.toolSettings, this.nodes.defaultSettings]);\n  }\n\n  /**\n   * Add Tool's settings\n   */\n  addToolSettings() {\n    if (typeof this.Editor.BlockManager.currentBlock.tool.makeSettings === 'function') {\n      $.append(this.nodes.toolSettings, this.Editor.BlockManager.currentBlock.tool.makeSettings());\n    }\n  }\n\n  /**\n   * Add default settings\n   */\n  addDefaultSettings() {\n    $.append(this.nodes.defaultSettings, this.Editor.BlockManager.currentBlock.renderTunes());\n  }\n\n  /**\n   * Is Block Settings opened or not\n   * @returns {boolean}\n   */\n  get opened() {\n    return this.nodes.wrapper.classList.contains(BlockSettings.CSS.wrapperOpened);\n  }\n\n  /**\n   * Open Block Settings pane\n   */\n  open() {\n    this.nodes.wrapper.classList.add(BlockSettings.CSS.wrapperOpened);\n\n    /**\n     * Fill Tool's settings\n     */\n    this.addToolSettings();\n\n    /**\n     * Add default settings that presents for all Blocks\n     */\n    this.addDefaultSettings();\n\n    /** Tell to subscribers that block settings is opened */\n    this.Editor.Events.emit(this.events.opened);\n  }\n\n  /**\n   * Close Block Settings pane\n   */\n  close() {\n    this.nodes.wrapper.classList.remove(BlockSettings.CSS.wrapperOpened);\n\n    /** Clear settings */\n    this.nodes.toolSettings.innerHTML = '';\n    this.nodes.defaultSettings.innerHTML = '';\n\n    /** Tell to subscribers that block settings is closed */\n    this.Editor.Events.emit(this.events.closed);\n  }\n}\n","import BoldInlineTool from '../inline-tools/inline-tool-bold';\nimport LinkInlineTool from '../inline-tools/inline-tool-link';\nimport Selection from '../selection';\nexport default class InlineToolbar extends Module {\n    /**\n     * @constructor\n     */\n    constructor({ config }) {\n        super({ config });\n        /**\n         * Inline Toolbar elements\n         */\n        this.nodes = {\n            wrapper: null,\n            buttons: null,\n            /**\n             * Zone below the buttons where Tools can create additional actions by 'renderActions()' method\n             * For example, input for the 'link' tool or textarea for the 'comment' tool\n             */\n            actions: null,\n        };\n        /**\n         * CSS styles\n         */\n        this.CSS = {\n            inlineToolbar: 'ce-inline-toolbar',\n            inlineToolbarShowed: 'ce-inline-toolbar--showed',\n            buttonsWrapper: 'ce-inline-toolbar__buttons',\n            actionsWrapper: 'ce-inline-toolbar__actions',\n        };\n        /**\n         * Margin above/below the Toolbar\n         */\n        this.toolbarVerticalMargin = 20;\n    }\n    /**\n     * Inline Toolbar Tools\n     * @todo Merge internal tools with external\n     */\n    get tools() {\n        if (!this.toolsInstances) {\n            this.toolsInstances = [\n                new BoldInlineTool(this.Editor.API.methods),\n                new LinkInlineTool(this.Editor.API.methods),\n            ];\n        }\n        return this.toolsInstances;\n    }\n    /**\n     * Making DOM\n     */\n    make() {\n        this.nodes.wrapper = $.make('div', this.CSS.inlineToolbar);\n        this.nodes.buttons = $.make('div', this.CSS.buttonsWrapper);\n        this.nodes.actions = $.make('div', this.CSS.actionsWrapper);\n        /**\n         * Append Inline Toolbar to the Editor\n         */\n        $.append(this.nodes.wrapper, [this.nodes.buttons, this.nodes.actions]);\n        $.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);\n        /**\n         * Append Inline Toolbar Tools\n         */\n        this.addTools();\n    }\n    /**\n     *\n     *\n     *  Moving / appearance\n     *  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n     *\n     */\n    /**\n     * Shows Inline Toolbar by keyup/mouseup\n     * @param {KeyboardEvent|MouseEvent} event\n     */\n    handleShowingEvent(event) {\n        if (!this.allowedToShow(event)) {\n            this.close();\n            return;\n        }\n        this.move();\n        this.open();\n        /** Check Tools state for selected fragment */\n        this.checkToolsState();\n    }\n    /**\n     * Move Toolbar to the selected text\n     */\n    move() {\n        const selectionRect = Selection.rect;\n        const wrapperOffset = this.Editor.UI.nodes.wrapper.getBoundingClientRect();\n        const newCoords = {\n            x: selectionRect.x - wrapperOffset.left,\n            y: selectionRect.y\n                + selectionRect.height\n                // + window.scrollY\n                - wrapperOffset.top\n                + this.toolbarVerticalMargin,\n        };\n        /**\n         * If we know selections width, place InlineToolbar to center\n         */\n        if (selectionRect.width) {\n            newCoords.x += Math.floor(selectionRect.width / 2);\n        }\n        this.nodes.wrapper.style.left = Math.floor(newCoords.x) + 'px';\n        this.nodes.wrapper.style.top = Math.floor(newCoords.y) + 'px';\n    }\n    /**\n     * Shows Inline Toolbar\n     */\n    open() {\n        this.nodes.wrapper.classList.add(this.CSS.inlineToolbarShowed);\n        this.tools.forEach((tool) => {\n            if (typeof tool.clear === 'function') {\n                tool.clear();\n            }\n        });\n    }\n    /**\n     * Hides Inline Toolbar\n     */\n    close() {\n        this.nodes.wrapper.classList.remove(this.CSS.inlineToolbarShowed);\n        this.tools.forEach((tool) => {\n            if (typeof tool.clear === 'function') {\n                tool.clear();\n            }\n        });\n    }\n    /**\n     * Need to show Inline Toolbar or not\n     * @param {KeyboardEvent|MouseEvent} event\n     */\n    allowedToShow(event) {\n        /**\n         * Tags conflicts with window.selection function.\n         * Ex. IMG tag returns null (Firefox) or Redactors wrapper (Chrome)\n         */\n        const tagsConflictsWithSelection = ['IMG', 'INPUT'];\n        if (event && tagsConflictsWithSelection.includes(event.target.tagName)) {\n            return false;\n        }\n        const currentSelection = Selection.get(), selectedText = Selection.text;\n        // old browsers\n        if (!currentSelection || !currentSelection.anchorNode) {\n            return false;\n        }\n        // empty selection\n        if (currentSelection.isCollapsed || selectedText.length < 1) {\n            return false;\n        }\n        // is enabled by current Block's Tool\n        const currentBlock = this.Editor.BlockManager.getBlock(currentSelection.anchorNode);\n        if (!currentBlock) {\n            return false;\n        }\n        const toolConfig = this.config.toolsConfig[currentBlock.name];\n        return toolConfig && toolConfig[this.Editor.Tools.apiSettings.IS_ENABLED_INLINE_TOOLBAR];\n    }\n    /**\n     *\n     *\n     *  Working with Tools\n     *  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n     *\n     */\n    /**\n     * Fill Inline Toolbar with Tools\n     */\n    addTools() {\n        this.tools.forEach((tool) => {\n            this.addTool(tool);\n        });\n    }\n    /**\n     * Add tool button and activate clicks\n     * @param {InlineTool} tool - Tool's instance\n     */\n    addTool(tool) {\n        const button = tool.render();\n        this.nodes.buttons.appendChild(button);\n        if (typeof tool.renderActions === 'function') {\n            const actions = tool.renderActions();\n            this.nodes.actions.appendChild(actions);\n        }\n        this.Editor.Listeners.on(button, 'click', () => {\n            this.toolClicked(tool);\n        });\n    }\n    /**\n     * Inline Tool button clicks\n     * @param {InlineTool} tool - Tool's instance\n     */\n    toolClicked(tool) {\n        const range = Selection.range;\n        tool.surround(range);\n        this.checkToolsState();\n    }\n    /**\n     * Check Tools` state by selection\n     */\n    checkToolsState() {\n        this.tools.forEach((tool) => {\n            tool.checkState(Selection.get());\n        });\n    }\n}\n","/**\n * @class Toolbox\n * @classdesc Holder for Tools\n *\n * @typedef {Toolbox} Toolbox\n * @property {Boolean} opened - opening state\n * @property {Object} nodes   - Toolbox nodes\n * @property {Object} CSS     - CSS class names\n *\n */\nexport default class Toolbox extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      toolbox: null,\n      buttons: []\n    };\n\n    /**\n     * Opening state\n     * @type {boolean}\n     */\n    this.opened = false;\n  }\n\n  /**\n   * CSS styles\n   * @return {{toolbox: string, toolboxButton: string, toolboxOpened: string}}\n   */\n  static get CSS() {\n    return  {\n      toolbox: 'ce-toolbox',\n      toolboxButton: 'ce-toolbox__button',\n      toolboxOpened: 'ce-toolbox--opened',\n    };\n  }\n\n  /**\n   * Makes the Toolbox\n   */\n  make() {\n    this.nodes.toolbox = $.make('div', Toolbox.CSS.toolbox);\n    $.append(this.Editor.Toolbar.nodes.content, this.nodes.toolbox);\n\n    this.addTools();\n  }\n\n  /**\n   * Iterates available tools and appends them to the Toolbox\n   */\n  addTools() {\n    let tools = this.Editor.Tools.toolsAvailable;\n\n    for (let toolName in tools) {\n      this.addTool(toolName, tools[toolName]);\n    }\n  }\n\n  /**\n   * Append Tool to the Toolbox\n   *\n   * @param {string} toolName  - tool name\n   * @param {Tool}  tool      - tool class\n   */\n  addTool(toolName, tool) {\n    const api = this.Editor.Tools.apiSettings;\n\n    if (tool[api.IS_DISPLAYED_IN_TOOLBOX] && !tool[api.TOOLBAR_ICON_CLASS]) {\n      _.log('Toolbar icon class name is missed. Tool %o skipped', 'warn', toolName);\n      return;\n    }\n\n    /**\n     * @todo Add checkup for the render method\n     */\n    // if (typeof tool.render !== 'function') {\n    //\n    //     _.log('render method missed. Tool %o skipped', 'warn', tool);\n    //     return;\n    //\n    // }\n\n    /**\n     * Skip tools that pass 'displayInToolbox=false'\n     */\n    if (!tool[api.IS_DISPLAYED_IN_TOOLBOX]) {\n      return;\n    }\n\n    let button = $.make('li', [Toolbox.CSS.toolboxButton, tool[api.TOOLBAR_ICON_CLASS]], {\n      title: toolName\n    });\n\n    /**\n     * Save tool's name in the button data-name\n     */\n    button.dataset.name = toolName;\n\n    $.append(this.nodes.toolbox, button);\n\n    this.nodes.toolbox.appendChild(button);\n    this.nodes.buttons.push(button);\n\n    /**\n     * @todo add event with module Listeners\n     */\n    // this.Editor.Listeners.add();\n    button.addEventListener('click', event => {\n      this.buttonClicked(event);\n    }, false);\n  }\n\n  /**\n   * Toolbox button click listener\n   * 1) if block is empty -> replace\n   * 2) if block is not empty -> add new block below\n   *\n   * @param {MouseEvent} event\n   */\n  buttonClicked(event) {\n    let toolButton = event.target,\n      toolName = toolButton.dataset.name,\n      tool = this.Editor.Tools.toolClasses[toolName];\n\n    /**\n     * @type {Block}\n     */\n    let currentBlock = this.Editor.BlockManager.currentBlock;\n\n    /**\n     * We do replace if:\n     * - block is empty\n     * - block is not irreplaceable\n     * @type {Array}\n     */\n    if (!tool[this.Editor.Tools.apiSettings.IS_IRREPLACEBLE_TOOL] && currentBlock.isEmpty) {\n      this.Editor.BlockManager.replace(toolName);\n    } else {\n      this.Editor.BlockManager.insert(toolName);\n    }\n\n    /**\n     * @todo set caret to the new block\n     */\n\n    // window.setTimeout(function () {\n\n    /** Set caret to current block */\n    // editor.caret.setToBlock(currentInputIndex);\n\n    // }, 10);\n\n    /**\n     * Move toolbar when node is changed\n     */\n    this.Editor.Toolbar.move();\n  }\n\n  /**\n   * Open Toolbox with Tools\n   */\n  open() {\n    this.nodes.toolbox.classList.add(Toolbox.CSS.toolboxOpened);\n    this.opened = true;\n  }\n\n  /**\n   * Close Toolbox\n   */\n  close() {\n    this.nodes.toolbox.classList.remove(Toolbox.CSS.toolboxOpened);\n    this.opened = false;\n  }\n\n  /**\n   * Close Toolbox\n   */\n  toggle() {\n    if (!this.opened) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n}\n","/**\n *\n * «Toolbar» is the node that moves up/down over current block\n *\n *  ______________________________________ Toolbar ____________________________________________\n * |                                                                                           |\n * |  ..................... Content ....................   ......... Block Actions ..........  |\n * |  .                                                .   .                                .  |\n * |  .                                                .   .        [Open Settings]         .  |\n * |  .  [Plus Button]  [Toolbox: {Tool1}, {Tool2}]    .   .                                .  |\n * |  .                                                .   .        [Settings Panel]        .  |\n * |  ..................................................   ..................................  |\n * |                                                                                           |\n * |___________________________________________________________________________________________|\n *\n *\n * Toolbox — its an Element contains tools buttons. Can be shown by Plus Button.\n *\n *  _______________ Toolbox _______________\n * |                                       |\n * | [Header] [Image] [List] [Quote] ...   |\n * |_______________________________________|\n *\n *\n * Settings Panel — is an Element with block settings:\n *\n *   ____ Settings Panel ____\n *  | ...................... |\n *  | .   Tool Settings    . |\n *  | ...................... |\n *  | .  Default Settings  . |\n *  | ...................... |\n *  |________________________|\n *\n *\n * @class\n * @classdesc Toolbar module\n *\n * @typedef {Toolbar} Toolbar\n * @property {Object} nodes\n * @property {Element} nodes.wrapper        - Toolbar main element\n * @property {Element} nodes.content        - Zone with Plus button and toolbox.\n * @property {Element} nodes.actions        - Zone with Block Settings and Remove Button\n * @property {Element} nodes.blockActionsButtons   - Zone with Block Buttons: [Settings]\n * @property {Element} nodes.plusButton     - Button that opens or closes Toolbox\n * @property {Element} nodes.toolbox        - Container for tools\n * @property {Element} nodes.settingsToggler - open/close Settings Panel button\n * @property {Element} nodes.settings          - Settings Panel\n * @property {Element} nodes.pluginSettings    - Plugin Settings section of Settings Panel\n * @property {Element} nodes.defaultSettings   - Default Settings section of Settings Panel\n */\nexport default class Toolbar extends Module {\n  /**\n   * @constructor\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      wrapper : null,\n      content : null,\n      actions : null,\n\n      // Content Zone\n      plusButton : null,\n\n      // Actions Zone\n      blockActionsButtons: null,\n      settingsToggler : null,\n    };\n  }\n\n  /**\n   * CSS styles\n   * @return {Object}\n   * @constructor\n   */\n  static get CSS() {\n    return {\n      toolbar: 'ce-toolbar',\n      content: 'ce-toolbar__content',\n      actions: 'ce-toolbar__actions',\n\n      toolbarOpened: 'ce-toolbar--opened',\n\n      // Content Zone\n      plusButton: 'ce-toolbar__plus',\n      plusButtonHidden: 'ce-toolbar__plus--hidden',\n\n      // Actions Zone\n      blockActionsButtons: 'ce-toolbar__actions-buttons',\n      settingsToggler: 'ce-toolbar__settings-btn',\n    };\n  }\n\n  /**\n   * Makes toolbar\n   */\n  make() {\n    this.nodes.wrapper = $.make('div', Toolbar.CSS.toolbar);\n\n    /**\n     * Make Content Zone and Actions Zone\n     */\n    ['content',  'actions'].forEach( el => {\n      this.nodes[el] = $.make('div', Toolbar.CSS[el]);\n      $.append(this.nodes.wrapper, this.nodes[el]);\n    });\n\n\n    /**\n     * Fill Content Zone:\n     *  - Plus Button\n     *  - Toolbox\n     */\n    this.nodes.plusButton = $.make('div', Toolbar.CSS.plusButton);\n    $.append(this.nodes.plusButton, $.svg('plus', 14, 14));\n    $.append(this.nodes.content, this.nodes.plusButton);\n    this.nodes.plusButton.addEventListener('click', event => this.plusButtonClicked(event), false);\n\n\n    /**\n     * Make a Toolbox\n     */\n    this.Editor.Toolbox.make();\n\n    /**\n     * Fill Actions Zone:\n     *  - Settings Toggler\n     *  - Remove Block Button\n     *  - Settings Panel\n     */\n    this.nodes.blockActionsButtons = $.make('div', Toolbar.CSS.blockActionsButtons);\n    this.nodes.settingsToggler  = $.make('span', Toolbar.CSS.settingsToggler);\n    const settingsIcon = $.svg('dots', 18, 4);\n\n    $.append(this.nodes.settingsToggler, settingsIcon);\n    $.append(this.nodes.blockActionsButtons, this.nodes.settingsToggler);\n    $.append(this.nodes.actions, this.nodes.blockActionsButtons);\n\n    /**\n     * Make and append Settings Panel\n     */\n    this.Editor.BlockSettings.make();\n    $.append(this.nodes.actions, this.Editor.BlockSettings.nodes.wrapper);\n\n    /**\n     * Append toolbar to the Editor\n     */\n    $.append(this.Editor.UI.nodes.wrapper, this.nodes.wrapper);\n\n    /**\n     * Bind events on the Toolbar elements\n     */\n    this.bindEvents();\n  }\n\n  /**\n   * Move Toolbar to the Current Block\n   * @param {Boolean} forceClose - force close Toolbar Settings and Toolbar\n   */\n  move(forceClose = true) {\n    if (forceClose) {\n      /** Close Toolbox when we move toolbar */\n      this.Editor.Toolbox.close();\n      this.Editor.BlockSettings.close();\n    }\n\n    let currentNode = this.Editor.BlockManager.currentNode;\n\n    /**\n     * If no one Block selected as a Current\n     */\n    if (!currentNode) {\n      return;\n    }\n\n    /**\n     * @todo Compute dynamically on prepare\n     * @type {number}\n     */\n    const defaultToolbarHeight = 49;\n    const defaultOffset = 34;\n\n    var newYCoordinate = currentNode.offsetTop - (defaultToolbarHeight / 2) + defaultOffset;\n\n    this.nodes.wrapper.style.transform = `translate3D(0, ${Math.floor(newYCoordinate)}px, 0)`;\n  }\n\n  /**\n   * Open Toolbar with Plus Button\n   */\n  open() {\n    this.nodes.wrapper.classList.add(Toolbar.CSS.toolbarOpened);\n  }\n\n  /**\n   * Close the Toolbar\n   */\n  close() {\n    this.nodes.wrapper.classList.remove(Toolbar.CSS.toolbarOpened);\n  }\n\n  /**\n   * Plus Button public methods\n   * @return {{hide: function(): void, show: function(): void}}\n   */\n  get plusButton() {\n    return {\n      hide: () => this.nodes.plusButton.classList.add(Toolbar.CSS.plusButtonHidden),\n      show: () => this.nodes.plusButton.classList.remove(Toolbar.CSS.plusButtonHidden)\n    };\n  }\n\n  /**\n   * Handler for Plus Button\n   * @param {MouseEvent} event\n   */\n  plusButtonClicked() {\n    this.Editor.Toolbox.toggle();\n  }\n\n  /**\n   * Bind events on the Toolbar Elements:\n   * - Block Settings\n   */\n  bindEvents() {\n    /**\n     * Settings toggler\n     */\n    this.Editor.Listeners.on(this.nodes.settingsToggler, 'click', (event) => {\n      this.settingsTogglerClicked(event);\n    });\n  }\n\n  /**\n   * Clicks on the Block Settings toggler\n   */\n  settingsTogglerClicked() {\n    if (this.Editor.BlockSettings.opened) {\n      this.Editor.BlockSettings.close();\n    } else {\n      this.Editor.BlockSettings.open();\n    }\n  }\n}\n","/**\n * @module Codex Editor Tools Submodule\n *\n * Creates Instances from Plugins and binds external config to the instances\n */\n\n/**\n * Each Tool must contain the following important objects:\n *\n * @typedef {Object} ToolConfig {@link docs/tools.md}\n * @property {String} iconClassname - this a icon in toolbar\n * @property {Boolean} displayInToolbox - will be displayed in toolbox. Default value is TRUE\n * @property {Boolean} enableLineBreaks - inserts new block or break lines. Default value is FALSE\n * @property {Boolean|String[]} inlineToolbar - Pass `true` to enable the Inline Toolbar with all Tools, all pass an array with specified Tools list |\n * @property render @todo add description\n * @property save @todo add description\n * @property settings @todo add description\n * @property validate - method that validates output data before saving\n */\n\n/**\n * @typedef {Function} Tool {@link docs/tools.md}\n * @property {Boolean}      displayInToolbox      - By default, tools won't be added in the Toolbox. Pass true to add.\n * @property {String}       iconClassName         - CSS class name for the Toolbox button\n * @property {Boolean}      irreplaceable         - Toolbox behaviour: replace or add new block below\n * @property render\n * @property save\n * @property settings\n * @property validate\n *\n * @todo update according to current API\n * @todo describe Tool in the {@link docs/tools.md}\n */\n\n/**\n * Class properties:\n *\n * @typedef {Tools} Tools\n * @property {Tools[]} toolsAvailable - available Tools\n * @property {Tools[]} toolsUnavailable - unavailable Tools\n * @property {Object} toolsClasses - all classes\n * @property {EditorConfig} config - Editor config\n */\nexport default class Tools extends Module {\n  /**\n   * Returns available Tools\n   * @return {Tool[]}\n   */\n  get available() {\n    return this.toolsAvailable;\n  }\n\n  /**\n   * Returns unavailable Tools\n   * @return {Tool[]}\n   */\n  get unavailable() {\n    return this.toolsUnavailable;\n  }\n\n  /**\n   * Constant for available Tools Settings\n   * @return {object}\n   */\n  get apiSettings() {\n    return {\n      TOOLBAR_ICON_CLASS: 'iconClassName',\n      IS_DISPLAYED_IN_TOOLBOX: 'displayInToolbox',\n      IS_ENABLED_LINE_BREAKS: 'enableLineBreaks',\n      IS_IRREPLACEBLE_TOOL: 'irreplaceable',\n      IS_ENABLED_INLINE_TOOLBAR: 'inlineToolbar',\n    };\n  }\n\n  /**\n   * Static getter for default Tool config fields\n   * @return {ToolConfig}\n   */\n  get defaultConfig() {\n    return {\n      [this.apiSettings.TOOLBAR_ICON_CLASS] : false,\n      [this.apiSettings.IS_DISPLAYED_IN_TOOLBOX] : false,\n      [this.apiSettings.IS_ENABLED_LINE_BREAKS] : false,\n      [this.apiSettings.IS_IRREPLACEBLE_TOOL] : false,\n      [this.apiSettings.IS_ENABLED_INLINE_TOOLBAR]: false,\n    };\n  }\n\n  /**\n   * @constructor\n   *\n   * @param {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    /**\n     * Map {name: Class, ...} where:\n     *  name — block type name in JSON. Got from EditorConfig.tools keys\n     * @type {Object}\n     */\n    this.toolClasses = {};\n\n    /**\n     * Available tools list\n     * {name: Class, ...}\n     * @type {Object}\n     */\n    this.toolsAvailable = {};\n\n    /**\n     * Tools that rejected a prepare method\n     * {name: Class, ... }\n     * @type {Object}\n     */\n    this.toolsUnavailable = {};\n  }\n\n  /**\n   * Creates instances via passed or default configuration\n   * @return {Promise}\n   */\n  prepare() {\n    if (!this.config.hasOwnProperty('tools')) {\n      return Promise.reject(\"Can't start without tools\");\n    }\n\n    for(let toolName in this.config.tools) {\n      this.toolClasses[toolName] = this.config.tools[toolName];\n    }\n\n    /**\n     * getting classes that has prepare method\n     */\n    let sequenceData = this.getListOfPrepareFunctions();\n\n    /**\n     * if sequence data contains nothing then resolve current chain and run other module prepare\n     */\n    if (sequenceData.length === 0) {\n      return Promise.resolve();\n    }\n\n    /**\n     * to see how it works {@link Util#sequence}\n     */\n    return _.sequence(sequenceData, (data) => {\n      this.success(data);\n    }, (data) => {\n      this.fallback(data);\n    });\n  }\n\n  /**\n   * Binds prepare function of plugins with user or default config\n   * @return {Array} list of functions that needs to be fired sequentially\n   */\n  getListOfPrepareFunctions() {\n    let toolPreparationList = [];\n\n    for(let toolName in this.toolClasses) {\n      let toolClass = this.toolClasses[toolName];\n\n      if (typeof toolClass.prepare === 'function') {\n        toolPreparationList.push({\n          function : toolClass.prepare,\n          data : {\n            toolName\n          }\n        });\n      } else {\n        /**\n         * If Tool hasn't a prepare method, mark it as available\n         */\n        this.toolsAvailable[toolName] = toolClass;\n      }\n    }\n\n    return toolPreparationList;\n  }\n\n  /**\n   * @param {ChainData.data} data - append tool to available list\n   */\n  success(data) {\n    this.toolsAvailable[data.toolName] = this.toolClasses[data.toolName];\n  }\n\n  /**\n   * @param {ChainData.data} data - append tool to unavailable list\n   */\n  fallback(data) {\n    this.toolsUnavailable[data.toolName] = this.toolClasses[data.toolName];\n  }\n\n  /**\n   * Return tool`a instance\n   *\n   * @param {String} tool — tool name\n   * @param {Object} data — initial data\n   *\n   * @todo throw exceptions if tool doesnt exist\n   *\n   */\n  construct(tool, data) {\n    let plugin = this.toolClasses[tool],\n      config = this.config.toolsConfig[tool];\n\n    let instance = new plugin(data, config || {});\n\n    return instance;\n  }\n\n  /**\n   * Check if passed Tool is an instance of Initial Block Tool\n   * @param {Tool} tool - Tool to check\n   * @return {Boolean}\n   */\n  isInitial(tool) {\n    return tool instanceof this.available[this.config.initialBlock];\n  }\n}\n","/**\n * Module UI\n *\n * @type {UI}\n */\n\n/**\n * Prebuilded sprite of SVG icons\n */\nimport sprite from '../../../build/sprite.svg';\n\n/**\n * @class\n *\n * @classdesc Makes CodeX Editor UI:\n *                <codex-editor>\n *                    <ce-redactor />\n *                    <ce-toolbar />\n *                    <ce-inline-toolbar />\n *                </codex-editor>\n *\n * @typedef {UI} UI\n * @property {EditorConfig} config   - editor configuration {@link CodexEditor#configuration}\n * @property {Object} Editor         - available editor modules {@link CodexEditor#moduleInstances}\n * @property {Object} nodes          -\n * @property {Element} nodes.holder  - element where we need to append redactor\n * @property {Element} nodes.wrapper  - <codex-editor>\n * @property {Element} nodes.redactor - <ce-redactor>\n */\nexport default class UI extends Module {\n  /**\n   * @constructor\n   *\n   * @param  {EditorConfig} config\n   */\n  constructor({config}) {\n    super({config});\n\n    this.nodes = {\n      holder: null,\n      wrapper: null,\n      redactor: null\n    };\n  }\n\n  /**\n   * Making main interface\n   */\n  prepare() {\n    return this.make()\n      /**\n       * Append SVG sprite\n       */\n      .then(() => this.appendSVGSprite())\n      /**\n       * Make toolbar\n       */\n      .then(() => this.Editor.Toolbar.make())\n      /**\n       * Make the Inline toolbar\n       */\n      .then(() => this.Editor.InlineToolbar.make())\n      /**\n       * Load and append CSS\n       */\n      .then(() => this.loadStyles())\n      /**\n       * Bind events for the UI elements\n       */\n      .then(() => this.bindEvents())\n\n    /** Make container for inline toolbar */\n    // .then(makeInlineToolbar_)\n\n    /** Add inline toolbar tools */\n    // .then(addInlineToolbarTools_)\n\n    /** Draw wrapper for notifications */\n    // .then(makeNotificationHolder_)\n\n    /** Add eventlisteners to redactor elements */\n    // .then(bindEvents_)\n\n      .catch(e => {\n        console.error(e);\n\n        // editor.core.log(\"Can't draw editor interface\");\n      });\n  }\n\n  /**\n     * CodeX Editor UI CSS class names\n     * @return {{editorWrapper: string, editorZone: string, block: string}}\n     */\n  get CSS() {\n    return {\n      editorWrapper : 'codex-editor',\n      editorZone    : 'codex-editor__redactor',\n    };\n  }\n\n  /**\n     * Makes CodeX Editor interface\n     * @return {Promise<any>}\n     */\n  make() {\n    return new Promise( (resolve, reject) => {\n      /**\n       * Element where we need to append CodeX Editor\n       * @type {Element}\n       */\n      this.nodes.holder = document.getElementById(this.config.holderId);\n\n      if (!this.nodes.holder) {\n        reject(Error(\"Holder wasn't found by ID: #\" + this.config.holderId));\n        return;\n      }\n\n      /**\n       * Create and save main UI elements\n       */\n      this.nodes.wrapper  = $.make('div', this.CSS.editorWrapper);\n      this.nodes.redactor = $.make('div', this.CSS.editorZone);\n\n      this.nodes.wrapper.appendChild(this.nodes.redactor);\n      this.nodes.holder.appendChild(this.nodes.wrapper);\n\n      resolve();\n    });\n  }\n\n  /**\n   * Appends CSS\n   */\n  loadStyles() {\n    /**\n     * Load CSS\n     */\n    let styles = require('../../styles/main.css');\n\n    /**\n     * Make tag\n     */\n    let tag = $.make('style', null, {\n      textContent: styles.toString()\n    });\n\n    /**\n     * Append styles\n     */\n    $.append(document.head, tag);\n  }\n\n  /**\n   * Bind events on the CodeX Editor interface\n   */\n  bindEvents() {\n    /**\n     * @todo bind events with the Listeners module\n     */\n    this.Editor.Listeners.on(this.nodes.redactor, 'click', event => this.redactorClicked(event), false );\n  }\n\n  /**\n   * All clicks on the redactor zone\n   *\n   * @param {MouseEvent} event\n   *\n   * @description\n   * 1. Save clicked Block as a current {@link BlockManager#currentNode}\n   *      it uses for the following:\n   *      - add CSS modifier for the selected Block\n   *      - on Enter press, we make a new Block under that\n   *\n   * 2. Move and show the Toolbar\n   *\n   * 3. Set a Caret\n   *\n   * 4. By clicks on the Editor's bottom zone:\n   *      - if last Block is empty, set a Caret to this\n   *      - otherwise, add a new empty Block and set a Caret to that\n   *\n   * 5. Hide the Inline Toolbar\n   *\n   * @see selectClickedBlock\n   *\n   */\n  redactorClicked(event) {\n    let clickedNode = event.target;\n\n    /**\n     * Select clicked Block as Current\n     */\n    try {\n      this.Editor.BlockManager.setCurrentBlockByChildNode(clickedNode);\n    } catch (e) {\n      /**\n       * If clicked outside first-level Blocks, set Caret to the last empty Block\n       */\n      this.Editor.Caret.setToTheLastBlock();\n    }\n\n\n    /**\n     * Close Inline Toolbar when nothing selected\n     */\n    this.Editor.InlineToolbar.handleShowingEvent(event);\n\n    /**\n         *\n\n        /** Update current input index in memory when caret focused into existed input */\n    // if (event.target.contentEditable == 'true') {\n    //\n    //     editor.caret.saveCurrentInputIndex();\n    //\n    // }\n\n    // if (editor.content.currentNode === null) {\n    //\n    //     /**\n    //      * If inputs in redactor does not exits, then we put input index 0 not -1\n    //      */\n    //     var indexOfLastInput = editor.state.inputs.length > 0 ? editor.state.inputs.length - 1 : 0;\n    //\n    //     /** If we have any inputs */\n    //     if (editor.state.inputs.length) {\n    //\n    //         /** getting firstlevel parent of input */\n    //         firstLevelBlock = editor.content.getFirstLevelBlock(editor.state.inputs[indexOfLastInput]);\n    //\n    //     }\n    //\n    //     /** If input is empty, then we set caret to the last input */\n    //     if (editor.state.inputs.length && editor.state.inputs[indexOfLastInput].textContent === '' && firstLevelBlock.dataset.tool == editor.settings.initialBlockPlugin) {\n    //\n    //         editor.caret.setToBlock(indexOfLastInput);\n    //\n    //     } else {\n    //\n    //         /** Create new input when caret clicked in redactors area */\n    //         var NEW_BLOCK_TYPE = editor.settings.initialBlockPlugin;\n    //\n    //         editor.content.insertBlock({\n    //             type  : NEW_BLOCK_TYPE,\n    //             block : editor.tools[NEW_BLOCK_TYPE].render()\n    //         });\n    //\n    //         /** If there is no inputs except inserted */\n    //         if (editor.state.inputs.length === 1) {\n    //\n    //             editor.caret.setToBlock(indexOfLastInput);\n    //\n    //         } else {\n    //\n    //             /** Set caret to this appended input */\n    //             editor.caret.setToNextBlock(indexOfLastInput);\n    //\n    //         }\n    //\n    //     }\n    //\n    // } else {\n    //\n    //     /** Close all panels */\n    //     editor.toolbar.settings.close();\n    //     editor.toolbar.toolbox.close();\n    //\n    // }\n    //\n    /**\n     * Move toolbar and open\n     */\n    this.Editor.Toolbar.move();\n    this.Editor.Toolbar.open();\n    //\n    // var inputIsEmpty = !editor.content.currentNode.textContent.trim(),\n    //     currentNodeType = editor.content.currentNode.dataset.tool,\n    //     isInitialType = currentNodeType == editor.settings.initialBlockPlugin;\n    //\n    //\n\n    /**\n     * Hide the Plus Button\n     * */\n    this.Editor.Toolbar.plusButton.hide();\n\n    /**\n     * Show the Plus Button if:\n     * - Block is an initial-block (Text)\n     * - Block is empty\n     */\n    let isInitialBlock = this.Editor.Tools.isInitial(this.Editor.BlockManager.currentBlock.tool),\n      isEmptyBlock = this.Editor.BlockManager.currentBlock.isEmpty;\n\n    if (isInitialBlock && isEmptyBlock) {\n      this.Editor.Toolbar.plusButton.show();\n    }\n  }\n\n  /**\n   * Append prebuilded sprite with SVG icons\n   */\n  appendSVGSprite() {\n    let spriteHolder = $.make('div');\n\n    spriteHolder.innerHTML = sprite;\n\n    $.append(this.nodes.wrapper, spriteHolder);\n  }\n}\n\n// /**\n//  * Codex Editor UI module\n//  *\n//  * @author Codex Team\n//  * @version 1.2.0\n//  */\n//\n// module.exports = (function (ui) {\n//\n//     let editor = codex.editor;\n//\n//     /**\n//      * Basic editor classnames\n//      */\n//     ui.prepare = function () {\n//\n\n//\n//     };\n//\n//     /** Draw notifications holder */\n//     var makeNotificationHolder_ = function () {\n//\n//         /** Append block with notifications to the document */\n//         editor.nodes.notifications = editor.notifications.createHolder();\n//\n//     };\n//\n//\n//     var addInlineToolbarTools_ = function () {\n//\n//         var tools = {\n//\n//             bold: {\n//                 icon    : 'ce-icon-bold',\n//                 command : 'bold'\n//             },\n//\n//             italic: {\n//                 icon    : 'ce-icon-italic',\n//                 command : 'italic'\n//             },\n//\n//             link: {\n//                 icon    : 'ce-icon-link',\n//                 command : 'createLink'\n//             }\n//         };\n//\n//         var toolButton,\n//             tool;\n//\n//         for(var name in tools) {\n//\n//             tool = tools[name];\n//\n//             toolButton = editor.draw.toolbarButtonInline(name, tool.icon);\n//\n//             editor.nodes.inlineToolbar.buttons.appendChild(toolButton);\n//             /**\n//              * Add callbacks to this buttons\n//              */\n//             editor.ui.setInlineToolbarButtonBehaviour(toolButton, tool.command);\n//\n//         }\n//\n//     };\n//\n//     /**\n//      * @private\n//      * Bind editor UI events\n//      */\n//     var bindEvents_ = function () {\n//\n//         editor.core.log('ui.bindEvents fired', 'info');\n//\n//         // window.addEventListener('error', function (errorMsg, url, lineNumber) {\n//         //     editor.notifications.errorThrown(errorMsg, event);\n//         // }, false );\n//\n//         /** All keydowns on Document */\n//         editor.listeners.add(document, 'keydown', editor.callback.globalKeydown, false);\n//\n//         /** All keydowns on Redactor zone */\n//         editor.listeners.add(editor.nodes.redactor, 'keydown', editor.callback.redactorKeyDown, false);\n//\n//         /** All keydowns on Document */\n//         editor.listeners.add(document, 'keyup', editor.callback.globalKeyup, false );\n//\n//         /**\n//          * Mouse click to radactor\n//          */\n//         editor.listeners.add(editor.nodes.redactor, 'click', editor.callback.redactorClicked, false );\n//\n//         /**\n//          * Clicks to the Plus button\n//          */\n//         editor.listeners.add(editor.nodes.plusButton, 'click', editor.callback.plusButtonClicked, false);\n//\n//         /**\n//          * Clicks to SETTINGS button in toolbar\n//          */\n//         editor.listeners.add(editor.nodes.showSettingsButton, 'click', editor.callback.showSettingsButtonClicked, false );\n//\n//         /** Bind click listeners on toolbar buttons */\n//         for (var button in editor.nodes.toolbarButtons) {\n//\n//             editor.listeners.add(editor.nodes.toolbarButtons[button], 'click', editor.callback.toolbarButtonClicked, false);\n//\n//         }\n//\n//     };\n//\n//     ui.addBlockHandlers = function (block) {\n//\n//         if (!block) return;\n//\n//         /**\n//          * Block keydowns\n//          */\n//         editor.listeners.add(block, 'keydown', editor.callback.blockKeydown, false);\n//\n//         /**\n//          * Pasting content from another source\n//          * We have two type of sanitization\n//          * First - uses deep-first search algorithm to get sub nodes,\n//          * sanitizes whole Block_content and replaces cleared nodes\n//          * This method is deprecated\n//          * Method is used in editor.callback.blockPaste(event)\n//          *\n//          * Secont - uses Mutation observer.\n//          * Observer \"observe\" DOM changes and send changings to callback.\n//          * Callback gets changed node, not whole Block_content.\n//          * Inserted or changed node, which we've gotten have been cleared and replaced with diry node\n//          *\n//          * Method is used in editor.callback.blockPasteViaSanitize(event)\n//          *\n//          * @uses html-janitor\n//          * @example editor.callback.blockPasteViaSanitize(event), the second method.\n//          *\n//          */\n//         editor.listeners.add(block, 'paste', editor.paste.blockPasteCallback, false);\n//\n//         /**\n//          * Show inline toolbar for selected text\n//          */\n//         editor.listeners.add(block, 'mouseup', editor.toolbar.inline.show, false);\n//         editor.listeners.add(block, 'keyup', editor.toolbar.inline.show, false);\n//\n//     };\n//\n//     /** getting all contenteditable elements */\n//     ui.saveInputs = function () {\n//\n//         var redactor = editor.nodes.redactor;\n//\n//         editor.state.inputs = [];\n//\n//         /** Save all inputs in global variable state */\n//         var inputs = redactor.querySelectorAll('[contenteditable], input, textarea');\n//\n//         Array.prototype.map.call(inputs, function (current) {\n//\n//             if (!current.type || current.type == 'text' || current.type == 'textarea') {\n//\n//                 editor.state.inputs.push(current);\n//\n//             }\n//\n//         });\n//\n//     };\n//\n//     /**\n//      * Adds first initial block on empty redactor\n//      */\n//     ui.addInitialBlock = function () {\n//\n//         var initialBlockType = editor.settings.initialBlockPlugin,\n//             initialBlock;\n//\n//         if ( !editor.tools[initialBlockType] ) {\n//\n//             editor.core.log('Plugin %o was not implemented and can\\'t be used as initial block', 'warn', initialBlockType);\n//             return;\n//\n//         }\n//\n//         initialBlock = editor.tools[initialBlockType].render();\n//\n//         initialBlock.setAttribute('data-placeholder', editor.settings.placeholder);\n//\n//         editor.content.insertBlock({\n//             type  : initialBlockType,\n//             block : initialBlock\n//         });\n//\n//         editor.content.workingNodeChanged(initialBlock);\n//\n//     };\n//\n//     ui.setInlineToolbarButtonBehaviour = function (button, type) {\n//\n//         editor.listeners.add(button, 'mousedown', function (event) {\n//\n//             editor.toolbar.inline.toolClicked(event, type);\n//\n//         }, false);\n//\n//     };\n//\n//     return ui;\n//\n// })({});\n","/**\n * Element.closest()\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n */\nif (!Element.prototype.matches)\n  Element.prototype.matches = Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n\nif (!Element.prototype.closest)\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    if (!document.documentElement.contains(el)) return null;\n    do {\n      if (el.matches(s)) return el;\n      el = el.parentElement || el.parentNode;\n    } while (el !== null);\n    return null;\n  };\n","/**\n * Working with selection\n * @typedef {Selection} Selection\n */\nexport default class Selection {\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.instance = null;\n    this.selection = null;\n\n    /**\n     * This property can store Selection's range for restoring later\n     * @type {Range|null}\n     */\n    this.savedSelectionRange = null;\n  }\n\n  /**\n   * Returns window Selection\n   * {@link https://developer.mozilla.org/ru/docs/Web/API/Window/getSelection}\n   * @return {Selection}\n   */\n  static get() {\n    return window.getSelection();\n  }\n\n  /**\n   * Returns selected anchor\n   * {@link https://developer.mozilla.org/ru/docs/Web/API/Selection/anchorNode}\n   * @return {Node|null}\n   */\n  static get anchorNode() {\n    const selection = window.getSelection();\n\n    return selection ? selection.anchorNode : null;\n  }\n\n  /**\n   * Returns selection offset according to the anchor node\n   * {@link https://developer.mozilla.org/ru/docs/Web/API/Selection/anchorOffset}\n   * @return {Number|null}\n   */\n  static get anchorOffset() {\n    const selection = window.getSelection();\n\n    return selection ? selection.anchorOffset : null;\n  }\n\n  /**\n   * Is current selection range collapsed\n   * @return {boolean|null}\n   */\n  static get isCollapsed() {\n    const selection = window.getSelection();\n\n    return selection ? selection.isCollapsed : null;\n  }\n\n  /**\n   * Return first range\n   * @return {Range|null}\n   */\n  static get range() {\n    const selection = window.getSelection();\n\n    return selection && selection.rangeCount ? selection.getRangeAt(0) : null;\n  }\n\n  /**\n   * Calculates position and size of selected text\n   * @return {{x, y, width, height, top?, left?, bottom?, right?}}\n   */\n  static get rect() {\n    let sel = document.selection, range;\n    let rect = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    };\n\n    if (sel && sel.type !== 'Control') {\n      range = sel.createRange();\n      rect.x = range.boundingLeft;\n      rect.y = range.boundingTop;\n      rect.width = range.boundingWidth;\n      rect.height = range.boundingHeight;\n\n      return rect;\n    }\n\n    if (!window.getSelection) {\n      _.log('Method window.getSelection is not supported', 'warn');\n      return rect;\n    }\n\n    sel = window.getSelection();\n\n    if (!sel.rangeCount) {\n      _.log('Method Selection.rangeCount() is not supported', 'warn');\n      return rect;\n    }\n\n    range = sel.getRangeAt(0).cloneRange();\n\n    if (range.getBoundingClientRect) {\n      rect = range.getBoundingClientRect();\n    }\n    // Fall back to inserting a temporary element\n    if (rect.x === 0 && rect.y === 0) {\n      let span = document.createElement('span');\n\n      if (span.getBoundingClientRect) {\n        // Ensure span has dimensions and position by\n        // adding a zero-width space character\n        span.appendChild( document.createTextNode('\\u200b') );\n        range.insertNode(span);\n        rect = span.getBoundingClientRect();\n\n        let spanParent = span.parentNode;\n\n        spanParent.removeChild(span);\n\n        // Glue any broken text nodes back together\n        spanParent.normalize();\n      }\n    }\n\n    return rect;\n  }\n\n  /**\n   * Returns selected text as String\n   * @returns {string}\n   */\n  static get text() {\n    return window.getSelection ? window.getSelection().toString() : '';\n  };\n\n  /**\n   * Save Selection's range\n   */\n  save() {\n    this.savedSelectionRange = Selection.range;\n  }\n\n  /**\n   * Restore saved Selection's range\n   */\n  restore() {\n    if (!this.savedSelectionRange) {\n      return;\n    }\n\n    const sel = window.getSelection();\n\n    sel.removeAllRanges();\n    sel.addRange(this.savedSelectionRange);\n  }\n\n  /**\n   * Clears saved selection\n   */\n  clearSaved() {\n    this.savedSelectionRange = null;\n  }\n\n  /**\n   * Looks ahead to find passed tag from current selection\n   * @param  {String} tagName    - tag to found\n   * @param  {String} className  - tag's class name\n   * @return {Node|null}\n   */\n  findParentTag(tagName, className) {\n    let selection = window.getSelection(),\n      parentTag,\n      searchDepth = 10; // count of tags that can be included in <a>. For better performance.\n\n    if (!selection || !selection.anchorNode) {\n      return null;\n    }\n\n    parentTag = selection.anchorNode.parentNode;\n\n    while (searchDepth > 0 && parentTag.parentNode) {\n      if (parentTag.tagName === tagName) {\n        /**\n         * Optional additional check for class-name matching\n         */\n        if (className && !parentTag.classList.contains(className)) {\n          return null;\n        }\n\n        return parentTag;\n      }\n\n      parentTag = parentTag.parentNode;\n      searchDepth--;\n    }\n    return null;\n  }\n\n  /**\n   * Expands selection range to the passed parent node\n   * @param {Element} node\n   */\n  expandToTag(node) {\n    let selection = window.getSelection();\n\n    selection.removeAllRanges();\n    let range = document.createRange();\n\n    range.selectNodeContents(node);\n    selection.addRange(range);\n  }\n}\n","/**\n * Codex Editor Util\n */\nexport default class Util {\n  /**\n   * Custom logger\n   *\n   * @param {string} msg  - message\n   * @param {string} type - logging type 'log'|'warn'|'error'|'info'\n   * @param {*} args      - argument to log with a message\n   */\n  static log(msg, type, args) {\n    type = type || 'log';\n\n    if (!args) {\n      args  = msg || 'undefined';\n      msg  = '[codex-editor]:      %o';\n    } else {\n      msg  = '[codex-editor]:      ' + msg;\n    }\n\n    try{\n      if ( 'console' in window && window.console[ type ] ) {\n        if ( args ) window.console[ type ]( msg, args );\n        else window.console[ type ]( msg );\n      }\n    } catch(e) {\n      // do nothing\n    }\n  }\n\n  /**\n   * Returns basic keycodes as constants\n   * @return {{}}\n   */\n  static get keyCodes() {\n    return {\n      BACKSPACE: 8,\n      TAB: 9,\n      ENTER: 13,\n      SHIFT: 16,\n      CTRL: 17,\n      ALT: 18,\n      ESC: 27,\n      SPACE: 32,\n      LEFT: 37,\n      UP: 38,\n      DOWN: 40,\n      RIGHT: 39,\n      DELETE: 46,\n      META: 91\n    };\n  }\n\n  /**\n   * @typedef {Object} ChainData\n   * @property {Object} data - data that will be passed to the success or fallback\n   * @property {Function} function - function's that must be called asynchronically\n   */\n\n  /**\n   * Fires a promise sequence asyncronically\n   *\n   * @param {Object[]} chains - list or ChainData's\n   * @param {Function} success - success callback\n   * @param {Function} fallback - callback that fires in case of errors\n   *\n   * @return {Promise}\n   */\n  static sequence(chains, success = () => {}, fallback = () => {}) {\n    return new Promise(function (resolve) {\n      /**\n       * pluck each element from queue\n       * First, send resolved Promise as previous value\n       * Each plugins \"prepare\" method returns a Promise, that's why\n       * reduce current element will not be able to continue while can't get\n       * a resolved Promise\n       */\n      chains.reduce(function (previousValue, currentValue, iteration) {\n        return previousValue\n          .then(() => waitNextBlock(currentValue, success, fallback))\n          .then(() => {\n            // finished\n            if (iteration === chains.length - 1) {\n              resolve();\n            }\n          });\n      }, Promise.resolve());\n    });\n\n    /**\n     * Decorator\n     *\n     * @param {ChainData} chainData\n     *\n     * @param {Function} successCallback\n     * @param {Function} fallbackCallback\n     *\n     * @return {Promise}\n     */\n    function waitNextBlock(chainData, successCallback, fallbackCallback) {\n      return new Promise(function (resolve) {\n        chainData.function()\n          .then(() => {\n            successCallback(chainData.data || {});\n          })\n          .then(resolve)\n          .catch(function () {\n            fallbackCallback(chainData.data || {});\n\n            // anyway, go ahead even it falls\n            resolve();\n          });\n      });\n    }\n  }\n\n  /**\n   * Make array from array-like collection\n   *\n   * @param {*} collection\n   *\n   * @return {Array}\n   */\n  static array(collection) {\n    return Array.prototype.slice.call(collection);\n  }\n\n  /**\n   * Checks if object is empty\n   *\n   * @param {Object} object\n   * @return {boolean}\n   */\n  static isEmpty(object) {\n    return Object.keys(object).length === 0 && object.constructor === Object;\n  }\n\n  /**\n   * Check if passed object is a Promise\n   * @param  {*}  object - object to check\n   * @return {Boolean}\n   */\n  static isPromise(object) {\n    return Promise.resolve(object) === object;\n  }\n\n  /**\n   * Check if passed element is contenteditable\n   * @param element\n   * @return {boolean}\n   */\n  static isContentEditable(element) {\n    return element.contentEditable === 'true';\n  }\n\n  /**\n   * Delays method execution\n   *\n   * @param method\n   * @param timeout\n   */\n  static delay(method, timeout) {\n    return function () {\n      let context = this,\n        args    = arguments;\n\n      window.setTimeout(() => method.apply(context, args), timeout);\n    };\n  }\n};\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":root {\\n  /**\\n   * Toolbar buttons\\n   */\\n  --bg-light: #eff2f5;\\n\\n  /**\\n   * All gray texts: placeholders, settings\\n   */\\n  --grayText: #707684;\\n\\n  /** Blue icons */\\n  --color-active-icon: #388AE5;\\n\\n  /**\\n   * Block content width\\n   */\\n  --content-width: 650px;\\n\\n  /**\\n   * Toolbar Plus Button and Toolbox buttons height and width\\n   */\\n  --toolbar-buttons-size: 34px;\\n\\n  /**\\n   * Confirm deletion bg\\n   */\\n  --color-confirm: #E24A4A;\\n}\\n/**\\n* Editor wrapper\\n*/\\n.codex-editor {\\n  position: relative;\\n  box-sizing: border-box;\\n\\n\\n}\\n.codex-editor .hide {\\n    display: none;\\n  }\\n.codex-editor__redactor {\\n    padding-bottom: 300px;\\n  }\\n.codex-editor svg {\\n    fill: currentColor;\\n    vertical-align: middle;\\n    max-height: 100%;\\n  }\\n::-moz-selection{\\n  background-color: rgba(61,166,239,0.63);\\n}\\n::selection{\\n  background-color: rgba(61,166,239,0.63);\\n}\\n.ce-tune-moveup{}\\n.ce-settings-delete:hover {\\n    cursor: pointer;\\n  }\\n.ce-settings-delete::before {\\n    content: 'delete'\\n  }\\n.ce-toolbar {\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  /*opacity: 0;*/\\n  /*visibility: hidden;*/\\n  transition: opacity 100ms ease;\\n  will-change: opacity, transform;\\n  display: none;\\n}\\n.ce-toolbar--opened {\\n    display: block;\\n    /*opacity: 1;*/\\n    /*visibility: visible;*/\\n  }\\n.ce-toolbar__content {\\n    max-width: 650px;\\n    max-width: var(--content-width);\\n    margin: 0 auto;\\n    position: relative;\\n  }\\n.ce-toolbar__plus {\\n    position: absolute;\\n    left: calc(calc(34px + 10px) * -1);\\n    left: calc(calc(var(--toolbar-buttons-size) + 10px) * -1);\\n    display: inline-block;\\n    background-color: #eff2f5;\\n    background-color: var(--bg-light);\\n    width: 34px;\\n    width: var(--toolbar-buttons-size);\\n    height: 34px;\\n    height: var(--toolbar-buttons-size);\\n    line-height: 34px;\\n    text-align: center;\\n    border-radius: 50%;\\n    cursor: pointer;\\n  }\\n.ce-toolbar__plus--hidden {\\n      display: none;\\n    }\\n/**\\n   * Block actions Zone\\n   * -------------------------\\n   */\\n.ce-toolbar__actions {\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n    padding-right: 16px;\\n  }\\n.ce-toolbar__actions-buttons {\\n      text-align: right;\\n    }\\n.ce-toolbar__settings-btn {\\n    display: inline-block;\\n    width: 24px;\\n    height: 24px;\\n    color: #707684;\\n    color: var(--grayText);\\n    cursor: pointer;\\n  }\\n.ce-toolbox {\\n    position: absolute;\\n    visibility: hidden;\\n    transition: opacity 100ms ease;\\n    will-change: opacity;\\n}\\n.ce-toolbox--opened {\\n        opacity: 1;\\n        visibility: visible;\\n    }\\n.ce-toolbox__button {\\n        display: inline-block;\\n        list-style: none;\\n        margin: 0;\\n        background: #eff2f5;\\n        background: var(--bg-light);\\n        width: 34px;\\n        width: var(--toolbar-buttons-size);\\n        height: 34px;\\n        height: var(--toolbar-buttons-size);\\n        border-radius: 30px;\\n        overflow: hidden;\\n        text-align: center;\\n        line-height: 34px;\\n        line-height: var(--toolbar-buttons-size)\\n    }\\n.ce-toolbox__button::before {\\n            content: attr(title);\\n            font-size: 22px;\\n            font-weight: 500;\\n            letter-spacing: 1em;\\n            -webkit-font-feature-settings: \\\"smcp\\\", \\\"c2sc\\\";\\n                    font-feature-settings: \\\"smcp\\\", \\\"c2sc\\\";\\n            font-variant-caps: all-small-caps;\\n            padding-left: 11.5px;\\n            margin-top: -1px;\\n            display: inline-block;\\n        }\\n.ce-inline-toolbar {\\n  position: absolute;\\n  background: #FFFFFF;\\n  box-shadow: 0 8px 23px -6px rgba(21,40,54,0.31), 22px -14px 34px -18px rgba(33,48,73,0.26);\\n  border-radius: 4px;\\n  z-index: 2\\n}\\n.ce-inline-toolbar::before {\\n  content: '';\\n  width: 15px;\\n  height: 15px;\\n  position: absolute;\\n  top: -7px;\\n  left: 50%;\\n  margin-left: -7px;\\n  transform: rotate(-45deg);\\n  background: #fff;\\n  z-index: -1;\\n      }\\n.ce-inline-toolbar {\\n  padding: 6px;\\n  transform: translateX(-50%);\\n  display: none;\\n  box-shadow: 0 6px 12px -6px rgba(131, 147, 173, 0.46),\\n              5px -12px 34px -13px rgba(97, 105, 134, 0.6),\\n              0 26px 52px 3px rgba(147, 165, 186, 0.24);\\n}\\n.ce-inline-toolbar--showed {\\n    display: block;\\n  }\\n.ce-inline-tool {\\n  display: inline-block;\\n  width: 34px;\\n  height: 34px;\\n  line-height: 34px;\\n  text-align: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  border: 0;\\n  outline: none;\\n  background: transparent;\\n  vertical-align: bottom;\\n  color: #707684;\\n  color: var(--grayText)\\n}\\n.ce-inline-tool:not(:last-of-type){\\n  margin-right: 5px;\\n    }\\n.ce-inline-tool:hover {\\n  background: #eff2f5;\\n  background: var(--bg-light);\\n    }\\n.ce-inline-tool {\\n  line-height: normal;\\n}\\n.ce-inline-tool--active {\\n  color: #388AE5;\\n  color: var(--color-active-icon);\\n    }\\n.ce-inline-tool--link .icon {\\n      margin-top: -2px;\\n    }\\n.ce-inline-tool--link .icon--unlink {\\n      display: none;\\n    }\\n.ce-inline-tool--unlink .icon--link {\\n      display: none;\\n    }\\n.ce-inline-tool--unlink .icon--unlink {\\n      display: inline-block;\\n    }\\n.ce-inline-tool-input {\\n    background: #eff2f5;\\n    background: var(--bg-light);\\n    outline: none;\\n    border: 0;\\n    border-radius: 3px;\\n    margin: 6px 0 0;\\n    font-size: 13px;\\n    padding: 8px;\\n    width: 100%;\\n    box-sizing: border-box;\\n    display: none\\n  }\\n.ce-inline-tool-input::-webkit-input-placeholder {\\n      color: #707684;\\n      color: var(--grayText);\\n    }\\n.ce-inline-tool-input:-ms-input-placeholder {\\n      color: #707684;\\n      color: var(--grayText);\\n    }\\n.ce-inline-tool-input::placeholder {\\n      color: #707684;\\n      color: var(--grayText);\\n    }\\n.ce-inline-tool-input--showed {\\n      display: block;\\n    }\\n.ce-settings {\\n  position: absolute;\\n  background: #FFFFFF;\\n  box-shadow: 0 8px 23px -6px rgba(21,40,54,0.31), 22px -14px 34px -18px rgba(33,48,73,0.26);\\n  border-radius: 4px;\\n  z-index: 2\\n}\\n.ce-settings::before {\\n  content: '';\\n  width: 15px;\\n  height: 15px;\\n  position: absolute;\\n  top: -7px;\\n  left: 50%;\\n  margin-left: -7px;\\n  transform: rotate(-45deg);\\n  background: #fff;\\n  z-index: -1;\\n      }\\n.ce-settings {\\n  right: 5px;\\n  top: 35px;\\n  min-width: 124px\\n}\\n.ce-settings::before{\\n    left: auto;\\n    right: 12px;\\n  }\\n.ce-settings {\\n\\n  display: none;\\n}\\n.ce-settings--opened {\\n    display: block;\\n  }\\n.ce-settings__plugin-zone:not(:empty){\\n      padding: 6px;\\n    }\\n.ce-settings__default-zone:not(:empty){\\n      padding: 6px;\\n    }\\n.ce-settings__button {\\n  display: inline-block;\\n  width: 34px;\\n  height: 34px;\\n  line-height: 34px;\\n  text-align: center;\\n  border-radius: 3px;\\n  cursor: pointer;\\n  border: 0;\\n  outline: none;\\n  background: transparent;\\n  vertical-align: bottom;\\n  color: #707684;\\n  color: var(--grayText)\\n  }\\n.ce-settings__button:not(:last-of-type){\\n  margin-right: 5px;\\n    }\\n.ce-settings__button:hover {\\n  background: #eff2f5;\\n  background: var(--bg-light);\\n    }\\n.ce-settings__button--active {\\n  color: #388AE5;\\n  color: var(--color-active-icon);\\n    }\\n.ce-settings__button--delete {\\n      transition: background-color 300ms ease;\\n      will-change: background-color;\\n    }\\n.ce-settings__button--delete .icon {\\n        transition: transform 200ms ease-out;\\n        will-change: transform;\\n      }\\n.ce-settings__button--confirm {\\n      background-color: #E24A4A;\\n      background-color: var(--color-confirm);\\n      color: #fff\\n    }\\n.ce-settings__button--confirm:hover {\\n        background-color: rgb(213, 74, 74) !important;\\n        background-color: rgb(213, 74, 74) !important;\\n      }\\n.ce-settings__button--confirm .icon {\\n        transform: rotate(90deg);\\n      }\\n.ce-settings-move-up:hover {\\n    cursor: pointer;\\n  }\\n.ce-settings-move-up::before {\\n    display: inline-block;\\n    content: 'up';\\n  }\\n.ce-block:first-of-type {\\n    margin-top: 0;\\n  }\\n.ce-block--selected {\\n    background-image: linear-gradient(17deg, rgba(243, 248, 255, 0.03) 63.45%, rgba(207, 214, 229, 0.27) 98%);\\n    border-radius: 3px;\\n  }\\n.ce-block__content {\\n    max-width: 650px;\\n    max-width: var(--content-width);\\n    margin: 0 auto;\\n  }\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}